[{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CONTEXT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20000,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.PLACE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20001,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.SCOPE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CREATE_GROUP\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20002,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CONTEXT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20003,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.NODE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.MPS_EDITOR\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20004,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CELL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_COMPONENT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20005,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.FRAME\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20006,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODELS\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(jetbrains.mps.project.structure.modules.ModuleReference,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Solution\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","id":20007,"modified_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(jetbrains.mps.project.structure.modules.ModuleReference,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~DevKit\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.NODE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20008,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MPS_PROJECT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.NODES\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20009,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticFieldReference\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"classifier\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys\")));\n        quotedNode1_2.addReference(SReference.create(\"variableDeclaration\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MPS_PROJECT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(java.lang.String,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Solution\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","id":20010,"modified_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(jetbrains.mps.project.structure.modules.ModuleReference,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.OPERATION_CONTEXT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20011,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20012,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_3 = quotedNode_1;\n        quotedNode1_3.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_3, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener.<init>(com.intellij.openapi.project.Project)\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_4 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_4);\n        }\n        result = quotedNode1_3;\n      }\n      return result;\n    }","id":20013,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"classifier\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_11 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_13 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode1_14.addReference(SReference.create(\"classifier\", quotedNode1_14, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_14);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_15 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_15);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_13);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_12);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_16 = quotedNode_3;\n          quotedNode1_16.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_16, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener.openNode(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext,boolean,boolean):jetbrains.mps.openapi.editor.Editor\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_19 = quotedNode_7;\n            quotedNode1_19.setProperty(\"value\", \"false\");\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_19);\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_20 = quotedNode_8;\n            quotedNode1_20.setProperty(\"value\", \"false\");\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_20);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_16);\n        }\n        result = quotedNode1_11;\n      }\n      return result;\n    }","id":20014,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_9 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_10 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_11 = quotedNode_4;\n            {\n              quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_12 = quotedNode_7;\n              quotedNode1_12.addReference(SReference.create(\"classifier\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_12);\n            }\n            {\n              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_13 = quotedNode_8;\n              quotedNode_4.addChild(\"expression\", quotedNode1_13);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_11);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_10);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_14 = quotedNode_3;\n          quotedNode1_14.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_14, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener.editNode(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext):jetbrains.mps.openapi.editor.Editor\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_15 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_15);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_16 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_16);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_14);\n        }\n        result = quotedNode1_9;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.SCOPE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20015,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.MPS_EDITOR\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20016,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ModificationStatement\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"modifiedGroup\", quotedNode1_2, SModelReference.fromString(\"r:de82dfab-9448-49ba-813e-2b0579f7fb15(jetbrains.mps.ide.platform.actions)\"), SNodeId.fromString(\"5176948551392218551\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20017,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:4e6037e6-9135-44f8-9403-04d79fc40f4a(jetbrains.mps.ide.editor.util)\"), SNodeId.fromString(\"7973955287399271868\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:4e6037e6-9135-44f8-9403-04d79fc40f4a(jetbrains.mps.ide.editor.util)\"), SNodeId.fromString(\"7973955287399271887\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"c05812ac595444dae53fa88171d1a26d9d473107","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000500\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","id":20018,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_3 = quotedNode_1;\n        quotedNode1_3.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_3, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.progress(MPS.Workbench/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_4 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_4);\n        }\n        result = quotedNode1_3;\n      }\n      return result;\n    }","commit_id":"6f43e9f317adf5cf2be087e6418a2a193506b207","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Mps21ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a1a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModules():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0e0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.Language.getStructureModelDescriptor():jetbrains.mps.smodel.descriptor.EditableSModelDescriptor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0f0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0h0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0i0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a9a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0k0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a11a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a21a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassifierType(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064052\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a31a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064321\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0o0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"2595782876361293165\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0p0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064317\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a61a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","id":20019,"modified_method":"public Mps21ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a1a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ProjectOperationContext.get()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ProjectOperationContext.get()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.project.ProjectOperationContext.get(com.intellij.openapi.project.Project):jetbrains.mps.project.ProjectOperationContext\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a4a0().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModules():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0f0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModulesWithGenerators()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModulesWithGenerators()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModulesWithGenerators():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.Language.getStructureModelDescriptor():jetbrains.mps.smodel.descriptor.EditableSModelDescriptor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0h0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0i0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0j0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0k0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a11a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0m0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a31a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a41a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassifierType(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064052\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a51a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064321\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0q0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"2595782876361293165\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0r0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064317\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a81a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","commit_id":"6f43e9f317adf5cf2be087e6418a2a193506b207","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_10 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_11 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_12 = quotedNode_4;\n            {\n              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_13 = quotedNode_8;\n              quotedNode1_13.addReference(SReference.create(\"classifier\", quotedNode1_13, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_13);\n            }\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode_4.addChild(\"expression\", quotedNode1_14);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_12);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_11);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_15 = quotedNode_3;\n          quotedNode1_15.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_15, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_16 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_16);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_15);\n        }\n        result = quotedNode1_10;\n      }\n      return result;\n    }","id":20020,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language.getStructureModelDescriptor():jetbrains.mps.smodel.DefaultSModelDescriptor\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"6f43e9f317adf5cf2be087e6418a2a193506b207","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#com.intellij.openapi.progress(MPS.Workbench/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.progress(MPS.Workbench/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","id":20021,"modified_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#com.intellij.openapi.progress(MPS.Workbench/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.progress(MPS.Workbench/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","commit_id":"6f43e9f317adf5cf2be087e6418a2a193506b207","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"classifier\", quotedNode1_2, SModelReference.fromString(\"r:63a75970-913d-4a7b-99e2-8ca72ff6f509(jetbrains.mps.baseLanguage.unitTest.execution.client)\"), SNodeId.fromString(\"5881102044690179271\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20022,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000500\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"6f43e9f317adf5cf2be087e6418a2a193506b207","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~AbstractModule\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~AbstractModule.getDependencies():java.util.List\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","id":20023,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_11 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_13 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode1_14.addReference(SReference.create(\"classifier\", quotedNode1_14, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_14);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_15 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_15);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_13);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_12);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_16 = quotedNode_3;\n          quotedNode1_16.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_16, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor,boolean):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_19 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_19);\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_20 = quotedNode_8;\n            quotedNode1_20.setProperty(\"value\", \"false\");\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_20);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_16);\n        }\n        result = quotedNode1_11;\n      }\n      return result;\n    }","commit_id":"6f43e9f317adf5cf2be087e6418a2a193506b207","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language.getStructureModelDescriptor():jetbrains.mps.smodel.DefaultSModelDescriptor\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","id":20024,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project.getModules():java.util.List\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"6f43e9f317adf5cf2be087e6418a2a193506b207","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#com.intellij.openapi.progress(MPS.Workbench/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.progress(MPS.Workbench/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","id":20025,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project.getModules():java.util.List\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"04a40f36decc168b586e77346a6497767d07f344","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_10 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_11 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_12 = quotedNode_4;\n            {\n              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_13 = quotedNode_8;\n              quotedNode1_13.addReference(SReference.create(\"classifier\", quotedNode1_13, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_13);\n            }\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode_4.addChild(\"expression\", quotedNode1_14);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_12);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_11);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_15 = quotedNode_3;\n          quotedNode1_15.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_15, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_16 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_16);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_15);\n        }\n        result = quotedNode1_10;\n      }\n      return result;\n    }","id":20026,"modified_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#com.intellij.openapi.progress(MPS.Workbench/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.progress(MPS.Workbench/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","commit_id":"04a40f36decc168b586e77346a6497767d07f344","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"classifier\", quotedNode1_2, SModelReference.fromString(\"r:63a75970-913d-4a7b-99e2-8ca72ff6f509(jetbrains.mps.baseLanguage.unitTest.execution.client)\"), SNodeId.fromString(\"5881102044690179271\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20027,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000554\")));\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"04a40f36decc168b586e77346a6497767d07f344","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Mps21ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a1a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0e0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0f0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a7a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0i0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a9a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a01a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassifierType(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064052\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a11a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064321\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0m0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064317\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a31a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","id":20028,"modified_method":"public Mps21ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a1a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModules():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0e0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0f0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0h0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a8a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0j0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a01a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a11a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassifierType(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064052\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a21a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064321\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0n0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064317\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a41a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","commit_id":"04a40f36decc168b586e77346a6497767d07f344","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000554\")));\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","id":20029,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000500\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"04a40f36decc168b586e77346a6497767d07f344","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_11 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_13 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode1_14.addReference(SReference.create(\"classifier\", quotedNode1_14, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_14);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_15 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_15);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_13);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_12);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_16 = quotedNode_3;\n          quotedNode1_16.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_16, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor,boolean):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_19 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_19);\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_20 = quotedNode_8;\n            quotedNode1_20.setProperty(\"value\", \"false\");\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_20);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_16);\n        }\n        result = quotedNode1_11;\n      }\n      return result;\n    }","id":20030,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_10 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_11 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_12 = quotedNode_4;\n            {\n              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_13 = quotedNode_8;\n              quotedNode1_13.addReference(SReference.create(\"classifier\", quotedNode1_13, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_13);\n            }\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode_4.addChild(\"expression\", quotedNode1_14);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_12);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_11);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_15 = quotedNode_3;\n          quotedNode1_15.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_15, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_16 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_16);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_15);\n        }\n        result = quotedNode1_10;\n      }\n      return result;\n    }","commit_id":"04a40f36decc168b586e77346a6497767d07f344","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_11 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_13 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode1_14.addReference(SReference.create(\"classifier\", quotedNode1_14, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_14);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_15 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_15);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_13);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_12);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_16 = quotedNode_3;\n          quotedNode1_16.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_16, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor,boolean):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_19 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_19);\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_20 = quotedNode_8;\n            quotedNode1_20.setProperty(\"value\", \"false\");\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_20);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_16);\n        }\n        result = quotedNode1_11;\n      }\n      return result;\n    }","id":20031,"modified_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#com.intellij.openapi.progress(MPS.Platform/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.progress(MPS.Platform/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.project(MPS.Platform/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.project(MPS.Platform/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CELL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20032,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.OPERATION_CONTEXT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~AbstractModule\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~AbstractModule.getDependencies():java.util.List\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","id":20033,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_11 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_13 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode1_14.addReference(SReference.create(\"classifier\", quotedNode1_14, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_14);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_15 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_15);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_13);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_12);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_16 = quotedNode_3;\n          quotedNode1_16.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_16, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor,boolean):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_19 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_19);\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_20 = quotedNode_8;\n            quotedNode1_20.setProperty(\"value\", \"false\");\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_20);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_16);\n        }\n        result = quotedNode1_11;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(java.lang.String,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Solution\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","id":20034,"modified_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(jetbrains.mps.project.structure.modules.ModuleReference,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language.getStructureModelDescriptor():jetbrains.mps.smodel.DefaultSModelDescriptor\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","id":20035,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project.getModules():java.util.List\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000500\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","id":20036,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_3 = quotedNode_1;\n        quotedNode1_3.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_3, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.progress(MPS.Platform/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_4 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_4);\n        }\n        result = quotedNode1_3;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#com.intellij.openapi.progress(MPS.Platform/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.progress(MPS.Platform/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.project(MPS.Platform/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.project(MPS.Platform/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","id":20037,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Project.getModulesWithGenerators():java.util.List\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.SCOPE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20038,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.MPS_EDITOR\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.MPS_EDITOR\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20039,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CELL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_3 = quotedNode_1;\n        quotedNode1_3.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_3, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener.<init>(com.intellij.openapi.project.Project)\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_4 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_4);\n        }\n        result = quotedNode1_3;\n      }\n      return result;\n    }","id":20040,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000554\")));\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_10 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_11 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_12 = quotedNode_4;\n            {\n              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_13 = quotedNode_8;\n              quotedNode1_13.addReference(SReference.create(\"classifier\", quotedNode1_13, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_13);\n            }\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode_4.addChild(\"expression\", quotedNode1_14);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_12);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_11);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_15 = quotedNode_3;\n          quotedNode1_15.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_15, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_16 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_16);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_15);\n        }\n        result = quotedNode1_10;\n      }\n      return result;\n    }","id":20041,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language.getStructureModelDescriptor():jetbrains.mps.smodel.DefaultSModelDescriptor\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"classifier\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorOpener\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20042,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000500\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_COMPONENT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20043,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.FRAME\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_9) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode1_6.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_6, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~ProjectOperationContext.<init>(jetbrains.mps.project.Project)\")));\n          {\n            quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_7 = quotedNode_3;\n            quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.project(MPS.Platform/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.project(MPS.Platform/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            {\n              quotedNode_4 = (SNode) parameter_9;\n              SNode quotedNode1_8;\n              if (_parameterValues_129834374.contains(quotedNode_4)) {\n                quotedNode1_8 = HUtil.copyIfNecessary(quotedNode_4);\n              } else {\n                _parameterValues_129834374.add(quotedNode_4);\n                quotedNode1_8 = quotedNode_4;\n              }\n              if (quotedNode1_8 != null) {\n                quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_8));\n              }\n            }\n            quotedNode_2.addChild(\"actualArgument\", quotedNode1_7);\n          }\n          quotedNode_1.addChild(\"creator\", quotedNode1_6);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","id":20044,"modified_method":"public SNode createNode(Object parameter_13) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            quotedNode1_9.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_9, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project.dependency(MPS.Core/jetbrains.mps.project.dependency@java_stub)\"), SNodeId.fromString(\"~GlobalModuleDependenciesManager.<init>(jetbrains.mps.project.IModule)\")));\n            {\n              quotedNode_6 = (SNode) parameter_13;\n              SNode quotedNode1_10;\n              if (_parameterValues_129834374.contains(quotedNode_6)) {\n                quotedNode1_10 = HUtil.copyIfNecessary(quotedNode_6);\n              } else {\n                _parameterValues_129834374.add(quotedNode_6);\n                quotedNode1_10 = quotedNode_6;\n              }\n              if (quotedNode1_10 != null) {\n                quotedNode_4.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_10));\n              }\n            }\n            quotedNode_2.addChild(\"creator\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_11 = quotedNode_3;\n          quotedNode1_11.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_11, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project.dependency(MPS.Core/jetbrains.mps.project.dependency@java_stub)\"), SNodeId.fromString(\"~GlobalModuleDependenciesManager.getModules(jetbrains.mps.project.dependency.GlobalModuleDependenciesManager$Deptype):java.util.Collection\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.EnumConstantReference\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_12 = quotedNode_5;\n            quotedNode1_12.addReference(SReference.create(\"enumConstantDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project.dependency(MPS.Core/jetbrains.mps.project.dependency@java_stub)\"), SNodeId.fromString(\"~GlobalModuleDependenciesManager$Deptype.EXECUTE\")));\n            quotedNode1_12.addReference(SReference.create(\"enumClass\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project.dependency(MPS.Core/jetbrains.mps.project.dependency@java_stub)\"), SNodeId.fromString(\"~GlobalModuleDependenciesManager$Deptype\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_12);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_11);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CONTEXT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20045,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(jetbrains.mps.project.structure.modules.ModuleReference,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~Solution\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","id":20046,"modified_method":"public SNode createNode(Object parameter_11) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_6 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_2;\n          quotedNode1_7.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getInstance():jetbrains.mps.smodel.ModuleRepositoryFacade\")));\n          quotedNode1_7.addReference(SReference.create(\"classConcept\", quotedNode1_7, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade\")));\n          quotedNode_1.addChild(\"operand\", quotedNode1_7);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_3;\n          quotedNode1_8.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_8, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModuleRepositoryFacade.getModule(jetbrains.mps.project.structure.modules.ModuleReference,java.lang.Class):jetbrains.mps.project.IModule\")));\n          {\n            quotedNode_4 = (SNode) parameter_11;\n            SNode quotedNode1_9;\n            if (_parameterValues_129834374.contains(quotedNode_4)) {\n              quotedNode1_9 = HUtil.copyIfNecessary(quotedNode_4);\n            } else {\n              _parameterValues_129834374.add(quotedNode_4);\n              quotedNode1_9 = quotedNode_4;\n            }\n            if (quotedNode1_9 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_9));\n            }\n          }\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_10 = quotedNode_5;\n            quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)\"), SNodeId.fromString(\"~DevKit\")));\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_10);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_8);\n        }\n        result = quotedNode1_6;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.OPERATION_CONTEXT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20047,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20048,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.PLACE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20049,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.SCOPE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.FRAME\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20050,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CREATE_GROUP\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ModificationStatement\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"modifiedGroup\", quotedNode1_2, SModelReference.fromString(\"r:de82dfab-9448-49ba-813e-2b0579f7fb15(jetbrains.mps.ide.platform.actions)\"), SNodeId.fromString(\"5176948551392218551\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20051,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:4e6037e6-9135-44f8-9403-04d79fc40f4a(jetbrains.mps.ide.editor.util)\"), SNodeId.fromString(\"7973955287399271868\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:4e6037e6-9135-44f8-9403-04d79fc40f4a(jetbrains.mps.ide.editor.util)\"), SNodeId.fromString(\"7973955287399271887\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CREATE_GROUP\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20052,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.ide.editor(MPS.Editor/jetbrains.mps.ide.editor@java_stub)\"), SNodeId.fromString(\"~MPSEditorDataKeys.EDITOR_CONTEXT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Mps25ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"jetbrains.mps.baseLanguage.search -> MPS.Core\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"jetbrains.mps.baseLanguage.search -> MPS.Core\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.core.structure.BaseConcept\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return Sequence.fromIterable(SNodeOperations.getReferences(node)).where(new IWhereFilter<SReference>() {\n          public boolean accept(SReference it) {\n            String longName = check_d0rs9v_a0a0a0a0a0a0(it.getTargetSModelReference());\n            if (longName == null) {\n              return false;\n            }\n            // #f3061a53-9226-4cc5-a443-f952ceaf5816# is baseLanguage module id \n            return it.getTargetSModelReference().getSModelId().toString().contains(\"#f3061a53-9226-4cc5-a443-f952ceaf5816#\") && (longName.endsWith(\".search\") || longName.endsWith(\".index\") || longName.endsWith(\".javastub\"));\n          }\n        }).isNotEmpty();\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        MpsClasspathRefUtil.updateReferencesToMpsClasspath(node);\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a2a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a4a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ProjectOperationContext.get()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ProjectOperationContext.get()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.project.ProjectOperationContext.get(com.intellij.openapi.project.Project):jetbrains.mps.project.ProjectOperationContext\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a5a0().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModules():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0g0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModulesWithGenerators()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModulesWithGenerators()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModulesWithGenerators():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0h0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.Language.getStructureModelDescriptor():jetbrains.mps.smodel.descriptor.EditableSModelDescriptor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0i0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0j0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0k0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0l0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a21a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0n0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a41a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a51a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSEditorOpener.class\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSEditorOpener.class\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", \"classifier\")), \"jetbrains.mps.workbench.editors.MPSEditorOpener\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a61a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"new MPSEditorOpener()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"new MPSEditorOpener()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToMethod(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", \"constructorDeclaration\")), \"jetbrains.mps.workbench.editors.MPSEditorOpener.<init>(com.intellij.openapi.project.Project)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a71a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSEditOperner.editNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSEditOperner.editNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.workbench.editors.MPSEditorOpener.editNode(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext):jetbrains.mps.ide.IEditor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0s0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSEditOperner.openNodeExplicitly()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSEditOperner.openNodeExplicitly()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.workbench.editors.MPSEditorOpener.openNodeExplicitly(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext,boolean,boolean):jetbrains.mps.ide.IEditor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0t0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MPS_PROJECT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MPS_PROJECT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MPS_PROJECT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a02a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.NODE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.NODE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.NODE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a12a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.NODES\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.NODES\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.NODES\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a22a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MODEL\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MODEL\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MODEL\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a32a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MODELS\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MODELS\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MODELS\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a42a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.CONTEXT_MODEL\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.CONTEXT_MODEL\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.CONTEXT_MODEL\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a52a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MODULE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MODULE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MODULE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a62a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.CONTEXT_MODULE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.CONTEXT_MODULE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.CONTEXT_MODULE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a72a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.OPERATION_CONTEXT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.OPERATION_CONTEXT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.OPERATION_CONTEXT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a82a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_CONTEXT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_CONTEXT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CONTEXT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a92a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_CELL\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_CELL\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CELL\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a03a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_CREATE_GROUP\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_CREATE_GROUP\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CREATE_GROUP\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a13a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MPS_EDITOR\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MPS_EDITOR\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MPS_EDITOR\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a23a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.FRAME\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.FRAME\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.FRAME\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a33a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.SCOPE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.SCOPE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.SCOPE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a43a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_COMPONENT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_COMPONENT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_COMPONENT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a53a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.PLACE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.PLACE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.PLACE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a63a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"NodeNavigationItem constructor\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"NodeNavigationItem constructor\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return ReferenceUtil.isReferenceToModel(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", \"constructorDeclaration\")), \"jetbrains.mps.baseLanguage.plugin\") && (int) ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).count() == 3 && \"NodeNavigationItem\".equals(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", \"constructorDeclaration\")).getResolveInfo());\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNodeOperations.replaceWithAnother(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0e0a0a0lb0a().createNode(SLinkOperations.getTargets(node, \"actualArgument\", true).get(2), SLinkOperations.getTargets(node, \"actualArgument\", true).get(0)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"NodeNavigationItem reference\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"NodeNavigationItem reference\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return ReferenceUtil.isReferenceToModel(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", \"classifier\")), \"jetbrains.mps.baseLanguage.plugin\") && \"NodeNavigationItem\".equals(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", \"classifier\")).getResolveInfo());\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        String resolveInfo = SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", \"classifier\")).getResolveInfo();\n        if (\"NodeNavigationItem\".equals(resolveInfo)) {\n          SNodeOperations.replaceWithAnother(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0b0e0a0a0mb0a().createNode());\n        } else if (\"AbstractLeftEditorHighlighterMessage\".equals(resolveInfo)) {\n          SNodeOperations.replaceWithAnother(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0a1a4a0a0a83a0().createNode());\n        }\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"References to baseLanguage.plugin\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"References to baseLanguage.plugin\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.core.structure.BaseConcept\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return Sequence.fromIterable(SNodeOperations.getReferences(node)).any(new IWhereFilter<SReference>() {\n          public boolean accept(SReference it) {\n            return ReferenceUtil.isReferenceToModel(it, \"jetbrains.mps.baseLanguage.plugin\") && it.getTargetNodeSilently() == null;\n          }\n        });\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SModelReference[] modelRefs = new SModelReference[]{new SModelReference(\"jetbrains.mps.editor.runtime\", \"\"), new SModelReference(\"jetbrains.mps.baseLanguage.util\", \"\"), new SModelReference(\"jetbrains.mps.ide.editor.util\", \"\")};\n        IModule module = SNodeOperations.getModel(node).getModelDescriptor().getModule();\n        for (SModelReference modelRef : modelRefs) {\n          SNodeOperations.getModel(node).addModelImport(modelRef, false);\n          ModuleReference moduleReference = SModelRepository.getInstance().getModelDescriptor(modelRef).getModule().getModuleReference();\n          module.addDependency(moduleReference, false);\n        }\n        for (SReference ref : SNodeOperations.getReferences(node)) {\n          if (!(ReferenceUtil.isReferenceToModel(ref, \"jetbrains.mps.baseLanguage.plugin\"))) {\n            continue;\n          }\n          if (ref.getTargetNode() != null) {\n            continue;\n          }\n          Resolver.resolve1(ref, new ModuleOperationContext(module));\n        }\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"EditorUtil.createSelectIconButton\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"EditorUtil.createSelectIconButton\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:3443ab09-ba5b-43e2-8ded-bbcc098418a4(jetbrains.mps.ide)\"), \"5431388913640420462\", \"5431388913640422688\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a04a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"EditorPopup\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"EditorPopup\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ModificationStatement\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ModificationStatement\", \"modifiedGroup\")), SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895904a4(jetbrains.mps.ide.actions)\"), SNodeId.fromString(\"1204991231476\"));\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a14a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"Code\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"Code\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ModificationStatement\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ModificationStatement\", \"modifiedGroup\")), SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895904a4(jetbrains.mps.ide.actions)\"), SNodeId.fromString(\"796800879946376627\"));\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a24a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getModuleByUID\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getModuleByUID\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.MPSModuleRepository.getModuleByUID(java.lang.String):jetbrains.mps.project.IModule\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0rb0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getDevKit()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getDevKit()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getDevKit(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.project.DevKit\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a44a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getLanguage()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getLanguage()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getLanguage(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.smodel.Language\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a54a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getSolution(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.project.Solution\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a64a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getSolution(java.lang.String):jetbrains.mps.project.Solution\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a74a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","id":20053,"modified_method":"public Mps25ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"jetbrains.mps.baseLanguage.search -> MPS.Core\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"jetbrains.mps.baseLanguage.search -> MPS.Core\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.core.structure.BaseConcept\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return Sequence.fromIterable(SNodeOperations.getReferences(node)).where(new IWhereFilter<SReference>() {\n          public boolean accept(SReference it) {\n            String longName = check_d0rs9v_a0a0a0a0a0a0(it.getTargetSModelReference());\n            if (longName == null) {\n              return false;\n            }\n            // #f3061a53-9226-4cc5-a443-f952ceaf5816# is baseLanguage module id \n            return it.getTargetSModelReference().getSModelId().toString().contains(\"#f3061a53-9226-4cc5-a443-f952ceaf5816#\") && (longName.endsWith(\".search\") || longName.endsWith(\".index\") || longName.endsWith(\".javastub\"));\n          }\n        }).isNotEmpty();\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        MpsClasspathRefUtil.updateReferencesToMpsClasspath(node);\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a2a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a4a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModuleDependenciesManager.getAllRequiredModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModuleDependenciesManager.getAllRequiredModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.project.dependency.ModuleDependenciesManager.getAllRequiredModules():java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a5a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModuleDependenciesManager.getAllUsedLanguages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModuleDependenciesManager.getAllUsedLanguages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.project.dependency.ModuleDependenciesManager.getAllUsedLanguages():java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a6a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ProjectOperationContext.get()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ProjectOperationContext.get()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.project.ProjectOperationContext.get(com.intellij.openapi.project.Project):jetbrains.mps.project.ProjectOperationContext\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a7a0().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModules():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0i0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModulesWithGenerators()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModulesWithGenerators()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModulesWithGenerators():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0j0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.Language.getStructureModelDescriptor():jetbrains.mps.smodel.descriptor.EditableSModelDescriptor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0k0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0l0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0m0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0n0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a41a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0p0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a61a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a71a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSEditorOpener.class\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSEditorOpener.class\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression\", \"classifier\")), \"jetbrains.mps.workbench.editors.MPSEditorOpener\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a81a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"new MPSEditorOpener()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"new MPSEditorOpener()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToMethod(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", \"constructorDeclaration\")), \"jetbrains.mps.workbench.editors.MPSEditorOpener.<init>(com.intellij.openapi.project.Project)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a91a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSEditOperner.editNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSEditOperner.editNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.workbench.editors.MPSEditorOpener.editNode(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext):jetbrains.mps.ide.IEditor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0u0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSEditOperner.openNodeExplicitly()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSEditOperner.openNodeExplicitly()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.workbench.editors.MPSEditorOpener.openNodeExplicitly(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext,boolean,boolean):jetbrains.mps.ide.IEditor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0v0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MPS_PROJECT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MPS_PROJECT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MPS_PROJECT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a22a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.NODE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.NODE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.NODE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a32a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.NODES\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.NODES\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.NODES\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a42a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MODEL\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MODEL\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MODEL\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a52a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MODELS\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MODELS\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MODELS\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a62a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.CONTEXT_MODEL\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.CONTEXT_MODEL\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.CONTEXT_MODEL\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a72a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MODULE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MODULE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MODULE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a82a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.CONTEXT_MODULE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.CONTEXT_MODULE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.CONTEXT_MODULE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a92a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.OPERATION_CONTEXT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.OPERATION_CONTEXT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.OPERATION_CONTEXT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a03a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_CONTEXT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_CONTEXT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CONTEXT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a13a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_CELL\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_CELL\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CELL\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a23a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_CREATE_GROUP\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_CREATE_GROUP\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CREATE_GROUP\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a33a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.MPS_EDITOR\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.MPS_EDITOR\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.MPS_EDITOR\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a43a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.FRAME\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.FRAME\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.FRAME\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a53a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.SCOPE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.SCOPE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.SCOPE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a63a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.EDITOR_COMPONENT\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.EDITOR_COMPONENT\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.EDITOR_COMPONENT\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a73a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSDataKeys.PLACE\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSDataKeys.PLACE\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", \"key\")), \"jetbrains.mps.workbench.MPSDataKeys.PLACE\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a83a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"NodeNavigationItem constructor\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"NodeNavigationItem constructor\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return ReferenceUtil.isReferenceToModel(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", \"constructorDeclaration\")), \"jetbrains.mps.baseLanguage.plugin\") && (int) ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).count() == 3 && \"NodeNavigationItem\".equals(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", \"constructorDeclaration\")).getResolveInfo());\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNodeOperations.replaceWithAnother(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0e0a0a0nb0a().createNode(SLinkOperations.getTargets(node, \"actualArgument\", true).get(2), SLinkOperations.getTargets(node, \"actualArgument\", true).get(0)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"NodeNavigationItem reference\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"NodeNavigationItem reference\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return ReferenceUtil.isReferenceToModel(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", \"classifier\")), \"jetbrains.mps.baseLanguage.plugin\") && \"NodeNavigationItem\".equals(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", \"classifier\")).getResolveInfo());\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        String resolveInfo = SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", \"classifier\")).getResolveInfo();\n        if (\"NodeNavigationItem\".equals(resolveInfo)) {\n          SNodeOperations.replaceWithAnother(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0b0e0a0a0ob0a().createNode());\n        } else if (\"AbstractLeftEditorHighlighterMessage\".equals(resolveInfo)) {\n          SNodeOperations.replaceWithAnother(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0a1a4a0a0a04a0().createNode());\n        }\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"References to baseLanguage.plugin\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"References to baseLanguage.plugin\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.core.structure.BaseConcept\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return Sequence.fromIterable(SNodeOperations.getReferences(node)).any(new IWhereFilter<SReference>() {\n          public boolean accept(SReference it) {\n            return ReferenceUtil.isReferenceToModel(it, \"jetbrains.mps.baseLanguage.plugin\") && it.getTargetNodeSilently() == null;\n          }\n        });\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SModelReference[] modelRefs = new SModelReference[]{new SModelReference(\"jetbrains.mps.editor.runtime\", \"\"), new SModelReference(\"jetbrains.mps.baseLanguage.util\", \"\"), new SModelReference(\"jetbrains.mps.ide.editor.util\", \"\")};\n        IModule module = SNodeOperations.getModel(node).getModelDescriptor().getModule();\n        for (SModelReference modelRef : modelRefs) {\n          SNodeOperations.getModel(node).addModelImport(modelRef, false);\n          ModuleReference moduleReference = SModelRepository.getInstance().getModelDescriptor(modelRef).getModule().getModuleReference();\n          module.addDependency(moduleReference, false);\n        }\n        for (SReference ref : SNodeOperations.getReferences(node)) {\n          if (!(ReferenceUtil.isReferenceToModel(ref, \"jetbrains.mps.baseLanguage.plugin\"))) {\n            continue;\n          }\n          if (ref.getTargetNode() != null) {\n            continue;\n          }\n          Resolver.resolve1(ref, new ModuleOperationContext(module));\n        }\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"EditorUtil.createSelectIconButton\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"EditorUtil.createSelectIconButton\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:3443ab09-ba5b-43e2-8ded-bbcc098418a4(jetbrains.mps.ide)\"), \"5431388913640420462\", \"5431388913640422688\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a24a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"EditorPopup\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"EditorPopup\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ModificationStatement\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ModificationStatement\", \"modifiedGroup\")), SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895904a4(jetbrains.mps.ide.actions)\"), SNodeId.fromString(\"1204991231476\"));\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a34a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"Code\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"Code\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.lang.plugin.structure.ModificationStatement\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node, SLinkOperations.findLinkDeclaration(\"jetbrains.mps.lang.plugin.structure.ModificationStatement\", \"modifiedGroup\")), SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895904a4(jetbrains.mps.ide.actions)\"), SNodeId.fromString(\"796800879946376627\"));\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a44a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getModuleByUID\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getModuleByUID\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.MPSModuleRepository.getModuleByUID(java.lang.String):jetbrains.mps.project.IModule\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0tb0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getDevKit()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getDevKit()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getDevKit(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.project.DevKit\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a64a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getLanguage()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getLanguage()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getLanguage(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.smodel.Language\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a74a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getSolution(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.project.Solution\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a84a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSModuleRepository.getSolution()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.MPSModuleRepository.getSolution(java.lang.String):jetbrains.mps.project.Solution\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        SNode arg = SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"actualArgument\", true)).first());\n        StubRefUtil.replaceNode(node, new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a94a0().createNode(arg));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20054,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.NODE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.NODES\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20055,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MPS_PROJECT\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20056,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODELS\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODULE\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20057,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.CONTEXT_MODEL\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.MODELS\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20058,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.setProperty(\"name\", \"keyname\");\n        quotedNode1_2.addReference(SReference.create(\"key\", quotedNode1_2, SModelReference.fromString(\"f:java_stub#742f6602-5a2f-4313-aa6e-ae1cd4ffdc61#jetbrains.mps.ide.actions(MPS.Platform/jetbrains.mps.ide.actions@java_stub)\"), SNodeId.fromString(\"~MPSCommonDataKeys.NODES\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","commit_id":"b26038d90c76bab2eeffda435a37065a21fce3bf","url":"https://github.com/JetBrains/MPS"},{"original_method":"public Mps21ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a1a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModules():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0e0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0f0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0h0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a8a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0j0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a01a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a11a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassifierType(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064052\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a21a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064321\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0n0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"2595782876361293165\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0o0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064317\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a51a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","id":20059,"modified_method":"public Mps21ApiMigration_MigrationScript(IOperationContext operationContext) {\n    super(\"API Migration\");\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MacrosUtil.expandPath()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, \"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a1a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getProject()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"IOperationContext.getMainFrame()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.DotExpression\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node, \"operation\", true), \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\"), \"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node, \"operand\", true)));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"MPSProject.getModules()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.MPSProject.getModules():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0e0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"Language.getStructureModelDescriptor()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.Language.getStructureModelDescriptor():jetbrains.mps.smodel.descriptor.EditableSModelDescriptor\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0f0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ModelCommandExecutor.runWriteActionWithProgressSynchronously()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(0), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(1), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(2), ListSequence.fromList(SLinkOperations.getTargets(node, \"actualArgument\", true)).getElement(3)), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0h0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.findUsages()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0i0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"FindUsagesManager.ProgressAdapter\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, \"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a9a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"AbstractModule.getDependOn()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, \"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceNode(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0k0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.rotateTree()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038773979\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a11a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ParenthesisUtil.isBadPriority()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.StaticMethodCall\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isStaticMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)\"), \"155142699038773182\", \"155142699038774033\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a21a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassifierType\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassifierType(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064052\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a31a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getNode()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064321\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0o0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"ITestNodeWrapper.getTestMethods()\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isInstanceMethodCall(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"2595782876361293165\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0p0a().createNode(), \"operation\", true));\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n    this.addRefactoring(new AbstractMigrationRefactoring(operationContext) {\n      public String getName() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getAdditionalInfo() {\n        return \"LanguageTestWrapper\";\n      }\n\n      public String getFqNameOfConceptToSearchInstances() {\n        return \"jetbrains.mps.baseLanguage.structure.ClassCreator\";\n      }\n\n      public boolean isApplicableInstanceNode(SNode node) {\n        return StubRefUtil.isClassCreator(node, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)\"), \"4087070200985064317\");\n      }\n\n      public void doUpdateInstanceNode(SNode node) {\n        StubRefUtil.replaceRefs(node, new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a61a0().createNode());\n      }\n\n      public boolean isShowAsIntention() {\n        return false;\n      }\n    });\n  }","commit_id":"7389876ff1bdb74736eaf371748374a2ccd4c078","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000554\")));\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","id":20060,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000500\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"7389876ff1bdb74736eaf371748374a2ccd4c078","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_11 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_13 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode1_14.addReference(SReference.create(\"classifier\", quotedNode1_14, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_14);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_15 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_15);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_13);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_12);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_16 = quotedNode_3;\n          quotedNode1_16.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_16, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor,boolean):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_19 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_19);\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_20 = quotedNode_8;\n            quotedNode1_20.setProperty(\"value\", \"false\");\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_20);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_16);\n        }\n        result = quotedNode1_11;\n      }\n      return result;\n    }","id":20061,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_10 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_11 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_12 = quotedNode_4;\n            {\n              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_13 = quotedNode_8;\n              quotedNode1_13.addReference(SReference.create(\"classifier\", quotedNode1_13, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_13);\n            }\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode_4.addChild(\"expression\", quotedNode1_14);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_12);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_11);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_15 = quotedNode_3;\n          quotedNode1_15.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_15, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_16 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_16);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_15);\n        }\n        result = quotedNode1_10;\n      }\n      return result;\n    }","commit_id":"7389876ff1bdb74736eaf371748374a2ccd4c078","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_10 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_11 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_12 = quotedNode_4;\n            {\n              quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_13 = quotedNode_8;\n              quotedNode1_13.addReference(SReference.create(\"classifier\", quotedNode1_13, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_13);\n            }\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_14 = quotedNode_9;\n              quotedNode_4.addChild(\"expression\", quotedNode1_14);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_12);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_11);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_15 = quotedNode_3;\n          quotedNode1_15.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_15, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.findUsages(MPS.Core/jetbrains.mps.findUsages@java_stub)\"), SNodeId.fromString(\"~FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.progress.ProgressMonitor):java.util.Set\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_16 = quotedNode_5;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_16);\n          }\n          {\n            quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_17 = quotedNode_6;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_17);\n          }\n          {\n            quotedNode_7 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_18 = quotedNode_7;\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_18);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_15);\n        }\n        result = quotedNode1_10;\n      }\n      return result;\n    }","id":20062,"modified_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#com.intellij.openapi.progress(MPS.Workbench/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.progress(MPS.Workbench/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","commit_id":"7389876ff1bdb74736eaf371748374a2ccd4c078","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode(Object parameter_60, Object parameter_61, Object parameter_62, Object parameter_63, Object parameter_64, Object parameter_65) {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      SNode quotedNode_7 = null;\n      SNode quotedNode_8 = null;\n      SNode quotedNode_9 = null;\n      SNode quotedNode_10 = null;\n      SNode quotedNode_11 = null;\n      SNode quotedNode_12 = null;\n      SNode quotedNode_13 = null;\n      SNode quotedNode_14 = null;\n      SNode quotedNode_15 = null;\n      SNode quotedNode_16 = null;\n      SNode quotedNode_17 = null;\n      SNode quotedNode_18 = null;\n      SNode quotedNode_19 = null;\n      SNode quotedNode_20 = null;\n      SNode quotedNode_21 = null;\n      SNode quotedNode_22 = null;\n      SNode quotedNode_23 = null;\n      SNode quotedNode_24 = null;\n      SNode quotedNode_25 = null;\n      SNode quotedNode_26 = null;\n      SNode quotedNode_27 = null;\n      SNode quotedNode_28 = null;\n      SNode quotedNode_29 = null;\n      SNode quotedNode_30 = null;\n      SNode quotedNode_31 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_32 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_33 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_34 = quotedNode_4;\n            {\n              quotedNode_9 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_35 = quotedNode_9;\n              quotedNode1_35.addReference(SReference.create(\"classifier\", quotedNode1_35, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_35);\n            }\n            {\n              quotedNode_10 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_36 = quotedNode_10;\n              quotedNode_4.addChild(\"expression\", quotedNode1_36);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_34);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_33);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_37 = quotedNode_3;\n          quotedNode1_37.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_37, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor.runWriteActionWithProgressSynchronously(jetbrains.mps.smodel.ModelCommandExecutor$RunnableWithProgress,java.lang.String,boolean,jetbrains.mps.project.Project):void\")));\n          {\n            quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_38 = quotedNode_5;\n            {\n              quotedNode_11 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_39 = quotedNode_11;\n              {\n                quotedNode_13 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnonymousClass\", null, GlobalScope.getInstance(), false);\n                SNode quotedNode1_40 = quotedNode_13;\n                quotedNode1_40.setProperty(\"nonStatic\", \"true\");\n                quotedNode1_40.addReference(SReference.create(\"classifier\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~ModelCommandExecutor$RunnableWithProgress\")));\n                quotedNode1_40.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_40, SModelReference.fromString(\"f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(java.lang@java_stub)\"), SNodeId.fromString(\"~Object.<init>()\")));\n                {\n                  quotedNode_14 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_41 = quotedNode_14;\n                  quotedNode_13.addChild(\"visibility\", quotedNode1_41);\n                }\n                {\n                  quotedNode_15 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration\", null, GlobalScope.getInstance(), false);\n                  SNode quotedNode1_42 = quotedNode_15;\n                  quotedNode1_42.setProperty(\"isAbstract\", \"false\");\n                  quotedNode1_42.setProperty(\"isDeprecated\", \"false\");\n                  quotedNode1_42.setProperty(\"isFinal\", \"false\");\n                  quotedNode1_42.setProperty(\"name\", \"run\");\n                  {\n                    quotedNode_16 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.PublicVisibility\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_43 = quotedNode_16;\n                    quotedNode_15.addChild(\"visibility\", quotedNode1_43);\n                  }\n                  {\n                    quotedNode_17 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.VoidType\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_44 = quotedNode_17;\n                    quotedNode_15.addChild(\"returnType\", quotedNode1_44);\n                  }\n                  {\n                    quotedNode_18 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterDeclaration\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_45 = quotedNode_18;\n                    quotedNode1_45.setProperty(\"name\", \"pm\");\n                    {\n                      quotedNode_20 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_46 = quotedNode_20;\n                      quotedNode1_46.addReference(SReference.create(\"classifier\", quotedNode1_46, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitor\")));\n                      quotedNode_18.addChild(\"type\", quotedNode1_46);\n                    }\n                    {\n                      quotedNode_21 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.AnnotationInstance\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_47 = quotedNode_21;\n                      quotedNode1_47.addReference(SReference.create(\"annotation\", quotedNode1_47, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#org.jetbrains.annotations(MPS.Core/org.jetbrains.annotations@java_stub)\"), SNodeId.fromString(\"~NotNull\")));\n                      quotedNode_18.addChild(\"annotation\", quotedNode1_47);\n                    }\n                    quotedNode_15.addChild(\"parameter\", quotedNode1_45);\n                  }\n                  {\n                    quotedNode_19 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StatementList\", null, GlobalScope.getInstance(), false);\n                    SNode quotedNode1_48 = quotedNode_19;\n                    {\n                      quotedNode_22 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ExpressionStatement\", null, GlobalScope.getInstance(), false);\n                      SNode quotedNode1_49 = quotedNode_22;\n                      {\n                        quotedNode_23 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n                        SNode quotedNode1_50 = quotedNode_23;\n                        {\n                          quotedNode_24 = (SNode) parameter_60;\n                          SNode quotedNode1_51;\n                          if (_parameterValues_129834374.contains(quotedNode_24)) {\n                            quotedNode1_51 = HUtil.copyIfNecessary(quotedNode_24);\n                          } else {\n                            _parameterValues_129834374.add(quotedNode_24);\n                            quotedNode1_51 = quotedNode_24;\n                          }\n                          if (quotedNode1_51 != null) {\n                            quotedNode_23.addChild(\"operand\", HUtil.copyIfNecessary(quotedNode1_51));\n                          }\n                        }\n                        {\n                          quotedNode_25 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n                          SNode quotedNode1_52 = quotedNode_25;\n                          quotedNode1_52.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_52, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#com.intellij.openapi.progress(MPS.Workbench/com.intellij.openapi.progress@java_stub)\"), SNodeId.fromString(\"~Progressive.run(com.intellij.openapi.progress.ProgressIndicator):void\")));\n                          {\n                            quotedNode_27 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.GenericNewExpression\", null, GlobalScope.getInstance(), false);\n                            SNode quotedNode1_53 = quotedNode_27;\n                            {\n                              quotedNode_30 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassCreator\", null, GlobalScope.getInstance(), false);\n                              SNode quotedNode1_54 = quotedNode_30;\n                              quotedNode1_54.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_54, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.progress(MPS.Workbench/jetbrains.mps.progress@java_stub)\"), SNodeId.fromString(\"~ProgressMonitorAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)\")));\n                              {\n                                quotedNode_31 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParameterReference\", null, GlobalScope.getInstance(), false);\n                                SNode quotedNode1_55 = quotedNode_31;\n                                quotedNode_30.addChild(\"actualArgument\", quotedNode1_55);\n                              }\n                              quotedNode_27.addChild(\"creator\", quotedNode1_54);\n                            }\n                            quotedNode_25.addChild(\"actualArgument\", quotedNode1_53);\n                          }\n                          quotedNode_23.addChild(\"operation\", quotedNode1_52);\n                        }\n                        quotedNode_22.addChild(\"expression\", quotedNode1_50);\n                      }\n                      quotedNode_19.addChild(\"statement\", quotedNode1_49);\n                    }\n                    quotedNode_15.addChild(\"body\", quotedNode1_48);\n                  }\n                  quotedNode_13.addChild(\"method\", quotedNode1_42);\n                }\n                quotedNode_11.addChild(\"cls\", quotedNode1_40);\n              }\n              quotedNode_5.addChild(\"creator\", quotedNode1_39);\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_38);\n          }\n          {\n            quotedNode_6 = (SNode) parameter_61;\n            SNode quotedNode1_56;\n            if (_parameterValues_129834374.contains(quotedNode_6)) {\n              quotedNode1_56 = HUtil.copyIfNecessary(quotedNode_6);\n            } else {\n              _parameterValues_129834374.add(quotedNode_6);\n              quotedNode1_56 = quotedNode_6;\n            }\n            if (quotedNode1_56 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_56));\n            }\n          }\n          {\n            quotedNode_7 = (SNode) parameter_64;\n            SNode quotedNode1_57;\n            if (_parameterValues_129834374.contains(quotedNode_7)) {\n              quotedNode1_57 = HUtil.copyIfNecessary(quotedNode_7);\n            } else {\n              _parameterValues_129834374.add(quotedNode_7);\n              quotedNode1_57 = quotedNode_7;\n            }\n            if (quotedNode1_57 != null) {\n              quotedNode_3.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_57));\n            }\n          }\n          {\n            quotedNode_8 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_58 = quotedNode_8;\n            quotedNode1_58.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper.toMPSProject(com.intellij.openapi.project.Project):jetbrains.mps.project.Project\")));\n            quotedNode1_58.addReference(SReference.create(\"classConcept\", quotedNode1_58, SModelReference.fromString(\"f:java_stub#86441d7a-e194-42da-81a5-2161ec62a379#jetbrains.mps.ide.project(MPS.Workbench/jetbrains.mps.ide.project@java_stub)\"), SNodeId.fromString(\"~ProjectHelper\")));\n            {\n              quotedNode_12 = (SNode) parameter_65;\n              SNode quotedNode1_59;\n              if (_parameterValues_129834374.contains(quotedNode_12)) {\n                quotedNode1_59 = HUtil.copyIfNecessary(quotedNode_12);\n              } else {\n                _parameterValues_129834374.add(quotedNode_12);\n                quotedNode1_59 = quotedNode_12;\n              }\n              if (quotedNode1_59 != null) {\n                quotedNode_8.addChild(\"actualArgument\", HUtil.copyIfNecessary(quotedNode1_59));\n              }\n            }\n            quotedNode_3.addChild(\"actualArgument\", quotedNode1_58);\n          }\n          quotedNode_1.addChild(\"operation\", quotedNode1_37);\n        }\n        result = quotedNode1_32;\n      }\n      quotedNode_31.setReferent(\"variableDeclaration\", quotedNode_18);\n      return result;\n    }","id":20063,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode1_10.addReference(SReference.create(\"classifier\", quotedNode1_10, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode_4.addChild(\"expression\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)\"), SNodeId.fromString(\"~Language.getStructureModelDescriptor():jetbrains.mps.smodel.DefaultSModelDescriptor\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"7389876ff1bdb74736eaf371748374a2ccd4c078","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode_4.addChild(\"expression\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode1_11.addReference(SReference.create(\"classifier\", quotedNode1_11, SModelReference.fromString(\"r:63a75970-913d-4a7b-99e2-8ca72ff6f509(jetbrains.mps.baseLanguage.unitTest.execution.client)\"), SNodeId.fromString(\"5881102044690179271\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"r:63a75970-913d-4a7b-99e2-8ca72ff6f509(jetbrains.mps.baseLanguage.unitTest.execution.client)\"), SNodeId.fromString(\"5881102044690179289\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","id":20064,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      SNode quotedNode_5 = null;\n      SNode quotedNode_6 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.DotExpression\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_7 = quotedNode_1;\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_2;\n          {\n            quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.CastExpression\", null, GlobalScope.getInstance(), false);\n            SNode quotedNode1_9 = quotedNode_4;\n            {\n              quotedNode_5 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_10 = quotedNode_5;\n              quotedNode_4.addChild(\"expression\", quotedNode1_10);\n            }\n            {\n              quotedNode_6 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n              SNode quotedNode1_11 = quotedNode_6;\n              quotedNode1_11.addReference(SReference.create(\"classifier\", quotedNode1_11, SModelReference.fromString(\"r:63a75970-913d-4a7b-99e2-8ca72ff6f509(jetbrains.mps.baseLanguage.unitTest.execution.client)\"), SNodeId.fromString(\"5881102044690179271\")));\n              quotedNode_4.addChild(\"type\", quotedNode1_11);\n            }\n            quotedNode_2.addChild(\"expression\", quotedNode1_9);\n          }\n          quotedNode_1.addChild(\"operand\", quotedNode1_8);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_12 = quotedNode_3;\n          quotedNode1_12.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_12, SModelReference.fromString(\"r:63a75970-913d-4a7b-99e2-8ca72ff6f509(jetbrains.mps.baseLanguage.unitTest.execution.client)\"), SNodeId.fromString(\"5881102044690179272\")));\n          quotedNode_1.addChild(\"operation\", quotedNode1_12);\n        }\n        result = quotedNode1_7;\n      }\n      return result;\n    }","commit_id":"7389876ff1bdb74736eaf371748374a2ccd4c078","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.ClassifierType\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_2 = quotedNode_1;\n        quotedNode1_2.addReference(SReference.create(\"classifier\", quotedNode1_2, SModelReference.fromString(\"r:63a75970-913d-4a7b-99e2-8ca72ff6f509(jetbrains.mps.baseLanguage.unitTest.execution.client)\"), SNodeId.fromString(\"5881102044690179271\")));\n        result = quotedNode1_2;\n      }\n      return result;\n    }","id":20065,"modified_method":"public SNode createNode() {\n      SNode result = null;\n      Set<SNode> _parameterValues_129834374 = new HashSet<SNode>();\n      SNode quotedNode_1 = null;\n      SNode quotedNode_2 = null;\n      SNode quotedNode_3 = null;\n      SNode quotedNode_4 = null;\n      {\n        quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.StaticMethodCall\", null, GlobalScope.getInstance(), false);\n        SNode quotedNode1_5 = quotedNode_1;\n        quotedNode1_5.addReference(SReference.create(\"baseMethodDeclaration\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082341000554\")));\n        quotedNode1_5.addReference(SReference.create(\"classConcept\", quotedNode1_5, SModelReference.fromString(\"r:00000000-0000-4000-0000-011c895902c0(jetbrains.mps.baseLanguage.behavior)\"), SNodeId.fromString(\"4830579082340999665\")));\n        {\n          quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_6 = quotedNode_2;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_6);\n        }\n        {\n          quotedNode_3 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.NullLiteral\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_7 = quotedNode_3;\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_7);\n        }\n        {\n          quotedNode_4 = SModelUtil_new.instantiateConceptDeclaration(\"jetbrains.mps.baseLanguage.structure.BooleanConstant\", null, GlobalScope.getInstance(), false);\n          SNode quotedNode1_8 = quotedNode_4;\n          quotedNode1_8.setProperty(\"value\", \"false\");\n          quotedNode_1.addChild(\"actualArgument\", quotedNode1_8);\n        }\n        result = quotedNode1_5;\n      }\n      return result;\n    }","commit_id":"7389876ff1bdb74736eaf371748374a2ccd4c078","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  protected InetSocketAddress getExploreServiceAddress() {\n    EndpointStrategy endpointStrategy = this.endpointStrategySupplier.get();\n    if (endpointStrategy == null || endpointStrategy.pick() == null) {\n      String message = String.format(\"Cannot discover service %s\", Service.EXPLORE_HTTP_USER_SERVICE);\n      LOG.debug(message);\n      throw new RuntimeException(message);\n    }\n\n    return endpointStrategy.pick().getSocketAddress();\n  }","id":20066,"modified_method":"@Override\n  protected InetSocketAddress getExploreServiceAddress() {\n    EndpointStrategy endpointStrategy = this.endpointStrategySupplier.get();\n    Discoverable discoverable = endpointStrategy.pick();\n    if (discoverable != null) {\n      return discoverable.getSocketAddress();\n    }\n    throw new RuntimeException(\n      String.format(\"Cannot discover service %s\", Service.EXPLORE_HTTP_USER_SERVICE));\n  }","commit_id":"6d6e67f87308f08799378a7bce91e3358a1a3e68","url":"https://github.com/caskdata/cdap"},{"original_method":"protected void moveDependentToTrash(\n\t\t\tList<Object> foldersAndEntries, int status)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof BookmarksEntry) {\n\t\t\t\tBookmarksEntry entry = (BookmarksEntry)object;\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tBookmarksEntry.class.getName(), entry.getEntryId(),\n\t\t\t\t\t\tfalse);\n\n\t\t\t\t\tif (entry.getStatus() == WorkflowConstants.STATUS_PENDING) {\n\t\t\t\t\t\tentry.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\t\tbookmarksEntryPersistence.update(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tif (entry.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED) {\n\n\t\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\t\tBookmarksEntry.class.getName(), entry.getEntryId(),\n\t\t\t\t\t\t\ttrue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksEntry.class);\n\n\t\t\t\tindexer.reindex(entry);\n\t\t\t}\n\t\t\telse if (object instanceof BookmarksFolder) {\n\t\t\t\tBookmarksFolder folder = (BookmarksFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and entries\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndEntries(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\tupdateDependentStatus(curFoldersAndEntries, status);\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tBookmarksFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\tfalse);\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tBookmarksFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\ttrue);\n\t\t\t\t}\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","id":20067,"modified_method":"protected void moveDependentToTrash(List<Object> foldersAndEntries)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof BookmarksEntry) {\n\t\t\t\tBookmarksEntry entry = (BookmarksEntry)object;\n\n\t\t\t\t// Asset\n\n\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\tBookmarksEntry.class.getName(), entry.getEntryId(), false);\n\n\t\t\t\tif (entry.getStatus() == WorkflowConstants.STATUS_PENDING) {\n\t\t\t\t\tentry.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\tbookmarksEntryPersistence.update(entry);\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksEntry.class);\n\n\t\t\t\tindexer.reindex(entry);\n\t\t\t}\n\t\t\telse if (object instanceof BookmarksFolder) {\n\t\t\t\tBookmarksFolder folder = (BookmarksFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and entries\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndEntries(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\tmoveDependentToTrash(curFoldersAndEntries);\n\n\t\t\t\t// Asset\n\n\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\tBookmarksFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\tfalse);\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","commit_id":"1c3af741ab537264a603d5907a9be60a47d42fc1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void restoreDependentFromTrash(\n\t\t\tList<Object> foldersAndEntries, int status)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof BookmarksEntry) {\n\t\t\t\tBookmarksEntry entry = (BookmarksEntry)object;\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tBookmarksEntry.class.getName(), entry.getEntryId(),\n\t\t\t\t\t\tfalse);\n\n\t\t\t\t\tif (entry.getStatus() == WorkflowConstants.STATUS_PENDING) {\n\t\t\t\t\t\tentry.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\t\tbookmarksEntryPersistence.update(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tif (entry.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED) {\n\n\t\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\t\tBookmarksEntry.class.getName(), entry.getEntryId(),\n\t\t\t\t\t\t\ttrue);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksEntry.class);\n\n\t\t\t\tindexer.reindex(entry);\n\t\t\t}\n\t\t\telse if (object instanceof BookmarksFolder) {\n\t\t\t\tBookmarksFolder folder = (BookmarksFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and entries\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndEntries(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\tupdateDependentStatus(curFoldersAndEntries, status);\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tBookmarksFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\tfalse);\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tBookmarksFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\ttrue);\n\t\t\t\t}\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","id":20068,"modified_method":"protected void restoreDependentFromTrash(List<Object> foldersAndEntries)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof BookmarksEntry) {\n\t\t\t\tBookmarksEntry entry = (BookmarksEntry)object;\n\n\t\t\t\t// Asset\n\n\t\t\t\tif (entry.getStatus() == WorkflowConstants.STATUS_APPROVED) {\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tBookmarksEntry.class.getName(), entry.getEntryId(),\n\t\t\t\t\t\ttrue);\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksEntry.class);\n\n\t\t\t\tindexer.reindex(entry);\n\t\t\t}\n\t\t\telse if (object instanceof BookmarksFolder) {\n\t\t\t\tBookmarksFolder folder = (BookmarksFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and entries\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndEntries(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\trestoreDependentFromTrash(curFoldersAndEntries);\n\n\t\t\t\t// Asset\n\n\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\tBookmarksFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\ttrue);\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tBookmarksFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","commit_id":"1c3af741ab537264a603d5907a9be60a47d42fc1","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void restoreDependentsFromTrash(\n\t\t\tList<Object> foldersAndEntries, int status)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof JournalArticle) {\n\t\t\t\tJournalArticle article = (JournalArticle)object;\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tif (article.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED) {\n\n\t\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\t\tarticle.getResourcePrimKey(), false);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (article.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_PENDING) {\n\n\t\t\t\t\t\tarticle.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\t\tjournalArticlePersistence.update(article);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tif (article.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED) {\n\n\t\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\t\tarticle.getResourcePrimKey(), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Workflow\n\n\t\t\t\tif (status != WorkflowConstants.STATUS_APPROVED) {\n\t\t\t\t\tList<JournalArticle> articleVersions =\n\t\t\t\t\t\tjournalArticlePersistence.findByG_A(\n\t\t\t\t\t\t\tarticle.getGroupId(), article.getArticleId());\n\n\t\t\t\t\tfor (JournalArticle curArticle : articleVersions) {\n\t\t\t\t\t\tif (!curArticle.isPending()) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurArticle.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\t\tjournalArticlePersistence.update(curArticle);\n\n\t\t\t\t\t\tworkflowInstanceLinkLocalService.\n\t\t\t\t\t\t\tdeleteWorkflowInstanceLink(\n\t\t\t\t\t\t\t\tcurArticle.getCompanyId(),\n\t\t\t\t\t\t\t\tcurArticle.getGroupId(),\n\t\t\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\t\t\tcurArticle.getId());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalArticle.class);\n\n\t\t\t\tindexer.reindex(article);\n\t\t\t}\n\t\t\telse if (object instanceof JournalFolder) {\n\t\t\t\tJournalFolder folder = (JournalFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and articles\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndArticles(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\tupdateDependentStatus(curFoldersAndEntries, status);\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tJournalFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\tfalse);\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tJournalFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\ttrue);\n\t\t\t\t}\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","id":20069,"modified_method":"protected void restoreDependentsFromTrash(List<Object> foldersAndEntries)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof JournalArticle) {\n\t\t\t\tJournalArticle article = (JournalArticle)object;\n\n\t\t\t\t// Asset\n\n\t\t\t\tif (article.getStatus() == WorkflowConstants.STATUS_APPROVED) {\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\tarticle.getResourcePrimKey(), true);\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalArticle.class);\n\n\t\t\t\tindexer.reindex(article);\n\t\t\t}\n\t\t\telse if (object instanceof JournalFolder) {\n\t\t\t\tJournalFolder folder = (JournalFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and articles\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndArticles(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\trestoreDependentsFromTrash(curFoldersAndEntries);\n\n\t\t\t\t// Asset\n\n\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\tJournalFolder.class.getName(), folder.getFolderId(), true);\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","commit_id":"c759a9174d7e558cae42a84c16bded2675041ec5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void moveDependentsToTrash(\n\t\t\tList<Object> foldersAndEntries, int status)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof JournalArticle) {\n\t\t\t\tJournalArticle article = (JournalArticle)object;\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tif (article.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED) {\n\n\t\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\t\tarticle.getResourcePrimKey(), false);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (article.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_PENDING) {\n\n\t\t\t\t\t\tarticle.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\t\tjournalArticlePersistence.update(article);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tif (article.getStatus() ==\n\t\t\t\t\t\t\tWorkflowConstants.STATUS_APPROVED) {\n\n\t\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\t\tarticle.getResourcePrimKey(), true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Workflow\n\n\t\t\t\tif (status != WorkflowConstants.STATUS_APPROVED) {\n\t\t\t\t\tList<JournalArticle> articleVersions =\n\t\t\t\t\t\tjournalArticlePersistence.findByG_A(\n\t\t\t\t\t\t\tarticle.getGroupId(), article.getArticleId());\n\n\t\t\t\t\tfor (JournalArticle curArticle : articleVersions) {\n\t\t\t\t\t\tif (!curArticle.isPending()) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurArticle.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\t\tjournalArticlePersistence.update(curArticle);\n\n\t\t\t\t\t\tworkflowInstanceLinkLocalService.\n\t\t\t\t\t\t\tdeleteWorkflowInstanceLink(\n\t\t\t\t\t\t\t\tcurArticle.getCompanyId(),\n\t\t\t\t\t\t\t\tcurArticle.getGroupId(),\n\t\t\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\t\t\tcurArticle.getId());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalArticle.class);\n\n\t\t\t\tindexer.reindex(article);\n\t\t\t}\n\t\t\telse if (object instanceof JournalFolder) {\n\t\t\t\tJournalFolder folder = (JournalFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and articles\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndArticles(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\tupdateDependentStatus(curFoldersAndEntries, status);\n\n\t\t\t\tif (status == WorkflowConstants.STATUS_IN_TRASH) {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tJournalFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\tfalse);\n\t\t\t\t}\n\t\t\t\telse {\n\n\t\t\t\t\t// Asset\n\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tJournalFolder.class.getName(), folder.getFolderId(),\n\t\t\t\t\t\ttrue);\n\t\t\t\t}\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","id":20070,"modified_method":"protected void moveDependentsToTrash(List<Object> foldersAndEntries)\n\t\tthrows PortalException, SystemException {\n\n\t\tfor (Object object : foldersAndEntries) {\n\t\t\tif (object instanceof JournalArticle) {\n\t\t\t\tJournalArticle article = (JournalArticle)object;\n\n\t\t\t\t// Asset\n\n\t\t\t\tif (article.getStatus() == WorkflowConstants.STATUS_APPROVED) {\n\t\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\t\tJournalArticle.class.getName(),\n\t\t\t\t\t\tarticle.getResourcePrimKey(), false);\n\t\t\t\t}\n\n\t\t\t\tif (article.getStatus() == WorkflowConstants.STATUS_PENDING) {\n\t\t\t\t\tarticle.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\tjournalArticlePersistence.update(article);\n\t\t\t\t}\n\n\t\t\t\t// Workflow\n\n\t\t\t\tList<JournalArticle> articleVersions =\n\t\t\t\t\tjournalArticlePersistence.findByG_A(\n\t\t\t\t\t\tarticle.getGroupId(), article.getArticleId());\n\n\t\t\t\tfor (JournalArticle curArticle : articleVersions) {\n\t\t\t\t\tif (!curArticle.isPending()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tcurArticle.setStatus(WorkflowConstants.STATUS_DRAFT);\n\n\t\t\t\t\tjournalArticlePersistence.update(curArticle);\n\n\t\t\t\t\tworkflowInstanceLinkLocalService.\n\t\t\t\t\t\tdeleteWorkflowInstanceLink(\n\t\t\t\t\t\t\tcurArticle.getCompanyId(), curArticle.getGroupId(),\n\t\t\t\t\t\t\tJournalArticle.class.getName(), curArticle.getId());\n\t\t\t\t}\n\n\t\t\t\t// Indexer\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalArticle.class);\n\n\t\t\t\tindexer.reindex(article);\n\t\t\t}\n\t\t\telse if (object instanceof JournalFolder) {\n\t\t\t\tJournalFolder folder = (JournalFolder)object;\n\n\t\t\t\tif (folder.isInTrash()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Folders and articles\n\n\t\t\t\tList<Object> curFoldersAndEntries = getFoldersAndArticles(\n\t\t\t\t\tfolder.getGroupId(), folder.getFolderId());\n\n\t\t\t\tmoveDependentsToTrash(curFoldersAndEntries);\n\n\t\t\t\tassetEntryLocalService.updateVisible(\n\t\t\t\t\tJournalFolder.class.getName(), folder.getFolderId(), false);\n\n\t\t\t\t// Index\n\n\t\t\t\tIndexer indexer = IndexerRegistryUtil.nullSafeGetIndexer(\n\t\t\t\t\tJournalFolder.class);\n\n\t\t\t\tindexer.reindex(folder);\n\t\t\t}\n\t\t}\n\t}","commit_id":"c759a9174d7e558cae42a84c16bded2675041ec5","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static int postNewThread (String userName, String password, ErrorBean error,\n                                   String compilationTimestamp)\n          throws IOException, NoSuchEAPUserException, InternalEAPException {\n    @NonNls List<Pair<String,String>> params = new ArrayList<Pair<String, String>>();\n    params.add(Pair.create(\"username\", userName));\n    params.add(Pair.create(\"pwd\", password));\n    params.add(Pair.create(\"_title\", MessageFormat.format(THREAD_SUBJECT,\n                                              error.getLastAction() == null ? error.getExceptionClass() :\n                                              error.getLastAction() + \", \" + error.getExceptionClass())));\n    ApplicationInfoEx appInfo =\n      (ApplicationInfoEx) ApplicationManager.getApplication().getComponent(\n        ApplicationInfo.class);\n\n    params.add(Pair.create(\"_build\", appInfo.getBuild().asString()));\n    params.add(Pair.create(\"_description\",\n               (compilationTimestamp != null ? (\"Build time: \" + compilationTimestamp + \"\\n\") : \"\") +\n               error.getDescription() + \"\\n\\n\" + error.getStackTrace()));\n\n    String jdkVersion = SystemProperties.getJavaVersion();\n    String jdkVendor = SystemProperties.getJavaVmVendor();\n\n    if (jdkVendor.indexOf(SUN) != -1) {\n      if (jdkVersion.equals(JDK_1_4_2))\n        jdkVersion = \"10\";\n      else if (jdkVersion.equals(JDK_1_4_1))\n        jdkVersion = \"7\";\n      else if (jdkVersion.equals(JDK_1_4_0_02))\n        jdkVersion = \"9\";\n      else if (jdkVersion.equals(JDK_1_4_0_01))\n        jdkVersion = \"8\";\n      else if (jdkVersion.equals(JDK_1_4_0))\n        jdkVersion = \"6\";\n      else if (jdkVersion.equals(JDK_1_3_1_01))\n        jdkVersion = \"5\";\n      else if (jdkVersion.equals(JDK_1_3_1))\n        jdkVersion = \"4\";\n      else if (jdkVersion.equals(JDK_1_3_0))\n        jdkVersion = \"3\";\n      else if (jdkVersion.equals(JDK_1_2_2))\n        jdkVersion = \"2\";\n      else\n        jdkVersion = \"1\";\n    } else\n      jdkVersion = \"1\";\n\n    params.add(Pair.create(\"_jdk\", jdkVersion));\n\n    String os = error.getOs();\n    if (os == null)\n      os = \"\";\n\n    if (os.indexOf(WINDOWS_XP) != -1)\n      os = \"4\";\n    else if (os.indexOf(WINDOWS_2000) != -1 || os.indexOf(WINDOWS_NT) != -1)\n      os = \"3\";\n    else if (os.indexOf(WINDOWS_95) != -1 || os.indexOf(WINDOWS_98) != -1 || os.indexOf(WINDOWS_ME) != -1)\n      os = \"2\";\n    else if (os.indexOf(SOLARIS) != -1)\n      os = \"7\";\n    else if (os.indexOf(MAC_OS_X) != -1)\n      os = \"6\";\n    else if (os.indexOf(LINUX) != -1)\n      os = \"5\";\n    else\n      os = \"1\";\n    params.add(Pair.create(\"_os\", os));\n\n    params.add(Pair.create(\"_product\", ApplicationNamesInfo.getInstance().getProductName()));\n\n    for (Attachment attachment : error.getAttachments()) {\n      params.add(Pair.create(\"_attachment_name\", attachment.getName()));\n      params.add(Pair.create(\"_attachment_value\", attachment.getEncodedBytes()));\n    }\n    \n    HttpURLConnection connection = post(NEW_THREAD_URL, params);\n    int responce = connection.getResponseCode();\n    switch (responce) {\n      case HttpURLConnection.HTTP_OK:\n        break;\n      case HttpURLConnection.HTTP_BAD_REQUEST:\n      case HttpURLConnection.HTTP_NOT_FOUND:\n        // user not found\n        throw new NoSuchEAPUserException(userName);\n      default:\n        // some problems\n        throw new InternalEAPException(DiagnosticBundle.message(\"error.http.result.code\", responce));\n    }\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    InputStream is = connection.getInputStream();\n\n    int c;\n    while ((c = is.read()) != -1) {\n      baos.write (c);\n    }\n    int threadId;\n\n    try {\n      threadId = Integer.valueOf(baos.toString().trim()).intValue();\n    } catch (NumberFormatException ex) {\n      // Tibor!!!! :-E\n      throw new InternalEAPException(DiagnosticBundle.message(\"error.itn.returns.wrong.data\"));\n    }\n\n    return threadId;\n  }","id":20071,"modified_method":"public static int postNewThread (String userName, String password, ErrorBean error,\n                                   String compilationTimestamp)\n          throws IOException, NoSuchEAPUserException, InternalEAPException {\n    @NonNls List<Pair<String,String>> params = new ArrayList<Pair<String, String>>();\n    params.add(Pair.create(\"username\", userName));\n    params.add(Pair.create(\"pwd\", password));\n    params.add(Pair.create(\"_title\", MessageFormat.format(THREAD_SUBJECT,\n                                              error.getLastAction() == null ? error.getExceptionClass() :\n                                              error.getLastAction() + \", \" + error.getExceptionClass())));\n    ApplicationInfoEx appInfo =\n      (ApplicationInfoEx) ApplicationManager.getApplication().getComponent(\n        ApplicationInfo.class);\n\n    params.add(Pair.create(\"_build\", appInfo.getBuild().asString()));\n    params.add(Pair.create(\"_description\",\n               (compilationTimestamp != null ? (\"Build time: \" + compilationTimestamp + \"\\n\") : \"\") +\n               error.getDescription() + \"\\n\\n\" + error.getStackTrace()));\n\n    String jdkVersion = SystemProperties.getJavaVersion();\n    String jdkVendor = SystemProperties.getJavaVmVendor();\n\n    if (jdkVendor.contains(SUN)) {\n      if (jdkVersion.equals(JDK_1_4_2))\n        jdkVersion = \"10\";\n      else if (jdkVersion.equals(JDK_1_4_1))\n        jdkVersion = \"7\";\n      else if (jdkVersion.equals(JDK_1_4_0_02))\n        jdkVersion = \"9\";\n      else if (jdkVersion.equals(JDK_1_4_0_01))\n        jdkVersion = \"8\";\n      else if (jdkVersion.equals(JDK_1_4_0))\n        jdkVersion = \"6\";\n      else if (jdkVersion.equals(JDK_1_3_1_01))\n        jdkVersion = \"5\";\n      else if (jdkVersion.equals(JDK_1_3_1))\n        jdkVersion = \"4\";\n      else if (jdkVersion.equals(JDK_1_3_0))\n        jdkVersion = \"3\";\n      else if (jdkVersion.equals(JDK_1_2_2))\n        jdkVersion = \"2\";\n      else\n        jdkVersion = \"1\";\n    } else\n      jdkVersion = \"1\";\n\n    params.add(Pair.create(\"_jdk\", jdkVersion));\n\n    String os = error.getOs();\n    if (os == null)\n      os = \"\";\n\n    if (os.contains(WINDOWS_XP))\n      os = \"4\";\n    else if (os.contains(WINDOWS_2000) || os.contains(WINDOWS_NT))\n      os = \"3\";\n    else if (os.contains(WINDOWS_95) || os.contains(WINDOWS_98) || os.contains(WINDOWS_ME))\n      os = \"2\";\n    else if (os.contains(SOLARIS))\n      os = \"7\";\n    else if (os.contains(MAC_OS_X))\n      os = \"6\";\n    else if (os.contains(LINUX))\n      os = \"5\";\n    else\n      os = \"1\";\n    params.add(Pair.create(\"_os\", os));\n\n    params.add(Pair.create(\"_product\", ApplicationNamesInfo.getInstance().getProductName()));\n\n    for (Attachment attachment : error.getAttachments()) {\n      params.add(Pair.create(\"_attachment_name\", attachment.getName()));\n      params.add(Pair.create(\"_attachment_value\", attachment.getEncodedBytes()));\n    }\n    \n    HttpURLConnection connection = post(NEW_THREAD_URL, params);\n    int response = connection.getResponseCode();\n    switch (response) {\n      case HttpURLConnection.HTTP_OK:\n        break;\n      case HttpURLConnection.HTTP_BAD_REQUEST:\n      case HttpURLConnection.HTTP_NOT_FOUND:\n        // user not found\n        throw new NoSuchEAPUserException(userName);\n      default:\n        // some problems\n        throw new InternalEAPException(DiagnosticBundle.message(\"error.http.result.code\", response));\n    }\n\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    InputStream is = connection.getInputStream();\n\n    int c;\n    while ((c = is.read()) != -1) {\n      baos.write (c);\n    }\n    int threadId;\n\n    try {\n      threadId = Integer.valueOf(baos.toString().trim()).intValue();\n    } catch (NumberFormatException ex) {\n      // Tibor!!!! :-E\n      throw new InternalEAPException(DiagnosticBundle.message(\"error.itn.returns.wrong.data\"));\n    }\n\n    return threadId;\n  }","commit_id":"ea63066253284d53c97b91a4d3bd47a0059c9cbf","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void createFolder(\n\t\tCommandArgument commandArgument, HttpServletRequest request,\n\t\tHttpServletResponse response) {\n\n\t\tDocument document = _createDocument();\n\n\t\tNode rootNode = _createRoot(\n\t\t\tdocument, commandArgument.getCommand(), commandArgument.getType(),\n\t\t\tcommandArgument.getCurrentFolder(), StringPool.BLANK);\n\n\t\tElement errorElement = document.createElement(\"Error\");\n\n\t\trootNode.appendChild(errorElement);\n\n\t\tString returnValue = \"0\";\n\n\t\ttry {\n\t\t\treturnValue = createFolder(commandArgument);\n\t\t}\n\t\tcatch (FCKException fcke) {\n\t\t\tThrowable cause = fcke.getCause();\n\n\t\t\treturnValue = \"110\";\n\n\t\t\tif (cause != null) {\n\t\t\t\tString causeString = GetterUtil.getString(cause.toString());\n\n\t\t\t\tif (causeString.indexOf(\"DuplicateFolderNameException\") != -1) {\n\t\t\t\t\treturnValue = \"101\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.indexOf(\"FolderNameException\") != -1) {\n\t\t\t\t\treturnValue = \"102\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.indexOf(\"NoSuchGroupException\") != -1) {\n\t\t\t\t\treturnValue = \"103\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow fcke;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\terrorElement.setAttribute(\"number\", returnValue);\n\n\t\t_writeDocument(document, response);\n\t}","id":20072,"modified_method":"public void createFolder(\n\t\tCommandArgument commandArgument, HttpServletRequest request,\n\t\tHttpServletResponse response) {\n\n\t\tDocument document = _createDocument();\n\n\t\tNode rootNode = _createRoot(\n\t\t\tdocument, commandArgument.getCommand(), commandArgument.getType(),\n\t\t\tcommandArgument.getCurrentFolder(), StringPool.BLANK);\n\n\t\tElement errorElement = document.createElement(\"Error\");\n\n\t\trootNode.appendChild(errorElement);\n\n\t\tString returnValue = \"0\";\n\n\t\ttry {\n\t\t\treturnValue = createFolder(commandArgument);\n\t\t}\n\t\tcatch (FCKException fcke) {\n\t\t\tThrowable cause = fcke.getCause();\n\n\t\t\treturnValue = \"110\";\n\n\t\t\tif (cause != null) {\n\t\t\t\tString causeString = GetterUtil.getString(cause.toString());\n\n\t\t\t\tif (causeString.contains(\"DuplicateFolderNameException\")) {\n\t\t\t\t\treturnValue = \"101\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.contains(\"FolderNameException\")) {\n\t\t\t\t\treturnValue = \"102\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.contains(\"NoSuchGroupException\")) {\n\t\t\t\t\treturnValue = \"103\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow fcke;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\terrorElement.setAttribute(\"number\", returnValue);\n\n\t\t_writeDocument(document, response);\n\t}","commit_id":"1384f5d83aeec262ed925a3e70ed335d49846d54","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void fileUpload(\n\t\tCommandArgument commandArgument, HttpServletRequest request,\n\t\tHttpServletResponse response) {\n\n\t\tString returnValue = null;\n\n\t\ttry {\n\t\t\tServletFileUpload servletFileUpload = new LiferayFileUpload(\n\t\t\t\tnew LiferayFileItemFactory(\n\t\t\t\t\tUploadServletRequestImpl.getTempDir()), request);\n\n\t\t\tservletFileUpload.setFileSizeMax(\n\t\t\t\tPrefsPropsUtil.getLong(\n\t\t\t\t\tPropsKeys.UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE));\n\n\t\t\tLiferayServletRequest liferayServletRequest =\n\t\t\t\tnew LiferayServletRequest(request);\n\n\t\t\tList<FileItem> fileItems = servletFileUpload.parseRequest(\n\t\t\t\tliferayServletRequest);\n\n\t\t\tMap<String, Object> fields = new HashMap<String, Object>();\n\n\t\t\tfor (FileItem fileItem : fileItems) {\n\t\t\t\tif (fileItem.isFormField()) {\n\t\t\t\t\tfields.put(fileItem.getFieldName(), fileItem.getString());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfields.put(fileItem.getFieldName(), fileItem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tDiskFileItem diskFileItem = (DiskFileItem)fields.get(\"NewFile\");\n\n\t\t\tString fileName = StringUtil.replace(\n\t\t\t\tdiskFileItem.getName(), CharPool.BACK_SLASH, CharPool.SLASH);\n\t\t\tString[] fileNameArray = StringUtil.split(fileName, \"/\");\n\t\t\tfileName = fileNameArray[fileNameArray.length - 1];\n\n\t\t\tString extension = _getExtension(fileName);\n\n\t\t\treturnValue = fileUpload(\n\t\t\t\tcommandArgument, fileName, diskFileItem.getStoreLocation(),\n\t\t\t\textension);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tFCKException fcke = null;\n\n\t\t\tif (e instanceof FCKException) {\n\t\t\t\tfcke = (FCKException)e;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfcke = new FCKException(e);\n\t\t\t}\n\n\t\t\tThrowable cause = fcke.getCause();\n\n\t\t\treturnValue = \"203\";\n\n\t\t\tif (cause != null) {\n\t\t\t\tString causeString = GetterUtil.getString(cause.toString());\n\n\t\t\t\tif ((causeString.indexOf(\"NoSuchFolderException\") != -1) ||\n\t\t\t\t\t(causeString.indexOf(\"NoSuchGroupException\") != -1)) {\n\n\t\t\t\t\treturnValue = \"204\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.indexOf(\"ImageNameException\") != -1) {\n\t\t\t\t\treturnValue = \"205\";\n\t\t\t\t}\n\t\t\t\telse if ((causeString.indexOf(\n\t\t\t\t\t\t\t\"FileExtensionException\") != -1) ||\n\t\t\t\t\t \t (causeString.indexOf(\"FileNameException\") != -1)) {\n\n\t\t\t\t\treturnValue = \"206\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.indexOf(\"PrincipalException\") != -1) {\n\t\t\t\t\treturnValue = \"207\";\n\t\t\t\t}\n\t\t\t\telse if ((causeString.indexOf(\"ImageSizeException\") != -1) ||\n\t\t\t\t\t\t (causeString.indexOf(\"FileSizeException\") != -1)) {\n\n\t\t\t\t\treturnValue = \"208\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.indexOf(\"SystemException\") != -1) {\n\t\t\t\t\treturnValue = \"209\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow fcke;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_writeUploadResponse(returnValue, response);\n\t\t}\n\n\t\t_writeUploadResponse(returnValue, response);\n\t}","id":20073,"modified_method":"public void fileUpload(\n\t\tCommandArgument commandArgument, HttpServletRequest request,\n\t\tHttpServletResponse response) {\n\n\t\tString returnValue = null;\n\n\t\ttry {\n\t\t\tServletFileUpload servletFileUpload = new LiferayFileUpload(\n\t\t\t\tnew LiferayFileItemFactory(\n\t\t\t\t\tUploadServletRequestImpl.getTempDir()), request);\n\n\t\t\tservletFileUpload.setFileSizeMax(\n\t\t\t\tPrefsPropsUtil.getLong(\n\t\t\t\t\tPropsKeys.UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE));\n\n\t\t\tLiferayServletRequest liferayServletRequest =\n\t\t\t\tnew LiferayServletRequest(request);\n\n\t\t\tList<FileItem> fileItems = servletFileUpload.parseRequest(\n\t\t\t\tliferayServletRequest);\n\n\t\t\tMap<String, Object> fields = new HashMap<String, Object>();\n\n\t\t\tfor (FileItem fileItem : fileItems) {\n\t\t\t\tif (fileItem.isFormField()) {\n\t\t\t\t\tfields.put(fileItem.getFieldName(), fileItem.getString());\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfields.put(fileItem.getFieldName(), fileItem);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tDiskFileItem diskFileItem = (DiskFileItem)fields.get(\"NewFile\");\n\n\t\t\tString fileName = StringUtil.replace(\n\t\t\t\tdiskFileItem.getName(), CharPool.BACK_SLASH, CharPool.SLASH);\n\t\t\tString[] fileNameArray = StringUtil.split(fileName, \"/\");\n\t\t\tfileName = fileNameArray[fileNameArray.length - 1];\n\n\t\t\tString extension = _getExtension(fileName);\n\n\t\t\treturnValue = fileUpload(\n\t\t\t\tcommandArgument, fileName, diskFileItem.getStoreLocation(),\n\t\t\t\textension);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\tFCKException fcke = null;\n\n\t\t\tif (e instanceof FCKException) {\n\t\t\t\tfcke = (FCKException)e;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfcke = new FCKException(e);\n\t\t\t}\n\n\t\t\tThrowable cause = fcke.getCause();\n\n\t\t\treturnValue = \"203\";\n\n\t\t\tif (cause != null) {\n\t\t\t\tString causeString = GetterUtil.getString(cause.toString());\n\n\t\t\t\tif (causeString.contains(\"NoSuchFolderException\")||\n\t\t\t\t\tcauseString.contains(\"NoSuchGroupException\")) {\n\n\t\t\t\t\treturnValue = \"204\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.contains(\"ImageNameException\")) {\n\t\t\t\t\treturnValue = \"205\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.contains(\"FileExtensionException\") ||\n\t\t\t\t\t\t causeString.contains(\"FileNameException\")) {\n\n\t\t\t\t\treturnValue = \"206\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.contains(\"PrincipalException\")) {\n\t\t\t\t\treturnValue = \"207\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.contains(\"ImageSizeException\") ||\n\t\t\t\t\t\t causeString.contains(\"FileSizeException\")) {\n\n\t\t\t\t\treturnValue = \"208\";\n\t\t\t\t}\n\t\t\t\telse if (causeString.contains(\"SystemException\")) {\n\t\t\t\t\treturnValue = \"209\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthrow fcke;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_writeUploadResponse(returnValue, response);\n\t\t}\n\n\t\t_writeUploadResponse(returnValue, response);\n\t}","commit_id":"1384f5d83aeec262ed925a3e70ed335d49846d54","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void startUp(boolean clearLocalDataDirectories, ReplicationRole role) {\n        assert (!m_running);\n        if (m_running) {\n            return;\n        }\n\n        // clear any logs, export or snapshot data for this run\n        if (clearLocalDataDirectories) {\n            try {\n                m_subRoots.clear();\n                VoltFile.deleteAllSubRoots();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        // set to true to spew startup timing data\n        boolean logtime = false;\n        long startTime = 0;\n        if (logtime) {\n            startTime = System.currentTimeMillis();\n            System.out.println(\"********** Starting cluster at: \" + startTime);\n        }\n\n        int oopStartIndex = 0;\n\n        for (int ii = 0; ii < m_hostCount; ii++) {\n            ArrayList<EEProcess> procs = new ArrayList<EEProcess>();\n            m_eeProcs.add(procs);\n            for (int zz = 0; zz < m_siteCount; zz++) {\n                String logfile = \"LocalCluster_host_\" + ii + \"_site\" + zz + \".log\";\n                procs.add(new EEProcess(m_target, logfile));\n            }\n        }\n\n        m_pipes.clear();\n        m_cluster.clear();\n\n        // create the in-process server\n        if (m_hasLocalServer) {\n            //If the local directories are being cleared, generate a new root for the\n            //in process server\n            if (clearLocalDataDirectories) {\n                try {\n                    m_subRoots.add(VoltFile.initNewSubrootForThisProcess());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            m_cluster.add(null);\n            m_pipes.add(null);\n            Configuration config = new Configuration();\n            config.m_backend = m_target;\n            config.m_noLoadLibVOLTDB = (m_target == BackendTarget.HSQLDB_BACKEND);\n            config.m_pathToCatalog = m_jarFileName;\n            config.m_pathToDeployment = m_pathToDeployment;\n            config.m_port = VoltDB.DEFAULT_PORT;\n            config.m_adminPort = m_baseAdminPort;\n            config.m_startAction = START_ACTION.CREATE;\n            config.m_replicationRole = role;\n            ArrayList<Integer> ports = new ArrayList<Integer>();\n            for (EEProcess proc : m_eeProcs.get(0)) {\n                ports.add(proc.port());\n            }\n            config.m_ipcPorts = java.util.Collections.synchronizedList(ports);\n            config.m_isRejoinTest = m_isRejoinTest;\n\n            m_localServer = new ServerThread(config);\n            m_localServer.start();\n            oopStartIndex++;\n        }\n\n        // create all the out-of-process servers\n        for (int i = oopStartIndex; i < m_hostCount; i++) {\n            startOne(i, clearLocalDataDirectories, role.toString().toLowerCase());\n        }\n\n        // spin until all the pipes see the magic \"Server completed..\" string.\n        long startOfPipeWait = System.currentTimeMillis();\n        boolean allReady = false;\n        if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        do {\n            if ((System.currentTimeMillis() - startOfPipeWait) > PIPE_WAIT_MAX_TIMEOUT) {\n                break;\n            }\n\n            allReady = true;\n            for (PipeToFile pipeToFile : m_pipes) {\n                if (pipeToFile == null) {\n                    continue;\n                }\n                synchronized(pipeToFile) {\n                    // if eof, then no point in waiting around\n                    if (pipeToFile.m_eof.get())\n                        continue;\n\n                    // if process is dead, no point in waiting around\n                    if (isProcessDead(pipeToFile.getProcess()))\n                        continue;\n\n                    // if not eof, then wait for statement of readiness\n                    if (pipeToFile.m_witnessedReady.get() != true) {\n                        try {\n                            // use a timeout to prevent a forever hang\n                            pipeToFile.wait(1000);\n                        }\n                        catch (InterruptedException ex) {\n                            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                        allReady = false;\n                        break;\n                    }\n                }\n            }\n        } while (allReady == false);\n\n        if (logtime) System.out.println(\"********** post witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n\n        // verify all processes started up and count failures\n        int expectedProcesses = m_hostCount - (m_hasLocalServer ? 1 : 0);\n        int downProcesses = 0;\n        for (Process proc : m_cluster) {\n            if ((proc != null) && (isProcessDead(proc))) {\n                downProcesses++;\n            }\n        }\n\n        // throw an exception if there were failures starting up\n        if ((downProcesses > 0) || (allReady == false)) {\n            // poke all the external processes to die (no guarantees)\n            for (Process proc : m_cluster) {\n                if (proc != null) {\n                    try { proc.destroy(); } catch (Exception e) {}\n                }\n            }\n\n            if (downProcesses > 0) {\n                throw new RuntimeException(\n                        String.format(\"%d/%d external processes failed to start\",\n                                downProcesses, expectedProcesses));\n            }\n            // this error case should only be from a timeout\n            if (!allReady) {\n                throw new RuntimeException(\n                        \"One or more external processes failed to complete initialization.\");\n            }\n        }\n\n        // Finally, make sure the local server thread is running and wait if it is not.\n        if (m_hasLocalServer)\n            m_localServer.waitForInitialization();\n        if (logtime) System.out.println(\"********** DONE: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        m_running = true;\n\n        // if supposed to kill a server, it's go time\n        if (m_failureState != FailureState.ALL_RUNNING) {\n            System.out.println(\"Killing one cluster member.\");\n            int procIndex = 0;\n            if (m_hasLocalServer) {\n                procIndex = 1;\n            }\n\n            Process proc = m_cluster.get(procIndex);\n            proc.destroy();\n            int retval = 0;\n            try {\n                retval = proc.waitFor();\n                for (EEProcess eeproc : m_eeProcs.get(procIndex)) {\n                    eeproc.waitForShutdown();\n                }\n            } catch (InterruptedException e) {\n                System.out.println(\"External VoltDB process is acting crazy.\");\n            } finally {\n                m_cluster.set(procIndex, null);\n            }\n            // exit code 143 is the forcible shutdown code from .destroy()\n            if (retval != 0 && retval != 143) {\n                System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n            }\n        }\n\n        // after killing a server, bring it back in recovery mode\n        if (m_failureState == FailureState.ONE_RECOVERING) {\n            int hostId = m_hasLocalServer ? 1 : 0;\n            recoverOne(logtime, startTime, hostId);\n        }\n    }","id":20074,"modified_method":"public void startUp(boolean clearLocalDataDirectories, ReplicationRole role) {\n        assert (!m_running);\n        if (m_running) {\n            return;\n        }\n\n        // clear any logs, export or snapshot data for this run\n        if (clearLocalDataDirectories) {\n            try {\n                m_subRoots.clear();\n                VoltFile.deleteAllSubRoots();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        // set to true to spew startup timing data\n        boolean logtime = false;\n        long startTime = 0;\n        if (logtime) {\n            startTime = System.currentTimeMillis();\n            System.out.println(\"********** Starting cluster at: \" + startTime);\n        }\n\n        for (int ii = 0; ii < m_hostCount; ii++) {\n            ArrayList<EEProcess> procs = new ArrayList<EEProcess>();\n            m_eeProcs.add(procs);\n            for (int zz = 0; zz < m_siteCount; zz++) {\n                String logfile = \"LocalCluster_host_\" + ii + \"_site\" + zz + \".log\";\n                procs.add(new EEProcess(templateCmdLine.target(), logfile));\n            }\n        }\n\n        m_pipes.clear();\n        m_cluster.clear();\n        int oopStartIndex = 0;\n\n        if (m_hasLocalServer) {\n            // Generate a new root for the in-process server if clearing directories.\n            if (clearLocalDataDirectories) {\n                try {\n                    m_subRoots.add(VoltFile.initNewSubrootForThisProcess());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            m_cluster.add(null);\n            m_pipes.add(null);\n\n            // Make the local Configuration object...\n            CommandLine cmdln = (CommandLine)(templateCmdLine.makeCopy());\n            cmdln.port(portGenerator.next());\n            cmdln.adminPort(portGenerator.next());\n            for (EEProcess proc : m_eeProcs.get(0)) {\n                cmdln.port(proc.port());\n            }\n\n            cmdln.rejoinTest(true);\n            m_localServer = new ServerThread(cmdln);\n            m_localServer.start();\n            oopStartIndex++;\n        }\n\n        // create all the out-of-process servers\n        for (int i = oopStartIndex; i < m_hostCount; i++) {\n            startOne(i, clearLocalDataDirectories, role);\n        }\n\n        // spin until all the pipes see the magic \"Server completed..\" string.\n        long startOfPipeWait = System.currentTimeMillis();\n        boolean allReady = false;\n        if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        do {\n            if ((System.currentTimeMillis() - startOfPipeWait) > PIPE_WAIT_MAX_TIMEOUT) {\n                break;\n            }\n\n            allReady = true;\n            for (PipeToFile pipeToFile : m_pipes) {\n                if (pipeToFile == null) {\n                    continue;\n                }\n                synchronized(pipeToFile) {\n                    // if eof, then no point in waiting around\n                    if (pipeToFile.m_eof.get())\n                        continue;\n\n                    // if process is dead, no point in waiting around\n                    if (isProcessDead(pipeToFile.getProcess()))\n                        continue;\n\n                    // if not eof, then wait for statement of readiness\n                    if (pipeToFile.m_witnessedReady.get() != true) {\n                        try {\n                            // use a timeout to prevent a forever hang\n                            pipeToFile.wait(1000);\n                        }\n                        catch (InterruptedException ex) {\n                            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                        allReady = false;\n                        break;\n                    }\n                }\n            }\n        } while (allReady == false);\n\n        if (logtime) System.out.println(\"********** post witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n\n        // verify all processes started up and count failures\n        int expectedProcesses = m_hostCount - (m_hasLocalServer ? 1 : 0);\n        int downProcesses = 0;\n        for (Process proc : m_cluster) {\n            if ((proc != null) && (isProcessDead(proc))) {\n                downProcesses++;\n            }\n        }\n\n        // throw an exception if there were failures starting up\n        if ((downProcesses > 0) || (allReady == false)) {\n            // poke all the external processes to die (no guarantees)\n            for (Process proc : m_cluster) {\n                if (proc != null) {\n                    try { proc.destroy(); } catch (Exception e) {}\n                }\n            }\n\n            if (downProcesses > 0) {\n                throw new RuntimeException(\n                        String.format(\"%d/%d external processes failed to start\",\n                                downProcesses, expectedProcesses));\n            }\n            // this error case should only be from a timeout\n            if (!allReady) {\n                throw new RuntimeException(\n                        \"One or more external processes failed to complete initialization.\");\n            }\n        }\n\n        // Finally, make sure the local server thread is running and wait if it is not.\n        if (m_hasLocalServer)\n            m_localServer.waitForInitialization();\n        if (logtime) System.out.println(\"********** DONE: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        m_running = true;\n\n        // if supposed to kill a server, it's go time\n        if (m_failureState != FailureState.ALL_RUNNING) {\n            System.out.println(\"Killing one cluster member.\");\n            int procIndex = 0;\n            if (m_hasLocalServer) {\n                procIndex = 1;\n            }\n\n            Process proc = m_cluster.get(procIndex);\n            proc.destroy();\n            int retval = 0;\n            try {\n                retval = proc.waitFor();\n                for (EEProcess eeproc : m_eeProcs.get(procIndex)) {\n                    eeproc.waitForShutdown();\n                }\n            } catch (InterruptedException e) {\n                System.out.println(\"External VoltDB process is acting crazy.\");\n            } finally {\n                m_cluster.set(procIndex, null);\n            }\n            // exit code 143 is the forcible shutdown code from .destroy()\n            if (retval != 0 && retval != 143) {\n                System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n            }\n        }\n\n        // after killing a server, bring it back in recovery mode\n        if (m_failureState == FailureState.ONE_RECOVERING) {\n            int hostId = m_hasLocalServer ? 1 : 0;\n            recoverOne(logtime, startTime, hostId);\n        }\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean compileWithPartitionDetection(VoltProjectBuilder builder, String snapshotPath, String ppdPrefix) {\n        if (m_compiled) {\n            return true;\n        }\n        m_compiled = builder.compile(m_jarFileName, m_siteCount, m_hostCount, m_replication,\n                                     null, true, snapshotPath, ppdPrefix);\n        m_pathToDeployment = builder.getPathToDeployment();\n        m_pathToVoltRoot = builder.getPathToVoltRoot();\n\n        return m_compiled;\n    }","id":20075,"modified_method":"@Override\n    public boolean compileWithPartitionDetection(VoltProjectBuilder builder, String snapshotPath, String ppdPrefix) {\n        if (!m_compiled) {\n            m_compiled = builder.compile(templateCmdLine.jarFileName(), m_siteCount, m_hostCount, m_kfactor,\n                    null, true, snapshotPath, ppdPrefix);\n            templateCmdLine.pathToDeployment(builder.getPathToDeployment());\n        }\n        return m_compiled;\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int replication, BackendTarget target,\n                        boolean isRejoinTest) {\n                    this(jarFileName, siteCount,\n                        hostCount, replication, target,\n                        FailureState.ALL_RUNNING, false, isRejoinTest);\n    }","id":20076,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int kfactor, BackendTarget target,\n                        boolean isRejoinTest) {\n                    this(jarFileName, siteCount,\n                        hostCount, kfactor, target,\n                        FailureState.ALL_RUNNING, false, isRejoinTest);\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId, Integer portOffset, String rejoinHost) {\n        // port for the new node\n        int portNo = VoltDB.DEFAULT_PORT + hostId;\n        int adminPortNo = m_baseAdminPort - hostId;\n\n        // port to connect to (not too simple, eh?)\n        int portNoToRejoin = VoltDB.DEFAULT_PORT + ((hostId + 1) % getNodeCount());\n        if (m_hasLocalServer) portNoToRejoin = VoltDB.DEFAULT_PORT;\n\n        if (portOffset != null) {\n            portNoToRejoin = VoltDB.DEFAULT_PORT + portOffset;\n            // adminPortNo = m_baseAdminPort - portOffset;\n        }\n        System.out.println(\"Rejoining \" + hostId + \" to hostID: \" + portOffset);\n\n\n        ArrayList<EEProcess> eeProcs = m_eeProcs.get(hostId);\n        for (EEProcess proc : eeProcs) {\n            try {\n                proc.waitForShutdown();\n            } catch (InterruptedException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        eeProcs.clear();\n\n        for (int ii = 0; ii < m_siteCount; ii++) {\n            String logfile = \"LocalCluster_host_\" + hostId + \"_site\" + ii + \".log\";\n            eeProcs.add(new EEProcess(m_target, logfile));\n        }\n\n        if (m_target.isIPC) {\n            m_procBuilder.command().set(m_ipcPortOffset1, \"ipcports\");\n            String portString = \"\";\n            for (EEProcess proc : m_eeProcs.get(hostId)) {\n                if (portString.isEmpty()) {\n                    portString += Integer.valueOf(proc.port());\n                } else {\n                    portString += \",\" + Integer.valueOf(proc.port());\n                }\n            }\n            m_procBuilder.command().set(m_ipcPortOffset2, portString);\n            m_procBuilder.command().set(m_ipcPortOffset3, \"valgrind\");\n        }\n\n        //When recovering reuse the root from the original\n        m_procBuilder.command().set(\n                m_voltFilePrefixOffset,\n                \"-DVoltFilePrefix=\" + m_subRoots.get(hostId).getPath());\n\n        PipeToFile ptf = null;\n        long start = 0;\n        try {\n            m_procBuilder.command().set(m_portOffset, String.valueOf(portNo));\n            m_procBuilder.command().set(m_adminPortOffset, String.valueOf(adminPortNo));\n            m_procBuilder.command().set(m_pathToDeploymentOffset, m_pathToDeployment);\n            m_procBuilder.command().set(m_voltStartCmdOffset, \"rejoinhost\");\n            m_procBuilder.command().set(m_rejoinOffset, rejoinHost + \":\" + String.valueOf(portNoToRejoin));\n            m_procBuilder.command().set(m_licensePathOffset, \"\");\n            m_procBuilder.command().set(m_timestampSaltOffset, String.valueOf(getRandomTimestampSalt()));\n            if (m_debug) {\n                System.out.println(\"Debug port is \" + m_debugPortOffset);\n                m_procBuilder.command().set(m_debugOffset1, \"-Xdebug\");\n                m_procBuilder.command().set(\n                        m_debugOffset2,\n                        \"-agentlib:jdwp=transport=dt_socket,address=\"\n                        + m_debugPortOffset++ + \",server=y,suspend=n\");\n            }\n            m_procBuilder.command().set(m_zkPortOffset, Integer.toString(2181 + hostId));\n            // Rejoin should never need to be told the operating mode\n            m_procBuilder.command().set(m_voltStartModeOffset, \"\");\n            Process proc = m_procBuilder.start();\n            start = System.currentTimeMillis();\n\n            // write output to obj/release/testoutput/<test name>-n.txt\n            // this may need to be more unique? Also very useful to just\n            // set this to a hardcoded path and use \"tail -f\" to debug.\n            String testoutputdir = m_buildDir + File.separator + \"testoutput\";\n            // make sure the directory exists\n            File dir = new File(testoutputdir);\n            if (dir.exists()) {\n                assert(dir.isDirectory());\n            }\n            else {\n                boolean status = dir.mkdirs();\n                assert(status);\n            }\n\n            ptf = new PipeToFile(testoutputdir + File.separator +\n                    getName() + \"-\" + hostId + \".txt\", proc.getInputStream(),\n                    PipeToFile.m_rejoinToken, true, proc);\n            synchronized (this) {\n                m_pipes.set(hostId, ptf);\n                // replace the existing dead proc\n                m_cluster.set(hostId, proc);\n            }\n            Thread t = new Thread(ptf);\n            t.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n            t.start();\n        }\n        catch (IOException ex) {\n            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n            assert (false);\n        }\n\n        // wait for the joining site to be ready\n        synchronized (ptf) {\n            if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n            while (ptf.m_witnessedReady.get() != true) {\n                // if eof, then no point in waiting around\n                if (ptf.m_eof.get())\n                    break;\n\n                // if process is dead, no point in waiting around\n                if (isProcessDead(ptf.getProcess()))\n                    break;\n\n                try {\n                    // wait for explicit notification\n                    ptf.wait();\n                }\n                catch (InterruptedException ex) {\n                    Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n                }\n            }\n        }\n        if (ptf.m_witnessedReady.get()) {\n            long finish = System.currentTimeMillis();\n            System.out.println(\n                    \"Took \" + (finish - start) +\n                    \" milliseconds, time from init was \" + (finish - ptf.m_initTime));\n            return true;\n        } else {\n            System.out.println(\"Recovering process exited before recovery completed\");\n            try {\n                silentShutdownSingleHost(hostId, true);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            return false;\n        }\n    }","id":20077,"modified_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId, Integer portOffset, String rejoinHost) {\n        return false;\n\n//        // port for the new node\n//        int portNo = VoltDB.DEFAULT_PORT + hostId;\n//        int adminPortNo = m_baseAdminPort - hostId;\n//\n//        // port to connect to (not too simple, eh?)\n//        int portNoToRejoin = VoltDB.DEFAULT_PORT + ((hostId + 1) % getNodeCount());\n//        if (m_hasLocalServer) portNoToRejoin = VoltDB.DEFAULT_PORT;\n//\n//        if (portOffset != null) {\n//            portNoToRejoin = VoltDB.DEFAULT_PORT + portOffset;\n//            // adminPortNo = m_baseAdminPort - portOffset;\n//        }\n//        System.out.println(\"Rejoining \" + hostId + \" to hostID: \" + portOffset);\n//\n//\n//        ArrayList<EEProcess> eeProcs = m_eeProcs.get(hostId);\n//        for (EEProcess proc : eeProcs) {\n//            try {\n//                proc.waitForShutdown();\n//            } catch (InterruptedException e) {\n//                throw new RuntimeException(e);\n//            }\n//        }\n//        eeProcs.clear();\n//\n//        for (int ii = 0; ii < m_siteCount; ii++) {\n//            String logfile = \"LocalCluster_host_\" + hostId + \"_site\" + ii + \".log\";\n//            eeProcs.add(new EEProcess(m_target, logfile));\n//        }\n//\n//        if (m_target.isIPC) {\n//            m_procBuilder.command().set(m_ipcPortOffset1, \"ipcports\");\n//            String portString = \"\";\n//            for (EEProcess proc : m_eeProcs.get(hostId)) {\n//                if (portString.isEmpty()) {\n//                    portString += Integer.valueOf(proc.port());\n//                } else {\n//                    portString += \",\" + Integer.valueOf(proc.port());\n//                }\n//            }\n//            m_procBuilder.command().set(m_ipcPortOffset2, portString);\n//            m_procBuilder.command().set(m_ipcPortOffset3, \"valgrind\");\n//        }\n//\n//        //When recovering reuse the root from the original\n//        m_procBuilder.command().set(\n//                m_voltFilePrefixOffset,\n//                \"-DVoltFilePrefix=\" + m_subRoots.get(hostId).getPath());\n//\n//        PipeToFile ptf = null;\n//        long start = 0;\n//        try {\n//            m_procBuilder.command().set(m_portOffset, String.valueOf(portNo));\n//            m_procBuilder.command().set(m_adminPortOffset, String.valueOf(adminPortNo));\n//            m_procBuilder.command().set(m_pathToDeploymentOffset, m_pathToDeployment);\n//            m_procBuilder.command().set(m_voltStartCmdOffset, \"rejoinhost\");\n//            m_procBuilder.command().set(m_rejoinOffset, rejoinHost + \":\" + String.valueOf(portNoToRejoin));\n//            m_procBuilder.command().set(m_licensePathOffset, \"\");\n//            m_procBuilder.command().set(m_timestampSaltOffset, String.valueOf(getRandomTimestampSalt()));\n//            if (m_debug) {\n//                System.out.println(\"Debug port is \" + m_debugPortOffset);\n//                m_procBuilder.command().set(m_debugOffset1, \"-Xdebug\");\n//                m_procBuilder.command().set(\n//                        m_debugOffset2,\n//                        \"-agentlib:jdwp=transport=dt_socket,address=\"\n//                        + m_debugPortOffset++ + \",server=y,suspend=n\");\n//            }\n//            m_procBuilder.command().set(m_zkPortOffset, Integer.toString(2181 + hostId));\n//            // Rejoin should never need to be told the operating mode\n//            m_procBuilder.command().set(m_voltStartModeOffset, \"\");\n//            Process proc = m_procBuilder.start();\n//            start = System.currentTimeMillis();\n//\n//            // write output to obj/release/testoutput/<test name>-n.txt\n//            // this may need to be more unique? Also very useful to just\n//            // set this to a hardcoded path and use \"tail -f\" to debug.\n//            String testoutputdir = m_buildDir + File.separator + \"testoutput\";\n//            // make sure the directory exists\n//            File dir = new File(testoutputdir);\n//            if (dir.exists()) {\n//                assert(dir.isDirectory());\n//            }\n//            else {\n//                boolean status = dir.mkdirs();\n//                assert(status);\n//            }\n//\n//            ptf = new PipeToFile(testoutputdir + File.separator +\n//                    getName() + \"-\" + hostId + \".txt\", proc.getInputStream(),\n//                    PipeToFile.m_rejoinToken, true, proc);\n//            synchronized (this) {\n//                m_pipes.set(hostId, ptf);\n//                // replace the existing dead proc\n//                m_cluster.set(hostId, proc);\n//            }\n//            Thread t = new Thread(ptf);\n//            t.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n//            t.start();\n//        }\n//        catch (IOException ex) {\n//            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n//            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n//            assert (false);\n//        }\n//\n//        // wait for the joining site to be ready\n//        synchronized (ptf) {\n//            if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n//            while (ptf.m_witnessedReady.get() != true) {\n//                // if eof, then no point in waiting around\n//                if (ptf.m_eof.get())\n//                    break;\n//\n//                // if process is dead, no point in waiting around\n//                if (isProcessDead(ptf.getProcess()))\n//                    break;\n//\n//                try {\n//                    // wait for explicit notification\n//                    ptf.wait();\n//                }\n//                catch (InterruptedException ex) {\n//                    Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n//                }\n//            }\n//        }\n//        if (ptf.m_witnessedReady.get()) {\n//            long finish = System.currentTimeMillis();\n//            System.out.println(\n//                    \"Took \" + (finish - start) +\n//                    \" milliseconds, time from init was \" + (finish - ptf.m_initTime));\n//            return true;\n//        } else {\n//            System.out.println(\"Recovering process exited before recovery completed\");\n//            try {\n//                silentShutdownSingleHost(hostId, true);\n//            } catch (InterruptedException e) {\n//                e.printStackTrace();\n//            }\n//            return false;\n//        }\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int replication, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug) {\n        this(jarFileName, siteCount, hostCount, replication, target,\n             failureState, debug, false);\n    }","id":20078,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int kfactor, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug) {\n        this(jarFileName, siteCount, hostCount, kfactor, target,\n             failureState, debug, false);\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void setMaxHeap(int megabytes) {\n        m_procBuilder.command().set(7, \"-Xmx\" + megabytes + \"m\");\n    }","id":20079,"modified_method":"public void setMaxHeap(int heap) {\n        templateCmdLine.setMaxHeap(heap);\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public boolean recoverOne(int hostId, Integer portOffset, String rejoinHost) {\n        return recoverOne(false, 0, hostId, portOffset, rejoinHost);\n    }","id":20080,"modified_method":"public boolean recoverOne(int hostId, Integer portOffset, String rejoinHost) {\n        return false;\n        // return recoverOne(false, 0, hostId, portOffset, rejoinHost);\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public synchronized void shutDownExternal(boolean forceKillEEProcs) throws InterruptedException\n    {\n        if (m_cluster != null) {\n            for (Process proc : m_cluster) {\n                if (proc == null)\n                    continue;\n                proc.destroy();\n                int retval = proc.waitFor();\n                // exit code 143 is the forcible shutdown code from .destroy()\n                if (retval != 0 && retval != 143)\n                {\n                    System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n                }\n            }\n        }\n\n        if (m_cluster != null) m_cluster.clear();\n\n        for (ArrayList<EEProcess> procs : m_eeProcs) {\n            for (EEProcess proc : procs) {\n                proc.waitForShutdown();\n            }\n        }\n\n        if (m_target == BackendTarget.NATIVE_EE_VALGRIND_IPC) {\n            if (!EEProcess.m_valgrindErrors.isEmpty()) {\n                String failString = \"\";\n                for (final String error : EEProcess.m_valgrindErrors) {\n                    failString = failString + \"\\n\" + error;\n                }\n                org.junit.Assert.fail(failString);\n            }\n        }\n    }","id":20081,"modified_method":"public synchronized void shutDownExternal(boolean forceKillEEProcs) throws InterruptedException\n    {\n        if (m_cluster != null) {\n            for (Process proc : m_cluster) {\n                if (proc == null)\n                    continue;\n                proc.destroy();\n                int retval = proc.waitFor();\n                // exit code 143 is the forcible shutdown code from .destroy()\n                if (retval != 0 && retval != 143)\n                {\n                    System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n                }\n            }\n        }\n\n        if (m_cluster != null) m_cluster.clear();\n\n        for (ArrayList<EEProcess> procs : m_eeProcs) {\n            for (EEProcess proc : procs) {\n                proc.waitForShutdown();\n            }\n        }\n\n        if (templateCmdLine.target() == BackendTarget.NATIVE_EE_VALGRIND_IPC) {\n            if (!EEProcess.m_valgrindErrors.isEmpty()) {\n                String failString = \"\";\n                for (final String error : EEProcess.m_valgrindErrors) {\n                    failString = failString + \"\\n\" + error;\n                }\n                org.junit.Assert.fail(failString);\n            }\n        }\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int replication, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug, boolean isRejoinTest)\n    {\n        System.out.println(\"Instantiating LocalCluster for \" + jarFileName);\n        System.out.println(\"Sites: \" + siteCount + \" hosts: \" + hostCount\n                           + \" replication factor: \" + replication);\n\n        assert (jarFileName != null);\n        assert (siteCount > 0);\n        assert (hostCount > 0);\n        assert (replication >= 0);\n\n//      final String buildType = System.getenv().get(\"BUILD\");\n//      if (buildType == null) {\n        /*\n         * Disable memcheck with localcluster for now since it doesn't pass.\n         */\n            m_target = target;\n//        } else {\n//            if (buildType.startsWith(\"memcheck\")) {\n//                if (target.equals(BackendTarget.NATIVE_EE_JNI)) {\n//                    m_target = BackendTarget.NATIVE_EE_VALGRIND_IPC;\n//                } else {\n//                    m_target = target;//For memcheck\n//                }\n//            } else {\n//                m_target = target;\n//            }\n//        }\n\n        m_jarFileName = VoltDB.Configuration.getPathToCatalogForTest(jarFileName);\n        m_siteCount = siteCount;\n        m_hostCount = hostCount;\n        m_replication = replication;\n        m_cluster.ensureCapacity(m_hostCount);\n        m_debug = debug;\n        m_isRejoinTest = isRejoinTest;\n        String buildDir = System.getenv(\"VOLTDB_BUILD_DIR\");  // via build.xml\n        if (buildDir == null)\n            m_buildDir = System.getProperty(\"user.dir\") + \"/obj/release\";\n        else\n            m_buildDir = buildDir;\n\n        String jzmq_dir = System.getenv(\"VOLTDB_JZMQ_DIR\"); // via build.xml\n        if (jzmq_dir == null)\n            jzmq_dir = System.getProperty(\"user.dir\") + \"/third_party/cpp/jnilib\";\n        System.out.println(\"Looking for jzmq native lib in: \" + jzmq_dir);\n\n        m_failureState = failureState;\n        //m_failureState = FailureState.ALL_RUNNING;\n\n        m_failureState = failureState;\n        // don't fail nodes without k-safety\n        if (m_replication < 1)\n            m_failureState = FailureState.ALL_RUNNING;\n\n        String classPath = System.getProperty(\"java.class.path\") + \":\" + m_buildDir + File.separator + m_jarFileName;\n        classPath += \":\" + m_buildDir + File.separator + \"prod\";\n\n        // for ant\n        String log4j = System.getProperty(\"log4j.configuration\");\n        // for eclipse\n        if (log4j == null) log4j = \"file://\" + System.getProperty(\"user.dir\") + \"/src/frontend/junit_log4j.properties\";\n\n        // processes of VoltDBs using the compiled jar file.\n        m_pipes = new ArrayList<PipeToFile>();\n        m_procBuilder = new ProcessBuilder(\"java\",\n                                           \"-Djava.library.path=\" + m_buildDir + \"/nativelibs\" + \":\" + jzmq_dir,\n                                           \"-Dlog4j.configuration=\" + log4j,\n                                           \"-DLOG_SEGMENT_SIZE=8\",\n                                           \"-ea\",\n                                           \"-XX:-ReduceInitialCardMarks\",\n                                           \"-XX:MaxDirectMemorySize=2g\",\n                                           \"-Xmx2g\",\n                                           \"-XX:+HeapDumpOnOutOfMemoryError\",\n                                           \"-classpath\",\n                                           classPath,\n                                           \"org.voltdb.VoltDB\",\n                                           \"license\",\n                                           ServerThread.getTestLicensePath(),\n                                           \"zkport\",\n                                           \"-1\",\n                                           \"timestampsalt\",\n                                           \"0\",\n                                           \"catalog\",\n                                           m_jarFileName,\n                                           \"deployment\",\n                                           \"\",\n                                           \"port\",\n                                           \"-1\",\n                                           \"adminport\",\n                                           \"-1\",\n                                           \"rejoinhost\",\n                                           \"-1\",\n                                           \"leader\",\n                                           \"localhost\",\n                                           \"\");\n\n        List<String> command = m_procBuilder.command();\n        // when we actually append a port value and deployment file, these will be correct\n        m_debugOffset1 = command.size() - 22;\n        m_debugOffset2 = command.size() - 21;\n        if (m_debug) {\n            command.add(m_debugOffset1, \"\");\n            command.add(m_debugOffset1, \"\");\n        }\n\n        m_voltFilePrefixOffset = command.size() - 22;\n        command.add(m_voltFilePrefixOffset, \"\");\n\n        m_licensePathOffset = command.size() - 18;\n        m_zkPortOffset = command.size() - 16;\n        m_timestampSaltOffset = command.size() - 14;\n        m_pathToDeploymentOffset = command.size() - 10;\n        m_portOffset = command.size() - 8;\n        m_adminPortOffset = command.size() - 6;\n        m_voltStartCmdOffset = command.size() - 5;\n        m_rejoinOffset = command.size() - 4;\n        m_voltStartModeOffset = command.size() - 1;\n\n        if (m_target.isIPC) {\n            command.add(\"\");\n            m_ipcPortOffset1 = command.size() - 1;\n            command.add(\"\");\n            m_ipcPortOffset2 = command.size() - 1;\n            command.add(\"\");\n            m_ipcPortOffset3 = command.size() - 1;\n        }\n\n        // set the working directory to obj/release/prod\n        //m_procBuilder.directory(new File(m_buildDir + File.separator + \"prod\"));\n        m_procBuilder.redirectErrorStream(true);\n\n        Thread shutdownThread = new Thread(new ShutDownHookThread());\n        java.lang.Runtime.getRuntime().addShutdownHook(shutdownThread);\n    }","id":20082,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int kfactor, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug, boolean isRejoinTest)\n    {\n        System.out.println(\"Instantiating LocalCluster for \" + jarFileName);\n        System.out.println(\"Sites: \" + siteCount + \" hosts: \" + hostCount + \" replication factor: \" + kfactor);\n\n        assert (jarFileName != null);\n        assert (siteCount > 0);\n        assert (hostCount > 0);\n\n        m_cluster.ensureCapacity(hostCount);\n\n        m_siteCount = siteCount;\n        m_hostCount = hostCount;\n        m_kfactor = kfactor;\n        m_debug = debug;\n        m_failureState = kfactor < 1 ? FailureState.ALL_RUNNING : failureState;\n        m_pipes = new ArrayList<PipeToFile>();\n\n        String buildDir = System.getenv(\"VOLTDB_BUILD_DIR\");  // via build.xml\n        if (buildDir == null) {\n            buildDir = System.getProperty(\"user.dir\") + \"/obj/release\";\n        }\n\n        String jzmq_dir = System.getenv(\"VOLTDB_JZMQ_DIR\"); // via build.xml\n        if (jzmq_dir == null) {\n            jzmq_dir = System.getProperty(\"user.dir\") + \"/third_party/cpp/jnilib\";\n        }\n\n        String classPath = System.getProperty(\"java.class.path\") + \":\" + buildDir\n            + File.separator + jarFileName + \":\" + buildDir + File.separator + \"prod\";\n\n        // First try 'ant' syntax and then 'eclipse' syntax...\n        String log4j = System.getProperty(\"log4j.configuration\");\n        if (log4j == null) {\n            log4j = \"file://\" + System.getProperty(\"user.dir\") + \"/src/frontend/junit_log4j.properties\";\n        }\n\n        m_procBuilder = new ProcessBuilder();\n\n        // set the working directory to obj/release/prod\n        //m_procBuilder.directory(new File(m_buildDir + File.separator + \"prod\"));\n        m_procBuilder.redirectErrorStream(true);\n\n        Thread shutdownThread = new Thread(new ShutDownHookThread());\n        java.lang.Runtime.getRuntime().addShutdownHook(shutdownThread);\n\n        // Create the base command line that each process can makeCopy and modify\n        this.templateCmdLine.\n            target(target).\n            jarFileName(VoltDB.Configuration.getPathToCatalogForTest(jarFileName)).\n            buildDir(buildDir).\n            jzmqDir(jzmq_dir).\n            classPath(classPath).\n            log4j(log4j);\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId) {\n        return recoverOne( logtime, startTime, hostId, null, \"localhost\");\n    }","id":20083,"modified_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId) {\n        return false;\n        // return recoverOne( logtime, startTime, hostId, null, \"localhost\");\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean isHSQL() {\n        return m_target == BackendTarget.HSQLDB_BACKEND;\n    }","id":20084,"modified_method":"@Override\n    public boolean isHSQL() {\n        return templateCmdLine.target() == BackendTarget.HSQLDB_BACKEND;\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean compileWithAdminMode(VoltProjectBuilder builder, int adminPort, boolean adminOnStartup)\n    {\n        if (m_compiled) {\n            return true;\n        }\n        m_baseAdminPort = adminPort;\n        m_compiled = builder.compile(m_jarFileName, m_siteCount, m_hostCount, m_replication,\n                                     m_baseAdminPort, adminOnStartup);\n        m_pathToDeployment = builder.getPathToDeployment();\n        m_pathToVoltRoot = builder.getPathToVoltRoot();\n\n        return m_compiled;\n    }","id":20085,"modified_method":"@Override\n    public boolean compileWithAdminMode(VoltProjectBuilder builder, int adminPort, boolean adminOnStartup)\n    {\n        if (!m_compiled) {\n            m_compiled = builder.compile(templateCmdLine.jarFileName(), m_siteCount, m_hostCount, m_kfactor,\n                    adminPort, adminOnStartup);\n            templateCmdLine.pathToDeployment(builder.getPathToDeployment());\n        }\n        return m_compiled;\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public String getName() {\n        String prefix = \"localCluster\";\n        if (m_failureState == FailureState.ONE_FAILURE)\n            prefix += \"OneFail\";\n        if (m_failureState == FailureState.ONE_RECOVERING)\n            prefix += \"OneRecov\";\n\n        return prefix + \"-\" + String.valueOf(m_siteCount) + \"-\" +\n            String.valueOf(m_hostCount) + \"-\" + m_target.display.toUpperCase();\n    }","id":20086,"modified_method":"@Override\n    public String getName() {\n        String prefix = \"localCluster\";\n        if (m_failureState == FailureState.ONE_FAILURE)\n            prefix += \"OneFail\";\n        if (m_failureState == FailureState.ONE_RECOVERING)\n            prefix += \"OneRecov\";\n\n        return prefix +\n            \"-\" + String.valueOf(m_siteCount) +\n            \"-\" + String.valueOf(m_hostCount) +\n            \"-\" + templateCmdLine.target().display.toUpperCase();\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n            int hostCount, int replication, BackendTarget target) {\n        this(jarFileName, siteCount,\n            hostCount, replication, target,\n            FailureState.ALL_RUNNING, false, false);\n    }","id":20087,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n            int hostCount, int kfactor, BackendTarget target) {\n        this(jarFileName, siteCount,\n            hostCount, kfactor, target,\n            FailureState.ALL_RUNNING, false, false);\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean compile(VoltProjectBuilder builder) {\n        if (m_compiled) {\n            return true;\n        }\n\n        m_compiled = builder.compile(m_jarFileName, m_siteCount, m_hostCount, m_replication);\n        m_pathToDeployment = builder.getPathToDeployment();\n        m_pathToVoltRoot = builder.getPathToVoltRoot();\n\n        return m_compiled;\n    }","id":20088,"modified_method":"@Override\n    public boolean compile(VoltProjectBuilder builder) {\n        if (!m_compiled) {\n            m_compiled = builder.compile(templateCmdLine.jarFileName(), m_siteCount, m_hostCount, m_kfactor);\n            templateCmdLine.pathToDeployment(builder.getPathToDeployment());\n        }\n        return m_compiled;\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void startOne(int hostId, boolean clearLocalDataDirectories, String startMode) {\n        try {\n            // set the dragent's port offset (dragent uses three ports per agent...)\n            m_procBuilder.environment().put(\"dragentportoffset\",\n                    String.valueOf(VoltDB.DEFAULT_DR_PORT + hostId * 3));\n\n            // voltdb client/native ports move forward from 21212\n            m_procBuilder.command().set(m_portOffset, String.valueOf(VoltDB.DEFAULT_PORT + hostId));\n            // voltdb admin-mode ports move backwards from 21211\n            m_procBuilder.command().set(m_adminPortOffset, String.valueOf(m_baseAdminPort - hostId));\n            m_procBuilder.command().set(m_pathToDeploymentOffset, m_pathToDeployment);\n            m_procBuilder.command().set(m_voltStartCmdOffset, \"create\");\n            // set 'replica' on the command line, or nothing.\n            if (startMode.equals(ReplicationRole.REPLICA)) {\n                m_procBuilder.command().set(m_voltStartModeOffset, startMode);\n            }\n            else {\n                m_procBuilder.command().set(m_voltStartModeOffset, \"\");\n            }\n            m_procBuilder.command().set(m_rejoinOffset, \"\");\n            m_procBuilder.command().set(m_licensePathOffset, ServerThread.getTestLicensePath());\n            m_procBuilder.command().set(m_timestampSaltOffset, String.valueOf(getRandomTimestampSalt()));\n            if (m_debug) {\n                m_procBuilder.command().set(m_debugOffset1, \"-Xdebug\");\n                m_procBuilder.command().set(\n                        m_debugOffset2,\n                        \"-agentlib:jdwp=transport=dt_socket,address=\"\n                        + m_debugPortOffset++ + \",server=y,suspend=n\");\n            }\n            if (m_target.isIPC) {\n                m_procBuilder.command().set(m_ipcPortOffset1, \"ipcports\");\n                String portString = \"\";\n                for (EEProcess proc : m_eeProcs.get(hostId)) {\n                    if (portString.isEmpty()) {\n                        portString += Integer.valueOf(proc.port());\n                    } else {\n                        portString += \",\" + Integer.valueOf(proc.port());\n                    }\n                }\n                m_procBuilder.command().set(m_ipcPortOffset2, portString);\n                m_procBuilder.command().set(m_ipcPortOffset3, \"valgrind\");\n            }\n            m_procBuilder.command().set(m_zkPortOffset, Integer.toString(2181 + hostId));\n\n            //If local directories are being cleared\n            //Generate a new subroot, otherwise reuse the existing directory\n            File subroot = null;\n            if (clearLocalDataDirectories) {\n                subroot = VoltFile.getNewSubroot();\n                m_subRoots.add(subroot);\n            } else {\n                subroot = m_subRoots.get(hostId);\n            }\n            m_procBuilder.command().set(\n                    m_voltFilePrefixOffset,\n                    \"-DVoltFilePrefix=\" + subroot.getPath());\n\n            StringBuilder sb = new StringBuilder();\n            for (String arg : m_procBuilder.command()) {\n                sb.append(arg);\n                sb.append(' ');\n            }\n\n            Process proc = m_procBuilder.start();\n            m_cluster.add(proc);\n            // write output to obj/release/testoutput/<test name>-n.txt\n            // this may need to be more unique? Also very useful to just\n            // set this to a hardcoded path and use \"tail -f\" to debug.\n            String testoutputdir = m_buildDir + File.separator + \"testoutput\";\n            // make sure the directory exists\n            File dir = new File(testoutputdir);\n            if (dir.exists()) {\n                assert(dir.isDirectory());\n            }\n            else {\n                boolean status = dir.mkdirs();\n                assert(status);\n            }\n\n            File dirFile = new VoltFile(testoutputdir);\n            if (dirFile.listFiles() != null) {\n                for (File f : dirFile.listFiles()) {\n                    if (f.getName().startsWith(getName() + \"-\" + hostId)) {\n                        f.delete();\n                    }\n                }\n            }\n            PipeToFile ptf = new PipeToFile(testoutputdir + File.separator +\n                    getName() + \"-\" + hostId + \".txt\", proc.getInputStream(),\n                    PipeToFile.m_initToken, false, proc);\n            m_pipes.add(ptf);\n            ptf.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n            ptf.start();\n        }\n        catch (IOException ex) {\n            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n            assert (false);\n        }\n    }","id":20089,"modified_method":"private void startOne(int hostId, boolean clearLocalDataDirectories, ReplicationRole replicaMode)\n    {\n        CommandLine cmdln = (CommandLine)(templateCmdLine.makeCopy());\n        try {\n            // set the dragent port. it uses the start value and\n            // the next two sequential port numbers - so burn those two.\n            cmdln.drAgentStartPort(portGenerator.next());\n            portGenerator.next();\n            portGenerator.next();\n\n            cmdln.port(portGenerator.next());\n            cmdln.adminPort(portGenerator.next());\n            cmdln.startCommand(VoltDB.START_ACTION.CREATE);\n            cmdln.replicaMode(replicaMode);\n            cmdln.rejoinHost(\"\");\n            cmdln.timestampSalt(getRandomTimestampSalt());\n\n            if (m_debug) {\n                cmdln.debugPort(portGenerator.next());\n            }\n\n            if (cmdln.target().isIPC) {\n                for (EEProcess proc : m_eeProcs.get(hostId)) {\n                    assert(proc != null);\n                    cmdln.ipcPort(portGenerator.next());\n                }\n            }\n\n            cmdln.zkport(portGenerator.next());\n\n            // If local directories are being cleared\n            // generate a new subroot, otherwise reuse the existing directory\n            File subroot = null;\n            if (clearLocalDataDirectories) {\n                subroot = VoltFile.getNewSubroot();\n                m_subRoots.add(subroot);\n            } else {\n                subroot = m_subRoots.get(hostId);\n            }\n            cmdln.voltFilePrefix(subroot.getPath());\n\n            m_procBuilder.command().clear();\n            m_procBuilder.command().addAll(cmdln.createCommandLine());\n            Process proc = m_procBuilder.start();\n            m_cluster.add(proc);\n\n            // write output to obj/release/testoutput/<test name>-n.txt\n            // this may need to be more unique? Also very useful to just\n            // set this to a hardcoded path and use \"tail -f\" to debug.\n            String testoutputdir = cmdln.buildDir() + File.separator + \"testoutput\";\n\n            // make sure the directory exists\n            File dir = new File(testoutputdir);\n            if (dir.exists()) {\n                assert(dir.isDirectory());\n            }\n            else {\n                boolean status = dir.mkdirs();\n                assert(status);\n            }\n\n            File dirFile = new VoltFile(testoutputdir);\n            if (dirFile.listFiles() != null) {\n                for (File f : dirFile.listFiles()) {\n                    if (f.getName().startsWith(getName() + \"-\" + hostId)) {\n                        f.delete();\n                    }\n                }\n            }\n\n            PipeToFile ptf = new PipeToFile(testoutputdir + File.separator + getName() +\n                    \"-\" + hostId + \".txt\", proc.getInputStream(),\n                    PipeToFile.m_initToken, false, proc);\n            m_pipes.add(ptf);\n            ptf.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n            ptf.start();\n        }\n        catch (IOException ex) {\n            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n            assert (false);\n        }\n    }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public Configuration(String args[]) {\n            String arg;\n\n            // Arguments are accepted in any order.\n            //\n            // options:\n            // [noloadlib] [hsqldb|jni|ipc] [catalog path_to_catalog] [deployment path_to_deployment]\n\n            for (int i=0; i < args.length; ++i) {\n                arg = args[i];\n                // Some LocalCluster ProcessBuilder instances can result in an empty string\n                // in the array args.  Ignore them.\n                if (arg.equals(\"\"))\n                {\n                    continue;\n                }\n                if (arg.equals(\"noloadlib\")) {\n                    m_noLoadLibVOLTDB = true;\n                }\n                else if (arg.equals(\"ipc\")) {\n                    m_backend = BackendTarget.NATIVE_EE_IPC;\n                }\n                else if (arg.equals(\"jni\")) {\n                    m_backend = BackendTarget.NATIVE_EE_JNI;\n                }\n                else if (arg.equals(\"hsqldb\")) {\n                    m_backend = BackendTarget.HSQLDB_BACKEND;\n                }\n                else if (arg.equals(\"valgrind\")) {\n                    m_backend = BackendTarget.NATIVE_EE_VALGRIND_IPC;\n                }\n                else if (arg.equals(\"quietadhoc\"))\n                {\n                    m_quietAdhoc = true;\n                }\n                // handle from the command line as two strings <catalog> <filename>\n                else if (arg.equals(\"port\")) {\n                    m_port = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"port \")) {\n                    m_port = Integer.parseInt(arg.substring(\"port \".length()));\n                }\n                else if (arg.equals(\"adminport\")) {\n                    m_adminPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"adminport \")) {\n                    m_adminPort = Integer.parseInt(arg.substring(\"adminport \".length()));\n                }\n                else if (arg.equals(\"internalport\")) {\n                    m_internalPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"internalport \")) {\n                    m_internalPort = Integer.parseInt(arg.substring(\"internalport \".length()));\n                }\n                else if (arg.equals(\"replicationport\")) {\n                    m_drAgentPortStart = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"replicationport \")) {\n                    m_drAgentPortStart = Integer.parseInt(arg.substring(\"replicationport \".length()));\n                }\n                else if (arg.startsWith(\"zkport\")) {\n                    m_zkInterface = \"127.0.0.1:\" + args[++i];\n                }\n                else if (arg.equals(\"externalinterface\")) {\n                    m_externalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"externalinterface \")) {\n                    m_externalInterface = arg.substring(\"externalinterface \".length()).trim();\n                }\n                else if (arg.equals(\"internalinterface\")) {\n                    m_internalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"internalinterface \")) {\n                    m_internalInterface = arg.substring(\"internalinterface \".length()).trim();\n                }\n\n                else if (arg.equals(\"leader\")) {\n                    m_leader = args[++i].trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                } else if (arg.startsWith(\"leader\")) {\n                    m_leader = arg.substring(\"leader \".length()).trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                }\n\n                else if (arg.equals(\"rejoinhost\")) {\n                    m_rejoinToHostAndPort = args[++i].trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n                else if (arg.startsWith(\"rejoinhost \")) {\n                    m_rejoinToHostAndPort = arg.substring(\"rejoinhost \".length()).trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n\n                else if (arg.equals(\"create\")) {\n                    m_startAction = START_ACTION.CREATE;\n                } else if (arg.equals(\"recover\")) {\n                    m_startAction = START_ACTION.RECOVER;\n                } else if (arg.equals(\"start\")) {\n                    m_startAction = START_ACTION.START;\n                }\n\n                else if (arg.equals(\"replica\")) {\n                    m_replicationRole = ReplicationRole.REPLICA;\n                }\n\n                // handle timestampsalt\n                else if (arg.equals(\"timestampsalt\")) {\n                    m_timestampTestingSalt = Long.parseLong(args[++i]);\n                }\n                else if (arg.startsWith(\"timestampsalt \")) {\n                    m_timestampTestingSalt = Long.parseLong(arg.substring(\"timestampsalt \".length()));\n                }\n\n                else if (arg.equals(\"catalog\")) {\n                    m_pathToCatalog = args[++i];\n                }\n                // and from ant as a single string \"m_catalog filename\"\n                else if (arg.startsWith(\"catalog \")) {\n                    m_pathToCatalog = arg.substring(\"catalog \".length());\n                }\n                else if (arg.equals(\"deployment\")) {\n                    m_pathToDeployment = args[++i];\n                } else if (arg.equals(\"license\")) {\n                    m_pathToLicense = args[++i];\n                } else if (arg.equalsIgnoreCase(\"useWatchdogs\")) {\n                    m_useWatchdogs = true;\n                } else if (arg.equalsIgnoreCase(\"ipcports\")) {\n                    String portList = args[++i];\n                    String ports[] = portList.split(\",\");\n                    for (String port : ports) {\n                        m_ipcPorts.add(Integer.valueOf(port));\n                    }\n                } else {\n                    hostLog.fatal(\"Unrecognized option to VoltDB: \" + arg);\n                    usage();\n                    System.exit(-1);\n                }\n            }\n\n            // set the dr agent's port config from properties\n            if (System.getenv().containsKey(\"dragentportoffset\")) {\n                m_drAgentPortStart = Integer.parseInt(System.getenv(\"dragentportoffset\"));\n            }\n        }","id":20090,"modified_method":"public Configuration(String args[]) {\n            String arg;\n\n            // Arguments are accepted in any order.\n            //\n            // options:\n            // [noloadlib] [hsqldb|jni|ipc] [catalog path_to_catalog] [deployment path_to_deployment]\n\n            for (int i=0; i < args.length; ++i) {\n                arg = args[i];\n                // Some LocalCluster ProcessBuilder instances can result in an empty string\n                // in the array args.  Ignore them.\n                if (arg.equals(\"\"))\n                {\n                    continue;\n                }\n                if (arg.equals(\"noloadlib\")) {\n                    m_noLoadLibVOLTDB = true;\n                }\n                else if (arg.equals(\"ipc\")) {\n                    m_backend = BackendTarget.NATIVE_EE_IPC;\n                }\n                else if (arg.equals(\"jni\")) {\n                    m_backend = BackendTarget.NATIVE_EE_JNI;\n                }\n                else if (arg.equals(\"hsqldb\")) {\n                    m_backend = BackendTarget.HSQLDB_BACKEND;\n                }\n                else if (arg.equals(\"valgrind\")) {\n                    m_backend = BackendTarget.NATIVE_EE_VALGRIND_IPC;\n                }\n                else if (arg.equals(\"quietadhoc\"))\n                {\n                    m_quietAdhoc = true;\n                }\n                // handle from the command line as two strings <catalog> <filename>\n                else if (arg.equals(\"port\")) {\n                    m_port = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"port \")) {\n                    m_port = Integer.parseInt(arg.substring(\"port \".length()));\n                }\n                else if (arg.equals(\"adminport\")) {\n                    m_adminPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"adminport \")) {\n                    m_adminPort = Integer.parseInt(arg.substring(\"adminport \".length()));\n                }\n                else if (arg.equals(\"internalport\")) {\n                    m_internalPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"internalport \")) {\n                    m_internalPort = Integer.parseInt(arg.substring(\"internalport \".length()));\n                }\n                else if (arg.equals(\"replicationport\")) {\n                    m_drAgentPortStart = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"replicationport \")) {\n                    m_drAgentPortStart = Integer.parseInt(arg.substring(\"replicationport \".length()));\n                }\n                else if (arg.startsWith(\"zkport\")) {\n                    m_zkInterface = \"127.0.0.1:\" + args[++i];\n                }\n                else if (arg.equals(\"externalinterface\")) {\n                    m_externalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"externalinterface \")) {\n                    m_externalInterface = arg.substring(\"externalinterface \".length()).trim();\n                }\n                else if (arg.equals(\"internalinterface\")) {\n                    m_internalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"internalinterface \")) {\n                    m_internalInterface = arg.substring(\"internalinterface \".length()).trim();\n                }\n\n                else if (arg.equals(\"leader\")) {\n                    m_leader = args[++i].trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                } else if (arg.startsWith(\"leader\")) {\n                    m_leader = arg.substring(\"leader \".length()).trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                }\n\n                else if (arg.equals(\"rejoinhost\")) {\n                    m_rejoinToHostAndPort = args[++i].trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n                else if (arg.startsWith(\"rejoinhost \")) {\n                    m_rejoinToHostAndPort = arg.substring(\"rejoinhost \".length()).trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n\n                else if (arg.equals(\"create\")) {\n                    m_startAction = START_ACTION.CREATE;\n                } else if (arg.equals(\"recover\")) {\n                    m_startAction = START_ACTION.RECOVER;\n                } else if (arg.equals(\"start\")) {\n                    m_startAction = START_ACTION.START;\n                }\n\n                else if (arg.equals(\"replica\")) {\n                    m_replicationRole = ReplicationRole.REPLICA;\n                }\n                else if (arg.equals(\"dragentportstart\")) {\n                    m_drAgentPortStart = Integer.parseInt(args[++i]);\n                }\n\n                // handle timestampsalt\n                else if (arg.equals(\"timestampsalt\")) {\n                    m_timestampTestingSalt = Long.parseLong(args[++i]);\n                }\n                else if (arg.startsWith(\"timestampsalt \")) {\n                    m_timestampTestingSalt = Long.parseLong(arg.substring(\"timestampsalt \".length()));\n                }\n\n                else if (arg.equals(\"catalog\")) {\n                    m_pathToCatalog = args[++i];\n                }\n                // and from ant as a single string \"m_catalog filename\"\n                else if (arg.startsWith(\"catalog \")) {\n                    m_pathToCatalog = arg.substring(\"catalog \".length());\n                }\n                else if (arg.equals(\"deployment\")) {\n                    m_pathToDeployment = args[++i];\n                } else if (arg.equals(\"license\")) {\n                    m_pathToLicense = args[++i];\n                } else if (arg.equalsIgnoreCase(\"useWatchdogs\")) {\n                    m_useWatchdogs = true;\n                } else if (arg.equalsIgnoreCase(\"ipcports\")) {\n                    String portList = args[++i];\n                    String ports[] = portList.split(\",\");\n                    for (String port : ports) {\n                        m_ipcPorts.add(Integer.valueOf(port));\n                    }\n                } else {\n                    hostLog.fatal(\"Unrecognized option to VoltDB: \" + arg);\n                    usage();\n                    System.exit(-1);\n                }\n\n            }\n        }","commit_id":"e61c6c222085707e4e56a519151935d9ec53fe59","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public boolean recoverOne(int hostId, Integer portOffset, String rejoinHost) {\n        return recoverOne(false, 0, hostId, portOffset, rejoinHost);\n    }","id":20091,"modified_method":"public boolean recoverOne(int hostId, Integer portOffset, String rejoinHost) {\n        return false;\n        // return recoverOne(false, 0, hostId, portOffset, rejoinHost);\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId, Integer portOffset, String rejoinHost) {\n        // port for the new node\n        int portNo = VoltDB.DEFAULT_PORT + hostId;\n        int adminPortNo = m_baseAdminPort - hostId;\n\n        // port to connect to (not too simple, eh?)\n        int portNoToRejoin = VoltDB.DEFAULT_PORT + ((hostId + 1) % getNodeCount());\n        if (m_hasLocalServer) portNoToRejoin = VoltDB.DEFAULT_PORT;\n\n        if (portOffset != null) {\n            portNoToRejoin = VoltDB.DEFAULT_PORT + portOffset;\n            // adminPortNo = m_baseAdminPort - portOffset;\n        }\n        System.out.println(\"Rejoining \" + hostId + \" to hostID: \" + portOffset);\n\n\n        ArrayList<EEProcess> eeProcs = m_eeProcs.get(hostId);\n        for (EEProcess proc : eeProcs) {\n            try {\n                proc.waitForShutdown();\n            } catch (InterruptedException e) {\n                throw new RuntimeException(e);\n            }\n        }\n        eeProcs.clear();\n\n        for (int ii = 0; ii < m_siteCount; ii++) {\n            String logfile = \"LocalCluster_host_\" + hostId + \"_site\" + ii + \".log\";\n            eeProcs.add(new EEProcess(m_target, logfile));\n        }\n\n        if (m_target.isIPC) {\n            m_procBuilder.command().set(m_ipcPortOffset1, \"ipcports\");\n            String portString = \"\";\n            for (EEProcess proc : m_eeProcs.get(hostId)) {\n                if (portString.isEmpty()) {\n                    portString += Integer.valueOf(proc.port());\n                } else {\n                    portString += \",\" + Integer.valueOf(proc.port());\n                }\n            }\n            m_procBuilder.command().set(m_ipcPortOffset2, portString);\n            m_procBuilder.command().set(m_ipcPortOffset3, \"valgrind\");\n        }\n\n        //When recovering reuse the root from the original\n        m_procBuilder.command().set(\n                m_voltFilePrefixOffset,\n                \"-DVoltFilePrefix=\" + m_subRoots.get(hostId).getPath());\n\n        PipeToFile ptf = null;\n        long start = 0;\n        try {\n            m_procBuilder.command().set(m_portOffset, String.valueOf(portNo));\n            m_procBuilder.command().set(m_adminPortOffset, String.valueOf(adminPortNo));\n            m_procBuilder.command().set(m_pathToDeploymentOffset, m_pathToDeployment);\n            m_procBuilder.command().set(m_voltStartCmdOffset, \"rejoinhost\");\n            m_procBuilder.command().set(m_rejoinOffset, rejoinHost + \":\" + String.valueOf(portNoToRejoin));\n            m_procBuilder.command().set(m_licensePathOffset, \"\");\n            m_procBuilder.command().set(m_timestampSaltOffset, String.valueOf(getRandomTimestampSalt()));\n            if (m_debug) {\n                System.out.println(\"Debug port is \" + m_debugPortOffset);\n                m_procBuilder.command().set(m_debugOffset1, \"-Xdebug\");\n                m_procBuilder.command().set(\n                        m_debugOffset2,\n                        \"-agentlib:jdwp=transport=dt_socket,address=\"\n                        + m_debugPortOffset++ + \",server=y,suspend=n\");\n            }\n            m_procBuilder.command().set(m_zkPortOffset, Integer.toString(2181 + hostId));\n            // Rejoin should never need to be told the operating mode\n            m_procBuilder.command().set(m_voltStartModeOffset, \"\");\n            Process proc = m_procBuilder.start();\n            start = System.currentTimeMillis();\n\n            // write output to obj/release/testoutput/<test name>-n.txt\n            // this may need to be more unique? Also very useful to just\n            // set this to a hardcoded path and use \"tail -f\" to debug.\n            String testoutputdir = m_buildDir + File.separator + \"testoutput\";\n            // make sure the directory exists\n            File dir = new File(testoutputdir);\n            if (dir.exists()) {\n                assert(dir.isDirectory());\n            }\n            else {\n                boolean status = dir.mkdirs();\n                assert(status);\n            }\n\n            ptf = new PipeToFile(testoutputdir + File.separator +\n                    getName() + \"-\" + hostId + \".txt\", proc.getInputStream(),\n                    PipeToFile.m_rejoinToken, true, proc);\n            synchronized (this) {\n                m_pipes.set(hostId, ptf);\n                // replace the existing dead proc\n                m_cluster.set(hostId, proc);\n            }\n            Thread t = new Thread(ptf);\n            t.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n            t.start();\n        }\n        catch (IOException ex) {\n            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n            assert (false);\n        }\n\n        // wait for the joining site to be ready\n        synchronized (ptf) {\n            if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n            while (ptf.m_witnessedReady.get() != true) {\n                // if eof, then no point in waiting around\n                if (ptf.m_eof.get())\n                    break;\n\n                // if process is dead, no point in waiting around\n                if (isProcessDead(ptf.getProcess()))\n                    break;\n\n                try {\n                    // wait for explicit notification\n                    ptf.wait();\n                }\n                catch (InterruptedException ex) {\n                    Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n                }\n            }\n        }\n        if (ptf.m_witnessedReady.get()) {\n            long finish = System.currentTimeMillis();\n            System.out.println(\n                    \"Took \" + (finish - start) +\n                    \" milliseconds, time from init was \" + (finish - ptf.m_initTime));\n            return true;\n        } else {\n            System.out.println(\"Recovering process exited before recovery completed\");\n            try {\n                silentShutdownSingleHost(hostId, true);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            return false;\n        }\n    }","id":20092,"modified_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId, Integer portOffset, String rejoinHost) {\n        return false;\n\n//        // port for the new node\n//        int portNo = VoltDB.DEFAULT_PORT + hostId;\n//        int adminPortNo = m_baseAdminPort - hostId;\n//\n//        // port to connect to (not too simple, eh?)\n//        int portNoToRejoin = VoltDB.DEFAULT_PORT + ((hostId + 1) % getNodeCount());\n//        if (m_hasLocalServer) portNoToRejoin = VoltDB.DEFAULT_PORT;\n//\n//        if (portOffset != null) {\n//            portNoToRejoin = VoltDB.DEFAULT_PORT + portOffset;\n//            // adminPortNo = m_baseAdminPort - portOffset;\n//        }\n//        System.out.println(\"Rejoining \" + hostId + \" to hostID: \" + portOffset);\n//\n//\n//        ArrayList<EEProcess> eeProcs = m_eeProcs.get(hostId);\n//        for (EEProcess proc : eeProcs) {\n//            try {\n//                proc.waitForShutdown();\n//            } catch (InterruptedException e) {\n//                throw new RuntimeException(e);\n//            }\n//        }\n//        eeProcs.clear();\n//\n//        for (int ii = 0; ii < m_siteCount; ii++) {\n//            String logfile = \"LocalCluster_host_\" + hostId + \"_site\" + ii + \".log\";\n//            eeProcs.add(new EEProcess(m_target, logfile));\n//        }\n//\n//        if (m_target.isIPC) {\n//            m_procBuilder.command().set(m_ipcPortOffset1, \"ipcports\");\n//            String portString = \"\";\n//            for (EEProcess proc : m_eeProcs.get(hostId)) {\n//                if (portString.isEmpty()) {\n//                    portString += Integer.valueOf(proc.port());\n//                } else {\n//                    portString += \",\" + Integer.valueOf(proc.port());\n//                }\n//            }\n//            m_procBuilder.command().set(m_ipcPortOffset2, portString);\n//            m_procBuilder.command().set(m_ipcPortOffset3, \"valgrind\");\n//        }\n//\n//        //When recovering reuse the root from the original\n//        m_procBuilder.command().set(\n//                m_voltFilePrefixOffset,\n//                \"-DVoltFilePrefix=\" + m_subRoots.get(hostId).getPath());\n//\n//        PipeToFile ptf = null;\n//        long start = 0;\n//        try {\n//            m_procBuilder.command().set(m_portOffset, String.valueOf(portNo));\n//            m_procBuilder.command().set(m_adminPortOffset, String.valueOf(adminPortNo));\n//            m_procBuilder.command().set(m_pathToDeploymentOffset, m_pathToDeployment);\n//            m_procBuilder.command().set(m_voltStartCmdOffset, \"rejoinhost\");\n//            m_procBuilder.command().set(m_rejoinOffset, rejoinHost + \":\" + String.valueOf(portNoToRejoin));\n//            m_procBuilder.command().set(m_licensePathOffset, \"\");\n//            m_procBuilder.command().set(m_timestampSaltOffset, String.valueOf(getRandomTimestampSalt()));\n//            if (m_debug) {\n//                System.out.println(\"Debug port is \" + m_debugPortOffset);\n//                m_procBuilder.command().set(m_debugOffset1, \"-Xdebug\");\n//                m_procBuilder.command().set(\n//                        m_debugOffset2,\n//                        \"-agentlib:jdwp=transport=dt_socket,address=\"\n//                        + m_debugPortOffset++ + \",server=y,suspend=n\");\n//            }\n//            m_procBuilder.command().set(m_zkPortOffset, Integer.toString(2181 + hostId));\n//            // Rejoin should never need to be told the operating mode\n//            m_procBuilder.command().set(m_voltStartModeOffset, \"\");\n//            Process proc = m_procBuilder.start();\n//            start = System.currentTimeMillis();\n//\n//            // write output to obj/release/testoutput/<test name>-n.txt\n//            // this may need to be more unique? Also very useful to just\n//            // set this to a hardcoded path and use \"tail -f\" to debug.\n//            String testoutputdir = m_buildDir + File.separator + \"testoutput\";\n//            // make sure the directory exists\n//            File dir = new File(testoutputdir);\n//            if (dir.exists()) {\n//                assert(dir.isDirectory());\n//            }\n//            else {\n//                boolean status = dir.mkdirs();\n//                assert(status);\n//            }\n//\n//            ptf = new PipeToFile(testoutputdir + File.separator +\n//                    getName() + \"-\" + hostId + \".txt\", proc.getInputStream(),\n//                    PipeToFile.m_rejoinToken, true, proc);\n//            synchronized (this) {\n//                m_pipes.set(hostId, ptf);\n//                // replace the existing dead proc\n//                m_cluster.set(hostId, proc);\n//            }\n//            Thread t = new Thread(ptf);\n//            t.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n//            t.start();\n//        }\n//        catch (IOException ex) {\n//            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n//            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n//            assert (false);\n//        }\n//\n//        // wait for the joining site to be ready\n//        synchronized (ptf) {\n//            if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n//            while (ptf.m_witnessedReady.get() != true) {\n//                // if eof, then no point in waiting around\n//                if (ptf.m_eof.get())\n//                    break;\n//\n//                // if process is dead, no point in waiting around\n//                if (isProcessDead(ptf.getProcess()))\n//                    break;\n//\n//                try {\n//                    // wait for explicit notification\n//                    ptf.wait();\n//                }\n//                catch (InterruptedException ex) {\n//                    Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n//                }\n//            }\n//        }\n//        if (ptf.m_witnessedReady.get()) {\n//            long finish = System.currentTimeMillis();\n//            System.out.println(\n//                    \"Took \" + (finish - start) +\n//                    \" milliseconds, time from init was \" + (finish - ptf.m_initTime));\n//            return true;\n//        } else {\n//            System.out.println(\"Recovering process exited before recovery completed\");\n//            try {\n//                silentShutdownSingleHost(hostId, true);\n//            } catch (InterruptedException e) {\n//                e.printStackTrace();\n//            }\n//            return false;\n//        }\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public String getName() {\n        String prefix = \"localCluster\";\n        if (m_failureState == FailureState.ONE_FAILURE)\n            prefix += \"OneFail\";\n        if (m_failureState == FailureState.ONE_RECOVERING)\n            prefix += \"OneRecov\";\n\n        return prefix + \"-\" + String.valueOf(m_siteCount) + \"-\" +\n            String.valueOf(m_hostCount) + \"-\" + m_target.display.toUpperCase();\n    }","id":20093,"modified_method":"@Override\n    public String getName() {\n        String prefix = \"localCluster\";\n        if (m_failureState == FailureState.ONE_FAILURE)\n            prefix += \"OneFail\";\n        if (m_failureState == FailureState.ONE_RECOVERING)\n            prefix += \"OneRecov\";\n\n        return prefix +\n            \"-\" + String.valueOf(m_siteCount) +\n            \"-\" + String.valueOf(m_hostCount) +\n            \"-\" + templateCmdLine.target().display.toUpperCase();\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId) {\n        return recoverOne( logtime, startTime, hostId, null, \"localhost\");\n    }","id":20094,"modified_method":"private boolean recoverOne(boolean logtime, long startTime, int hostId) {\n        return false;\n        // return recoverOne( logtime, startTime, hostId, null, \"localhost\");\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int replication, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug) {\n        this(jarFileName, siteCount, hostCount, replication, target,\n             failureState, debug, false);\n    }","id":20095,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int kfactor, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug) {\n        this(jarFileName, siteCount, hostCount, kfactor, target,\n             failureState, debug, false);\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int replication, BackendTarget target,\n                        boolean isRejoinTest) {\n                    this(jarFileName, siteCount,\n                        hostCount, replication, target,\n                        FailureState.ALL_RUNNING, false, isRejoinTest);\n    }","id":20096,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int kfactor, BackendTarget target,\n                        boolean isRejoinTest) {\n                    this(jarFileName, siteCount,\n                        hostCount, kfactor, target,\n                        FailureState.ALL_RUNNING, false, isRejoinTest);\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean compileWithAdminMode(VoltProjectBuilder builder, int adminPort, boolean adminOnStartup)\n    {\n        if (m_compiled) {\n            return true;\n        }\n        m_baseAdminPort = adminPort;\n        m_compiled = builder.compile(m_jarFileName, m_siteCount, m_hostCount, m_replication,\n                                     m_baseAdminPort, adminOnStartup);\n        m_pathToDeployment = builder.getPathToDeployment();\n        m_pathToVoltRoot = builder.getPathToVoltRoot();\n\n        return m_compiled;\n    }","id":20097,"modified_method":"@Override\n    public boolean compileWithAdminMode(VoltProjectBuilder builder, int adminPort, boolean adminOnStartup)\n    {\n        if (!m_compiled) {\n            m_compiled = builder.compile(templateCmdLine.jarFileName(), m_siteCount, m_hostCount, m_kfactor,\n                    adminPort, adminOnStartup);\n            templateCmdLine.pathToDeployment(builder.getPathToDeployment());\n        }\n        return m_compiled;\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int replication, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug, boolean isRejoinTest)\n    {\n        System.out.println(\"Instantiating LocalCluster for \" + jarFileName);\n        System.out.println(\"Sites: \" + siteCount + \" hosts: \" + hostCount\n                           + \" replication factor: \" + replication);\n\n        assert (jarFileName != null);\n        assert (siteCount > 0);\n        assert (hostCount > 0);\n        assert (replication >= 0);\n\n//      final String buildType = System.getenv().get(\"BUILD\");\n//      if (buildType == null) {\n        /*\n         * Disable memcheck with localcluster for now since it doesn't pass.\n         */\n            m_target = target;\n//        } else {\n//            if (buildType.startsWith(\"memcheck\")) {\n//                if (target.equals(BackendTarget.NATIVE_EE_JNI)) {\n//                    m_target = BackendTarget.NATIVE_EE_VALGRIND_IPC;\n//                } else {\n//                    m_target = target;//For memcheck\n//                }\n//            } else {\n//                m_target = target;\n//            }\n//        }\n\n        m_jarFileName = VoltDB.Configuration.getPathToCatalogForTest(jarFileName);\n        m_siteCount = siteCount;\n        m_hostCount = hostCount;\n        m_replication = replication;\n        m_cluster.ensureCapacity(m_hostCount);\n        m_debug = debug;\n        m_isRejoinTest = isRejoinTest;\n        String buildDir = System.getenv(\"VOLTDB_BUILD_DIR\");  // via build.xml\n        if (buildDir == null)\n            m_buildDir = System.getProperty(\"user.dir\") + \"/obj/release\";\n        else\n            m_buildDir = buildDir;\n\n        String jzmq_dir = System.getenv(\"VOLTDB_JZMQ_DIR\"); // via build.xml\n        if (jzmq_dir == null)\n            jzmq_dir = System.getProperty(\"user.dir\") + \"/third_party/cpp/jnilib\";\n        System.out.println(\"Looking for jzmq native lib in: \" + jzmq_dir);\n\n        m_failureState = failureState;\n        //m_failureState = FailureState.ALL_RUNNING;\n\n        m_failureState = failureState;\n        // don't fail nodes without k-safety\n        if (m_replication < 1)\n            m_failureState = FailureState.ALL_RUNNING;\n\n        String classPath = System.getProperty(\"java.class.path\") + \":\" + m_buildDir + File.separator + m_jarFileName;\n        classPath += \":\" + m_buildDir + File.separator + \"prod\";\n\n        // for ant\n        String log4j = System.getProperty(\"log4j.configuration\");\n        // for eclipse\n        if (log4j == null) log4j = \"file://\" + System.getProperty(\"user.dir\") + \"/src/frontend/junit_log4j.properties\";\n\n        // processes of VoltDBs using the compiled jar file.\n        m_pipes = new ArrayList<PipeToFile>();\n        m_procBuilder = new ProcessBuilder(\"java\",\n                                           \"-Djava.library.path=\" + m_buildDir + \"/nativelibs\" + \":\" + jzmq_dir,\n                                           \"-Dlog4j.configuration=\" + log4j,\n                                           \"-DLOG_SEGMENT_SIZE=8\",\n                                           \"-ea\",\n                                           \"-XX:-ReduceInitialCardMarks\",\n                                           \"-XX:MaxDirectMemorySize=2g\",\n                                           \"-Xmx2g\",\n                                           \"-XX:+HeapDumpOnOutOfMemoryError\",\n                                           \"-classpath\",\n                                           classPath,\n                                           \"org.voltdb.VoltDB\",\n                                           \"license\",\n                                           ServerThread.getTestLicensePath(),\n                                           \"zkport\",\n                                           \"-1\",\n                                           \"timestampsalt\",\n                                           \"0\",\n                                           \"catalog\",\n                                           m_jarFileName,\n                                           \"deployment\",\n                                           \"\",\n                                           \"port\",\n                                           \"-1\",\n                                           \"adminport\",\n                                           \"-1\",\n                                           \"rejoinhost\",\n                                           \"-1\",\n                                           \"leader\",\n                                           \"localhost\",\n                                           \"\");\n\n        List<String> command = m_procBuilder.command();\n        // when we actually append a port value and deployment file, these will be correct\n        m_debugOffset1 = command.size() - 22;\n        m_debugOffset2 = command.size() - 21;\n        if (m_debug) {\n            command.add(m_debugOffset1, \"\");\n            command.add(m_debugOffset1, \"\");\n        }\n\n        m_voltFilePrefixOffset = command.size() - 22;\n        command.add(m_voltFilePrefixOffset, \"\");\n\n        m_licensePathOffset = command.size() - 18;\n        m_zkPortOffset = command.size() - 16;\n        m_timestampSaltOffset = command.size() - 14;\n        m_pathToDeploymentOffset = command.size() - 10;\n        m_portOffset = command.size() - 8;\n        m_adminPortOffset = command.size() - 6;\n        m_voltStartCmdOffset = command.size() - 5;\n        m_rejoinOffset = command.size() - 4;\n        m_voltStartModeOffset = command.size() - 1;\n\n        if (m_target.isIPC) {\n            command.add(\"\");\n            m_ipcPortOffset1 = command.size() - 1;\n            command.add(\"\");\n            m_ipcPortOffset2 = command.size() - 1;\n            command.add(\"\");\n            m_ipcPortOffset3 = command.size() - 1;\n        }\n\n        // set the working directory to obj/release/prod\n        //m_procBuilder.directory(new File(m_buildDir + File.separator + \"prod\"));\n        m_procBuilder.redirectErrorStream(true);\n\n        Thread shutdownThread = new Thread(new ShutDownHookThread());\n        java.lang.Runtime.getRuntime().addShutdownHook(shutdownThread);\n    }","id":20098,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n                        int hostCount, int kfactor, BackendTarget target,\n                        FailureState failureState,\n                        boolean debug, boolean isRejoinTest)\n    {\n        System.out.println(\"Instantiating LocalCluster for \" + jarFileName);\n        System.out.println(\"Sites: \" + siteCount + \" hosts: \" + hostCount + \" replication factor: \" + kfactor);\n\n        assert (jarFileName != null);\n        assert (siteCount > 0);\n        assert (hostCount > 0);\n\n        m_cluster.ensureCapacity(hostCount);\n\n        m_siteCount = siteCount;\n        m_hostCount = hostCount;\n        m_kfactor = kfactor;\n        m_debug = debug;\n        m_failureState = kfactor < 1 ? FailureState.ALL_RUNNING : failureState;\n        m_pipes = new ArrayList<PipeToFile>();\n\n        String buildDir = System.getenv(\"VOLTDB_BUILD_DIR\");  // via build.xml\n        if (buildDir == null) {\n            buildDir = System.getProperty(\"user.dir\") + \"/obj/release\";\n        }\n\n        String jzmq_dir = System.getenv(\"VOLTDB_JZMQ_DIR\"); // via build.xml\n        if (jzmq_dir == null) {\n            jzmq_dir = System.getProperty(\"user.dir\") + \"/third_party/cpp/jnilib\";\n        }\n\n        String classPath = System.getProperty(\"java.class.path\") + \":\" + buildDir\n            + File.separator + jarFileName + \":\" + buildDir + File.separator + \"prod\";\n\n        // First try 'ant' syntax and then 'eclipse' syntax...\n        String log4j = System.getProperty(\"log4j.configuration\");\n        if (log4j == null) {\n            log4j = \"file://\" + System.getProperty(\"user.dir\") + \"/src/frontend/junit_log4j.properties\";\n        }\n\n        m_procBuilder = new ProcessBuilder();\n\n        // set the working directory to obj/release/prod\n        //m_procBuilder.directory(new File(m_buildDir + File.separator + \"prod\"));\n        m_procBuilder.redirectErrorStream(true);\n\n        Thread shutdownThread = new Thread(new ShutDownHookThread());\n        java.lang.Runtime.getRuntime().addShutdownHook(shutdownThread);\n\n        // Create the base command line that each process can makeCopy and modify\n        this.templateCmdLine.\n            target(target).\n            jarFileName(VoltDB.Configuration.getPathToCatalogForTest(jarFileName)).\n            buildDir(buildDir).\n            jzmqDir(jzmq_dir).\n            classPath(classPath).\n            log4j(log4j);\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean compile(VoltProjectBuilder builder) {\n        if (m_compiled) {\n            return true;\n        }\n\n        m_compiled = builder.compile(m_jarFileName, m_siteCount, m_hostCount, m_replication);\n        m_pathToDeployment = builder.getPathToDeployment();\n        m_pathToVoltRoot = builder.getPathToVoltRoot();\n\n        return m_compiled;\n    }","id":20099,"modified_method":"@Override\n    public boolean compile(VoltProjectBuilder builder) {\n        if (!m_compiled) {\n            m_compiled = builder.compile(templateCmdLine.jarFileName(), m_siteCount, m_hostCount, m_kfactor);\n            templateCmdLine.pathToDeployment(builder.getPathToDeployment());\n        }\n        return m_compiled;\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public LocalCluster(String jarFileName, int siteCount,\n            int hostCount, int replication, BackendTarget target) {\n        this(jarFileName, siteCount,\n            hostCount, replication, target,\n            FailureState.ALL_RUNNING, false, false);\n    }","id":20100,"modified_method":"public LocalCluster(String jarFileName, int siteCount,\n            int hostCount, int kfactor, BackendTarget target) {\n        this(jarFileName, siteCount,\n            hostCount, kfactor, target,\n            FailureState.ALL_RUNNING, false, false);\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void startUp(boolean clearLocalDataDirectories, ReplicationRole role) {\n        assert (!m_running);\n        if (m_running) {\n            return;\n        }\n\n        // clear any logs, export or snapshot data for this run\n        if (clearLocalDataDirectories) {\n            try {\n                m_subRoots.clear();\n                VoltFile.deleteAllSubRoots();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        // set to true to spew startup timing data\n        boolean logtime = false;\n        long startTime = 0;\n        if (logtime) {\n            startTime = System.currentTimeMillis();\n            System.out.println(\"********** Starting cluster at: \" + startTime);\n        }\n\n        int oopStartIndex = 0;\n\n        for (int ii = 0; ii < m_hostCount; ii++) {\n            ArrayList<EEProcess> procs = new ArrayList<EEProcess>();\n            m_eeProcs.add(procs);\n            for (int zz = 0; zz < m_siteCount; zz++) {\n                String logfile = \"LocalCluster_host_\" + ii + \"_site\" + zz + \".log\";\n                procs.add(new EEProcess(m_target, logfile));\n            }\n        }\n\n        m_pipes.clear();\n        m_cluster.clear();\n\n        // create the in-process server\n        if (m_hasLocalServer) {\n            //If the local directories are being cleared, generate a new root for the\n            //in process server\n            if (clearLocalDataDirectories) {\n                try {\n                    m_subRoots.add(VoltFile.initNewSubrootForThisProcess());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            m_cluster.add(null);\n            m_pipes.add(null);\n            Configuration config = new Configuration();\n            config.m_backend = m_target;\n            config.m_noLoadLibVOLTDB = (m_target == BackendTarget.HSQLDB_BACKEND);\n            config.m_pathToCatalog = m_jarFileName;\n            config.m_pathToDeployment = m_pathToDeployment;\n            config.m_port = VoltDB.DEFAULT_PORT;\n            config.m_adminPort = m_baseAdminPort;\n            config.m_startAction = START_ACTION.CREATE;\n            config.m_replicationRole = role;\n            ArrayList<Integer> ports = new ArrayList<Integer>();\n            for (EEProcess proc : m_eeProcs.get(0)) {\n                ports.add(proc.port());\n            }\n            config.m_ipcPorts = java.util.Collections.synchronizedList(ports);\n            config.m_isRejoinTest = m_isRejoinTest;\n\n            m_localServer = new ServerThread(config);\n            m_localServer.start();\n            oopStartIndex++;\n        }\n\n        // create all the out-of-process servers\n        for (int i = oopStartIndex; i < m_hostCount; i++) {\n            startOne(i, clearLocalDataDirectories, role.toString().toLowerCase());\n        }\n\n        // spin until all the pipes see the magic \"Server completed..\" string.\n        long startOfPipeWait = System.currentTimeMillis();\n        boolean allReady = false;\n        if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        do {\n            if ((System.currentTimeMillis() - startOfPipeWait) > PIPE_WAIT_MAX_TIMEOUT) {\n                break;\n            }\n\n            allReady = true;\n            for (PipeToFile pipeToFile : m_pipes) {\n                if (pipeToFile == null) {\n                    continue;\n                }\n                synchronized(pipeToFile) {\n                    // if eof, then no point in waiting around\n                    if (pipeToFile.m_eof.get())\n                        continue;\n\n                    // if process is dead, no point in waiting around\n                    if (isProcessDead(pipeToFile.getProcess()))\n                        continue;\n\n                    // if not eof, then wait for statement of readiness\n                    if (pipeToFile.m_witnessedReady.get() != true) {\n                        try {\n                            // use a timeout to prevent a forever hang\n                            pipeToFile.wait(1000);\n                        }\n                        catch (InterruptedException ex) {\n                            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                        allReady = false;\n                        break;\n                    }\n                }\n            }\n        } while (allReady == false);\n\n        if (logtime) System.out.println(\"********** post witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n\n        // verify all processes started up and count failures\n        int expectedProcesses = m_hostCount - (m_hasLocalServer ? 1 : 0);\n        int downProcesses = 0;\n        for (Process proc : m_cluster) {\n            if ((proc != null) && (isProcessDead(proc))) {\n                downProcesses++;\n            }\n        }\n\n        // throw an exception if there were failures starting up\n        if ((downProcesses > 0) || (allReady == false)) {\n            // poke all the external processes to die (no guarantees)\n            for (Process proc : m_cluster) {\n                if (proc != null) {\n                    try { proc.destroy(); } catch (Exception e) {}\n                }\n            }\n\n            if (downProcesses > 0) {\n                throw new RuntimeException(\n                        String.format(\"%d/%d external processes failed to start\",\n                                downProcesses, expectedProcesses));\n            }\n            // this error case should only be from a timeout\n            if (!allReady) {\n                throw new RuntimeException(\n                        \"One or more external processes failed to complete initialization.\");\n            }\n        }\n\n        // Finally, make sure the local server thread is running and wait if it is not.\n        if (m_hasLocalServer)\n            m_localServer.waitForInitialization();\n        if (logtime) System.out.println(\"********** DONE: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        m_running = true;\n\n        // if supposed to kill a server, it's go time\n        if (m_failureState != FailureState.ALL_RUNNING) {\n            System.out.println(\"Killing one cluster member.\");\n            int procIndex = 0;\n            if (m_hasLocalServer) {\n                procIndex = 1;\n            }\n\n            Process proc = m_cluster.get(procIndex);\n            proc.destroy();\n            int retval = 0;\n            try {\n                retval = proc.waitFor();\n                for (EEProcess eeproc : m_eeProcs.get(procIndex)) {\n                    eeproc.waitForShutdown();\n                }\n            } catch (InterruptedException e) {\n                System.out.println(\"External VoltDB process is acting crazy.\");\n            } finally {\n                m_cluster.set(procIndex, null);\n            }\n            // exit code 143 is the forcible shutdown code from .destroy()\n            if (retval != 0 && retval != 143) {\n                System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n            }\n        }\n\n        // after killing a server, bring it back in recovery mode\n        if (m_failureState == FailureState.ONE_RECOVERING) {\n            int hostId = m_hasLocalServer ? 1 : 0;\n            recoverOne(logtime, startTime, hostId);\n        }\n    }","id":20101,"modified_method":"public void startUp(boolean clearLocalDataDirectories, ReplicationRole role) {\n        assert (!m_running);\n        if (m_running) {\n            return;\n        }\n\n        // clear any logs, export or snapshot data for this run\n        if (clearLocalDataDirectories) {\n            try {\n                m_subRoots.clear();\n                VoltFile.deleteAllSubRoots();\n            } catch (IOException e) {\n                throw new RuntimeException(e);\n            }\n        }\n\n        // set to true to spew startup timing data\n        boolean logtime = false;\n        long startTime = 0;\n        if (logtime) {\n            startTime = System.currentTimeMillis();\n            System.out.println(\"********** Starting cluster at: \" + startTime);\n        }\n\n        for (int ii = 0; ii < m_hostCount; ii++) {\n            ArrayList<EEProcess> procs = new ArrayList<EEProcess>();\n            m_eeProcs.add(procs);\n            for (int zz = 0; zz < m_siteCount; zz++) {\n                String logfile = \"LocalCluster_host_\" + ii + \"_site\" + zz + \".log\";\n                procs.add(new EEProcess(templateCmdLine.target(), logfile));\n            }\n        }\n\n        m_pipes.clear();\n        m_cluster.clear();\n        int oopStartIndex = 0;\n\n        if (m_hasLocalServer) {\n            // Generate a new root for the in-process server if clearing directories.\n            if (clearLocalDataDirectories) {\n                try {\n                    m_subRoots.add(VoltFile.initNewSubrootForThisProcess());\n                } catch (IOException e) {\n                    throw new RuntimeException(e);\n                }\n            }\n            m_cluster.add(null);\n            m_pipes.add(null);\n\n            // Make the local Configuration object...\n            CommandLine cmdln = (CommandLine)(templateCmdLine.makeCopy());\n            cmdln.port(portGenerator.next());\n            cmdln.adminPort(portGenerator.next());\n            for (EEProcess proc : m_eeProcs.get(0)) {\n                cmdln.port(proc.port());\n            }\n\n            cmdln.rejoinTest(true);\n            m_localServer = new ServerThread(cmdln);\n            m_localServer.start();\n            oopStartIndex++;\n        }\n\n        // create all the out-of-process servers\n        for (int i = oopStartIndex; i < m_hostCount; i++) {\n            startOne(i, clearLocalDataDirectories, role);\n        }\n\n        // spin until all the pipes see the magic \"Server completed..\" string.\n        long startOfPipeWait = System.currentTimeMillis();\n        boolean allReady = false;\n        if (logtime) System.out.println(\"********** pre witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        do {\n            if ((System.currentTimeMillis() - startOfPipeWait) > PIPE_WAIT_MAX_TIMEOUT) {\n                break;\n            }\n\n            allReady = true;\n            for (PipeToFile pipeToFile : m_pipes) {\n                if (pipeToFile == null) {\n                    continue;\n                }\n                synchronized(pipeToFile) {\n                    // if eof, then no point in waiting around\n                    if (pipeToFile.m_eof.get())\n                        continue;\n\n                    // if process is dead, no point in waiting around\n                    if (isProcessDead(pipeToFile.getProcess()))\n                        continue;\n\n                    // if not eof, then wait for statement of readiness\n                    if (pipeToFile.m_witnessedReady.get() != true) {\n                        try {\n                            // use a timeout to prevent a forever hang\n                            pipeToFile.wait(1000);\n                        }\n                        catch (InterruptedException ex) {\n                            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n                        }\n                        allReady = false;\n                        break;\n                    }\n                }\n            }\n        } while (allReady == false);\n\n        if (logtime) System.out.println(\"********** post witness: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n\n        // verify all processes started up and count failures\n        int expectedProcesses = m_hostCount - (m_hasLocalServer ? 1 : 0);\n        int downProcesses = 0;\n        for (Process proc : m_cluster) {\n            if ((proc != null) && (isProcessDead(proc))) {\n                downProcesses++;\n            }\n        }\n\n        // throw an exception if there were failures starting up\n        if ((downProcesses > 0) || (allReady == false)) {\n            // poke all the external processes to die (no guarantees)\n            for (Process proc : m_cluster) {\n                if (proc != null) {\n                    try { proc.destroy(); } catch (Exception e) {}\n                }\n            }\n\n            if (downProcesses > 0) {\n                throw new RuntimeException(\n                        String.format(\"%d/%d external processes failed to start\",\n                                downProcesses, expectedProcesses));\n            }\n            // this error case should only be from a timeout\n            if (!allReady) {\n                throw new RuntimeException(\n                        \"One or more external processes failed to complete initialization.\");\n            }\n        }\n\n        // Finally, make sure the local server thread is running and wait if it is not.\n        if (m_hasLocalServer)\n            m_localServer.waitForInitialization();\n        if (logtime) System.out.println(\"********** DONE: \" + (System.currentTimeMillis() - startTime) + \" ms\");\n        m_running = true;\n\n        // if supposed to kill a server, it's go time\n        if (m_failureState != FailureState.ALL_RUNNING) {\n            System.out.println(\"Killing one cluster member.\");\n            int procIndex = 0;\n            if (m_hasLocalServer) {\n                procIndex = 1;\n            }\n\n            Process proc = m_cluster.get(procIndex);\n            proc.destroy();\n            int retval = 0;\n            try {\n                retval = proc.waitFor();\n                for (EEProcess eeproc : m_eeProcs.get(procIndex)) {\n                    eeproc.waitForShutdown();\n                }\n            } catch (InterruptedException e) {\n                System.out.println(\"External VoltDB process is acting crazy.\");\n            } finally {\n                m_cluster.set(procIndex, null);\n            }\n            // exit code 143 is the forcible shutdown code from .destroy()\n            if (retval != 0 && retval != 143) {\n                System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n            }\n        }\n\n        // after killing a server, bring it back in recovery mode\n        if (m_failureState == FailureState.ONE_RECOVERING) {\n            int hostId = m_hasLocalServer ? 1 : 0;\n            recoverOne(logtime, startTime, hostId);\n        }\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public void setMaxHeap(int megabytes) {\n        m_procBuilder.command().set(7, \"-Xmx\" + megabytes + \"m\");\n    }","id":20102,"modified_method":"public void setMaxHeap(int heap) {\n        templateCmdLine.setMaxHeap(heap);\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean isHSQL() {\n        return m_target == BackendTarget.HSQLDB_BACKEND;\n    }","id":20103,"modified_method":"@Override\n    public boolean isHSQL() {\n        return templateCmdLine.target() == BackendTarget.HSQLDB_BACKEND;\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"@Override\n    public boolean compileWithPartitionDetection(VoltProjectBuilder builder, String snapshotPath, String ppdPrefix) {\n        if (m_compiled) {\n            return true;\n        }\n        m_compiled = builder.compile(m_jarFileName, m_siteCount, m_hostCount, m_replication,\n                                     null, true, snapshotPath, ppdPrefix);\n        m_pathToDeployment = builder.getPathToDeployment();\n        m_pathToVoltRoot = builder.getPathToVoltRoot();\n\n        return m_compiled;\n    }","id":20104,"modified_method":"@Override\n    public boolean compileWithPartitionDetection(VoltProjectBuilder builder, String snapshotPath, String ppdPrefix) {\n        if (!m_compiled) {\n            m_compiled = builder.compile(templateCmdLine.jarFileName(), m_siteCount, m_hostCount, m_kfactor,\n                    null, true, snapshotPath, ppdPrefix);\n            templateCmdLine.pathToDeployment(builder.getPathToDeployment());\n        }\n        return m_compiled;\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"private void startOne(int hostId, boolean clearLocalDataDirectories, String startMode) {\n        try {\n            // set the dragent's port offset (dragent uses three ports per agent...)\n            m_procBuilder.environment().put(\"dragentportoffset\",\n                    String.valueOf(VoltDB.DEFAULT_DR_PORT + hostId * 3));\n\n            // voltdb client/native ports move forward from 21212\n            m_procBuilder.command().set(m_portOffset, String.valueOf(VoltDB.DEFAULT_PORT + hostId));\n            // voltdb admin-mode ports move backwards from 21211\n            m_procBuilder.command().set(m_adminPortOffset, String.valueOf(m_baseAdminPort - hostId));\n            m_procBuilder.command().set(m_pathToDeploymentOffset, m_pathToDeployment);\n            m_procBuilder.command().set(m_voltStartCmdOffset, \"create\");\n            // set 'replica' on the command line, or nothing.\n            if (startMode.equals(ReplicationRole.REPLICA)) {\n                m_procBuilder.command().set(m_voltStartModeOffset, startMode);\n            }\n            else {\n                m_procBuilder.command().set(m_voltStartModeOffset, \"\");\n            }\n            m_procBuilder.command().set(m_rejoinOffset, \"\");\n            m_procBuilder.command().set(m_licensePathOffset, ServerThread.getTestLicensePath());\n            m_procBuilder.command().set(m_timestampSaltOffset, String.valueOf(getRandomTimestampSalt()));\n            if (m_debug) {\n                m_procBuilder.command().set(m_debugOffset1, \"-Xdebug\");\n                m_procBuilder.command().set(\n                        m_debugOffset2,\n                        \"-agentlib:jdwp=transport=dt_socket,address=\"\n                        + m_debugPortOffset++ + \",server=y,suspend=n\");\n            }\n            if (m_target.isIPC) {\n                m_procBuilder.command().set(m_ipcPortOffset1, \"ipcports\");\n                String portString = \"\";\n                for (EEProcess proc : m_eeProcs.get(hostId)) {\n                    if (portString.isEmpty()) {\n                        portString += Integer.valueOf(proc.port());\n                    } else {\n                        portString += \",\" + Integer.valueOf(proc.port());\n                    }\n                }\n                m_procBuilder.command().set(m_ipcPortOffset2, portString);\n                m_procBuilder.command().set(m_ipcPortOffset3, \"valgrind\");\n            }\n            m_procBuilder.command().set(m_zkPortOffset, Integer.toString(2181 + hostId));\n\n            //If local directories are being cleared\n            //Generate a new subroot, otherwise reuse the existing directory\n            File subroot = null;\n            if (clearLocalDataDirectories) {\n                subroot = VoltFile.getNewSubroot();\n                m_subRoots.add(subroot);\n            } else {\n                subroot = m_subRoots.get(hostId);\n            }\n            m_procBuilder.command().set(\n                    m_voltFilePrefixOffset,\n                    \"-DVoltFilePrefix=\" + subroot.getPath());\n\n            StringBuilder sb = new StringBuilder();\n            for (String arg : m_procBuilder.command()) {\n                sb.append(arg);\n                sb.append(' ');\n            }\n\n            Process proc = m_procBuilder.start();\n            m_cluster.add(proc);\n            // write output to obj/release/testoutput/<test name>-n.txt\n            // this may need to be more unique? Also very useful to just\n            // set this to a hardcoded path and use \"tail -f\" to debug.\n            String testoutputdir = m_buildDir + File.separator + \"testoutput\";\n            // make sure the directory exists\n            File dir = new File(testoutputdir);\n            if (dir.exists()) {\n                assert(dir.isDirectory());\n            }\n            else {\n                boolean status = dir.mkdirs();\n                assert(status);\n            }\n\n            File dirFile = new VoltFile(testoutputdir);\n            if (dirFile.listFiles() != null) {\n                for (File f : dirFile.listFiles()) {\n                    if (f.getName().startsWith(getName() + \"-\" + hostId)) {\n                        f.delete();\n                    }\n                }\n            }\n            PipeToFile ptf = new PipeToFile(testoutputdir + File.separator +\n                    getName() + \"-\" + hostId + \".txt\", proc.getInputStream(),\n                    PipeToFile.m_initToken, false, proc);\n            m_pipes.add(ptf);\n            ptf.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n            ptf.start();\n        }\n        catch (IOException ex) {\n            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n            assert (false);\n        }\n    }","id":20105,"modified_method":"private void startOne(int hostId, boolean clearLocalDataDirectories, ReplicationRole replicaMode)\n    {\n        CommandLine cmdln = (CommandLine)(templateCmdLine.makeCopy());\n        try {\n            // set the dragent port. it uses the start value and\n            // the next two sequential port numbers - so burn those two.\n            cmdln.drAgentStartPort(portGenerator.next());\n            portGenerator.next();\n            portGenerator.next();\n\n            cmdln.port(portGenerator.next());\n            cmdln.adminPort(portGenerator.next());\n            cmdln.startCommand(VoltDB.START_ACTION.CREATE);\n            cmdln.replicaMode(replicaMode);\n            cmdln.rejoinHost(\"\");\n            cmdln.timestampSalt(getRandomTimestampSalt());\n\n            if (m_debug) {\n                cmdln.debugPort(portGenerator.next());\n            }\n\n            if (cmdln.target().isIPC) {\n                for (EEProcess proc : m_eeProcs.get(hostId)) {\n                    assert(proc != null);\n                    cmdln.ipcPort(portGenerator.next());\n                }\n            }\n\n            cmdln.zkport(portGenerator.next());\n\n            // If local directories are being cleared\n            // generate a new subroot, otherwise reuse the existing directory\n            File subroot = null;\n            if (clearLocalDataDirectories) {\n                subroot = VoltFile.getNewSubroot();\n                m_subRoots.add(subroot);\n            } else {\n                subroot = m_subRoots.get(hostId);\n            }\n            cmdln.voltFilePrefix(subroot.getPath());\n\n            m_procBuilder.command().clear();\n            m_procBuilder.command().addAll(cmdln.createCommandLine());\n            Process proc = m_procBuilder.start();\n            m_cluster.add(proc);\n\n            // write output to obj/release/testoutput/<test name>-n.txt\n            // this may need to be more unique? Also very useful to just\n            // set this to a hardcoded path and use \"tail -f\" to debug.\n            String testoutputdir = cmdln.buildDir() + File.separator + \"testoutput\";\n\n            // make sure the directory exists\n            File dir = new File(testoutputdir);\n            if (dir.exists()) {\n                assert(dir.isDirectory());\n            }\n            else {\n                boolean status = dir.mkdirs();\n                assert(status);\n            }\n\n            File dirFile = new VoltFile(testoutputdir);\n            if (dirFile.listFiles() != null) {\n                for (File f : dirFile.listFiles()) {\n                    if (f.getName().startsWith(getName() + \"-\" + hostId)) {\n                        f.delete();\n                    }\n                }\n            }\n\n            PipeToFile ptf = new PipeToFile(testoutputdir + File.separator + getName() +\n                    \"-\" + hostId + \".txt\", proc.getInputStream(),\n                    PipeToFile.m_initToken, false, proc);\n            m_pipes.add(ptf);\n            ptf.setName(\"ClusterPipe:\" + String.valueOf(hostId));\n            ptf.start();\n        }\n        catch (IOException ex) {\n            System.out.println(\"Failed to start cluster process:\" + ex.getMessage());\n            Logger.getLogger(LocalCluster.class.getName()).log(Level.SEVERE, null, ex);\n            assert (false);\n        }\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public synchronized void shutDownExternal(boolean forceKillEEProcs) throws InterruptedException\n    {\n        if (m_cluster != null) {\n            for (Process proc : m_cluster) {\n                if (proc == null)\n                    continue;\n                proc.destroy();\n                int retval = proc.waitFor();\n                // exit code 143 is the forcible shutdown code from .destroy()\n                if (retval != 0 && retval != 143)\n                {\n                    System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n                }\n            }\n        }\n\n        if (m_cluster != null) m_cluster.clear();\n\n        for (ArrayList<EEProcess> procs : m_eeProcs) {\n            for (EEProcess proc : procs) {\n                proc.waitForShutdown();\n            }\n        }\n\n        if (m_target == BackendTarget.NATIVE_EE_VALGRIND_IPC) {\n            if (!EEProcess.m_valgrindErrors.isEmpty()) {\n                String failString = \"\";\n                for (final String error : EEProcess.m_valgrindErrors) {\n                    failString = failString + \"\\n\" + error;\n                }\n                org.junit.Assert.fail(failString);\n            }\n        }\n    }","id":20106,"modified_method":"public synchronized void shutDownExternal(boolean forceKillEEProcs) throws InterruptedException\n    {\n        if (m_cluster != null) {\n            for (Process proc : m_cluster) {\n                if (proc == null)\n                    continue;\n                proc.destroy();\n                int retval = proc.waitFor();\n                // exit code 143 is the forcible shutdown code from .destroy()\n                if (retval != 0 && retval != 143)\n                {\n                    System.out.println(\"External VoltDB process terminated abnormally with return: \" + retval);\n                }\n            }\n        }\n\n        if (m_cluster != null) m_cluster.clear();\n\n        for (ArrayList<EEProcess> procs : m_eeProcs) {\n            for (EEProcess proc : procs) {\n                proc.waitForShutdown();\n            }\n        }\n\n        if (templateCmdLine.target() == BackendTarget.NATIVE_EE_VALGRIND_IPC) {\n            if (!EEProcess.m_valgrindErrors.isEmpty()) {\n                String failString = \"\";\n                for (final String error : EEProcess.m_valgrindErrors) {\n                    failString = failString + \"\\n\" + error;\n                }\n                org.junit.Assert.fail(failString);\n            }\n        }\n    }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"public Configuration(String args[]) {\n            String arg;\n\n            // Arguments are accepted in any order.\n            //\n            // options:\n            // [noloadlib] [hsqldb|jni|ipc] [catalog path_to_catalog] [deployment path_to_deployment]\n\n            for (int i=0; i < args.length; ++i) {\n                arg = args[i];\n                // Some LocalCluster ProcessBuilder instances can result in an empty string\n                // in the array args.  Ignore them.\n                if (arg.equals(\"\"))\n                {\n                    continue;\n                }\n                if (arg.equals(\"noloadlib\")) {\n                    m_noLoadLibVOLTDB = true;\n                }\n                else if (arg.equals(\"ipc\")) {\n                    m_backend = BackendTarget.NATIVE_EE_IPC;\n                }\n                else if (arg.equals(\"jni\")) {\n                    m_backend = BackendTarget.NATIVE_EE_JNI;\n                }\n                else if (arg.equals(\"hsqldb\")) {\n                    m_backend = BackendTarget.HSQLDB_BACKEND;\n                }\n                else if (arg.equals(\"valgrind\")) {\n                    m_backend = BackendTarget.NATIVE_EE_VALGRIND_IPC;\n                }\n                else if (arg.equals(\"quietadhoc\"))\n                {\n                    m_quietAdhoc = true;\n                }\n                // handle from the command line as two strings <catalog> <filename>\n                else if (arg.equals(\"port\")) {\n                    m_port = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"port \")) {\n                    m_port = Integer.parseInt(arg.substring(\"port \".length()));\n                }\n                else if (arg.equals(\"adminport\")) {\n                    m_adminPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"adminport \")) {\n                    m_adminPort = Integer.parseInt(arg.substring(\"adminport \".length()));\n                }\n                else if (arg.equals(\"internalport\")) {\n                    m_internalPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"internalport \")) {\n                    m_internalPort = Integer.parseInt(arg.substring(\"internalport \".length()));\n                }\n                else if (arg.equals(\"replicationport\")) {\n                    m_drAgentPortStart = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"replicationport \")) {\n                    m_drAgentPortStart = Integer.parseInt(arg.substring(\"replicationport \".length()));\n                }\n                else if (arg.startsWith(\"zkport\")) {\n                    m_zkInterface = \"127.0.0.1:\" + args[++i];\n                }\n                else if (arg.equals(\"externalinterface\")) {\n                    m_externalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"externalinterface \")) {\n                    m_externalInterface = arg.substring(\"externalinterface \".length()).trim();\n                }\n                else if (arg.equals(\"internalinterface\")) {\n                    m_internalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"internalinterface \")) {\n                    m_internalInterface = arg.substring(\"internalinterface \".length()).trim();\n                }\n\n                else if (arg.equals(\"leader\")) {\n                    m_leader = args[++i].trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                } else if (arg.startsWith(\"leader\")) {\n                    m_leader = arg.substring(\"leader \".length()).trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                }\n\n                else if (arg.equals(\"rejoinhost\")) {\n                    m_rejoinToHostAndPort = args[++i].trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n                else if (arg.startsWith(\"rejoinhost \")) {\n                    m_rejoinToHostAndPort = arg.substring(\"rejoinhost \".length()).trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n\n                else if (arg.equals(\"create\")) {\n                    m_startAction = START_ACTION.CREATE;\n                } else if (arg.equals(\"recover\")) {\n                    m_startAction = START_ACTION.RECOVER;\n                } else if (arg.equals(\"start\")) {\n                    m_startAction = START_ACTION.START;\n                }\n\n                else if (arg.equals(\"replica\")) {\n                    m_replicationRole = ReplicationRole.REPLICA;\n                }\n\n                // handle timestampsalt\n                else if (arg.equals(\"timestampsalt\")) {\n                    m_timestampTestingSalt = Long.parseLong(args[++i]);\n                }\n                else if (arg.startsWith(\"timestampsalt \")) {\n                    m_timestampTestingSalt = Long.parseLong(arg.substring(\"timestampsalt \".length()));\n                }\n\n                else if (arg.equals(\"catalog\")) {\n                    m_pathToCatalog = args[++i];\n                }\n                // and from ant as a single string \"m_catalog filename\"\n                else if (arg.startsWith(\"catalog \")) {\n                    m_pathToCatalog = arg.substring(\"catalog \".length());\n                }\n                else if (arg.equals(\"deployment\")) {\n                    m_pathToDeployment = args[++i];\n                } else if (arg.equals(\"license\")) {\n                    m_pathToLicense = args[++i];\n                } else if (arg.equalsIgnoreCase(\"useWatchdogs\")) {\n                    m_useWatchdogs = true;\n                } else if (arg.equalsIgnoreCase(\"ipcports\")) {\n                    String portList = args[++i];\n                    String ports[] = portList.split(\",\");\n                    for (String port : ports) {\n                        m_ipcPorts.add(Integer.valueOf(port));\n                    }\n                } else {\n                    hostLog.fatal(\"Unrecognized option to VoltDB: \" + arg);\n                    usage();\n                    System.exit(-1);\n                }\n            }\n\n            // set the dr agent's port config from properties\n            if (System.getenv().containsKey(\"dragentportoffset\")) {\n                m_drAgentPortStart = Integer.parseInt(System.getenv(\"dragentportoffset\"));\n            }\n        }","id":20107,"modified_method":"public Configuration(String args[]) {\n            String arg;\n\n            // Arguments are accepted in any order.\n            //\n            // options:\n            // [noloadlib] [hsqldb|jni|ipc] [catalog path_to_catalog] [deployment path_to_deployment]\n\n            for (int i=0; i < args.length; ++i) {\n                arg = args[i];\n                // Some LocalCluster ProcessBuilder instances can result in an empty string\n                // in the array args.  Ignore them.\n                if (arg.equals(\"\"))\n                {\n                    continue;\n                }\n                if (arg.equals(\"noloadlib\")) {\n                    m_noLoadLibVOLTDB = true;\n                }\n                else if (arg.equals(\"ipc\")) {\n                    m_backend = BackendTarget.NATIVE_EE_IPC;\n                }\n                else if (arg.equals(\"jni\")) {\n                    m_backend = BackendTarget.NATIVE_EE_JNI;\n                }\n                else if (arg.equals(\"hsqldb\")) {\n                    m_backend = BackendTarget.HSQLDB_BACKEND;\n                }\n                else if (arg.equals(\"valgrind\")) {\n                    m_backend = BackendTarget.NATIVE_EE_VALGRIND_IPC;\n                }\n                else if (arg.equals(\"quietadhoc\"))\n                {\n                    m_quietAdhoc = true;\n                }\n                // handle from the command line as two strings <catalog> <filename>\n                else if (arg.equals(\"port\")) {\n                    m_port = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"port \")) {\n                    m_port = Integer.parseInt(arg.substring(\"port \".length()));\n                }\n                else if (arg.equals(\"adminport\")) {\n                    m_adminPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"adminport \")) {\n                    m_adminPort = Integer.parseInt(arg.substring(\"adminport \".length()));\n                }\n                else if (arg.equals(\"internalport\")) {\n                    m_internalPort = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"internalport \")) {\n                    m_internalPort = Integer.parseInt(arg.substring(\"internalport \".length()));\n                }\n                else if (arg.equals(\"replicationport\")) {\n                    m_drAgentPortStart = Integer.parseInt(args[++i]);\n                }\n                else if (arg.startsWith(\"replicationport \")) {\n                    m_drAgentPortStart = Integer.parseInt(arg.substring(\"replicationport \".length()));\n                }\n                else if (arg.startsWith(\"zkport\")) {\n                    m_zkInterface = \"127.0.0.1:\" + args[++i];\n                }\n                else if (arg.equals(\"externalinterface\")) {\n                    m_externalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"externalinterface \")) {\n                    m_externalInterface = arg.substring(\"externalinterface \".length()).trim();\n                }\n                else if (arg.equals(\"internalinterface\")) {\n                    m_internalInterface = args[++i].trim();\n                }\n                else if (arg.startsWith(\"internalinterface \")) {\n                    m_internalInterface = arg.substring(\"internalinterface \".length()).trim();\n                }\n\n                else if (arg.equals(\"leader\")) {\n                    m_leader = args[++i].trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                } else if (arg.startsWith(\"leader\")) {\n                    m_leader = arg.substring(\"leader \".length()).trim();\n                    if (m_leader.compareTo(\"\") == 0) {\n                        m_leader = null;\n                    }\n                }\n\n                else if (arg.equals(\"rejoinhost\")) {\n                    m_rejoinToHostAndPort = args[++i].trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n                else if (arg.startsWith(\"rejoinhost \")) {\n                    m_rejoinToHostAndPort = arg.substring(\"rejoinhost \".length()).trim();\n                    if (m_rejoinToHostAndPort.compareTo(\"\") == 0)\n                        m_rejoinToHostAndPort = null;\n                }\n\n                else if (arg.equals(\"create\")) {\n                    m_startAction = START_ACTION.CREATE;\n                } else if (arg.equals(\"recover\")) {\n                    m_startAction = START_ACTION.RECOVER;\n                } else if (arg.equals(\"start\")) {\n                    m_startAction = START_ACTION.START;\n                }\n\n                else if (arg.equals(\"replica\")) {\n                    m_replicationRole = ReplicationRole.REPLICA;\n                }\n                else if (arg.equals(\"dragentportstart\")) {\n                    m_drAgentPortStart = Integer.parseInt(args[++i]);\n                }\n\n                // handle timestampsalt\n                else if (arg.equals(\"timestampsalt\")) {\n                    m_timestampTestingSalt = Long.parseLong(args[++i]);\n                }\n                else if (arg.startsWith(\"timestampsalt \")) {\n                    m_timestampTestingSalt = Long.parseLong(arg.substring(\"timestampsalt \".length()));\n                }\n\n                else if (arg.equals(\"catalog\")) {\n                    m_pathToCatalog = args[++i];\n                }\n                // and from ant as a single string \"m_catalog filename\"\n                else if (arg.startsWith(\"catalog \")) {\n                    m_pathToCatalog = arg.substring(\"catalog \".length());\n                }\n                else if (arg.equals(\"deployment\")) {\n                    m_pathToDeployment = args[++i];\n                } else if (arg.equals(\"license\")) {\n                    m_pathToLicense = args[++i];\n                } else if (arg.equalsIgnoreCase(\"useWatchdogs\")) {\n                    m_useWatchdogs = true;\n                } else if (arg.equalsIgnoreCase(\"ipcports\")) {\n                    String portList = args[++i];\n                    String ports[] = portList.split(\",\");\n                    for (String port : ports) {\n                        m_ipcPorts.add(Integer.valueOf(port));\n                    }\n                } else {\n                    hostLog.fatal(\"Unrecognized option to VoltDB: \" + arg);\n                    usage();\n                    System.exit(-1);\n                }\n\n            }\n        }","commit_id":"f15b8ed7ded2c5020a19a6da57fc9106feae06ab","url":"https://github.com/VoltDB/voltdb"},{"original_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number(billion-5, 3.2-4)\\n\" + \"num($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","id":20108,"modified_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number($-3, 3.2-4)\\n\" + \"number($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","commit_id":"4f42323b6556350df801bdefb2d8db7c13f17cb6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean isFlat = isFlat(children);\n        if (isFlat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              children = t.getChildrenAsList();\n              isFlat = false;\n              break;\n            }\n          }\n        }\n\n        if (isFlat) {\n          boolean isMoney = children.get(0).value().startsWith(\"$\");\n          if (isMoney) {\n            for (int i = 1; i < children.size(); ++i) {\n              if (!children.get(i).value().startsWith(\"CD\")) {\n                isMoney = false;\n                break;\n              }\n            }\n          }\n          if (isMoney) {\n            transformMoney(t, children);\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","id":20109,"modified_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean flat = true;\n        for (int i = 0; i < children.size(); ++i) {\n          if (!children.get(i).isPreTerminal()) {\n            flat = false;\n            break;\n          }\n        }\n        if (flat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              break;\n            }\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","commit_id":"4f42323b6556350df801bdefb2d8db7c13f17cb6","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Command line arguments for this program:\n   * <br>\n   * -output: the model file to output\n   * -input: a list of model files to input\n   */\n  public static void main(String[] args) {\n    String outputModelFilename = null;\n    List<String> inputModelFilenames = Generics.newArrayList();\n    \n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-output\")) {\n        outputModelFilename = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-input\")) {\n        for (++argIndex; argIndex < args.length && !args[argIndex].startsWith(\"-\"); ++argIndex) {\n          inputModelFilenames.add(args[argIndex]);\n        }\n      }\n    }\n\n    System.err.println(outputModelFilename);\n    System.err.println(inputModelFilenames);\n\n    LexicalizedParser lexparser = null;\n    List<DVModel> models = Generics.newArrayList();\n    for (String filename : inputModelFilenames) {\n      LexicalizedParser parser = LexicalizedParser.loadModel(filename);\n      if (lexparser == null) {\n        parser = lexparser;\n      }\n      models.add(DVParser.getModelFromLexicalizedParser(parser));\n    }\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryTransform;\n          }\n        });\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryTransform;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> wordMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.wordVectors;\n          }\n        });\n\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTransformAverages = averageBinaryMatrices(binaryTransformMaps);\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryScoreAverages = averageBinaryMatrices(binaryScoreMaps);\n    Map<String, SimpleMatrix> unaryTransformAverages = averageUnaryMatrices(unaryTransformMaps);\n    Map<String, SimpleMatrix> unaryScoreAverages = averageUnaryMatrices(unaryScoreMaps);\n    Map<String, SimpleMatrix> wordAverages = averageUnaryMatrices(wordMaps);\n\n    DVModel newModel = new DVModel(binaryTransformAverages, unaryTransformAverages,\n                                   binaryScoreAverages, unaryScoreAverages,\n                                   wordAverages, lexparser.getOp());\n    DVParser newParser = new DVParser(newModel, lexparser);\n    newParser.saveModel(outputModelFilename);\n  }","id":20110,"modified_method":"public static void main(String[] args) {\n    String outputModelFilename = null;\n    List<String> inputModelFilenames = Generics.newArrayList();\n    \n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-output\")) {\n        outputModelFilename = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-input\")) {\n        for (++argIndex; argIndex < args.length && !args[argIndex].startsWith(\"-\"); ++argIndex) {\n          inputModelFilenames.add(args[argIndex]);\n        }\n      }\n    }\n\n    System.err.println(outputModelFilename);\n    System.err.println(inputModelFilenames);\n\n    LexicalizedParser lexparser = null;\n    List<DVModel> models = Generics.newArrayList();\n    for (String filename : inputModelFilenames) {\n      LexicalizedParser parser = LexicalizedParser.loadModel(filename);\n      if (lexparser == null) {\n        parser = lexparser;\n      }\n      models.add(DVParser.getModelFromLexicalizedParser(parser));\n    }\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryTransform;\n          }\n        });\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryTransform;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> wordMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.wordVectors;\n          }\n        });\n\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTransformAverages = averageBinaryMatrices(binaryTransformMaps);\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryScoreAverages = averageBinaryMatrices(binaryScoreMaps);\n    Map<String, SimpleMatrix> unaryTransformAverages = averageUnaryMatrices(unaryTransformMaps);\n    Map<String, SimpleMatrix> unaryScoreAverages = averageUnaryMatrices(unaryScoreMaps);\n    Map<String, SimpleMatrix> wordAverages = averageUnaryMatrices(wordMaps);\n\n    DVModel newModel = new DVModel(binaryTransformAverages, unaryTransformAverages,\n                                   binaryScoreAverages, unaryScoreAverages,\n                                   wordAverages, lexparser.getOp());\n    DVParser newParser = new DVParser(newModel, lexparser);\n    newParser.saveModel(outputModelFilename);\n  }","commit_id":"29e13b03dfc79bc1600d2db78b91c526c6cb4524","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number(billion-5, 3.2-4)\\n\" + \"num($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","id":20111,"modified_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number($-3, 3.2-4)\\n\" + \"number($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","commit_id":"29e13b03dfc79bc1600d2db78b91c526c6cb4524","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean isFlat = isFlat(children);\n        if (isFlat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              children = t.getChildrenAsList();\n              isFlat = false;\n              break;\n            }\n          }\n        }\n\n        if (isFlat) {\n          boolean isMoney = children.get(0).value().startsWith(\"$\");\n          if (isMoney) {\n            for (int i = 1; i < children.size(); ++i) {\n              if (!children.get(i).value().startsWith(\"CD\")) {\n                isMoney = false;\n                break;\n              }\n            }\n          }\n          if (isMoney) {\n            transformMoney(t, children);\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","id":20112,"modified_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean flat = true;\n        for (int i = 0; i < children.size(); ++i) {\n          if (!children.get(i).isPreTerminal()) {\n            flat = false;\n            break;\n          }\n        }\n        if (flat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              break;\n            }\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","commit_id":"29e13b03dfc79bc1600d2db78b91c526c6cb4524","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number(billion-5, 3.2-4)\\n\" + \"num($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","id":20113,"modified_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number($-3, 3.2-4)\\n\" + \"number($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","commit_id":"9bec8a74dc3122199b1973f2989ce8a9d04e0166","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean isFlat = isFlat(children);\n        if (isFlat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              children = t.getChildrenAsList();\n              isFlat = false;\n              break;\n            }\n          }\n        }\n\n        if (isFlat) {\n          boolean isMoney = children.get(0).value().startsWith(\"$\");\n          if (isMoney) {\n            for (int i = 1; i < children.size(); ++i) {\n              if (!children.get(i).value().startsWith(\"CD\")) {\n                isMoney = false;\n                break;\n              }\n            }\n          }\n          if (isMoney) {\n            transformMoney(t, children);\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","id":20114,"modified_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean flat = true;\n        for (int i = 0; i < children.size(); ++i) {\n          if (!children.get(i).isPreTerminal()) {\n            flat = false;\n            break;\n          }\n        }\n        if (flat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              break;\n            }\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","commit_id":"9bec8a74dc3122199b1973f2989ce8a9d04e0166","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number(billion-5, 3.2-4)\\n\" + \"num($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","id":20115,"modified_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number($-3, 3.2-4)\\n\" + \"number($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","commit_id":"59156aede7e1f00af44285cb88b857760ec05032","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean isFlat = isFlat(children);\n        if (isFlat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              children = t.getChildrenAsList();\n              isFlat = false;\n              break;\n            }\n          }\n        }\n\n        if (isFlat) {\n          boolean isMoney = children.get(0).value().startsWith(\"$\");\n          if (isMoney) {\n            for (int i = 1; i < children.size(); ++i) {\n              if (!children.get(i).value().startsWith(\"CD\")) {\n                isMoney = false;\n                break;\n              }\n            }\n          }\n          if (isMoney) {\n            transformMoney(t, children);\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","id":20116,"modified_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean flat = true;\n        for (int i = 0; i < children.size(); ++i) {\n          if (!children.get(i).isPreTerminal()) {\n            flat = false;\n            break;\n          }\n        }\n        if (flat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              break;\n            }\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","commit_id":"59156aede7e1f00af44285cb88b857760ec05032","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Command line arguments for this program:\n   * <br>\n   * -output: the model file to output\n   * -input: a list of model files to input\n   */\n  public static void main(String[] args) {\n    String outputModelFilename = null;\n    List<String> inputModelFilenames = Generics.newArrayList();\n    \n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-output\")) {\n        outputModelFilename = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-input\")) {\n        for (++argIndex; argIndex < args.length && !args[argIndex].startsWith(\"-\"); ++argIndex) {\n          inputModelFilenames.add(args[argIndex]);\n        }\n      }\n    }\n\n    System.err.println(outputModelFilename);\n    System.err.println(inputModelFilenames);\n\n    LexicalizedParser lexparser = null;\n    List<DVModel> models = Generics.newArrayList();\n    for (String filename : inputModelFilenames) {\n      LexicalizedParser parser = LexicalizedParser.loadModel(filename);\n      if (lexparser == null) {\n        parser = lexparser;\n      }\n      models.add(DVParser.getModelFromLexicalizedParser(parser));\n    }\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryTransform;\n          }\n        });\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryTransform;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> wordMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.wordVectors;\n          }\n        });\n\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTransformAverages = averageBinaryMatrices(binaryTransformMaps);\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryScoreAverages = averageBinaryMatrices(binaryScoreMaps);\n    Map<String, SimpleMatrix> unaryTransformAverages = averageUnaryMatrices(unaryTransformMaps);\n    Map<String, SimpleMatrix> unaryScoreAverages = averageUnaryMatrices(unaryScoreMaps);\n    Map<String, SimpleMatrix> wordAverages = averageUnaryMatrices(wordMaps);\n\n    DVModel newModel = new DVModel(binaryTransformAverages, unaryTransformAverages,\n                                   binaryScoreAverages, unaryScoreAverages,\n                                   wordAverages, lexparser.getOp());\n    DVParser newParser = new DVParser(newModel, lexparser);\n    newParser.saveModel(outputModelFilename);\n  }","id":20117,"modified_method":"public static void main(String[] args) {\n    String outputModelFilename = null;\n    List<String> inputModelFilenames = Generics.newArrayList();\n    \n    for (int argIndex = 0; argIndex < args.length; ) {\n      if (args[argIndex].equalsIgnoreCase(\"-output\")) {\n        outputModelFilename = args[argIndex + 1];\n        argIndex += 2;\n      } else if (args[argIndex].equalsIgnoreCase(\"-input\")) {\n        for (++argIndex; argIndex < args.length && !args[argIndex].startsWith(\"-\"); ++argIndex) {\n          inputModelFilenames.add(args[argIndex]);\n        }\n      }\n    }\n\n    System.err.println(outputModelFilename);\n    System.err.println(inputModelFilenames);\n\n    LexicalizedParser lexparser = null;\n    List<DVModel> models = Generics.newArrayList();\n    for (String filename : inputModelFilenames) {\n      LexicalizedParser parser = LexicalizedParser.loadModel(filename);\n      if (lexparser == null) {\n        parser = lexparser;\n      }\n      models.add(DVParser.getModelFromLexicalizedParser(parser));\n    }\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryTransform;\n          }\n        });\n\n    List<TwoDimensionalMap<String, String, SimpleMatrix>> binaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, TwoDimensionalMap<String, String, SimpleMatrix>>() {\n          public TwoDimensionalMap<String, String, SimpleMatrix> apply(DVModel model) {\n            return model.binaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryTransformMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryTransform;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> unaryScoreMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.unaryScore;\n          }\n        });\n\n    List<Map<String, SimpleMatrix>> wordMaps =\n      CollectionUtils.transformAsList(models, new Function<DVModel, Map<String, SimpleMatrix>>() {\n          public Map<String, SimpleMatrix> apply(DVModel model) {\n            return model.wordVectors;\n          }\n        });\n\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryTransformAverages = averageBinaryMatrices(binaryTransformMaps);\n    TwoDimensionalMap<String, String, SimpleMatrix> binaryScoreAverages = averageBinaryMatrices(binaryScoreMaps);\n    Map<String, SimpleMatrix> unaryTransformAverages = averageUnaryMatrices(unaryTransformMaps);\n    Map<String, SimpleMatrix> unaryScoreAverages = averageUnaryMatrices(unaryScoreMaps);\n    Map<String, SimpleMatrix> wordAverages = averageUnaryMatrices(wordMaps);\n\n    DVModel newModel = new DVModel(binaryTransformAverages, unaryTransformAverages,\n                                   binaryScoreAverages, unaryScoreAverages,\n                                   wordAverages, lexparser.getOp());\n    DVParser newParser = new DVParser(newModel, lexparser);\n    newParser.saveModel(outputModelFilename);\n  }","commit_id":"20e395c59b36073ea5334ad04b55b67537a222da","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number(billion-5, 3.2-4)\\n\" + \"num($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","id":20118,"modified_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number($-3, 3.2-4)\\n\" + \"number($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","commit_id":"20e395c59b36073ea5334ad04b55b67537a222da","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean isFlat = isFlat(children);\n        if (isFlat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              children = t.getChildrenAsList();\n              isFlat = false;\n              break;\n            }\n          }\n        }\n\n        if (isFlat) {\n          boolean isMoney = children.get(0).value().startsWith(\"$\");\n          if (isMoney) {\n            for (int i = 1; i < children.size(); ++i) {\n              if (!children.get(i).value().startsWith(\"CD\")) {\n                isMoney = false;\n                break;\n              }\n            }\n          }\n          if (isMoney) {\n            transformMoney(t, children);\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","id":20119,"modified_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean flat = true;\n        for (int i = 0; i < children.size(); ++i) {\n          if (!children.get(i).isPreTerminal()) {\n            flat = false;\n            break;\n          }\n        }\n        if (flat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              break;\n            }\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","commit_id":"20e395c59b36073ea5334ad04b55b67537a222da","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number(billion-5, 3.2-4)\\n\" + \"num($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","id":20120,"modified_method":"/**\n   * Tests that we can extract the basic grammatical relations correctly from\n   * some hard-coded trees.\n   *\n   * Sentence examples from the manual to at least test each relation.\n   *\n   */\n  public void testBasicRelations() {\n    // the trees to test\n    String[] testTrees = {\n         \"(ROOT (S (NP (NNP Reagan)) (VP (VBZ has) (VP (VBN died))) (. .)))\",\n         \"(ROOT (S (NP (NNP Kennedy)) (VP (VBZ has) (VP (VBN been) (VP (VBN killed)))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (NP (DT an) (JJ honest) (NN man))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (ADJP (JJ big) (CC and) (JJ honest))) (. .)))\",\n         \"(ROOT (S (NP (NNP Clinton)) (VP (VBD defeated) (NP (NNP Dole))) (. .)))\",\n         \"(ROOT (S (SBAR (WHNP (WP What)) (S (NP (PRP she)) (VP (VBD said)))) (VP (VBZ is) (ADJP (JJ untrue))) (. .)))\",\n         \"(ROOT (S (NP (NNP Dole)) (VP (VBD was) (VP (VBN defeated) (PP (IN by) (NP (NNP Clinton))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN That) (S (NP (PRP she)) (VP (VBD lied)))) (VP (VBD was) (VP (VBN suspected) (PP (IN by) (NP (NN everyone))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBD gave) (NP (PRP me)) (NP (DT a) (NN raise))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP like) (S (VP (TO to) (VP (VB swim))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD sat) (PP (IN on) (NP (DT the) (NN chair)))) (. .)))\",\n         \"(ROOT (S (NP (PRP We)) (VP (VBP have) (NP (NP (DT no) (JJ useful) (NN information)) (PP (IN on) (SBAR (IN whether) (S (NP (NNS users)) (VP (VBP are) (PP (IN at) (NP (NN risk))))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD heard) (PP (IN about) (NP (NN asbestos))) (S (VP (VBG having) (NP (JJ questionable) (NNS properties))))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ says) (SBAR (IN that) (S (NP (PRP you)) (VP (VBP like) (S (VP (TO to) (VP (VB swim)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ certain) (SBAR (IN that) (S (NP (PRP he)) (VP (VBD did) (NP (PRP it))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBP am) (ADJP (JJ ready) (S (VP (TO to) (VP (VB leave)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP U.S.) (NNS forces)) (VP (VBP have) (VP (VBN been) (VP (VBN engaged) (PP (IN in) (NP (JJ intense) (NN fighting))) (SBAR (IN after) (S (NP (NNS insurgents)) (VP (VBD launched) (NP (JJ simultaneous) (NNS attacks)))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP who)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NP (NN wife))) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\", // wrong but common misparse\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN man)) (SBAR (WHNP (WP$ whose) (NN wife)) (S (NP (PRP you)) (VP (VBP love)))))) (. .)))\",\n         \"(ROOT (S (NP (EX There)) (VP (VBZ is) (NP (NP (DT a) (NN statue)) (PP (IN in) (NP (DT the) (NN corner))))) (. .)))\",\n         \"(ROOT (S (NP (PRP She)) (VP (VBZ looks) (ADJP (RB very) (JJ beautiful))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN accident)) (VP (VBD happened) (SBAR (IN as) (S (NP (DT the) (NN night)) (VP (VBD was) (VP (VBG falling)))))) (. .)))\",\n         \"(ROOT (S (SBAR (IN If) (S (NP (PRP you)) (VP (VBP know) (SBAR (WHNP (WP who)) (S (VP (VBD did) (NP (PRP it)))))))) (, ,) (NP (PRP you)) (VP (MD should) (VP (VB tell) (NP (DT the) (NN teacher)))) (. .)))\",\n         \"(ROOT (S (NP-TMP (JJ Last) (NN night)) (, ,) (NP (PRP I)) (VP (VBP swam) (PP (IN in) (NP (DT the) (NN pool)))) (. .)))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBD talked) (PP (TO to) (NP (DT the) (NN president))) (SBAR (IN in) (NN order) (S (VP (TO to) (VP (VB secure) (NP (DT the) (NN account))))))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD saw) (NP (NP (DT the) (NN book)) (SBAR (WHNP (WDT which)) (S (NP (PRP you)) (VP (VBD bought)))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Sam)) (VP (VBZ eats) (NP (CD 3) (NN sheep))) (. .)))\",\n         \"(ROOT (S (NP (PRP I)) (VP (VBD lost) (NP (QP ($ $) (CD 3.2) (CD billion)))) (. .)))\",\n         \"(ROOT (S (NP (QP (RB About) (CD 200)) (NNS people)) (VP (VBD came) (PP (TO to) (NP (DT the) (NN party)))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNP Sam)) (, ,) (NP (PRP$ my) (NN brother)) (, ,)) (VP (VBZ eats) (NP (JJ red) (NN meat))) (. .)))\",\n         \"(ROOT (NP (NP (DT The) (JJ Australian) (NNP Broadcasting) (NNP Corporation)) (PRN (-LRB- -LRB-) (NP (NNP ABC)) (-RRB- -RRB-)) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBD picked) (NP (NP (NNP Fred)) (PP (IN for) (NP (NP (DT the) (NN team)) (VP (VBG demonstrating) (NP (PRP$ his) (NN incompetence))))))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ is) (RB not) (NP (DT a) (NN scientist))) (. .)))\",\n         \"(ROOT (S (NP (NNP Bill)) (VP (VBZ does) (RB n't) (VP (VB drive))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN director)) (VP (VBZ is) (ADJP (NP (CD 65) (NNS years)) (JJ old))) (. .)))\",\n         \"(ROOT (S (NP (DT The) (NN man)) (VP (VBZ is) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (SBARQ (WHPP (IN In) (WHNP (WDT which) (NN city))) (SQ (VBP do) (NP (PRP you)) (VP (VB live))) (. ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBD did) (NP (NNP Charles) (NNP Babbage)) (VP (VB invent))) (? ?)))\",\n         \"(ROOT (SBARQ (WHNP (WP What)) (SQ (VBZ is) (NP (DT the) (NN esophagus)) (VP (VBN used) (PP (IN for)))) (? ?)))\",\n         \"(ROOT (S (NP (PDT All) (DT the) (NNS boys)) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (CC Both) (NP (DT the) (NNS boys)) (CC and) (NP (DT the) (NNS girls))) (VP (VBP are) (ADVP (RB here))) (. .)))\",\n         \"(ROOT (S (NP (PRP They)) (VP (VBD shut) (PRT (RP down)) (NP (DT the) (NN station))) (. .)))\",\n         \"(ROOT (S (NP (NP (NNS Truffles)) (VP (VBN picked) (PP (IN during) (NP (DT the) (NN spring))))) (VP (VBP are) (ADJP (JJ tasty))) (. .)))\",\n         \"(ROOT (S  (NP-SBJ-38 (DT Neither) (NP (PRP they) ) (CC nor) (NP (NNP Mr.) (NNP McAlpine) )) (VP (MD could) (VP (VB be) (VP (VBN reached) (NP (-NONE- *-38) ) (PP-PRP (IN for) (NP (NN comment) ))))) (. .) ))\",\n         \"(ROOT (S (NP (NNP Xml) (NN field)) (VP (MD should) (VP (VB include) (NP (PDT both) (NP (DT the) (NN entity) (NN id)) (CC and) (NP (DT the) (NN entity) (NN name))) (SBAR (IN since) (S (NP (DT the) (NN entity) (NNS names)) (VP (VBP are) (RB not) (ADJP (JJ unique))))))) (. .)))\",\n         \"(ROOT (S (S (NP (DT The) (NN government)) (VP (VBZ counts) (NP (NN money)) (SBAR (IN as) (S (NP (PRP it)) (VP (VBZ is) (VP (VBN spent))))))) (: ;) (S (NP (NNP Dodge)) (VP (VBZ counts) (NP (NNS contracts)) (SBAR (WHADVP (WRB when)) (S (NP (PRP they)) (VP (VBP are) (VP (VBN awarded))))))) (. .)))\",\n         \"( (S (CC But) (NP (PRP she)) (VP (VBD did) (RB n't) (VP (VB deserve) (S (VP (TO to) (VP (VB have) (S (NP (PRP$ her) (NN head)) (VP (VBN chopped) (PRT (RP off))))))))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NNS dogs)) (CONJP (RB rather) (IN than)) (NP (NNS cats)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (NP (NN brandy)) (CONJP (RB not) (TO to) (VB mention)) (NP (NN cognac)))) (. .)))\",\n         \"( (S (NP (PRP I)) (VP (VBP like) (NP (CONJP (RB not) (RB only)) (NP (NNS cats)) (CONJP (CC but) (RB also)) (NP (NN dogs)))) (. .)))\",\n         \"( (S (NP (PRP He)) (VP (VBZ knows) (NP (DT the) (NML (JJ mechanical) (NN engineering)) (NN industry))) (. .)))\",\n         \"(ROOT (SBARQ (WHNP (WP What) (NN weapon)) (SQ (VBZ is) (NP (DT the) (JJ mythological) (NN character) (NN Apollo)) (ADJP (RBS most) (JJ proficient) (PP (IN with)))) (. ?)))\",\n         \"( (SINV (CC Nor) (VBP are) (NP (PRP you)) (ADJP (JJ free) (S (VP (TO to) (VP (VB reprint) (NP (JJ such) (NN material))))))) )\",\n         \"(ROOT (SBARQ (WHNP (WHADJP (WRB How) (JJ many)) (NP (NNP James) (NNP Bond) (NNS novels))) (SQ (VBP are) (NP (EX there))) (. ?)))\",\n         \"( (S (NP (NP (NNS Investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (VP (MD will) (VP (VB be) (VP (VBN excluded)))) (. .)))\",\n         \"( (SINV (ADVP (RB Also)) (VP (VBN excluded)) (VP (MD will) (VP (VB be))) (NP (NP (NNS investments)) (PP (IN in) (NP (NNP South) (NNP Africa)))) (. .)))\",\n         \"( (SINV (VP (VBG Defending) (NP (PRP$ their) (NNS ramparts))) (VP (VBP are)) (NP (NP (NNP Wall) (NNP Street) (POS 's)) (NNP Old) (NNP Guard)) (. .)))\",\n         \"( (S (NP-SBJ (JJ Institutional) (NNS investors)) (ADVP (RB mostly)) (VP (VBD remained) (PP-LOC-PRD (IN on) (NP (DT the) (NNS sidelines))) (NP-TMP (NNP Tuesday))) (. .)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT this)) (NP-PRD (NP (DT the) (NN future)) (PP (IN of) (NP (NN chamber) (NN music)))) (. ?)))\",\n         \"( (SQ (VBZ Is) (NP-SBJ (DT the) (NN trouble)) (ADVP-PRD (RP over)) (. ?)))\",\n         \"( (SBARQ (SBAR (IN Although) (S (NP (NNP Sue)) (VP (VBP is) (ADJP (JJ smart))))) (, ,) (WHNP (WP who)) (SQ (MD will) (VP (VB win))) (. ?)))\",\n         \"(NP (NP (NNP Xerox))(, ,) (SBAR (WHNP (WHNP (WP$ whose) (JJ chief) (JJ executive) (NN officer))(, ,) (NP (NNP James) (NNP Gatward))(, ,)) (S (NP-SBJ (-NONE- *T*-1)) (VP (VBZ has) (VP (VBN resigned))))))\",\n         \"(ROOT (S (NP (PRP He)) (VP (VBZ gets) (NP (PRP me)) (ADVP-TMP (DT every) (NN time))) (. .)))\",\n         \"( (S (NP-SBJ (CC Both) (NP (NNP Mr.) (NNP Parenteau)) (CC and) (NP (NNP Ms.) (NNP Doyon))) (, ,) (ADVP (RB however)) (, ,) (VP (VBD were) (VP (VBG bleeding) (ADVP (RB badly)))) (. .)))\",\n         // This pattern of ADJP < RP without an intervening PRT occurs in the Web Treebank...\n         \"(NP-SBJ-1 (ADJP (ADJP (VBN Rusted) (RP out)) (CC and) (ADJP (JJ unsafe))) (NNS cars))\",\n         \"( (S (NP-SBJ (PRP u)) (VP (VBP r) (VP (VBG holding) (NP (PRP it)) (ADVP (RB too) (RB tight))))))\",\n         \"( (S (NP-SBJ (PRP You)) (VP (MD should) (VP (GW e) (VB mail) (NP (PRP her)) (ADVP-TMP (RB sometimes)))) (. .)))\",\n         \"( (S (NP-SBJ (NN Interest)) (VP (VBZ is) (ADJP-PRD (ADJP (NP-ADV (DT a) (JJ great) (NN deal)) (JJR higher)) (SBAR (IN than) (S (NP-SBJ (PRP it)) (VP (VBD was) (ADJP-PRD (-NONE- *?*)) (ADVP-TMP (NP (DT a) (NN year)) (RB ago))))))) (. .)))\",\n         \"( (S (NP-SBJ (DT The) (NN strike)) (VP (MD may) (VP (VB have) (VP (VBN ended) (SBAR-TMP (ADVP (RB almost)) (IN before) (S (NP-SBJ (PRP it)) (VP (VBD began)))))))))\",\n         \"( (S (SBAR-ADV (IN Although) (S (VP (VBN set) (PP-LOC (IN in) (NP (NNP Japan)))))) (, ,) (NP-SBJ-2 (NP (DT the) (NN novel) (POS 's)) (NN texture)) (VP (VBZ is) (ADJP (JJ American))) (. .)))\",\n         \"( (S-IMP (INTJ (UH please)) (NP-SBJ (-NONE- *PRO*)) (VP (VB specify) (NP (WDT which) (NML (NNP royal) (CC or) (NNP carnival)) (NN ship))) (NFP -LRB-:)))\",\n         \"(NP (DT those) (RRC (ADVP-TMP (RB still)) (PP-LOC (IN under) (NP (NNP GASB) (NNS rules)))))\",\n         \"(NP (NP (DT the) (NN auction) (NN house)) (RRC (RRC (VP (VBN founded) (NP (-NONE- *)) (PP-LOC (IN in) (NP (NNP London))) (NP-TMP (CD 1744)))) (CC and) (RRC (ADVP-TMP (RB now)) (PP (IN under) (NP (NP (DT the) (NN umbrella)) (PP (IN of) (NP (NP (NNP Sotheby) (POS 's)) (NNPS Holdings) (NNP Inc.))))))))\",\n         // tough movement example\n         \"(S (NP-SBJ (NNS morcillas)) (VP (VBP are) (ADVP (RB basically)) (ADJP-PRD (JJ impossible) (SBAR (WHNP-1 (-NONE- *0*)) (S (NP-SBJ (-NONE- *PRO*)) (VP (TO to) (VP (VB find) (NP-1 (-NONE- *T*)) (PP-LOC (IN in) (NP (NNP California))))))))))\",\n         // S parataxis\n         \"( (S (S (NP-SBJ (-NONE- *)) (VP (VBP Do) (RB n't) (VP (VB wait)))) (: --) (S (NP-SBJ (-NONE- *)) (VP (VBP act) (ADVP-TMP (RB now)))) (. !)))\",\n         // Two tricky conjunctions with punctuation and/or interjections\n         \"( (S (NP-SBJ (DT The) (NNPS Parks) (NNP Council)) (VP (VBD wrote) (NP (DT the) (NNP BPCA)) (SBAR (IN that) (S (NP-SBJ (DT this) (ADJP (`` ``) (RB too) (`` `) (JJ private) ('' ') (: ...) (JJ exclusive) (, ,) ('' '') (JJ complex) (CC and) (JJ expensive)) (`` ``) (VBN enclosed) (NN garden)) (: ...) (VP (VBZ belongs) (PP-LOC-CLR (IN in) (NP (NP (RB almost) (DT any) (NN location)) (CC but) (NP (DT the) (NN waterfront)))))))) (. .) ('' '')))\",\n         \"( (S (`` ``) (CC And) (NP-SBJ (PRP you)) (VP (MD ca) (RB n't) (VP (VB have) (S (NP-SBJ (NP (NNS taxpayers)) (VP (VBG coming) (PP-DIR (IN into) (NP (DT an) (NN audit))))) (VP (VBG hearing) (NP (`` `) (UH oohs) (: ') (CC and) (`` `) (UH ahs)))))) (. .) ('' ') ('' '')))\",\n         \"( (S (NP-SBJ-1 (VBN Freed) (JJ black) (NNS nationalists)) (VP (VP (VBD resumed) (NP (JJ political) (NN activity)) (PP-LOC (IN in) (NP (NNP South) (NNP Africa)))) (CC and) (VP (VBD vowed) (S (NP-SBJ (-NONE- *-1)) (VP (TO to) (VP (VB fight) (PP-CLR (IN against) (NP (NN apartheid))))))) (, ,) (S-ADV (NP-SBJ (-NONE- *)) (VP (VBG raising) (NP (NP (NNS fears)) (PP (IN of) (NP (DT a) (JJ possible) (JJ white) (NN backlash))))))) (. .)))\",\n         \"( (S (S-NOM-SBJ (NP-SBJ-1 (-NONE- *)) (VP (VBG Being) (VP (VBN held) (S (NP-SBJ (-NONE- *-1)) (PP-PRD (ADVP (RB well)) (IN below) (NP (NN capacity))))))) (VP (VP (ADVP-MNR (RB greatly)) (VBZ irritates) (NP (PRP them))) (, ,) (CC and) (VP (VBZ has) (VP (VBN led) (PP-CLR (TO to) (NP (JJ widespread) (NN cheating)))))) (. .)))\",\n         \"( (S (NP-SBJ (PRP They)) (VP (VBD acquired) (NP (NP (NNS stakes)) (PP (IN in) (NP (NP (VBG bottling) (NNS companies)) (UCP-LOC (PP (IN in) (NP (DT the) (NNP U.S.))) (CC and) (ADVP (RB overseas))))))) (. .)))\",\n    };\n\n    // the expected dependency answers (basic)\n    String[] testAnswers = {\n        \"nsubj(died-3, Reagan-1)\\n\" + \"aux(died-3, has-2)\\n\" + \"root(ROOT-0, died-3)\\n\",\n        \"nsubjpass(killed-4, Kennedy-1)\\n\" + \"aux(killed-4, has-2)\\n\" + \"auxpass(killed-4, been-3)\\n\" + \"root(ROOT-0, killed-4)\\n\",\n        \"nsubj(man-5, Bill-1)\\n\" + \"cop(man-5, is-2)\\n\" + \"det(man-5, an-3)\\n\" + \"amod(man-5, honest-4)\\n\" + \"root(ROOT-0, man-5)\\n\",\n        \"nsubj(big-3, Bill-1)\\n\" + \"cop(big-3, is-2)\\n\" + \"root(ROOT-0, big-3)\\n\" + \"cc(big-3, and-4)\\n\" + \"conj(big-3, honest-5)\\n\",\n        \"nsubj(defeated-2, Clinton-1)\\n\" + \"root(ROOT-0, defeated-2)\\n\" + \"dobj(defeated-2, Dole-3)\\n\",\n        \"dobj(said-3, What-1)\\n\" + \"nsubj(said-3, she-2)\\n\" + \"csubj(untrue-5, said-3)\\n\" + \"cop(untrue-5, is-4)\\n\" + \"root(ROOT-0, untrue-5)\\n\",\n        \"nsubjpass(defeated-3, Dole-1)\\n\" + \"auxpass(defeated-3, was-2)\\n\" + \"root(ROOT-0, defeated-3)\\n\" + \"prep(defeated-3, by-4)\\n\" + \"pobj(by-4, Clinton-5)\\n\",\n        \"mark(lied-3, That-1)\\n\" + \"nsubj(lied-3, she-2)\\n\" + \"csubjpass(suspected-5, lied-3)\\n\" + \"auxpass(suspected-5, was-4)\\n\" + \"root(ROOT-0, suspected-5)\\n\" + \"prep(suspected-5, by-6)\\n\" + \"pobj(by-6, everyone-7)\\n\",\n        \"nsubj(gave-2, She-1)\\n\" + \"root(ROOT-0, gave-2)\\n\" + \"iobj(gave-2, me-3)\\n\" + \"det(raise-5, a-4)\\n\" + \"dobj(gave-2, raise-5)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" + \"aux(swim-4, to-3)\\n\" + \"xcomp(like-2, swim-4)\\n\",\n        \"nsubj(sat-2, I-1)\\n\" + \"root(ROOT-0, sat-2)\\n\" + \"prep(sat-2, on-3)\\n\" + \"det(chair-5, the-4)\\n\" + \"pobj(on-3, chair-5)\\n\",\n        \"nsubj(have-2, We-1)\\n\" + \"root(ROOT-0, have-2)\\n\" + \"det(information-5, no-3)\\n\" + \"amod(information-5, useful-4)\\n\" + \"dobj(have-2, information-5)\\n\" + \"prep(information-5, on-6)\\n\" + \"mark(are-9, whether-7)\\n\" + \"nsubj(are-9, users-8)\\n\" + \"pcomp(on-6, are-9)\\n\" + \"prep(are-9, at-10)\\n\" + \"pobj(at-10, risk-11)\\n\",\n        \"nsubj(heard-2, They-1)\\n\" + \"root(ROOT-0, heard-2)\\n\" + \"prep(heard-2, about-3)\\n\" + \"pobj(about-3, asbestos-4)\\n\" + \"xcomp(heard-2, having-5)\\n\" + \"amod(properties-7, questionable-6)\\n\" + \"dobj(having-5, properties-7)\\n\",\n        \"nsubj(says-2, He-1)\\n\" + \"root(ROOT-0, says-2)\\n\" + \"mark(like-5, that-3)\\n\" + \"nsubj(like-5, you-4)\\n\" + \"ccomp(says-2, like-5)\\n\" + \"aux(swim-7, to-6)\\n\" + \"xcomp(like-5, swim-7)\\n\",\n        \"nsubj(certain-3, I-1)\\n\" + \"cop(certain-3, am-2)\\n\" + \"root(ROOT-0, certain-3)\\n\" + \"mark(did-6, that-4)\\n\" + \"nsubj(did-6, he-5)\\n\" + \"ccomp(certain-3, did-6)\\n\" + \"dobj(did-6, it-7)\\n\",\n        \"nsubj(ready-3, I-1)\\n\" + \"cop(ready-3, am-2)\\n\" + \"root(ROOT-0, ready-3)\\n\" + \"aux(leave-5, to-4)\\n\" + \"xcomp(ready-3, leave-5)\\n\",\n        \"nn(forces-2, U.S.-1)\\n\" + \"nsubjpass(engaged-5, forces-2)\\n\" + \"aux(engaged-5, have-3)\\n\" + \"auxpass(engaged-5, been-4)\\n\" + \"root(ROOT-0, engaged-5)\\n\" + \"prep(engaged-5, in-6)\\n\" + \"amod(fighting-8, intense-7)\\n\" + \"pobj(in-6, fighting-8)\\n\" + \"mark(launched-11, after-9)\\n\" + \"nsubj(launched-11, insurgents-10)\\n\" + \"advcl(engaged-5, launched-11)\\n\" + \"amod(attacks-13, simultaneous-12)\\n\" + \"dobj(launched-11, attacks-13)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"dobj(love-7, who-5)\\n\" + \"nsubj(love-7, you-6)\\n\" + \"rcmod(man-4, love-7)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(man-4, the-3)\\n\" + \"dobj(saw-2, man-4)\\n\" + \"poss(wife-6, whose-5)\\n\" + \"dobj(love-8, wife-6)\\n\" + \"nsubj(love-8, you-7)\\n\" + \"rcmod(man-4, love-8)\\n\",\n        \"expl(is-2, There-1)\\n\" + \"root(ROOT-0, is-2)\\n\" + \"det(statue-4, a-3)\\n\" + \"nsubj(is-2, statue-4)\\n\" + \"prep(statue-4, in-5)\\n\" + \"det(corner-7, the-6)\\n\" + \"pobj(in-5, corner-7)\\n\",\n        \"nsubj(looks-2, She-1)\\n\" + \"root(ROOT-0, looks-2)\\n\" + \"advmod(beautiful-4, very-3)\\n\" + \"acomp(looks-2, beautiful-4)\\n\",\n        \"det(accident-2, The-1)\\n\" + \"nsubj(happened-3, accident-2)\\n\" + \"root(ROOT-0, happened-3)\\n\" + \"mark(falling-8, as-4)\\n\" + \"det(night-6, the-5)\\n\" + \"nsubj(falling-8, night-6)\\n\" + \"aux(falling-8, was-7)\\n\" + \"advcl(happened-3, falling-8)\\n\",\n        \"mark(know-3, If-1)\\n\" + \"nsubj(know-3, you-2)\\n\" + \"advcl(tell-10, know-3)\\n\" + \"nsubj(did-5, who-4)\\n\" + \"ccomp(know-3, did-5)\\n\" + \"dobj(did-5, it-6)\\n\" + \"nsubj(tell-10, you-8)\\n\" + \"aux(tell-10, should-9)\\n\" + \"root(ROOT-0, tell-10)\\n\" + \"det(teacher-12, the-11)\\n\" + \"dobj(tell-10, teacher-12)\\n\",\n        \"amod(night-2, Last-1)\\n\" + \"tmod(swam-5, night-2)\\n\" + \"nsubj(swam-5, I-4)\\n\" + \"root(ROOT-0, swam-5)\\n\" + \"prep(swam-5, in-6)\\n\" + \"det(pool-8, the-7)\\n\" + \"pobj(in-6, pool-8)\\n\",\n        \"nsubj(talked-2, He-1)\\n\" + \"root(ROOT-0, talked-2)\\n\" + \"prep(talked-2, to-3)\\n\" + \"det(president-5, the-4)\\n\" + \"pobj(to-3, president-5)\\n\" + \"mark(secure-9, in-6)\\n\" + \"dep(secure-9, order-7)\\n\" + \"aux(secure-9, to-8)\\n\" + \"advcl(talked-2, secure-9)\\n\" + \"det(account-11, the-10)\\n\" + \"dobj(secure-9, account-11)\\n\",\n        \"nsubj(saw-2, I-1)\\n\" + \"root(ROOT-0, saw-2)\\n\" + \"det(book-4, the-3)\\n\" + \"dobj(saw-2, book-4)\\n\" + \"dobj(bought-7, which-5)\\n\" + \"nsubj(bought-7, you-6)\\n\" + \"rcmod(book-4, bought-7)\\n\",\n        \"nsubj(eats-2, Sam-1)\\n\" + \"root(ROOT-0, eats-2)\\n\" + \"num(sheep-4, 3-3)\\n\" + \"dobj(eats-2, sheep-4)\\n\",\n        \"nsubj(lost-2, I-1)\\n\" + \"root(ROOT-0, lost-2)\\n\" + \"dobj(lost-2, $-3)\\n\" + \"number($-3, 3.2-4)\\n\" + \"number($-3, billion-5)\\n\",\n        \"quantmod(200-2, About-1)\\n\" + \"num(people-3, 200-2)\\n\" + \"nsubj(came-4, people-3)\\n\" + \"root(ROOT-0, came-4)\\n\" + \"prep(came-4, to-5)\\n\" + \"det(party-7, the-6)\\n\" + \"pobj(to-5, party-7)\\n\",\n        \"nsubj(eats-6, Sam-1)\\n\" + \"poss(brother-4, my-3)\\n\" + \"appos(Sam-1, brother-4)\\n\" + \"root(ROOT-0, eats-6)\\n\" + \"amod(meat-8, red-7)\\n\" + \"dobj(eats-6, meat-8)\\n\",\n        \"det(Corporation-4, The-1)\\n\" + \"amod(Corporation-4, Australian-2)\\n\" + \"nn(Corporation-4, Broadcasting-3)\\n\" + \"root(ROOT-0, Corporation-4)\\n\" + \"appos(Corporation-4, ABC-6)\\n\",\n        \"nsubj(picked-2, Bill-1)\\n\" + \"root(ROOT-0, picked-2)\\n\" + \"dobj(picked-2, Fred-3)\\n\" + \"prep(Fred-3, for-4)\\n\" + \"det(team-6, the-5)\\n\" + \"pobj(for-4, team-6)\\n\" + \"partmod(team-6, demonstrating-7)\\n\" + \"poss(incompetence-9, his-8)\\n\" + \"dobj(demonstrating-7, incompetence-9)\\n\",\n        \"nsubj(scientist-5, Bill-1)\\n\" + \"cop(scientist-5, is-2)\\n\" + \"neg(scientist-5, not-3)\\n\" + \"det(scientist-5, a-4)\\n\" + \"root(ROOT-0, scientist-5)\\n\",\n        \"nsubj(drive-4, Bill-1)\\n\" + \"aux(drive-4, does-2)\\n\" + \"neg(drive-4, n't-3)\\n\" + \"root(ROOT-0, drive-4)\\n\",\n        \"det(director-2, The-1)\\n\" + \"nsubj(old-6, director-2)\\n\" + \"cop(old-6, is-3)\\n\" + \"num(years-5, 65-4)\\n\" + \"npadvmod(old-6, years-5)\\n\" + \"root(ROOT-0, old-6)\\n\",\n        \"det(man-2, The-1)\\n\" + \"nsubj(is-3, man-2)\\n\" + \"root(ROOT-0, is-3)\\n\" + \"advmod(is-3, here-4)\\n\",\n        \"prep(live-6, In-1)\\n\" + \"det(city-3, which-2)\\n\" + \"pobj(In-1, city-3)\\n\" + \"aux(live-6, do-4)\\n\" + \"nsubj(live-6, you-5)\\n\" + \"root(ROOT-0, live-6)\\n\",\n        \"dobj(invent-5, What-1)\\n\" + \"aux(invent-5, did-2)\\n\" + \"nn(Babbage-4, Charles-3)\\n\" + \"nsubj(invent-5, Babbage-4)\\n\" + \"root(ROOT-0, invent-5)\\n\",\n        \"dep(used-5, What-1)\\n\" + \"auxpass(used-5, is-2)\\n\" + \"det(esophagus-4, the-3)\\n\" + \"nsubjpass(used-5, esophagus-4)\\n\" + \"root(ROOT-0, used-5)\\n\" + \"prep(used-5, for-6)\\n\",\n        \"predet(boys-3, All-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-4, boys-3)\\n\" + \"root(ROOT-0, are-4)\\n\" + \"advmod(are-4, here-5)\\n\",\n        \"preconj(boys-3, Both-1)\\n\" + \"det(boys-3, the-2)\\n\" + \"nsubj(are-7, boys-3)\\n\" + \"cc(boys-3, and-4)\\n\" + \"det(girls-6, the-5)\\n\" + \"conj(boys-3, girls-6)\\n\" + \"root(ROOT-0, are-7)\\n\" + \"advmod(are-7, here-8)\\n\",\n        \"nsubj(shut-2, They-1)\\n\" + \"root(ROOT-0, shut-2)\\n\" + \"prt(shut-2, down-3)\\n\" + \"det(station-5, the-4)\\n\" + \"dobj(shut-2, station-5)\\n\",\n        \"nsubj(tasty-7, Truffles-1)\\n\" + \"partmod(Truffles-1, picked-2)\\n\" + \"prep(picked-2, during-3)\\n\" + \"det(spring-5, the-4)\\n\" + \"pobj(during-3, spring-5)\\n\" + \"cop(tasty-7, are-6)\\n\" + \"root(ROOT-0, tasty-7)\\n\",\n        \"preconj(they-2, Neither-1)\\n\" + \"nsubjpass(reached-8, they-2)\\n\" + \"cc(they-2, nor-3)\\n\" + \"nn(McAlpine-5, Mr.-4)\\n\" + \"conj(they-2, McAlpine-5)\\n\" + \"aux(reached-8, could-6)\\n\" + \"auxpass(reached-8, be-7)\\n\" + \"root(ROOT-0, reached-8)\\n\" + \"prep(reached-8, for-9)\\n\" + \"pobj(for-9, comment-10)\\n\",\n        \"nn(field-2, Xml-1)\\n\" +\n                \"nsubj(include-4, field-2)\\n\" +\n                \"aux(include-4, should-3)\\n\" + \"root(ROOT-0, include-4)\\n\" +\n                \"preconj(id-8, both-5)\\n\" +\n                \"det(id-8, the-6)\\n\" +\n                \"nn(id-8, entity-7)\\n\" +\n                \"dobj(include-4, id-8)\\n\" +\n                \"cc(id-8, and-9)\\n\" +\n                \"det(name-12, the-10)\\n\" +\n                \"nn(name-12, entity-11)\\n\" +\n                \"conj(id-8, name-12)\\n\" +\n                \"mark(unique-19, since-13)\\n\" +\n                \"det(names-16, the-14)\\n\" +\n                \"nn(names-16, entity-15)\\n\" +\n                \"nsubj(unique-19, names-16)\\n\" +\n                \"cop(unique-19, are-17)\\n\" +\n                \"neg(unique-19, not-18)\\n\" +\n                \"advcl(include-4, unique-19)\\n\",\n        \"det(government-2, The-1)\\n\" +\n                \"nsubj(counts-3, government-2)\\n\" +  \"root(ROOT-0, counts-3)\\n\" +\n                \"dobj(counts-3, money-4)\\n\" +\n                \"mark(spent-8, as-5)\\n\" +\n                \"nsubjpass(spent-8, it-6)\\n\" +\n                \"auxpass(spent-8, is-7)\\n\" +\n                \"advcl(counts-3, spent-8)\\n\" +\n                \"nsubj(counts-11, Dodge-10)\\n\" +\n                \"parataxis(counts-3, counts-11)\\n\" +\n                \"dobj(counts-11, contracts-12)\\n\" +\n                \"advmod(awarded-16, when-13)\\n\" +\n                \"nsubjpass(awarded-16, they-14)\\n\" +\n                \"auxpass(awarded-16, are-15)\\n\" +\n                \"advcl(counts-11, awarded-16)\\n\",\n        \"cc(deserve-5, But-1)\\n\" +\n                \"nsubj(deserve-5, she-2)\\n\" +\n                \"aux(deserve-5, did-3)\\n\" +\n                \"neg(deserve-5, n't-4)\\n\" +\n                \"root(ROOT-0, deserve-5)\\n\" +\n                \"aux(have-7, to-6)\\n\" +\n                \"xcomp(deserve-5, have-7)\\n\" +\n                \"poss(head-9, her-8)\\n\" +\n                \"nsubj(chopped-10, head-9)\\n\" +\n                \"ccomp(have-7, chopped-10)\\n\" +\n                \"prt(chopped-10, off-11)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"dobj(like-2, dogs-3)\\n\" +\n                    \"cc(dogs-3, rather-4)\\n\" +\n                    \"mwe(rather-4, than-5)\\n\" +\n                    \"conj(dogs-3, cats-6)\\n\",\n        \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                \"dobj(like-2, brandy-3)\\n\" +\n                \"neg(mention-6, not-4)\\n\" +\n                \"aux(mention-6, to-5)\\n\" +\n                \"cc(brandy-3, mention-6)\\n\" +\n                \"conj(brandy-3, cognac-7)\\n\",\n            \"nsubj(like-2, I-1)\\n\" + \"root(ROOT-0, like-2)\\n\" +\n                    \"neg(only-4, not-3)\\n\" +\n                    \"preconj(cats-5, only-4)\\n\" +\n                    \"dobj(like-2, cats-5)\\n\" +\n                    \"cc(also-7, but-6)\\n\" +\n                    \"cc(cats-5, also-7)\\n\" +\n                    \"conj(cats-5, dogs-8)\\n\",\n        \"nsubj(knows-2, He-1)\\n\" + \"root(ROOT-0, knows-2)\\n\" +\n                \"det(industry-6, the-3)\\n\" +\n                \"amod(engineering-5, mechanical-4)\\n\" +\n                \"nn(industry-6, engineering-5)\\n\" +\n                \"dobj(knows-2, industry-6)\\n\",\n        \"det(weapon-2, What-1)\\n\" +\n                \"attr(proficient-9, weapon-2)\\n\" +\n                \"cop(proficient-9, is-3)\\n\" +\n                \"det(Apollo-7, the-4)\\n\" +\n                \"amod(Apollo-7, mythological-5)\\n\" +\n                \"nn(Apollo-7, character-6)\\n\" +\n                \"nsubj(proficient-9, Apollo-7)\\n\" +\n                \"advmod(proficient-9, most-8)\\n\" + \"root(ROOT-0, proficient-9)\\n\" +\n                \"prep(proficient-9, with-10)\\n\",\n        \"cc(free-4, Nor-1)\\n\" +\n                \"cop(free-4, are-2)\\n\" +\n                \"nsubj(free-4, you-3)\\n\" + \"root(ROOT-0, free-4)\\n\" +\n                \"aux(reprint-6, to-5)\\n\" +\n                \"xcomp(free-4, reprint-6)\\n\" +\n                \"amod(material-8, such-7)\\n\" +\n                \"dobj(reprint-6, material-8)\\n\",\n        \"advmod(many-2, How-1)\\n\" +\n                \"amod(novels-5, many-2)\\n\" +\n                \"nn(novels-5, James-3)\\n\" +\n                \"nn(novels-5, Bond-4)\\n\" +\n                \"attr(are-6, novels-5)\\n\" + \"root(ROOT-0, are-6)\\n\" +\n                \"expl(are-6, there-7)\\n\",\n        \"nsubjpass(excluded-7, Investments-1)\\n\" +\n                \"prep(Investments-1, in-2)\\n\" +\n                \"nn(Africa-4, South-3)\\n\" +\n                \"pobj(in-2, Africa-4)\\n\" +\n                \"aux(excluded-7, will-5)\\n\" +\n                \"auxpass(excluded-7, be-6)\\n\" + \"root(ROOT-0, excluded-7)\\n\",\n        \"advmod(excluded-2, Also-1)\\n\" + \"root(ROOT-0, excluded-2)\\n\" +\n                \"aux(be-4, will-3)\\n\" +     // should really be aux(excluded-2, will-3) but impossible at present without reconstructing topicalized VP semantic head\n                \"auxpass(excluded-2, be-4)\\n\" +\n                \"nsubjpass(excluded-2, investments-5)\\n\" +\n                \"prep(investments-5, in-6)\\n\" +\n                \"nn(Africa-8, South-7)\\n\" +\n                \"pobj(in-6, Africa-8)\\n\",\n        \"root(ROOT-0, Defending-1)\\n\" + \"poss(ramparts-3, their-2)\\n\" +\n                \"dobj(Defending-1, ramparts-3)\\n\" +\n                \"aux(Defending-1, are-4)\\n\" +\n                \"nn(Street-6, Wall-5)\\n\" +\n                \"poss(Guard-9, Street-6)\\n\" +\n                \"possessive(Street-6, 's-7)\\n\" +\n                \"nn(Guard-9, Old-8)\\n\" +\n                \"nsubj(Defending-1, Guard-9)\\n\",\n        \"amod(investors-2, Institutional-1)\\n\" +\n                \"nsubj(remained-4, investors-2)\\n\" +\n                \"advmod(remained-4, mostly-3)\\n\" + \"root(ROOT-0, remained-4)\\n\" +\n                \"prep(remained-4, on-5)\\n\" +\n                \"det(sidelines-7, the-6)\\n\" +\n                \"pobj(on-5, sidelines-7)\\n\" +\n                \"tmod(remained-4, Tuesday-8)\\n\",\n        \"cop(future-4, Is-1)\\n\" +\n                \"nsubj(future-4, this-2)\\n\" +\n                \"det(future-4, the-3)\\n\" + \"root(ROOT-0, future-4)\\n\" +\n                \"prep(future-4, of-5)\\n\" +\n                \"nn(music-7, chamber-6)\\n\" +\n                \"pobj(of-5, music-7)\\n\",\n        \"root(ROOT-0, Is-1)\\n\" + \"det(trouble-3, the-2)\\n\" +\n                \"nsubj(Is-1, trouble-3)\\n\" +\n                \"advmod(Is-1, over-4)\\n\",\n        \"mark(smart-4, Although-1)\\n\" +\n                \"nsubj(smart-4, Sue-2)\\n\" +\n                \"cop(smart-4, is-3)\\n\" +\n                \"advcl(win-8, smart-4)\\n\" +\n                \"nsubj(win-8, who-6)\\n\" +\n                \"aux(win-8, will-7)\\n\" + \"root(ROOT-0, win-8)\\n\",\n        \"root(ROOT-0, Xerox-1)\\n\" +\n                \"poss(officer-6, whose-3)\\n\" +\n                \"amod(officer-6, chief-4)\\n\" +\n                \"amod(officer-6, executive-5)\\n\" +\n                \"nsubj(resigned-12, officer-6)\\n\" +\n                \"nn(Gatward-9, James-8)\\n\" +\n                \"appos(officer-6, Gatward-9)\\n\" +\n                \"aux(resigned-12, has-11)\\n\" +\n                \"rcmod(Xerox-1, resigned-12)\\n\",\n        \"nsubj(gets-2, He-1)\\n\" +\n                \"root(ROOT-0, gets-2)\\n\" +\n                \"dobj(gets-2, me-3)\\n\" +\n                \"det(time-5, every-4)\\n\" +\n                \"advmod(gets-2, time-5)\\n\",\n        \"preconj(Parenteau-3, Both-1)\\n\" +\n                \"nn(Parenteau-3, Mr.-2)\\n\" +\n                \"nsubj(bleeding-11, Parenteau-3)\\n\" +\n                \"cc(Parenteau-3, and-4)\\n\" +\n                \"nn(Doyon-6, Ms.-5)\\n\" +\n                \"conj(Parenteau-3, Doyon-6)\\n\" +\n                \"advmod(bleeding-11, however-8)\\n\" +\n                \"aux(bleeding-11, were-10)\\n\" +\n                \"root(ROOT-0, bleeding-11)\\n\" +\n                \"advmod(bleeding-11, badly-12)\\n\",\n        \"amod(cars-5, Rusted-1)\\n\" +\n                \"prt(Rusted-1, out-2)\\n\" +\n                \"cc(Rusted-1, and-3)\\n\" +\n                \"conj(Rusted-1, unsafe-4)\\n\" +\n                \"root(ROOT-0, cars-5)\\n\",\n        \"nsubj(holding-3, u-1)\\n\" +\n            \"aux(holding-3, r-2)\\n\" +\n            \"root(ROOT-0, holding-3)\\n\" +\n            \"dobj(holding-3, it-4)\\n\" +\n            \"advmod(tight-6, too-5)\\n\" +\n            \"advmod(holding-3, tight-6)\\n\",\n        \"nsubj(mail-4, You-1)\\n\" +\n            \"aux(mail-4, should-2)\\n\" +\n            \"goeswith(mail-4, e-3)\\n\" +\n            \"root(ROOT-0, mail-4)\\n\" +\n            \"dobj(mail-4, her-5)\\n\" +\n            \"advmod(mail-4, sometimes-6)\\n\",\n        \"nsubj(higher-6, Interest-1)\\n\" +\n            \"cop(higher-6, is-2)\\n\" +\n            \"det(deal-5, a-3)\\n\" +\n            \"amod(deal-5, great-4)\\n\" +\n            \"npadvmod(higher-6, deal-5)\\n\" +\n            \"root(ROOT-0, higher-6)\\n\" +\n            \"mark(was-9, than-7)\\n\" +\n            \"nsubj(was-9, it-8)\\n\" +\n            \"ccomp(higher-6, was-9)\\n\" +\n            \"det(year-11, a-10)\\n\" +\n            \"npadvmod(ago-12, year-11)\\n\" +\n            \"advmod(was-9, ago-12)\\n\",\n        \"det(strike-2, The-1)\\n\" +\n            \"nsubj(ended-5, strike-2)\\n\" +\n            \"aux(ended-5, may-3)\\n\" +\n            \"aux(ended-5, have-4)\\n\" +\n            \"root(ROOT-0, ended-5)\\n\" +\n            \"advmod(began-9, almost-6)\\n\" +\n            \"mark(began-9, before-7)\\n\" +\n            \"nsubj(began-9, it-8)\\n\" +\n            \"advcl(ended-5, began-9)\\n\",\n        \"mark(set-2, Although-1)\\n\" +\n            \"advcl(American-11, set-2)\\n\" +\n            \"prep(set-2, in-3)\\n\" +\n            \"pobj(in-3, Japan-4)\\n\" +\n            \"det(novel-7, the-6)\\n\" +\n            \"poss(texture-9, novel-7)\\n\" +\n            \"possessive(novel-7, 's-8)\\n\" +\n            \"nsubj(American-11, texture-9)\\n\" +\n            \"cop(American-11, is-10)\\n\" +\n            \"root(ROOT-0, American-11)\\n\",\n        \"discourse(specify-2, please-1)\\n\" +\n            \"root(ROOT-0, specify-2)\\n\" +\n            \"det(ship-7, which-3)\\n\" +\n            \"nn(ship-7, royal-4)\\n\" +\n            \"cc(royal-4, or-5)\\n\" +\n            \"conj(royal-4, carnival-6)\\n\" +\n            \"dobj(specify-2, ship-7)\\n\" +\n            \"discourse(specify-2, -LRB-:-8)\\n\",\n        \"root(ROOT-0, those-1)\\n\" +\n                \"advmod(under-3, still-2)\\n\" +\n                \"rcmod(those-1, under-3)\\n\" +\n                \"nn(rules-5, GASB-4)\\n\" +\n                \"pobj(under-3, rules-5)\\n\",\n        \"det(house-3, the-1)\\n\" +\n                \"nn(house-3, auction-2)\\n\" +\n                \"root(ROOT-0, house-3)\\n\" +\n                \"rcmod(house-3, founded-4)\\n\" +\n                \"prep(founded-4, in-5)\\n\" +\n                \"pobj(in-5, London-6)\\n\" +\n                \"tmod(founded-4, 1744-7)\\n\" +\n                \"cc(founded-4, and-8)\\n\" +\n                \"advmod(under-10, now-9)\\n\" +\n                \"conj(founded-4, under-10)\\n\" +\n                \"det(umbrella-12, the-11)\\n\" +\n                \"pobj(under-10, umbrella-12)\\n\" +\n                \"prep(umbrella-12, of-13)\\n\" +\n                \"poss(Inc.-17, Sotheby-14)\\n\" +\n                \"possessive(Sotheby-14, 's-15)\\n\" +\n                \"nn(Inc.-17, Holdings-16)\\n\" +\n                \"pobj(of-13, Inc.-17)\\n\",\n        \"nsubj(impossible-4, morcillas-1)\\n\" +\n                \"cop(impossible-4, are-2)\\n\" +\n                \"advmod(impossible-4, basically-3)\\n\" +\n                \"root(ROOT-0, impossible-4)\\n\" +\n                \"aux(find-6, to-5)\\n\" +\n                \"ccomp(impossible-4, find-6)\\n\" +\n                \"prep(find-6, in-7)\\n\" +\n                \"pobj(in-7, California-8)\\n\",\n        \"aux(wait-3, Do-1)\\n\" +\n                \"neg(wait-3, n't-2)\\n\" +\n                \"root(ROOT-0, wait-3)\\n\" +\n                \"parataxis(wait-3, act-5)\\n\" +\n                \"advmod(act-5, now-6)\\n\",\n        \"det(Council-3, The-1)\\n\" +\n                \"nn(Council-3, Parks-2)\\n\" +\n                \"nsubj(wrote-4, Council-3)\\n\" +\n                \"root(ROOT-0, wrote-4)\\n\" +\n                \"det(BPCA-6, the-5)\\n\" +\n                \"dobj(wrote-4, BPCA-6)\\n\" +\n                \"mark(belongs-25, that-7)\\n\" +\n                \"det(garden-23, this-8)\\n\" +\n                \"advmod(private-12, too-10)\\n\" +\n                \"amod(garden-23, private-12)\\n\" +\n                \"conj(private-12, exclusive-15)\\n\" +\n                \"conj(private-12, complex-18)\\n\" +\n                \"cc(private-12, and-19)\\n\" +\n                \"conj(private-12, expensive-20)\\n\" +\n                \"amod(garden-23, enclosed-22)\\n\" +\n                \"nsubj(belongs-25, garden-23)\\n\" +\n                \"ccomp(wrote-4, belongs-25)\\n\" +\n                \"prep(belongs-25, in-26)\\n\" +\n                \"advmod(location-29, almost-27)\\n\" +\n                \"det(location-29, any-28)\\n\" +\n                \"pobj(in-26, location-29)\\n\" +\n                \"cc(location-29, but-30)\\n\" +\n                \"det(waterfront-32, the-31)\\n\" +\n                \"conj(location-29, waterfront-32)\\n\",\n        \"cc(have-6, And-2)\\n\" +\n                \"nsubj(have-6, you-3)\\n\" +\n                \"aux(have-6, ca-4)\\n\" +\n                \"neg(have-6, n't-5)\\n\" +\n                \"root(ROOT-0, have-6)\\n\" +\n                \"nsubj(hearing-12, taxpayers-7)\\n\" +\n                \"partmod(taxpayers-7, coming-8)\\n\" +\n                \"prep(coming-8, into-9)\\n\" +\n                \"det(audit-11, an-10)\\n\" +\n                \"pobj(into-9, audit-11)\\n\" +\n                \"ccomp(have-6, hearing-12)\\n\" +\n                \"dobj(hearing-12, oohs-14)\\n\" +\n                \"cc(oohs-14, and-16)\\n\" +\n                \"conj(oohs-14, ahs-18)\\n\",\n        \"amod(nationalists-3, Freed-1)\\n\" +\n                \"amod(nationalists-3, black-2)\\n\" +\n                \"nsubj(resumed-4, nationalists-3)\\n\" +\n                \"root(ROOT-0, resumed-4)\\n\" +\n                \"amod(activity-6, political-5)\\n\" +\n                \"dobj(resumed-4, activity-6)\\n\" +\n                \"prep(resumed-4, in-7)\\n\" +\n                \"nn(Africa-9, South-8)\\n\" +\n                \"pobj(in-7, Africa-9)\\n\" +\n                \"cc(resumed-4, and-10)\\n\" +\n                \"conj(resumed-4, vowed-11)\\n\" +\n                \"aux(fight-13, to-12)\\n\" +\n                \"xcomp(vowed-11, fight-13)\\n\" +\n                \"prep(fight-13, against-14)\\n\" +\n                \"pobj(against-14, apartheid-15)\\n\" +\n                \"partmod(resumed-4, raising-17)\\n\" +\n                \"dobj(raising-17, fears-18)\\n\" +\n                \"prep(fears-18, of-19)\\n\" +\n                \"det(backlash-23, a-20)\\n\" +\n                \"amod(backlash-23, possible-21)\\n\" +\n                \"amod(backlash-23, white-22)\\n\" +\n                \"pobj(of-19, backlash-23)\\n\",\n                \"auxpass(held-2, Being-1)\\n\" +\n                        \"csubj(irritates-7, held-2)\\n\" +\n                        \"advmod(below-4, well-3)\\n\" +\n                        \"prep(held-2, below-4)\\n\" +\n                        \"pobj(below-4, capacity-5)\\n\" +\n                        \"advmod(irritates-7, greatly-6)\\n\" +\n                        \"root(ROOT-0, irritates-7)\\n\" +\n                        \"dobj(irritates-7, them-8)\\n\" +\n                        \"cc(irritates-7, and-10)\\n\" +\n                        \"aux(led-12, has-11)\\n\" +\n                        \"conj(irritates-7, led-12)\\n\" +\n                        \"prep(led-12, to-13)\\n\" +\n                        \"amod(cheating-15, widespread-14)\\n\" +\n                        \"pobj(to-13, cheating-15)\\n\",\n        \"nsubj(acquired-2, They-1)\\n\" +\n                \"root(ROOT-0, acquired-2)\\n\" +\n                \"dobj(acquired-2, stakes-3)\\n\" +\n                \"prep(stakes-3, in-4)\\n\" +\n                \"amod(companies-6, bottling-5)\\n\" +\n                \"pobj(in-4, companies-6)\\n\" +\n                \"prep(companies-6, in-7)\\n\" +\n                \"det(U.S.-9, the-8)\\n\" +\n                \"pobj(in-7, U.S.-9)\\n\" +\n                \"cc(in-7, and-10)\\n\" +\n                \"conj(in-7, overseas-11)\\n\",\n    };\n\n    assertEquals(\"Test array lengths mismatch!\", testTrees.length, testAnswers.length);\n    TreeReaderFactory trf = new PennTreeReaderFactory();\n    for (int i = 0; i < testTrees.length; i++) {\n      String testTree = testTrees[i];\n      String testAnswer = testAnswers[i];\n\n      // specifying our own TreeReaderFactory is vital so that functional\n      // categories - that is -TMP and -ADV in particular - are not stripped off\n      Tree tree = Tree.valueOf(testTree, trf);\n      GrammaticalStructure gs = new EnglishGrammaticalStructure(tree);\n\n      assertEquals(\"Unexpected basic dependencies for tree \" + testTree,\n          testAnswer, EnglishGrammaticalStructure.dependenciesToString(gs, gs.typedDependencies(false), tree, false, false));\n    }\n\n  }","commit_id":"07603239835337771e5686792f708197b0f2e89a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean isFlat = isFlat(children);\n        if (isFlat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              children = t.getChildrenAsList();\n              isFlat = false;\n              break;\n            }\n          }\n        }\n\n        if (isFlat) {\n          boolean isMoney = children.get(0).value().startsWith(\"$\");\n          if (isMoney) {\n            for (int i = 1; i < children.size(); ++i) {\n              if (!children.get(i).value().startsWith(\"CD\")) {\n                isMoney = false;\n                break;\n              }\n            }\n          }\n          if (isMoney) {\n            transformMoney(t, children);\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","id":20121,"modified_method":"/**\n   * Given a tree t, if this tree contains a QP of the form\n   * QP (RB IN CD|DT ...)   well over, more than\n   * QP (JJR IN CD|DT ...)  fewer than\n   * QP (IN JJS CD|DT ...)  at least\n   * QP (... CC ...)        between 5 and 10\n   * it will transform it\n   *\n   */\n  private static void doTransform(Tree t) {\n\n    if (t.value().startsWith(\"QP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3 && children.get(0).isPreTerminal()) {\n        //go through the children and check if they match the structure we want\n        String child1 = children.get(0).value();\n        String child2 = children.get(1).value();\n        String child3 = children.get(2).value();\n        if((child3.startsWith(\"CD\") || child3.startsWith(\"DT\")) &&\n           (child1.startsWith(\"RB\") || child1.startsWith(\"JJ\") || child1.startsWith(\"IN\")) &&\n           (child2.startsWith(\"IN\") || child2.startsWith(\"JJ\"))) {\n          transformQP(t);\n          children = t.getChildrenAsList();\n        }\n      }\n      // If the children include a CC, we split that into left and\n      // right subtrees with the CC in the middle so the headfinders\n      // have an easier time interpreting the tree later on\n      if (children.size() >= 3) {\n        boolean flat = true;\n        for (int i = 0; i < children.size(); ++i) {\n          if (!children.get(i).isPreTerminal()) {\n            flat = false;\n            break;\n          }\n        }\n        if (flat) {\n          for (int i = 1; i < children.size() - 1; ++i) {\n            if (children.get(i).value().startsWith(\"CC\")) {\n              transformCC(t, children.subList(0, i), children.get(i), children.subList(i + 1, children.size()));\n              break;\n            }\n          }\n        }\n      }\n    /* --- to be written or deleted\n    } else if (t.value().startsWith(\"NP\")) {\n      //look at the children\n      List<Tree> children = t.getChildrenAsList();\n      if (children.size() >= 3) {\n\n      }\n    ---- */\n    } else if (t.isPhrasal()) {\n      for (Tree child : t.children()) {\n        doTransform(child);\n      }\n    }\n  }","commit_id":"07603239835337771e5686792f708197b0f2e89a","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Test\n  @Order(value = 2)\n  public void checkModels() {\n    final List<String> errors = new ArrayList<String>();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        for (SModel sm : extractModels(true)) {\n          MessageCollectConsumer collector = new MessageCollectConsumer();\n          ValidationUtil.validateModel(sm, collector);\n          if (collector.getErrors().isEmpty()) {\n            continue;\n          }\n\n          final StringBuilder errorMessages = new StringBuilder();\n          errorMessages.append(\"errors in model: \").append(sm.getReference().toString()).append(\"\\n\");\n          ListSequence.fromList(((List<String>) collector.getErrors())).visitAll(new IVisitor<String>() {\n            public void visit(String it) {\n              errorMessages.append(\"\\t\").append(it).append(\"\\n\");\n            }\n          });\n          errors.add(\"Broken References: \" + errorMessages.toString());\n        }\n      }\n    });\n    Assert.assertTrue(\"Model errors:\\n\" + CheckingTestsUtil.formatErrors(errors), errors.isEmpty());\n  }","id":20122,"modified_method":"@Test\n  @Order(value = 2)\n  public void checkModels() {\n    final List<String> errors = new ArrayList<String>();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        for (SModel sm : extractModels(true)) {\n          MessageCollectProcessor collector = new MessageCollectProcessor();\n          ValidationUtil.validateModel(sm, collector);\n          if (collector.getErrors().isEmpty()) {\n            continue;\n          }\n\n          final StringBuilder errorMessages = new StringBuilder();\n          errorMessages.append(\"errors in model: \").append(sm.getReference().toString()).append(\"\\n\");\n          ListSequence.fromList(((List<String>) collector.getErrors())).visitAll(new IVisitor<String>() {\n            public void visit(String it) {\n              errorMessages.append(\"\\t\").append(it).append(\"\\n\");\n            }\n          });\n          errors.add(\"Broken References: \" + errorMessages.toString());\n        }\n      }\n    });\n    Assert.assertTrue(\"Model errors:\\n\" + CheckingTestsUtil.formatErrors(errors), errors.isEmpty());\n  }","commit_id":"e82022c45a3e4bb1525eb41c82f1bcfdf1a6374f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void visitModelNode(@NotNull final SModelTreeNode node) {\n    final SModelReference mr = node.getModel().getReference();\n    scheduleModelRead(node, new Runnable() {\n      @Override\n      public void run() {\n        final SModel modelDescriptor = mr.resolve(myProject.getRepository());\n        if (modelDescriptor == null || !(modelDescriptor.isLoaded())) {\n          return;\n        }\n\n        final List<String> errors = new ArrayList<String>();\n        final List<String> warnings = new ArrayList<String>();\n        ValidationUtil.validateModel(modelDescriptor, new Consumer<ValidationProblem>() {\n          @Override\n          public void consume(ValidationProblem problem) {\n            if (problem.getSeverity() == Severity.ERROR) {\n              errors.add(problem.getMessage());\n            } else {\n              warnings.add(problem.getMessage());\n            }\n          }\n        });\n        schedule(node, new ErrorReport(node, errors, warnings));\n      }\n    });\n  }","id":20123,"modified_method":"@Override\n  public void visitModelNode(@NotNull final SModelTreeNode node) {\n    final SModelReference mr = node.getModel().getReference();\n    scheduleModelRead(node, new Runnable() {\n      @Override\n      public void run() {\n        final SModel modelDescriptor = mr.resolve(myProject.getRepository());\n        if (modelDescriptor == null || !(modelDescriptor.isLoaded())) {\n          return;\n        }\n\n        final List<String> errors = new ArrayList<String>();\n        final List<String> warnings = new ArrayList<String>();\n        ValidationUtil.validateModel(modelDescriptor, new Processor<ValidationProblem>() {\n          @Override\n          public boolean process(ValidationProblem problem) {\n            if (problem.getSeverity() == Severity.ERROR) {\n              errors.add(problem.getMessage());\n            } else {\n              warnings.add(problem.getMessage());\n            }\n            return true;\n          }\n        });\n        schedule(node, new ErrorReport(node, errors, warnings));\n      }\n    });\n  }","commit_id":"e82022c45a3e4bb1525eb41c82f1bcfdf1a6374f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public List<SearchResult<ModelCheckerIssue>> checkModel(final SModel model, ProgressMonitor monitor) {\n    monitor.start(\"model properties\", 1);\n\n    final List<SearchResult<ModelCheckerIssue>> results = ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());\n\n    ValidationUtil.validateModel(model, new Consumer<ValidationProblem>() {\n      public void consume(final ValidationProblem problem) {\n        ListSequence.fromList(results).addElement(ModelCheckerIssue.getSearchResultForModel(model, problem.getMessage(), new IModelCheckerFix() {\n          public boolean doFix() {\n            if (!(problem.canFix())) {\n              return false;\n            }\n            problem.fix();\n            return true;\n          }\n        }, ModelChecker.SEVERITY_ERROR, \"Model properties\"));\n      }\n    });\n    monitor.done();\n    return results;\n  }","id":20124,"modified_method":"@Override\n  public List<SearchResult<ModelCheckerIssue>> checkModel(final SModel model, ProgressMonitor monitor) {\n    monitor.start(\"model properties\", 1);\n\n    final List<SearchResult<ModelCheckerIssue>> results = ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());\n\n    ValidationUtil.validateModel(model, new Processor<ValidationProblem>() {\n      public boolean process(final ValidationProblem problem) {\n        ListSequence.fromList(results).addElement(ModelCheckerIssue.getSearchResultForModel(model, problem.getMessage(), new IModelCheckerFix() {\n          public boolean doFix() {\n            if (!(problem.canFix())) {\n              return false;\n            }\n            problem.fix();\n            return true;\n          }\n        }, ModelChecker.SEVERITY_ERROR, \"Model properties\"));\n        return true;\n      }\n    });\n    monitor.done();\n    return results;\n  }","commit_id":"e82022c45a3e4bb1525eb41c82f1bcfdf1a6374f","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void validateModel(@NotNull final SModel model, @NotNull Consumer<ValidationProblem> consumer) {\n    final SRepository repository = model.getRepository();\n    if (repository != null) {\n      repository.getModelAccess().checkReadAccess();\n    }\n\n    if (model instanceof TransientSModel) {\n      return;\n    }\n\n    //todo replace those two by a check for accessibility in repo\n    // XXX should not they go after InvalidSModel check, so that we could get problems of invalid model before we try to find out whether the model is registered?\n    if (model.getModule() == null) return;\n    if (jetbrains.mps.util.SNodeOperations.isModelDisposed(model)) return;\n\n    if (model instanceof InvalidSModel) {\n      Iterable<SModel.Problem> problems = model.getProblems();\n      if (!problems.iterator().hasNext()) {\n        consumer.consume(new ValidationProblem(Severity.ERROR, \"Couldn't read model\"));\n        return;\n      }\n\n      for (SModel.Problem m : problems) {\n        if (!m.isError()) continue;\n        consumer.consume(new ValidationProblem(Severity.ERROR, m.getText()));\n      }\n      return;\n    }\n\n    if (\n        !model.isReadOnly() &&\n            (model instanceof PersistenceVersionAware) &&\n            ((PersistenceVersionAware) model).getPersistenceVersion() < ModelPersistence.LAST_VERSION\n        ) {\n      consumer.consume(\n          new ValidationProblem(Severity.WARNING, \"Outdated model persistence is used: \" + ((PersistenceVersionAware) model).getPersistenceVersion() +\n              \". Please run Tools->Migration 3.2->Migrate from Names to Ids\"));\n    }\n\n    if (repository == null) {\n      consumer.consume(new ValidationProblem(Severity.WARNING, \"Model is detached from a repository, could not process further\"));\n      return;\n    }\n\n    SModule module = model.getModule();\n    final SModelReference modelToValidateRef = model.getReference();\n    for (final SModelReference reference : SModelOperations.getImportedModelUIDs(model)) {\n      if (module.resolveInDependencies(reference.getModelId()) == null) {\n        String msg = \"Can't find model: \" + SModelStereotype.withoutStereotype(reference.getModelName());\n        consumer.consume(new MissingModelError(model, msg, reference));\n      }\n      if (reference.equals(modelToValidateRef)) {\n        consumer.consume(new ImportSelfWarning(model, reference));\n      }\n    }\n\n    List<SModuleReference> langsToCheck = new ArrayList<SModuleReference>();\n    langsToCheck.addAll(SModelOperations.getAllImportedLanguages(model));\n    langsToCheck.addAll(((jetbrains.mps.smodel.SModelInternal) model).engagedOnGenerationLanguages());\n    for (final SModuleReference lang : langsToCheck) {\n      if (repository.getModule(lang.getModuleId()) == null) {\n        consumer.consume(new MissingImportedLanguageError(model, lang));\n      }\n    }\n\n    for (SModuleReference devKit : ((jetbrains.mps.smodel.SModelInternal) model).importedDevkits()) {\n      if (repository.getModule(devKit.getModuleId()) == null) {\n        consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find devkit: \" + devKit.getModuleName()) {\n        });\n      }\n    }\n  }","id":20125,"modified_method":"public static void validateModel(@NotNull final SModel model, @NotNull Processor<ValidationProblem> processor) {\n    final SRepository repository = model.getRepository();\n    if (repository != null) {\n      repository.getModelAccess().checkReadAccess();\n    }\n    if (model instanceof TransientSModel) return;\n\n    //todo replace those two by a check for accessibility in repo\n    // XXX should not they go after InvalidSModel check, so that we could get problems of invalid model before we try to find out whether the model is registered?\n    if (model.getModule() == null) return;\n    if (jetbrains.mps.util.SNodeOperations.isModelDisposed(model)) return;\n\n    if (model instanceof InvalidSModel) {\n      Iterable<SModel.Problem> problems = model.getProblems();\n      if (!problems.iterator().hasNext()) {\n        if (!processor.process(new ValidationProblem(Severity.ERROR, \"Couldn't read model\"))) return;\n        return;\n      }\n\n      for (SModel.Problem m : problems) {\n        if (!m.isError()) continue;\n        if (!processor.process(new ValidationProblem(Severity.ERROR, m.getText()))) return;\n      }\n      return;\n    }\n\n    if (\n        !model.isReadOnly() &&\n            (model instanceof PersistenceVersionAware) &&\n            ((PersistenceVersionAware) model).getPersistenceVersion() < ModelPersistence.LAST_VERSION\n        ) {\n      if (!processor.process(\n          new ValidationProblem(Severity.WARNING, \"Outdated model persistence is used: \" + ((PersistenceVersionAware) model).getPersistenceVersion() +\n              \". Please upgrade model persistence\"))) return;\n    }\n\n    if (repository == null) {\n      if (!processor.process(new ValidationProblem(Severity.WARNING, \"Model is detached from a repository, could not process further\"))) return;\n      return;\n    }\n\n    SModule module = model.getModule();\n    final SModelReference modelToValidateRef = model.getReference();\n    for (final SModelReference reference : SModelOperations.getImportedModelUIDs(model)) {\n      if (module.resolveInDependencies(reference.getModelId()) == null) {\n        String msg = \"Can't find model: \" + SModelStereotype.withoutStereotype(reference.getModelName());\n        if (!processor.process(new MissingModelError(model, msg, reference))) return;\n      }\n      if (reference.equals(modelToValidateRef)) {\n        if (!processor.process(new ImportSelfWarning(model, reference))) return;\n      }\n    }\n\n    List<SModuleReference> langsToCheck = new ArrayList<SModuleReference>();\n    langsToCheck.addAll(SModelOperations.getAllImportedLanguages(model));\n    langsToCheck.addAll(((jetbrains.mps.smodel.SModelInternal) model).engagedOnGenerationLanguages());\n    for (final SModuleReference lang : langsToCheck) {\n      if (repository.getModule(lang.getModuleId()) == null) {\n        if (!processor.process(new MissingImportedLanguageError(model, lang))) return;\n      }\n    }\n\n    for (SModuleReference devKit : ((jetbrains.mps.smodel.SModelInternal) model).importedDevkits()) {\n      if (repository.getModule(devKit.getModuleId()) == null) {\n        if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find devkit: \" + devKit.getModuleName()))) return;\n      }\n    }\n  }","commit_id":"e82022c45a3e4bb1525eb41c82f1bcfdf1a6374f","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Test\n  @Order(value = 1)\n  public void checkModuleProperties() {\n    final List<String> errors = new ArrayList<String>();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        List<SModule> modules = ListSequence.fromListAndArray(new ArrayList<SModule>(), myModule);\n        if (myModule instanceof Language) {\n          ListSequence.fromList(modules).addSequence(CollectionSequence.fromCollection(((Language) myModule).getGenerators()));\n        }\n\n        for (SModule sm : modules) {\n          MessageCollectConsumer consumer = new MessageCollectConsumer();\n          ValidationUtil.validateModule(sm, consumer);\n          if (consumer.getErrors().isEmpty()) {\n            continue;\n          }\n\n          StringBuilder errorMessages = new StringBuilder();\n          for (String item : consumer.getErrors()) {\n            errorMessages.append(\"\\t\").append(item).append(\"\\n\");\n          }\n          errors.add(\"Error in module \" + sm.getModuleName() + \": \" + errorMessages.toString());\n        }\n\n      }\n    });\n    Assert.assertTrue(\"Module property or dependency errors:\\n\" + CheckingTestsUtil.formatErrors(errors), errors.isEmpty());\n  }","id":20126,"modified_method":"@Test\n  @Order(value = 1)\n  public void checkModuleProperties() {\n    final List<String> errors = new ArrayList<String>();\n    ModelAccess.instance().runReadAction(new Runnable() {\n      public void run() {\n        List<SModule> modules = ListSequence.fromListAndArray(new ArrayList<SModule>(), myModule);\n        if (myModule instanceof Language) {\n          ListSequence.fromList(modules).addSequence(CollectionSequence.fromCollection(((Language) myModule).getGenerators()));\n        }\n\n        for (SModule sm : modules) {\n          MessageCollectProcessor processor = new MessageCollectProcessor();\n          ValidationUtil.validateModule(sm, processor);\n          if (processor.getErrors().isEmpty()) {\n            continue;\n          }\n\n          StringBuilder errorMessages = new StringBuilder();\n          for (String item : processor.getErrors()) {\n            errorMessages.append(\"\\t\").append(item).append(\"\\n\");\n          }\n          errors.add(\"Error in module \" + sm.getModuleName() + \": \" + errorMessages.toString());\n        }\n\n      }\n    });\n    Assert.assertTrue(\"Module property or dependency errors:\\n\" + CheckingTestsUtil.formatErrors(errors), errors.isEmpty());\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"@Override\n  public void visitModuleNode(@NotNull final ProjectModuleTreeNode node) {\n    final SModuleReference mr = node.getModule().getModuleReference();\n    scheduleModelRead(node, new Runnable() {\n      @Override\n      public void run() {\n        SModule module = mr.resolve(myProject.getRepository());\n\n        MessageCollectConsumer collector = new MessageCollectConsumer();\n        if (module != null) {\n          ValidationUtil.validateModule(module, collector);\n        }\n        schedule(node, new ErrorReport(node, collector.getErrors(), collector.getWarnings()));\n      }\n    });\n\n  }","id":20127,"modified_method":"@Override\n  public void visitModuleNode(@NotNull final ProjectModuleTreeNode node) {\n    final SModuleReference mr = node.getModule().getModuleReference();\n    scheduleModelRead(node, new Runnable() {\n      @Override\n      public void run() {\n        SModule module = mr.resolve(myProject.getRepository());\n\n        MessageCollectProcessor collector = new MessageCollectProcessor();\n        if (module != null) {\n          ValidationUtil.validateModule(module, collector);\n        }\n        schedule(node, new ErrorReport(node, collector.getErrors(), collector.getWarnings()));\n      }\n    });\n\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void checkModule(final SModule module, ProgressMonitor monitor) {\n    final String moduleName = module.getModuleName();\n    monitor.start(\"Checking \" + moduleName + \" module properties...\", 1);\n    try {\n      ValidationUtil.validateModule(module, new _Adapters._return_P1_E0_to_Consumer_adapter<ValidationProblem>(new _FunctionTypes._return_P1_E0<Boolean, ValidationProblem>() {\n        public Boolean invoke(final ValidationProblem vp) {\n          String severity = (vp.getSeverity() == ValidationProblem.Severity.ERROR ? ModelChecker.SEVERITY_ERROR : ModelChecker.SEVERITY_WARNING);\n          return myResults.getSearchResults().add(ModelCheckerIssue.getSearchResultForModule(module, moduleName + \": \" + vp.getMessage(), new IModelCheckerFix() {\n            public boolean doFix() {\n              if (!(vp.canFix())) {\n                return false;\n              }\n              vp.fix();\n              return true;\n            }\n          }, severity, \"module properties\"));\n        }\n      }));\n    } catch (Throwable t) {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"Error while \" + moduleName + \" module checking\", t);\n      }\n    } finally {\n      monitor.done();\n    }\n  }","id":20128,"modified_method":"public void checkModule(final SModule module, ProgressMonitor monitor) {\n    final String moduleName = module.getModuleName();\n    monitor.start(\"Checking \" + moduleName + \" module properties...\", 1);\n    try {\n      ValidationUtil.validateModule(module, new Processor<ValidationProblem>() {\n        public boolean process(final ValidationProblem vp) {\n          String severity = (vp.getSeverity() == ValidationProblem.Severity.ERROR ? ModelChecker.SEVERITY_ERROR : ModelChecker.SEVERITY_WARNING);\n          myResults.getSearchResults().add(ModelCheckerIssue.getSearchResultForModule(module, moduleName + \": \" + vp.getMessage(), new IModelCheckerFix() {\n            public boolean doFix() {\n              if (!(vp.canFix())) {\n                return false;\n              }\n              vp.fix();\n              return true;\n            }\n          }, severity, \"module properties\"));\n          return true;\n        }\n      });\n    } catch (Throwable t) {\n      if (LOG.isEnabledFor(Level.ERROR)) {\n        LOG.error(\"Error while \" + moduleName + \" module checking\", t);\n      }\n    } finally {\n      monitor.done();\n    }\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static void validateModule(final SModule m, Consumer<ValidationProblem> consumer) {\n    if (m instanceof TransientSModule || m instanceof ProjectStructureModule) return;\n\n    if (m instanceof DevKit) {\n      validateDevkit((DevKit) m, consumer);\n    } else if (m instanceof Language) {\n      validateLanguage((Language) m, consumer);\n    } else if (m instanceof Generator) {\n      validateGenerator((Generator) m, consumer);\n    } else if (m instanceof Solution) {\n      validateAbstractModule((Solution) m, consumer);\n    } else {\n      throw new IllegalArgumentException(\"Unknown module for validation: \" + m.getClass());\n    }\n  }","id":20129,"modified_method":"public static void validateModule(final SModule m, Processor<ValidationProblem> processor) {\n    if (m instanceof TransientSModule || m instanceof ProjectStructureModule) return;\n\n    if (m instanceof DevKit) {\n      validateDevkit((DevKit) m, processor);\n    } else if (m instanceof Language) {\n      validateLanguage((Language) m, processor);\n    } else if (m instanceof Generator) {\n      validateGenerator((Generator) m, processor);\n    } else if (m instanceof Solution) {\n      validateAbstractModule((Solution) m, processor);\n    } else {\n      throw new IllegalArgumentException(\"Unknown module for validation: \" + m.getClass());\n    }\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void validateLanguage(final Language language, Consumer<ValidationProblem> consumer) {\n    validateAbstractModule(language, consumer);\n\n    for (SModuleReference el : language.getExtendedLanguageRefs()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(el) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find extended language: \" + el.getModuleName()));\n    }\n\n    for (Language l : LanguageDependenciesManager.getAllExtendedLanguages(language)) {\n      SModel descriptor = LanguageAspect.BEHAVIOR.get(l);\n      if (descriptor != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR,\n          language == l ? \"Behavior aspect is absent\" : \"Cannot extend language without behavior aspect: \" + l.getModuleName()));\n    }\n\n    for (SModuleReference mr : language.getRuntimeModulesReferences()) {\n      SModule runtimeModule = ModuleRepositoryFacade.getInstance().getModule(mr);\n      if (runtimeModule == null) continue;\n      if ((runtimeModule instanceof Solution)) continue;\n\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Runtime module \" + runtimeModule + \" is not a solution\"));\n    }\n\n    for (SModelReference accessory : language.getModuleDescriptor().getAccessoryModels()) {\n      //this check is wrong in common as we don't know what the user wants to do with the acc model in build.\n      //but I'll not delete it until accessories removal just to have some warning on project consistency\n      org.jetbrains.mps.openapi.model.SModel accModel = accessory.resolve(MPSModuleRepository.getInstance());\n      if (accModel == null) continue;\n\n      if (VisibilityUtil.isVisible(language, accModel)) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find accessory model: \" + accessory.getModelName()));\n    }\n\n    if (!checkCyclicInheritance(language)) {\n      consumer.consume(new ValidationProblem(Severity.WARNING, \"Cyclic language hierarchy\"));\n    }\n  }","id":20130,"modified_method":"private static void validateLanguage(final Language language, Processor<ValidationProblem> processor) {\n    if (!validateAbstractModule(language, processor)) return;\n\n    for (SModuleReference el : language.getExtendedLanguageRefs()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(el) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find extended language: \" + el.getModuleName()))) return;\n    }\n\n    for (Language l : LanguageDependenciesManager.getAllExtendedLanguages(language)) {\n      SModel descriptor = LanguageAspect.BEHAVIOR.get(l);\n      if (descriptor != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR,\n          language == l ? \"Behavior aspect is absent\" : \"Cannot extend language without behavior aspect: \" + l.getModuleName()))) return;\n    }\n\n    for (SModuleReference mr : language.getRuntimeModulesReferences()) {\n      SModule runtimeModule = ModuleRepositoryFacade.getInstance().getModule(mr);\n      if (runtimeModule == null) continue;\n      if ((runtimeModule instanceof Solution)) continue;\n\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Runtime module \" + runtimeModule + \" is not a solution\"))) return;\n    }\n\n    for (SModelReference accessory : language.getModuleDescriptor().getAccessoryModels()) {\n      //this check is wrong in common as we don't know what the user wants to do with the acc model in build.\n      //but I'll not delete it until accessories removal just to have some warning on project consistency\n      org.jetbrains.mps.openapi.model.SModel accModel = accessory.resolve(MPSModuleRepository.getInstance());\n      if (accModel == null) continue;\n\n      if (VisibilityUtil.isVisible(language, accModel)) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find accessory model: \" + accessory.getModelName()))) return;\n    }\n\n    if (!checkCyclicInheritance(language)) {\n      if (!processor.process(new ValidationProblem(Severity.WARNING, \"Cyclic language hierarchy\"))) return;\n    }\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void warnStrictGeneratorDependencies(Generator generator, ModelDependencyScanner dependencies, Consumer<ValidationProblem> consumer) {\n    HashSet<SModule> seen = new HashSet<SModule>();\n    for (SDependency dep : generator.getDeclaredDependencies()) {\n      SModule depTarget = dep.getTarget();\n      if (depTarget == null ||\n          seen.contains(depTarget) ||\n          (dep.getScope() != SDependencyScope.EXTENDS && dep.getScope() != SDependencyScope.DEFAULT)) continue;\n\n      if (!(depTarget instanceof Generator)) continue;\n\n      HashSet<SModelReference> otherGeneratorModels = new HashSet<SModelReference>();\n      for (SModel m : depTarget.getModels()) {\n        otherGeneratorModels.add(m.getReference());\n      }\n      final Language otherGenLanguage = ((Generator) depTarget).getSourceLanguage();\n      for (SModel m : (otherGenLanguage == null ? Collections.<SModel>emptySet() : otherGenLanguage.getModels())) {\n        otherGeneratorModels.add(m.getReference());\n      }\n      seen.add(depTarget);\n      if (CollectionUtil.intersects(dependencies.getCrossModelReferences(), otherGeneratorModels)) continue;\n\n      // models of the dep.target are not referenced, likely superfluous dependency.\n      String msg = \"Superfluous dependency to generator \" + depTarget.getModuleName() + \", no generator template nor its source language's node is in use\";\n      consumer.consume(new ValidationProblem(Severity.WARNING, msg));\n    }\n  }","id":20131,"modified_method":"private static boolean warnStrictGeneratorDependencies(Generator generator, ModelDependencyScanner dependencies, Processor<ValidationProblem> processor) {\n    HashSet<SModule> seen = new HashSet<SModule>();\n    for (SDependency dep : generator.getDeclaredDependencies()) {\n      SModule depTarget = dep.getTarget();\n      if (depTarget == null ||\n          seen.contains(depTarget) ||\n          (dep.getScope() != SDependencyScope.EXTENDS && dep.getScope() != SDependencyScope.DEFAULT)) continue;\n\n      if (!(depTarget instanceof Generator)) continue;\n\n      HashSet<SModelReference> otherGeneratorModels = new HashSet<SModelReference>();\n      for (SModel m : depTarget.getModels()) {\n        otherGeneratorModels.add(m.getReference());\n      }\n      final Language otherGenLanguage = ((Generator) depTarget).getSourceLanguage();\n      for (SModel m : (otherGenLanguage == null ? Collections.<SModel>emptySet() : otherGenLanguage.getModels())) {\n        otherGeneratorModels.add(m.getReference());\n      }\n      seen.add(depTarget);\n      if (CollectionUtil.intersects(dependencies.getCrossModelReferences(), otherGeneratorModels)) continue;\n\n      // models of the dep.target are not referenced, likely superfluous dependency.\n      String msg = \"Superfluous dependency to generator \" + depTarget.getModuleName() + \", no generator template nor its source language's node is in use\";\n      if (!processor.process(new ValidationProblem(Severity.WARNING, msg))) return false;\n    }\n    return true;\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void warnMissingTargetLangRuntime(Generator generator, Set<String> usedLanguages, Consumer<ValidationProblem> consumer) {\n    Language sourceLanguage = generator.getSourceLanguage();\n    usedLanguages.remove(sourceLanguage.getModuleName());\n    if (usedLanguages.isEmpty()) return;\n\n    final HashSet<SModuleReference> compileTimeDeps = new HashSet<SModuleReference>();\n    for (SModule d : new GlobalModuleDependenciesManager(sourceLanguage).getModules(Deptype.COMPILE)) {\n      compileTimeDeps.add(d.getModuleReference());\n    }\n\n    for (String lang : usedLanguages) {\n      Language language = ModuleRepositoryFacade.getInstance().getModule(lang, Language.class);\n      if (language == null || language.getRuntimeModulesReferences().isEmpty()) continue;\n      // language we generate into (target) has runtime, check we've got appropriate dependency\n      if (compileTimeDeps.containsAll(language.getRuntimeModulesReferences())) continue;\n\n      consumer.consume(new ValidationProblem(Severity.WARNING, String.format(\"%s shall specify language %s as generation target\", sourceLanguage, lang)));\n    }\n  }","id":20132,"modified_method":"private static boolean warnMissingTargetLangRuntime(Generator generator, Set<String> usedLanguages, Processor<ValidationProblem> processor) {\n    Language sourceLanguage = generator.getSourceLanguage();\n    usedLanguages.remove(sourceLanguage.getModuleName());\n    if (usedLanguages.isEmpty()) return true;\n\n    final HashSet<SModuleReference> compileTimeDeps = new HashSet<SModuleReference>();\n    for (SModule d : new GlobalModuleDependenciesManager(sourceLanguage).getModules(Deptype.COMPILE)) {\n      compileTimeDeps.add(d.getModuleReference());\n    }\n\n    for (String lang : usedLanguages) {\n      Language language = ModuleRepositoryFacade.getInstance().getModule(lang, Language.class);\n      if (language == null || language.getRuntimeModulesReferences().isEmpty()) continue;\n      // language we generate into (target) has runtime, check we've got appropriate dependency\n      if (compileTimeDeps.containsAll(language.getRuntimeModulesReferences())) continue;\n\n      if (!processor.process(new ValidationProblem(Severity.WARNING, String.format(\"%s shall specify language %s as generation target\", sourceLanguage, lang))))\n        return false;\n    }\n    return true;\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void validateAbstractModule(final AbstractModule module, Consumer<ValidationProblem> consumer) {\n    Throwable loadException = module.getModuleDescriptor().getLoadException();\n    if (loadException != null) {\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Couldn't load module: \" + loadException.getMessage()));\n      return;\n    }\n\n    ModuleDescriptor descriptor = module.getModuleDescriptor();\n    for (Dependency dep : descriptor.getDependencies()) {\n      SModuleReference moduleRef = dep.getModuleRef();\n      if (ModuleRepositoryFacade.getInstance().getModule(moduleRef) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find dependency: \" + moduleRef.getModuleName()));\n    }\n    for (SModuleReference reference : descriptor.getUsedLanguages()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(reference, Language.class) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find used language: \" + reference.getModuleName()));\n    }\n    for (SModuleReference reference : descriptor.getUsedDevkits()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(reference) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find used devkit: \" + reference.getModuleName()));\n    }\n\n    if (descriptor.getSourcePaths() != null && !module.isPackaged()) {\n      for (String sourcePath : descriptor.getSourcePaths()) {\n        IFile file = FileSystem.getInstance().getFileByPath(sourcePath);\n        if (file != null && file.exists()) continue;\n        consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find source path: \" + sourcePath));\n      }\n    }\n    if (descriptor.getAdditionalJavaStubPaths() != null) {\n      for (String path : descriptor.getAdditionalJavaStubPaths()) {\n        IFile file = FileSystem.getInstance().getFileByPath(path);\n        if (file != null && file.exists()) continue;\n        String msg = (new File(path).exists() ? \"Idea VFS is not up-to-date. \" : \"\") + \"Can't find library: \" + path;\n        consumer.consume(new ValidationProblem(Severity.ERROR, msg));\n      }\n    }\n\n    // todo: =(\n    if ((module instanceof Generator)) return;\n    for (SDependency dependency : module.getDeclaredDependencies()) {\n      if (!(dependency.getTarget() instanceof Generator)) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Contains dependency on generator: \" + dependency.getTargetModule().getModuleName()));\n    }\n  }","id":20133,"modified_method":"private static boolean validateAbstractModule(final AbstractModule module, Processor<ValidationProblem> processor) {\n    Throwable loadException = module.getModuleDescriptor().getLoadException();\n    if (loadException != null) {\n      return processor.process(new ValidationProblem(Severity.ERROR, \"Couldn't load module: \" + loadException.getMessage()));\n    }\n\n    ModuleDescriptor descriptor = module.getModuleDescriptor();\n    for (Dependency dep : descriptor.getDependencies()) {\n      SModuleReference moduleRef = dep.getModuleRef();\n      if (ModuleRepositoryFacade.getInstance().getModule(moduleRef) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find dependency: \" + moduleRef.getModuleName()))) return false;\n    }\n    for (SModuleReference reference : descriptor.getUsedLanguages()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(reference, Language.class) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find used language: \" + reference.getModuleName()))) return false;\n    }\n    for (SModuleReference reference : descriptor.getUsedDevkits()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(reference) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find used devkit: \" + reference.getModuleName()))) return false;\n    }\n\n    if (descriptor.getSourcePaths() != null && !module.isPackaged()) {\n      for (String sourcePath : descriptor.getSourcePaths()) {\n        IFile file = FileSystem.getInstance().getFileByPath(sourcePath);\n        if (file != null && file.exists()) continue;\n        if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find source path: \" + sourcePath))) return false;\n      }\n    }\n    if (descriptor.getAdditionalJavaStubPaths() != null) {\n      for (String path : descriptor.getAdditionalJavaStubPaths()) {\n        IFile file = FileSystem.getInstance().getFileByPath(path);\n        if (file != null && file.exists()) continue;\n        String msg = (new File(path).exists() ? \"Idea VFS is not up-to-date. \" : \"\") + \"Can't find library: \" + path;\n        if (!processor.process(new ValidationProblem(Severity.ERROR, msg))) return false;\n      }\n    }\n\n    // todo: =(\n    if ((module instanceof Generator)) return true;\n    for (SDependency dependency : module.getDeclaredDependencies()) {\n      if (!(dependency.getTarget() instanceof Generator)) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Contains dependency on generator: \" + dependency.getTargetModule().getModuleName())))\n        return false;\n      ;\n    }\n    return true;\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void validateGenerator(final Generator generator, Consumer<ValidationProblem> consumer) {\n    validateAbstractModule(generator, consumer);\n\n    for (SModuleReference gen : generator.getModuleDescriptor().getDepGenerators()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(gen) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find generator dependency: \" + gen.getModuleName()));\n    }\n\n    Set<String> usedLanguages = new HashSet<String>();\n    ModelDependencyScanner depScan = new ModelDependencyScanner();\n    depScan.crossModelReferences(true).usedLanguages(false);\n    // dependencies check is meaningless if we didn't collect cross-generator references.\n    // XXX not sure decision to ignore utility models is right, though.\n    boolean anyGeneratorModelNotLoaded = false;\n    for (SModel model : generator.getModels()) {\n      // Note: the following method invocation traverses the whole model.\n      // For performance reasons, we perform these checks only for loaded models.\n      // FIXME this brings incorrect results for explicit Check Module actions (where one would expect thorough check)\n      // shall consider different execution models for the validator (in addition to description object instead of String)\n      if (!model.isLoaded()) {\n        anyGeneratorModelNotLoaded |= SModelStereotype.isGeneratorModel(model);\n        continue;\n      }\n      if (SModelStereotype.isGeneratorModel(model)) {\n        usedLanguages.addAll(ModelContentUtil.getUsedLanguageNamespacesInTemplateModel(model));\n      }\n      depScan.walk(model);\n    }\n    warnMissingTargetLangRuntime(generator, usedLanguages, consumer);\n\n    if (!anyGeneratorModelNotLoaded) {\n      warnStrictGeneratorDependencies(generator, depScan, consumer);\n    }\n  }","id":20134,"modified_method":"private static void validateGenerator(final Generator generator, Processor<ValidationProblem> processor) {\n    if (!validateAbstractModule(generator, processor)) return;\n\n    for (SModuleReference gen : generator.getModuleDescriptor().getDepGenerators()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(gen) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find generator dependency: \" + gen.getModuleName()))) return;\n    }\n\n    Set<String> usedLanguages = new HashSet<String>();\n    ModelDependencyScanner depScan = new ModelDependencyScanner();\n    depScan.crossModelReferences(true).usedLanguages(false);\n    // dependencies check is meaningless if we didn't collect cross-generator references.\n    // XXX not sure decision to ignore utility models is right, though.\n    boolean anyGeneratorModelNotLoaded = false;\n    for (SModel model : generator.getModels()) {\n      // Note: the following method invocation traverses the whole model.\n      // For performance reasons, we perform these checks only for loaded models.\n      // FIXME this brings incorrect results for explicit Check Module actions (where one would expect thorough check)\n      // shall consider different execution models for the validator (in addition to description object instead of String)\n      if (!model.isLoaded()) {\n        anyGeneratorModelNotLoaded |= SModelStereotype.isGeneratorModel(model);\n        continue;\n      }\n      if (SModelStereotype.isGeneratorModel(model)) {\n        usedLanguages.addAll(ModelContentUtil.getUsedLanguageNamespacesInTemplateModel(model));\n      }\n      depScan.walk(model);\n    }\n    if (!warnMissingTargetLangRuntime(generator, usedLanguages, processor)) return;\n\n    if (!anyGeneratorModelNotLoaded) {\n      warnStrictGeneratorDependencies(generator, depScan, processor);\n    }\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static void validateDevkit(final DevKit dk, Consumer<ValidationProblem> consumer) {\n    Throwable loadException = dk.getModuleDescriptor().getLoadException();\n    if (loadException != null) {\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Couldn't load devkit: \" + loadException.getMessage()));\n      return;\n    }\n\n    for (SModuleReference extDevkit : dk.getModuleDescriptor().getExtendedDevkits()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(extDevkit) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find extended devkit: \" + extDevkit.getModuleName()));\n    }\n    for (SModuleReference expLang : dk.getModuleDescriptor().getExportedLanguages()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(expLang) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find exported language: \" + expLang.getModuleName()));\n    }\n    for (SModuleReference expSol : dk.getModuleDescriptor().getExportedSolutions()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(expSol) != null) continue;\n      consumer.consume(new ValidationProblem(Severity.ERROR, \"Can't find exported language: \" + expSol.getModuleName()));\n    }\n  }","id":20135,"modified_method":"private static void validateDevkit(final DevKit dk, Processor<ValidationProblem> processor) {\n    Throwable loadException = dk.getModuleDescriptor().getLoadException();\n    if (loadException != null) {\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Couldn't load devkit: \" + loadException.getMessage()))) return;\n      return;\n    }\n\n    for (SModuleReference extDevkit : dk.getModuleDescriptor().getExtendedDevkits()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(extDevkit) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find extended devkit: \" + extDevkit.getModuleName()))) return;\n    }\n    for (SModuleReference expLang : dk.getModuleDescriptor().getExportedLanguages()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(expLang) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find exported language: \" + expLang.getModuleName()))) return;\n    }\n    for (SModuleReference expSol : dk.getModuleDescriptor().getExportedSolutions()) {\n      if (ModuleRepositoryFacade.getInstance().getModule(expSol) != null) continue;\n      if (!processor.process(new ValidationProblem(Severity.ERROR, \"Can't find exported language: \" + expSol.getModuleName()))) return;\n    }\n  }","commit_id":"391069415fb25fa0f4cdee84bfedcfb23cb12987","url":"https://github.com/JetBrains/MPS"},{"original_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            Number number = (Number)value;\n            return new Byte(number.byteValue());\n        }\n\n        final String stringValue = value.toString();\n        try\n        {\n            final NumberFormat numberFormat = getNumberFormat();\n            if (numberFormat != null)\n            {\n                return new Byte(numberFormat.parse(stringValue).byteValue());\n            }\n            return new Byte(stringValue);\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Byte\", e);\n        }\n        catch (NumberFormatException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Byte\", e);\n        }\n    }","id":20136,"modified_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            return new Byte(((Number)value).byteValue());\n        }\n\n        try\n        {\n            final Number number = getNumberFormat().parse(value.toString());\n            if (number.doubleValue() > Byte.MAX_VALUE || \n                number.doubleValue() < Byte.MIN_VALUE)\n            {\n            \tthrow new ConversionException(\"Byte value out of range\");\n            }\n            return new Byte(number.byteValue());\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + value + \"' to Byte\", e);\n        }\n    }","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Test double conversions.\n\t */\n\tpublic void testDoubleConversions()\n\t{\n        assertEquals(new Double(1.1), new DoubleConverter().convert(new Double(1.1)));\n        assertEquals(new Double(1.1), new DoubleConverter().convert(\"1.1\"));\n\t\tassertEquals(\"1.1\", new StringConverter().convert(new Double(1.1)));\n\t\ttry\n\t\t{\n\t\t\tnew DoubleConverter().convert(\"whatever\");\n\t\t\tfail(\"Conversion should have thrown an exception\");\n\t\t}\n\t\tcatch (ConversionException e)\n\t\t{\n\t\t\t// this is correct\n\t\t}\n\t}","id":20137,"modified_method":"/**\n\t * Test double conversions.\n\t */\n\tpublic void testDoubleConversions()\n\t{\n        DoubleConverter converter = new DoubleConverter(Locale.US);\n        assertEquals(Locale.US, converter.getLocale());\n        assertEquals(new Double(1.1), converter.convert(new Double(1.1)));\n        assertEquals(new Double(1.1), converter.convert(\"1.1\"));\n\t\tassertEquals(\"1.1\", new StringConverter(Locale.US).convert(new Double(1.1)));\n\t\ttry\n\t\t{\n\t\t\tconverter.convert(\"whatever\");\n\t\t\tfail(\"Conversion should have thrown an exception\");\n\t\t}\n\t\tcatch (ConversionException e)\n\t\t{\n\t\t\t// this is correct\n\t\t}\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Test integer conversions.\n\t */\n\tpublic void testIntegerConversions()\n\t{\n        assertEquals(new Integer(10), new IntegerConverter().convert(Integer.valueOf(\"10\")));\n        assertEquals(new Integer(10), new IntegerConverter().convert(\"10\"));\n        assertEquals(\"10\", new StringConverter().convert(new Integer(10)));                \n        try\n        {\n            new IntegerConverter().convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            new IntegerConverter().convert(\"\" + ((long)Integer.MAX_VALUE + 1));\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","id":20138,"modified_method":"/**\n\t * Test integer conversions.\n\t */\n\tpublic void testIntegerConversions()\n\t{\n        IntegerConverter converter = new IntegerConverter(Locale.US);\n        assertEquals(Locale.US, converter.getLocale());\n        assertEquals(new Integer(10), converter.convert(Integer.valueOf(\"10\")));\n        assertEquals(new Integer(10), converter.convert(\"10\"));\n        assertEquals(\"10\", new StringConverter(Locale.US).convert(new Integer(10)));                \n        try\n        {\n            converter.convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            converter.convert(\"\" + ((long)Integer.MAX_VALUE + 1));\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Test byte conversions.\n\t */\n\tpublic void testByteConversions()\n\t{\n        assertEquals(new Byte((byte)10), new ByteConverter().convert(Byte.valueOf(\"10\")));\n        assertEquals(new Byte((byte)10), new ByteConverter().convert(\"10\"));\n        assertEquals(\"10\", new StringConverter().convert(new Byte((byte)10)));                \n        try\n        {\n            new ByteConverter().convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            new ByteConverter().convert(\"256\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","id":20139,"modified_method":"/**\n\t * Test byte conversions.\n\t */\n\tpublic void testByteConversions()\n\t{\n        ByteConverter converter = new ByteConverter(Locale.US);\n        assertEquals(Locale.US, converter.getLocale());\n        assertEquals(new Byte((byte)10), converter.convert(Byte.valueOf(\"10\")));\n        assertEquals(new Byte((byte)10), converter.convert(\"10\"));\n        assertEquals(\"10\", new StringConverter().convert(new Byte((byte)10)));                \n        try\n        {\n            converter.convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            converter.convert(\"256\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Test long conversions.\n\t */\n\tpublic void testLongConversions()\n\t{\n        assertEquals(new Integer(10), new IntegerConverter().convert(Integer.valueOf(\"10\")));\n        assertEquals(new Integer(10), new IntegerConverter().convert(\"10\"));\n        assertEquals(\"10\", new StringConverter().convert(new Integer(10)));                \n        try\n        {\n            new IntegerConverter().convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            new LongConverter().convert(\"\" + Long.MAX_VALUE + \"0\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","id":20140,"modified_method":"/**\n\t * Test long conversions.\n\t */\n\tpublic void testLongConversions()\n\t{\n        LongConverter converter = new LongConverter(Locale.US);\n        assertEquals(Locale.US, converter.getLocale());\n        assertEquals(new Long(10), converter.convert(Long.valueOf(\"10\")));\n        assertEquals(new Long(10), converter.convert(\"10\"));\n        assertEquals(\"10\", new StringConverter(Locale.US).convert(new Long(10)));                \n        try\n        {\n            converter.convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            new LongConverter().convert(\"\" + Long.MAX_VALUE + \"0\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Test date locale conversions.\n\t */\n\tpublic void testDateConverter()\n\t{\n\t\tDateConverter converter = new DateConverter();\n        StringConverter stringConverter = new StringConverter();\n        \n        converter.setLocale(DUTCH_LOCALE);\n        stringConverter.setLocale(DUTCH_LOCALE);\n\n        Calendar cal = Calendar.getInstance(DUTCH_LOCALE);\n\t\tcal.clear();\n\t\tcal.set(2002, Calendar.OCTOBER, 24);\n\t\tDate date = cal.getTime();\n        \n\t\tassertEquals(\"24-okt-2002\", stringConverter.convert(date));\n\t\tassertEquals(date, converter.convert(\"24-okt-2002\"));\n\n\t\tconverter.setLocale(Locale.US);\n        stringConverter.setLocale(Locale.US);\n\t\tassertEquals(\"Oct 24, 2002\", stringConverter.convert(date));\n\t\tassertEquals(date, converter.convert(\"Oct 24, 2002\"));\n\t\ttry\n\t\t{\n\t\t\tconverter.convert(\"whatever\");\n\t\t\tfail(\"Conversion should have thrown an exception\");\n\t\t}\n\t\tcatch (ConversionException e)\n\t\t{\n\t\t\t// this is correct\n\t\t}\n\t}","id":20141,"modified_method":"/**\n\t * Test date locale conversions.\n\t */\n\tpublic void testDateConverter()\n\t{\n\t\tDateConverter converter = new DateConverter(DUTCH_LOCALE);\n        StringConverter stringConverter = new StringConverter(DUTCH_LOCALE);\n        \n        Calendar cal = Calendar.getInstance(DUTCH_LOCALE);\n\t\tcal.clear();\n\t\tcal.set(2002, Calendar.OCTOBER, 24);\n\t\tDate date = cal.getTime();\n        \n\t\tassertEquals(\"24-10-02\", stringConverter.convert(date));\n\t\tassertEquals(date, converter.convert(\"24-10-02\"));\n\n\t\tconverter.setLocale(Locale.US);\n        stringConverter.setLocale(Locale.US);\n\t\tassertEquals(\"10/24/02\", stringConverter.convert(date));\n\t\tassertEquals(date, converter.convert(\"10/24/02\"));\n        \n\t\ttry\n\t\t{\n\t\t\tconverter.convert(\"whatever\");\n\t\t\tfail(\"Conversion should have thrown an exception\");\n\t\t}\n\t\tcatch (ConversionException e)\n\t\t{\n\t\t\t// this is correct\n\t\t}\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Test short conversions\n\t */\n\tpublic void testShortConversions()\n\t{\n        assertEquals(new Short((short)10), new ShortConverter().convert(Short.valueOf(\"10\")));\n        assertEquals(new Short((short)10), new ShortConverter().convert(\"10\"));\n        assertEquals(\"10\", new StringConverter().convert(new Short((short)10)));                \n        try\n        {\n            new ShortConverter().convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            new ShortConverter().convert(\"\" + (Short.MAX_VALUE + 1));\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","id":20142,"modified_method":"/**\n\t * Test short conversions\n\t */\n\tpublic void testShortConversions()\n\t{\n        ShortConverter converter = new ShortConverter(Locale.US);\n        assertEquals(Locale.US, converter.getLocale());\n        assertEquals(new Short((short)10), converter.convert(Short.valueOf(\"10\")));\n        assertEquals(new Short((short)10), converter.convert(\"10\"));\n        assertEquals(\"10\", new StringConverter(Locale.US).convert(new Short((short)10)));                \n        try\n        {\n            converter.convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n        try\n        {\n            converter.convert(\"\" + (Short.MAX_VALUE + 1));\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // This is correct\n        }\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Test float conversions.\n\t */\n\tpublic void testFloatConversions()\n\t{\n        assertEquals(new Float(1.1), new FloatConverter().convert(new Float(1.1)));\n        assertEquals(new Float(1.1), new FloatConverter().convert(\"1.1\"));\n        assertEquals(\"1.1\", new StringConverter().convert(new Float(1.1)));\n        try\n        {\n            new FloatConverter().convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // this is correct\n        }\n\t}","id":20143,"modified_method":"/**\n\t * Test float conversions.\n\t */\n\tpublic void testFloatConversions()\n\t{\n        FloatConverter converter = new FloatConverter(Locale.US);\n        assertEquals(new Float(1.1), converter.convert(new Float(1.1)));\n        assertEquals(new Float(1.1), converter.convert(\"1.1\"));\n        assertEquals(\"1.1\", new StringConverter(Locale.US).convert(new Float(1.1)));\n        try\n        {\n            converter.convert(\"whatever\");\n            fail(\"Conversion should have thrown an exception\");\n        }\n        catch (ConversionException e)\n        {\n            // this is correct\n        }\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @return Returns the dateFormat.\n\t */\n\tpublic DateFormat getDateFormat()\n\t{\n\t\treturn dateFormat;\n\t}","id":20144,"modified_method":"/**\n     * @return Returns the date format.\n     */\n    public final DateFormat getDateFormat()\n    {\n        if (dateFormat == null)\n        {\n            dateFormat = DateFormat.getDateInstance(DateFormat.SHORT, getLocale());\n        }\n        return dateFormat;\n    }","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see wicket.util.convert.ILocalizable#setLocale(java.util.Locale)\n\t */\n\tpublic void setLocale(final Locale locale)\n\t{\n\t\tsuper.setLocale(locale);\n\t\tthis.dateFormat = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n\t}","id":20145,"modified_method":"/**\n\t * @see wicket.util.convert.ILocalizable#setLocale(java.util.Locale)\n\t */\n\tpublic void setLocale(final Locale locale)\n\t{\n\t\tsuper.setLocale(locale);\n\t\tthis.dateFormat = null;\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n\t */\n\tpublic Object convert(final Object value)\n\t{\n\t\tfinal String stringValue = value.toString();\n\t\ttry\n\t\t{\n\t\t\treturn dateFormat.parse(stringValue);\n\t\t}\n\t\tcatch (ParseException e)\n\t\t{\n\t\t\tthrow new ConversionException(\"Cannot convert '\" + stringValue + \"' to Date\", e);\n\t\t}\n\t\tcatch (NumberFormatException e)\n\t\t{\n\t\t\tthrow new ConversionException(\"Cannot convert '\" + stringValue + \"' to Date\", e);\n\t\t}\n\t}","id":20146,"modified_method":"/**\n\t * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n\t */\n\tpublic Object convert(final Object value)\n\t{\n\t\tfinal String stringValue = value.toString();\n\t\ttry\n\t\t{\n\t\t\treturn getDateFormat().parse(stringValue);\n\t\t}\n\t\tcatch (ParseException e)\n\t\t{\n\t\t\tthrow new ConversionException(\"Cannot convert '\" + stringValue + \"' to Date\", e);\n\t\t}\n\t\tcatch (NumberFormatException e)\n\t\t{\n\t\t\tthrow new ConversionException(\"Cannot convert '\" + stringValue + \"' to Date\", e);\n\t\t}\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @return Returns the dateFormat.\n\t */\n\tpublic final DateFormat getDateFormat()\n\t{\n        final Locale locale = getLocale();\n\t\tif (dateFormat == null && locale != null)\n\t\t{\n\t\t\tdateFormat = DateFormat.getDateInstance(DateFormat.SHORT, locale);\n\t\t\tdateFormat.setLenient(true);\n\t\t}\n\t\treturn dateFormat;\n\t}","id":20147,"modified_method":"/**\n\t * @return Returns the dateFormat.\n\t */\n\tpublic final DateFormat getDateFormat()\n\t{\n\t\tif (dateFormat == null)\n\t\t{\n\t\t\tdateFormat = DateFormat.getDateInstance(DateFormat.SHORT, getLocale());\n            dateFormat.setLenient(true);\n\t\t}\n\t\treturn dateFormat;\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            Number number = (Number)value;\n            return new Double(number.doubleValue());\n        }\n\n        final String stringValue = value.toString();\n        try\n        {\n            final NumberFormat numberFormat = getNumberFormat();\n            if (numberFormat != null)\n            {\n                return new Double(numberFormat.parse(stringValue).doubleValue());\n            }\n            return new Double(stringValue);\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Double\", e);\n        }\n        catch (NumberFormatException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Double\", e);\n        }\n    }","id":20148,"modified_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            return new Double(((Number)value).doubleValue());\n        }\n\n        try\n        {\n            return new Double(getNumberFormat().parse(value.toString()).doubleValue());\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + value + \"' to Double\", e);\n        }\n    }","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            Number number = (Number)value;\n            return new Float(number.floatValue());\n        }\n\n        final String stringValue = value.toString();\n        try\n        {\n            final NumberFormat numberFormat = getNumberFormat();\n            if (numberFormat != null)\n            {\n                return new Float(numberFormat.parse(stringValue).floatValue());\n            }\n            return new Float(stringValue);\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Float\", e);\n        }\n        catch (NumberFormatException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Float\", e);\n        }\n    }","id":20149,"modified_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            return new Float(((Number)value).floatValue());\n        }\n\n        try\n        {\n            final Number number = getNumberFormat().parse(value.toString());\n            if (number.doubleValue() > Float.MAX_VALUE || \n                number.doubleValue() < Float.MIN_VALUE)\n            {\n                throw new ConversionException(\"Float value out of range\");\n            }\n            return new Float(number.floatValue());\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + value + \"' to Float\", e);\n        }\n    }","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            Number number = (Number)value;\n            return new Integer(number.intValue());\n        }\n\n        final String stringValue = value.toString();\n        try\n        {\n            final NumberFormat numberFormat = getNumberFormat();\n            if (numberFormat != null)\n            {\n                return new Integer(numberFormat.parse(stringValue).intValue());\n            }\n            return new Integer(stringValue);\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Integer\", e);\n        }\n        catch (NumberFormatException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Integer\", e);\n        }\n    }","id":20150,"modified_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            return new Integer(((Number)value).intValue());\n        }\n\n        try\n        {\n            final Number number = getNumberFormat().parse(value.toString());\n            if (number.doubleValue() > Integer.MAX_VALUE || \n                number.doubleValue() < Integer.MIN_VALUE)\n            {\n                throw new ConversionException(\"Integer value out of range\");\n            }\n            return new Integer(number.intValue());\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + value + \"' to Integer\", e);\n        }\n    }","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            Number number = (Number)value;\n            return new Long(number.longValue());\n        }\n\n        final String stringValue = value.toString();\n        try\n        {\n            final NumberFormat numberFormat = getNumberFormat();\n            if (numberFormat != null)\n            {\n                return new Long(numberFormat.parse(stringValue).longValue());\n            }\n            return new Long(stringValue);\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Long\", e);\n        }\n        catch (NumberFormatException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Long\", e);\n        }\n    }","id":20151,"modified_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            return new Long(((Number)value).longValue());\n        }\n\n        try\n        {\n            final Number number = getNumberFormat().parse(value.toString());\n            if (number.doubleValue() > Long.MAX_VALUE || \n                number.doubleValue() < Long.MIN_VALUE)\n            {\n                throw new ConversionException(\"Long value out of range\");\n            }\n            return new Long(number.longValue());\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + value + \"' to Long\", e);\n        }\n    }","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @return Returns the numberFormat.\n\t */\n\tpublic final NumberFormat getNumberFormat()\n\t{\n        final Locale locale = getLocale();\n        if (numberFormat == null && locale != null)\n        {\n            numberFormat = NumberFormat.getIntegerInstance(locale);        \t\n        }\n\t\treturn numberFormat;\n\t}","id":20152,"modified_method":"/**\n\t * @return Returns the numberFormat.\n\t */\n\tpublic NumberFormat getNumberFormat()\n\t{\n        if (numberFormat == null)\n        {\n            numberFormat = NumberFormat.getInstance(getLocale());\n        }\n\t\treturn numberFormat;\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * @return Returns the numberFormat.\n\t */\n\tpublic final NumberFormat getNumberFormat()\n\t{\n        final Locale locale = getLocale();\n\t\tif (numberFormat == null && locale != null)\n\t\t{\n\t\t\tnumberFormat = NumberFormat.getInstance(locale);\n\t\t}\n\t\treturn numberFormat;\n\t}","id":20153,"modified_method":"/**\n\t * @return Returns the numberFormat.\n\t */\n\tpublic final NumberFormat getNumberFormat()\n\t{\n\t\tif (numberFormat == null)\n\t\t{\n\t\t\tnumberFormat = NumberFormat.getInstance(getLocale());\n\t\t}\n\t\treturn numberFormat;\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            Number number = (Number)value;\n            return new Short(number.shortValue());\n        }\n\n        final String stringValue = value.toString();\n        try\n        {\n            final NumberFormat numberFormat = getNumberFormat();\n            if (numberFormat != null)\n            {\n                return new Short(numberFormat.parse(stringValue).shortValue());\n            }\n            return new Short(stringValue);\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Short\", e);\n        }\n        catch (NumberFormatException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + stringValue + \"' to Short\", e);\n        }\n    }","id":20154,"modified_method":"/**\n     * @see wicket.util.convert.ITypeConverter#convert(java.lang.Object)\n     */\n    public Object convert(final Object value)\n    {\n        if (value instanceof Number)\n        {\n            return new Short(((Number)value).shortValue());\n        }\n\n        try\n        {\n            final Number number = getNumberFormat().parse(value.toString());\n            if (number.doubleValue() > Short.MAX_VALUE || \n                number.doubleValue() < Short.MIN_VALUE)\n            {\n                throw new ConversionException(\"Short value out of range\");\n            }\n            return new Short(number.shortValue());\n        }\n        catch (ParseException e)\n        {\n            throw new ConversionException(\"Cannot convert '\" + value + \"' to Short\", e);\n        }\n    }","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"/**\n\t * Constructor\n\t *  \n\t */\n\tpublic StringConverter()\n\t{\n        set(Date.class, new DateToStringConverter());\n        set(Byte.class, new NumberToStringConverter());\n        set(Short.class, new NumberToStringConverter());\n        set(Integer.class, new NumberToStringConverter());\n        set(Long.class, new NumberToStringConverter());\n        set(Float.class, new NumberToStringConverter());\n        set(Double.class, new NumberToStringConverter());\n\t}","id":20155,"modified_method":"/**\n\t * Constructor\n\t *  \n\t */\n\tpublic StringConverter()\n\t{\n\t}","commit_id":"837d5a5189e96ea37474650ab5b3c80120d7d460","url":"https://github.com/apache/wicket"},{"original_method":"public ClusterManager( String servers, long storeCreationTime, \n        long storeId )\n    {\n        try\n        {\n            this.zooKeeper = new ZooKeeper( servers, 5000, this );\n        }\n        catch ( IOException e )\n        {\n            throw new ZooKeeperException( \n                \"Unable to create zoo keeper client\", e );\n        }\n        this.storeCreationTime = storeCreationTime;\n        this.storeId = storeId;\n    }","id":20156,"modified_method":"public ClusterManager( String servers, long storeCreationTime, \n        long storeId, String haServers )\n    {\n        super( servers, storeCreationTime, storeId );\n        this.zooKeeper = instantiateZooKeeper();\n        this.haServers = HighlyAvailableGraphDatabase.parseHaServersConfig( haServers );\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( String[] args )\n    {\n        NeoStoreUtil store = new NeoStoreUtil( \"var/hadb\" );\n        ClusterManager clusterManager = new ClusterManager( \n                \"localhost\", store.getCreationTime(), store.getStoreId() );\n        clusterManager.dumpInfo();\n        clusterManager.close();\n    }","id":20157,"modified_method":"public static void main( String[] args )\n    {\n        NeoStoreUtil store = new NeoStoreUtil( \"var/hadb\" );\n        ClusterManager clusterManager = new ClusterManager( \n                \"localhost\", store.getCreationTime(), store.getStoreId(), \"\" );\n        System.out.println( \"Master is \" + clusterManager.getMaster() );\n        System.out.println( \"Connected slaves\" );\n        for ( MachineInfo info : clusterManager.getConnectedSlaves() )\n        {\n            System.out.println( \"\\t\" + info );\n        }\n        System.out.println( \"Disconnected slaves\" );\n        for ( MachineInfo info : clusterManager.getDisconnectedSlaves() )\n        {\n            System.out.println( \"\\t\" + info );\n        }\n        clusterManager.shutdown();\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Map<Integer, String> getHaServersFromConfig(\n            Map<?, ?> config )\n    {\n        String value = config.get( CONFIG_KEY_HA_SERVERS ).toString();\n        Map<Integer, String> result = new HashMap<Integer, String>();\n        for ( String part : value.split( Pattern.quote( \",\" ) ) )\n        {\n            String[] tokens = part.trim().split( Pattern.quote( \"=\" ) );\n            result.put( new Integer( tokens[0] ), tokens[1] );\n        }\n        return result;\n    }","id":20158,"modified_method":"private static Map<Integer, String> getHaServersFromConfig(\n            Map<?, ?> config )\n    {\n        return parseHaServersConfig( (String) config.get( CONFIG_KEY_HA_SERVERS ) );\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected <T> T executeJobOnMaster( Job<T> job ) throws Exception\n    {\n        int masterMachineId = zooKeeperMasterFetcher.getMaster();\n        return jvmByMachineId.get( masterMachineId ).executeJob( job );\n    }","id":20159,"modified_method":"@Override\n    protected <T> T executeJobOnMaster( Job<T> job ) throws Exception\n    {\n        int masterMachineId = zooKeeperMasterFetcher.getMaster().getMachineId();\n        return jvmByMachineId.get( masterMachineId ).executeJob( job );\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected void initializeDbs( int numSlaves, Map<String,String> config ) throws Exception\n    {\n        this.jvmByMachineId = new HashMap<Integer, StandaloneDbCom>();\n        haServersConfig = buildHaServersConfigValue( numSlaves+1 );\n        super.initializeDbs( numSlaves, config );\n        NeoStoreUtil store = new NeoStoreUtil( SKELETON_DB_PATH.getAbsolutePath() );\n        zooKeeperMasterFetcher = new ClusterManager(\n                buildZooKeeperServersConfigValue( ZOO_KEEPER_CLUSTER_SIZE ),\n                store.getCreationTime(), store.getStoreId() );\n    }","id":20160,"modified_method":"@Override\n    protected void initializeDbs( int numSlaves, Map<String,String> config ) throws Exception\n    {\n        this.jvmByMachineId = new HashMap<Integer, StandaloneDbCom>();\n        haServersConfig = buildHaServersConfigValue( numSlaves+1 );\n        super.initializeDbs( numSlaves, config );\n        NeoStoreUtil store = new NeoStoreUtil( SKELETON_DB_PATH.getAbsolutePath() );\n        zooKeeperMasterFetcher = new ClusterManager(\n                buildZooKeeperServersConfigValue( ZOO_KEEPER_CLUSTER_SIZE ),\n                store.getCreationTime(), store.getStoreId(),\n                buildHaServersConfigValue( numSlaves+1 ) );\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void waitForSyncConnected()\n    {\n        if ( keeperState == KeeperState.SyncConnected )\n        {\n            return;\n        }\n        if ( shutdown == true )\n        {\n            throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n        }\n        long startTime = System.currentTimeMillis();\n        long currentTime = startTime;\n        synchronized ( keeperState )\n        {\n            do\n            {\n                try\n                {\n                    keeperState.wait( 250 );\n                }\n                catch ( InterruptedException e )\n                {\n                    Thread.interrupted();\n                }\n                if ( keeperState == KeeperState.SyncConnected )\n                {\n                    return;\n                }\n                if ( shutdown == true )\n                {\n                    throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n                }\n                currentTime = System.currentTimeMillis();\n            }\n            while ( (currentTime - startTime) < TIME_OUT );\n            if ( keeperState != KeeperState.SyncConnected )\n            {\n                throw new ZooKeeperTimedOutException( \n                        \"Connection to ZooKeeper server timed out, keeper state=\" + keeperState );\n            }\n        }\n    }","id":20161,"modified_method":"private void waitForSyncConnected()\n    {\n        if ( keeperState == KeeperState.SyncConnected )\n        {\n            return;\n        }\n        if ( shutdown == true )\n        {\n            throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n        }\n        long startTime = System.currentTimeMillis();\n        long currentTime = startTime;\n        synchronized ( keeperState )\n        {\n            do\n            {\n                try\n                {\n                    keeperState.wait( 250 );\n                }\n                catch ( InterruptedException e )\n                {\n                    Thread.interrupted();\n                }\n                if ( keeperState == KeeperState.SyncConnected )\n                {\n                    return;\n                }\n                if ( shutdown == true )\n                {\n                    throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n                }\n                currentTime = System.currentTimeMillis();\n            }\n            while ( (currentTime - startTime) < SESSION_TIME_OUT );\n            if ( keeperState != KeeperState.SyncConnected )\n            {\n                throw new ZooKeeperTimedOutException( \n                        \"Connection to ZooKeeper server timed out, keeper state=\" + keeperState );\n            }\n        }\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized int getMaster()\n    {\n        waitForSyncConnected();\n        try\n        {\n            Map<Integer, Pair<Integer, Long>> rawData = new HashMap<Integer, Pair<Integer,Long>>();\n            String root = getRoot();\n            List<String> children = zooKeeper.getChildren( root, false );\n            int currentMasterId = -1;\n            int lowestSeq = Integer.MAX_VALUE;\n            long highestTxId = -1;\n            for ( String child : children )\n            {\n                if ( child.equals( MASTER_NOTIFY_CHILD ) )\n                {\n                    continue;\n                }\n                \n                int index = child.indexOf( '_' );\n                int id = Integer.parseInt( child.substring( 0, index ) );\n                int seq = Integer.parseInt( child.substring( index + 1 ) );                \n                try\n                {\n                    byte[] data = zooKeeper.getData( root + \"/\" + child, false, \n                        null );\n                    ByteBuffer buf = ByteBuffer.wrap( data );\n                    long tx = buf.getLong();\n                    if ( rawData.put( id, new Pair<Integer, Long>( seq, tx ) ) != null )\n                    {\n                        System.out.println( \"warning: \" + id + \" found more than once\" );\n                    }\n                    if ( tx >= highestTxId )\n                    {\n                        if ( tx > highestTxId || seq < lowestSeq )\n                        {\n                            currentMasterId = id;\n                            lowestSeq = seq;\n                        }\n                        highestTxId = tx;\n                    }\n                }\n                catch ( KeeperException inner )\n                {\n                    if ( inner.code() != KeeperException.Code.NONODE )\n                    {\n                        throw new ZooKeeperException( \"Unabe to get master.\", \n                            inner );\n                    }\n                }\n            }\n            System.out.println( \"getMaster: \" + currentMasterId + \" based on \" + rawData );\n            setMasterChangeWatcher( currentMasterId );\n            return currentMasterId;\n        }\n        catch ( KeeperException e )\n        {\n            throw new ZooKeeperException( \"Unable to get master\", e );\n        }\n        catch ( InterruptedException e )\n        {\n            Thread.interrupted();\n            throw new ZooKeeperException( \"Interrupted.\", e );\n        }\n    }","id":20162,"modified_method":"public synchronized MachineInfo getMaster()\n    {\n        waitForSyncConnected();\n        MachineInfo result = super.getMaster();\n        if ( result != null )\n        {\n            setMasterChangeWatcher( result.getMachineId() );\n        }\n        return result;\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"private String getRoot()\n    {\n        String rootPath = \"/\" + storeCreationTime + \"_\" + storeId;\n        byte[] rootData = null;\n        do\n        {\n            try\n            {\n                rootData = zooKeeper.getData( rootPath, false, null );\n                return rootPath;\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NONODE )\n                {\n                    throw new ZooKeeperException( \"Unable to get root node\", \n                        e ); \n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n            // try create root\n            try\n            {\n                byte data[] = new byte[0];\n                zooKeeper.create( rootPath, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, \n                    CreateMode.PERSISTENT );\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NODEEXISTS )\n                {\n                    throw new ZooKeeperException( \"Unable to create root\", e );\n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n        } while ( rootData == null );\n        throw new IllegalStateException();\n    }","id":20163,"modified_method":"public String getRoot()\n    {\n        String rootPath = super.getRoot();\n        \n        // Make sure it exists\n        byte[] rootData = null;\n        do\n        {\n            try\n            {\n                rootData = zooKeeper.getData( rootPath, false, null );\n                return rootPath;\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NONODE )\n                {\n                    throw new ZooKeeperException( \"Unable to get root node\", \n                        e ); \n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n            // try create root\n            try\n            {\n                byte data[] = new byte[0];\n                zooKeeper.create( rootPath, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, \n                    CreateMode.PERSISTENT );\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NODEEXISTS )\n                {\n                    throw new ZooKeeperException( \"Unable to create root\", e );\n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n        } while ( rootData == null );\n        throw new IllegalStateException();\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void shutdown()\n    {\n        try\n        {\n            shutdown = true;\n            zooKeeper.close();\n        }\n        catch ( InterruptedException e )\n        {\n            throw new ZooKeeperException( \n                \"Error closing zookeeper connection\", e );\n        }\n    }","id":20164,"modified_method":"public void shutdown()\n    {\n        this.shutdown = true;\n        super.shutdown();\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ZooClient( String servers, int machineId, long storeCreationTime, \n        long storeId, long committedTx, ResponseReceiver receiver )\n    {\n        this.servers = servers;\n        this.receiver = receiver;\n        instantiateZooKeeper();\n        this.machineId = machineId;\n        this.storeCreationTime = storeCreationTime;\n        this.storeId = storeId;\n        this.committedTx = committedTx;\n        this.sequenceNr = \"not initialized yet\";\n    }","id":20165,"modified_method":"public ZooClient( String servers, int machineId, long storeCreationTime, \n        long storeId, long committedTx, ResponseReceiver receiver )\n    {\n        super( servers, storeCreationTime, storeId );\n        this.zooKeeper = instantiateZooKeeper();\n        this.receiver = receiver;\n        this.machineId = machineId;\n        this.committedTx = committedTx;\n        this.sequenceNr = \"not initialized yet\";\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Master getMaster()\n    {\n        if ( masterClient != null )\n        {\n            return masterClient;\n        }\n        \n        int masterId = zooClient.getMaster();\n        if ( masterId == machineId )\n        {\n            throw new ZooKeeperException( \"I am master, so can't call getMaster() here\",\n                    new Exception() );\n        }\n        invalidateMaster();\n        createMaster( masterId );\n        return masterClient;\n    }","id":20166,"modified_method":"public Master getMaster()\n    {\n        if ( masterClient != null )\n        {\n            return masterClient;\n        }\n        \n        MachineInfo master = zooClient.getMaster();\n        if ( master != null && master.getMachineId() == machineId )\n        {\n            throw new ZooKeeperException( \"I am master, so can't call getMaster() here\",\n                    new Exception() );\n        }\n        invalidateMaster();\n        if ( master != null )\n        {\n            createMaster( master.getMachineId() );\n        }\n        else\n        {\n            // TODO Really?\n            createMaster( -1 );\n        }\n        return masterClient;\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public boolean thisIsMaster()\n    {\n        return zooClient.getMaster() == machineId;\n    }","id":20167,"modified_method":"public boolean thisIsMaster()\n    {\n        MachineInfo master = zooClient.getMaster();\n        return master != null && master.getMachineId() == machineId;\n    }","commit_id":"74082a4fb0d7264122e285374584bbd828ac202e","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ClusterManager( String servers, long storeCreationTime, \n        long storeId )\n    {\n        try\n        {\n            this.zooKeeper = new ZooKeeper( servers, 5000, this );\n        }\n        catch ( IOException e )\n        {\n            throw new ZooKeeperException( \n                \"Unable to create zoo keeper client\", e );\n        }\n        this.storeCreationTime = storeCreationTime;\n        this.storeId = storeId;\n    }","id":20168,"modified_method":"public ClusterManager( String servers, long storeCreationTime, \n        long storeId, String haServers )\n    {\n        super( servers, storeCreationTime, storeId );\n        this.zooKeeper = instantiateZooKeeper();\n        this.haServers = HighlyAvailableGraphDatabase.parseHaServersConfig( haServers );\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( String[] args )\n    {\n        NeoStoreUtil store = new NeoStoreUtil( \"var/hadb\" );\n        ClusterManager clusterManager = new ClusterManager( \n                \"localhost\", store.getCreationTime(), store.getStoreId() );\n        clusterManager.dumpInfo();\n        clusterManager.close();\n    }","id":20169,"modified_method":"public static void main( String[] args )\n    {\n        NeoStoreUtil store = new NeoStoreUtil( \"var/hadb\" );\n        ClusterManager clusterManager = new ClusterManager( \n                \"localhost\", store.getCreationTime(), store.getStoreId(), \"\" );\n        System.out.println( \"Master is \" + clusterManager.getMaster() );\n        System.out.println( \"Connected slaves\" );\n        for ( MachineInfo info : clusterManager.getConnectedSlaves() )\n        {\n            System.out.println( \"\\t\" + info );\n        }\n        System.out.println( \"Disconnected slaves\" );\n        for ( MachineInfo info : clusterManager.getDisconnectedSlaves() )\n        {\n            System.out.println( \"\\t\" + info );\n        }\n        clusterManager.shutdown();\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Map<Integer, String> getHaServersFromConfig(\n            Map<?, ?> config )\n    {\n        String value = config.get( CONFIG_KEY_HA_SERVERS ).toString();\n        Map<Integer, String> result = new HashMap<Integer, String>();\n        for ( String part : value.split( Pattern.quote( \",\" ) ) )\n        {\n            String[] tokens = part.trim().split( Pattern.quote( \"=\" ) );\n            result.put( new Integer( tokens[0] ), tokens[1] );\n        }\n        return result;\n    }","id":20170,"modified_method":"private static Map<Integer, String> getHaServersFromConfig(\n            Map<?, ?> config )\n    {\n        return parseHaServersConfig( (String) config.get( CONFIG_KEY_HA_SERVERS ) );\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected void initializeDbs( int numSlaves, Map<String,String> config ) throws Exception\n    {\n        this.jvmByMachineId = new HashMap<Integer, StandaloneDbCom>();\n        haServersConfig = buildHaServersConfigValue( numSlaves+1 );\n        super.initializeDbs( numSlaves, config );\n        NeoStoreUtil store = new NeoStoreUtil( SKELETON_DB_PATH.getAbsolutePath() );\n        zooKeeperMasterFetcher = new ClusterManager(\n                buildZooKeeperServersConfigValue( ZOO_KEEPER_CLUSTER_SIZE ),\n                store.getCreationTime(), store.getStoreId() );\n    }","id":20171,"modified_method":"@Override\n    protected void initializeDbs( int numSlaves, Map<String,String> config ) throws Exception\n    {\n        this.jvmByMachineId = new HashMap<Integer, StandaloneDbCom>();\n        haServersConfig = buildHaServersConfigValue( numSlaves+1 );\n        super.initializeDbs( numSlaves, config );\n        NeoStoreUtil store = new NeoStoreUtil( SKELETON_DB_PATH.getAbsolutePath() );\n        zooKeeperMasterFetcher = new ClusterManager(\n                buildZooKeeperServersConfigValue( ZOO_KEEPER_CLUSTER_SIZE ),\n                store.getCreationTime(), store.getStoreId(),\n                buildHaServersConfigValue( numSlaves+1 ) );\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected <T> T executeJobOnMaster( Job<T> job ) throws Exception\n    {\n        int masterMachineId = zooKeeperMasterFetcher.getMaster();\n        return jvmByMachineId.get( masterMachineId ).executeJob( job );\n    }","id":20172,"modified_method":"@Override\n    protected <T> T executeJobOnMaster( Job<T> job ) throws Exception\n    {\n        int masterMachineId = zooKeeperMasterFetcher.getMaster().getMachineId();\n        return jvmByMachineId.get( masterMachineId ).executeJob( job );\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void shutdown()\n    {\n        try\n        {\n            shutdown = true;\n            zooKeeper.close();\n        }\n        catch ( InterruptedException e )\n        {\n            throw new ZooKeeperException( \n                \"Error closing zookeeper connection\", e );\n        }\n    }","id":20173,"modified_method":"public void shutdown()\n    {\n        this.shutdown = true;\n        super.shutdown();\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ZooClient( String servers, int machineId, long storeCreationTime, \n        long storeId, long committedTx, ResponseReceiver receiver )\n    {\n        this.servers = servers;\n        this.receiver = receiver;\n        instantiateZooKeeper();\n        this.machineId = machineId;\n        this.storeCreationTime = storeCreationTime;\n        this.storeId = storeId;\n        this.committedTx = committedTx;\n        this.sequenceNr = \"not initialized yet\";\n    }","id":20174,"modified_method":"public ZooClient( String servers, int machineId, long storeCreationTime, \n        long storeId, long committedTx, ResponseReceiver receiver )\n    {\n        super( servers, storeCreationTime, storeId );\n        this.zooKeeper = instantiateZooKeeper();\n        this.receiver = receiver;\n        this.machineId = machineId;\n        this.committedTx = committedTx;\n        this.sequenceNr = \"not initialized yet\";\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void waitForSyncConnected()\n    {\n        if ( keeperState == KeeperState.SyncConnected )\n        {\n            return;\n        }\n        if ( shutdown == true )\n        {\n            throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n        }\n        long startTime = System.currentTimeMillis();\n        long currentTime = startTime;\n        synchronized ( keeperState )\n        {\n            do\n            {\n                try\n                {\n                    keeperState.wait( 250 );\n                }\n                catch ( InterruptedException e )\n                {\n                    Thread.interrupted();\n                }\n                if ( keeperState == KeeperState.SyncConnected )\n                {\n                    return;\n                }\n                if ( shutdown == true )\n                {\n                    throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n                }\n                currentTime = System.currentTimeMillis();\n            }\n            while ( (currentTime - startTime) < TIME_OUT );\n            if ( keeperState != KeeperState.SyncConnected )\n            {\n                throw new ZooKeeperTimedOutException( \n                        \"Connection to ZooKeeper server timed out, keeper state=\" + keeperState );\n            }\n        }\n    }","id":20175,"modified_method":"private void waitForSyncConnected()\n    {\n        if ( keeperState == KeeperState.SyncConnected )\n        {\n            return;\n        }\n        if ( shutdown == true )\n        {\n            throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n        }\n        long startTime = System.currentTimeMillis();\n        long currentTime = startTime;\n        synchronized ( keeperState )\n        {\n            do\n            {\n                try\n                {\n                    keeperState.wait( 250 );\n                }\n                catch ( InterruptedException e )\n                {\n                    Thread.interrupted();\n                }\n                if ( keeperState == KeeperState.SyncConnected )\n                {\n                    return;\n                }\n                if ( shutdown == true )\n                {\n                    throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n                }\n                currentTime = System.currentTimeMillis();\n            }\n            while ( (currentTime - startTime) < SESSION_TIME_OUT );\n            if ( keeperState != KeeperState.SyncConnected )\n            {\n                throw new ZooKeeperTimedOutException( \n                        \"Connection to ZooKeeper server timed out, keeper state=\" + keeperState );\n            }\n        }\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"private String getRoot()\n    {\n        String rootPath = \"/\" + storeCreationTime + \"_\" + storeId;\n        byte[] rootData = null;\n        do\n        {\n            try\n            {\n                rootData = zooKeeper.getData( rootPath, false, null );\n                return rootPath;\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NONODE )\n                {\n                    throw new ZooKeeperException( \"Unable to get root node\", \n                        e ); \n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n            // try create root\n            try\n            {\n                byte data[] = new byte[0];\n                zooKeeper.create( rootPath, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, \n                    CreateMode.PERSISTENT );\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NODEEXISTS )\n                {\n                    throw new ZooKeeperException( \"Unable to create root\", e );\n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n        } while ( rootData == null );\n        throw new IllegalStateException();\n    }","id":20176,"modified_method":"public String getRoot()\n    {\n        String rootPath = super.getRoot();\n        \n        // Make sure it exists\n        byte[] rootData = null;\n        do\n        {\n            try\n            {\n                rootData = zooKeeper.getData( rootPath, false, null );\n                return rootPath;\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NONODE )\n                {\n                    throw new ZooKeeperException( \"Unable to get root node\", \n                        e ); \n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n            // try create root\n            try\n            {\n                byte data[] = new byte[0];\n                zooKeeper.create( rootPath, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, \n                    CreateMode.PERSISTENT );\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NODEEXISTS )\n                {\n                    throw new ZooKeeperException( \"Unable to create root\", e );\n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n        } while ( rootData == null );\n        throw new IllegalStateException();\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized int getMaster()\n    {\n        waitForSyncConnected();\n        try\n        {\n            Map<Integer, Pair<Integer, Long>> rawData = new HashMap<Integer, Pair<Integer,Long>>();\n            String root = getRoot();\n            List<String> children = zooKeeper.getChildren( root, false );\n            int currentMasterId = -1;\n            int lowestSeq = Integer.MAX_VALUE;\n            long highestTxId = -1;\n            for ( String child : children )\n            {\n                if ( child.equals( MASTER_NOTIFY_CHILD ) )\n                {\n                    continue;\n                }\n                \n                int index = child.indexOf( '_' );\n                int id = Integer.parseInt( child.substring( 0, index ) );\n                int seq = Integer.parseInt( child.substring( index + 1 ) );                \n                try\n                {\n                    byte[] data = zooKeeper.getData( root + \"/\" + child, false, \n                        null );\n                    ByteBuffer buf = ByteBuffer.wrap( data );\n                    long tx = buf.getLong();\n                    if ( rawData.put( id, new Pair<Integer, Long>( seq, tx ) ) != null )\n                    {\n                        System.out.println( \"warning: \" + id + \" found more than once\" );\n                    }\n                    if ( tx >= highestTxId )\n                    {\n                        if ( tx > highestTxId || seq < lowestSeq )\n                        {\n                            currentMasterId = id;\n                            lowestSeq = seq;\n                        }\n                        highestTxId = tx;\n                    }\n                }\n                catch ( KeeperException inner )\n                {\n                    if ( inner.code() != KeeperException.Code.NONODE )\n                    {\n                        throw new ZooKeeperException( \"Unabe to get master.\", \n                            inner );\n                    }\n                }\n            }\n            System.out.println( \"getMaster: \" + currentMasterId + \" based on \" + rawData );\n            setMasterChangeWatcher( currentMasterId );\n            return currentMasterId;\n        }\n        catch ( KeeperException e )\n        {\n            throw new ZooKeeperException( \"Unable to get master\", e );\n        }\n        catch ( InterruptedException e )\n        {\n            Thread.interrupted();\n            throw new ZooKeeperException( \"Interrupted.\", e );\n        }\n    }","id":20177,"modified_method":"public synchronized MachineInfo getMaster()\n    {\n        waitForSyncConnected();\n        MachineInfo result = super.getMaster();\n        if ( result != null )\n        {\n            setMasterChangeWatcher( result.getMachineId() );\n        }\n        return result;\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public boolean thisIsMaster()\n    {\n        return zooClient.getMaster() == machineId;\n    }","id":20178,"modified_method":"public boolean thisIsMaster()\n    {\n        MachineInfo master = zooClient.getMaster();\n        return master != null && master.getMachineId() == machineId;\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Master getMaster()\n    {\n        if ( masterClient != null )\n        {\n            return masterClient;\n        }\n        \n        int masterId = zooClient.getMaster();\n        if ( masterId == machineId )\n        {\n            throw new ZooKeeperException( \"I am master, so can't call getMaster() here\",\n                    new Exception() );\n        }\n        invalidateMaster();\n        createMaster( masterId );\n        return masterClient;\n    }","id":20179,"modified_method":"public Master getMaster()\n    {\n        if ( masterClient != null )\n        {\n            return masterClient;\n        }\n        \n        MachineInfo master = zooClient.getMaster();\n        if ( master != null && master.getMachineId() == machineId )\n        {\n            throw new ZooKeeperException( \"I am master, so can't call getMaster() here\",\n                    new Exception() );\n        }\n        invalidateMaster();\n        if ( master != null )\n        {\n            createMaster( master.getMachineId() );\n        }\n        else\n        {\n            // TODO Really?\n            createMaster( -1 );\n        }\n        return masterClient;\n    }","commit_id":"caf2fde370872300d9c317d68ec6d33c1ec80fb7","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ClusterManager( String servers, long storeCreationTime, \n        long storeId )\n    {\n        try\n        {\n            this.zooKeeper = new ZooKeeper( servers, 5000, this );\n        }\n        catch ( IOException e )\n        {\n            throw new ZooKeeperException( \n                \"Unable to create zoo keeper client\", e );\n        }\n        this.storeCreationTime = storeCreationTime;\n        this.storeId = storeId;\n    }","id":20180,"modified_method":"public ClusterManager( String servers, long storeCreationTime, \n        long storeId, String haServers )\n    {\n        super( servers, storeCreationTime, storeId );\n        this.zooKeeper = instantiateZooKeeper();\n        this.haServers = HighlyAvailableGraphDatabase.parseHaServersConfig( haServers );\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static void main( String[] args )\n    {\n        NeoStoreUtil store = new NeoStoreUtil( \"var/hadb\" );\n        ClusterManager clusterManager = new ClusterManager( \n                \"localhost\", store.getCreationTime(), store.getStoreId() );\n        clusterManager.dumpInfo();\n        clusterManager.close();\n    }","id":20181,"modified_method":"public static void main( String[] args )\n    {\n        NeoStoreUtil store = new NeoStoreUtil( \"var/hadb\" );\n        ClusterManager clusterManager = new ClusterManager( \n                \"localhost\", store.getCreationTime(), store.getStoreId(), \"\" );\n        System.out.println( \"Master is \" + clusterManager.getMaster() );\n        System.out.println( \"Connected slaves\" );\n        for ( MachineInfo info : clusterManager.getConnectedSlaves() )\n        {\n            System.out.println( \"\\t\" + info );\n        }\n        System.out.println( \"Disconnected slaves\" );\n        for ( MachineInfo info : clusterManager.getDisconnectedSlaves() )\n        {\n            System.out.println( \"\\t\" + info );\n        }\n        clusterManager.shutdown();\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static Map<Integer, String> getHaServersFromConfig(\n            Map<?, ?> config )\n    {\n        String value = config.get( CONFIG_KEY_HA_SERVERS ).toString();\n        Map<Integer, String> result = new HashMap<Integer, String>();\n        for ( String part : value.split( Pattern.quote( \",\" ) ) )\n        {\n            String[] tokens = part.trim().split( Pattern.quote( \"=\" ) );\n            result.put( new Integer( tokens[0] ), tokens[1] );\n        }\n        return result;\n    }","id":20182,"modified_method":"private static Map<Integer, String> getHaServersFromConfig(\n            Map<?, ?> config )\n    {\n        return parseHaServersConfig( (String) config.get( CONFIG_KEY_HA_SERVERS ) );\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected <T> T executeJobOnMaster( Job<T> job ) throws Exception\n    {\n        int masterMachineId = zooKeeperMasterFetcher.getMaster();\n        return jvmByMachineId.get( masterMachineId ).executeJob( job );\n    }","id":20183,"modified_method":"@Override\n    protected <T> T executeJobOnMaster( Job<T> job ) throws Exception\n    {\n        int masterMachineId = zooKeeperMasterFetcher.getMaster().getMachineId();\n        return jvmByMachineId.get( masterMachineId ).executeJob( job );\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    protected void initializeDbs( int numSlaves, Map<String,String> config ) throws Exception\n    {\n        this.jvmByMachineId = new HashMap<Integer, StandaloneDbCom>();\n        haServersConfig = buildHaServersConfigValue( numSlaves+1 );\n        super.initializeDbs( numSlaves, config );\n        NeoStoreUtil store = new NeoStoreUtil( SKELETON_DB_PATH.getAbsolutePath() );\n        zooKeeperMasterFetcher = new ClusterManager(\n                buildZooKeeperServersConfigValue( ZOO_KEEPER_CLUSTER_SIZE ),\n                store.getCreationTime(), store.getStoreId() );\n    }","id":20184,"modified_method":"@Override\n    protected void initializeDbs( int numSlaves, Map<String,String> config ) throws Exception\n    {\n        this.jvmByMachineId = new HashMap<Integer, StandaloneDbCom>();\n        haServersConfig = buildHaServersConfigValue( numSlaves+1 );\n        super.initializeDbs( numSlaves, config );\n        NeoStoreUtil store = new NeoStoreUtil( SKELETON_DB_PATH.getAbsolutePath() );\n        zooKeeperMasterFetcher = new ClusterManager(\n                buildZooKeeperServersConfigValue( ZOO_KEEPER_CLUSTER_SIZE ),\n                store.getCreationTime(), store.getStoreId(),\n                buildHaServersConfigValue( numSlaves+1 ) );\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized int getMaster()\n    {\n        waitForSyncConnected();\n        try\n        {\n            Map<Integer, Pair<Integer, Long>> rawData = new HashMap<Integer, Pair<Integer,Long>>();\n            String root = getRoot();\n            List<String> children = zooKeeper.getChildren( root, false );\n            int currentMasterId = -1;\n            int lowestSeq = Integer.MAX_VALUE;\n            long highestTxId = -1;\n            for ( String child : children )\n            {\n                if ( child.equals( MASTER_NOTIFY_CHILD ) )\n                {\n                    continue;\n                }\n                \n                int index = child.indexOf( '_' );\n                int id = Integer.parseInt( child.substring( 0, index ) );\n                int seq = Integer.parseInt( child.substring( index + 1 ) );                \n                try\n                {\n                    byte[] data = zooKeeper.getData( root + \"/\" + child, false, \n                        null );\n                    ByteBuffer buf = ByteBuffer.wrap( data );\n                    long tx = buf.getLong();\n                    if ( rawData.put( id, new Pair<Integer, Long>( seq, tx ) ) != null )\n                    {\n                        System.out.println( \"warning: \" + id + \" found more than once\" );\n                    }\n                    if ( tx >= highestTxId )\n                    {\n                        if ( tx > highestTxId || seq < lowestSeq )\n                        {\n                            currentMasterId = id;\n                            lowestSeq = seq;\n                        }\n                        highestTxId = tx;\n                    }\n                }\n                catch ( KeeperException inner )\n                {\n                    if ( inner.code() != KeeperException.Code.NONODE )\n                    {\n                        throw new ZooKeeperException( \"Unabe to get master.\", \n                            inner );\n                    }\n                }\n            }\n            System.out.println( \"getMaster: \" + currentMasterId + \" based on \" + rawData );\n            setMasterChangeWatcher( currentMasterId );\n            return currentMasterId;\n        }\n        catch ( KeeperException e )\n        {\n            throw new ZooKeeperException( \"Unable to get master\", e );\n        }\n        catch ( InterruptedException e )\n        {\n            Thread.interrupted();\n            throw new ZooKeeperException( \"Interrupted.\", e );\n        }\n    }","id":20185,"modified_method":"public synchronized MachineInfo getMaster()\n    {\n        waitForSyncConnected();\n        MachineInfo result = super.getMaster();\n        if ( result != null )\n        {\n            setMasterChangeWatcher( result.getMachineId() );\n        }\n        return result;\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void shutdown()\n    {\n        try\n        {\n            shutdown = true;\n            zooKeeper.close();\n        }\n        catch ( InterruptedException e )\n        {\n            throw new ZooKeeperException( \n                \"Error closing zookeeper connection\", e );\n        }\n    }","id":20186,"modified_method":"public void shutdown()\n    {\n        this.shutdown = true;\n        super.shutdown();\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"private String getRoot()\n    {\n        String rootPath = \"/\" + storeCreationTime + \"_\" + storeId;\n        byte[] rootData = null;\n        do\n        {\n            try\n            {\n                rootData = zooKeeper.getData( rootPath, false, null );\n                return rootPath;\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NONODE )\n                {\n                    throw new ZooKeeperException( \"Unable to get root node\", \n                        e ); \n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n            // try create root\n            try\n            {\n                byte data[] = new byte[0];\n                zooKeeper.create( rootPath, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, \n                    CreateMode.PERSISTENT );\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NODEEXISTS )\n                {\n                    throw new ZooKeeperException( \"Unable to create root\", e );\n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n        } while ( rootData == null );\n        throw new IllegalStateException();\n    }","id":20187,"modified_method":"public String getRoot()\n    {\n        String rootPath = super.getRoot();\n        \n        // Make sure it exists\n        byte[] rootData = null;\n        do\n        {\n            try\n            {\n                rootData = zooKeeper.getData( rootPath, false, null );\n                return rootPath;\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NONODE )\n                {\n                    throw new ZooKeeperException( \"Unable to get root node\", \n                        e ); \n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n            // try create root\n            try\n            {\n                byte data[] = new byte[0];\n                zooKeeper.create( rootPath, data, ZooDefs.Ids.OPEN_ACL_UNSAFE, \n                    CreateMode.PERSISTENT );\n            }\n            catch ( KeeperException e )\n            {\n                if ( e.code() != KeeperException.Code.NODEEXISTS )\n                {\n                    throw new ZooKeeperException( \"Unable to create root\", e );\n                }\n            }\n            catch ( InterruptedException e )\n            {\n                Thread.interrupted();\n                throw new ZooKeeperException( \"Got interrupted\", e );\n            }\n        } while ( rootData == null );\n        throw new IllegalStateException();\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"private void waitForSyncConnected()\n    {\n        if ( keeperState == KeeperState.SyncConnected )\n        {\n            return;\n        }\n        if ( shutdown == true )\n        {\n            throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n        }\n        long startTime = System.currentTimeMillis();\n        long currentTime = startTime;\n        synchronized ( keeperState )\n        {\n            do\n            {\n                try\n                {\n                    keeperState.wait( 250 );\n                }\n                catch ( InterruptedException e )\n                {\n                    Thread.interrupted();\n                }\n                if ( keeperState == KeeperState.SyncConnected )\n                {\n                    return;\n                }\n                if ( shutdown == true )\n                {\n                    throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n                }\n                currentTime = System.currentTimeMillis();\n            }\n            while ( (currentTime - startTime) < TIME_OUT );\n            if ( keeperState != KeeperState.SyncConnected )\n            {\n                throw new ZooKeeperTimedOutException( \n                        \"Connection to ZooKeeper server timed out, keeper state=\" + keeperState );\n            }\n        }\n    }","id":20188,"modified_method":"private void waitForSyncConnected()\n    {\n        if ( keeperState == KeeperState.SyncConnected )\n        {\n            return;\n        }\n        if ( shutdown == true )\n        {\n            throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n        }\n        long startTime = System.currentTimeMillis();\n        long currentTime = startTime;\n        synchronized ( keeperState )\n        {\n            do\n            {\n                try\n                {\n                    keeperState.wait( 250 );\n                }\n                catch ( InterruptedException e )\n                {\n                    Thread.interrupted();\n                }\n                if ( keeperState == KeeperState.SyncConnected )\n                {\n                    return;\n                }\n                if ( shutdown == true )\n                {\n                    throw new ZooKeeperException( \"ZooKeeper client has been shutdwon\" );\n                }\n                currentTime = System.currentTimeMillis();\n            }\n            while ( (currentTime - startTime) < SESSION_TIME_OUT );\n            if ( keeperState != KeeperState.SyncConnected )\n            {\n                throw new ZooKeeperTimedOutException( \n                        \"Connection to ZooKeeper server timed out, keeper state=\" + keeperState );\n            }\n        }\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ZooClient( String servers, int machineId, long storeCreationTime, \n        long storeId, long committedTx, ResponseReceiver receiver )\n    {\n        this.servers = servers;\n        this.receiver = receiver;\n        instantiateZooKeeper();\n        this.machineId = machineId;\n        this.storeCreationTime = storeCreationTime;\n        this.storeId = storeId;\n        this.committedTx = committedTx;\n        this.sequenceNr = \"not initialized yet\";\n    }","id":20189,"modified_method":"public ZooClient( String servers, int machineId, long storeCreationTime, \n        long storeId, long committedTx, ResponseReceiver receiver )\n    {\n        super( servers, storeCreationTime, storeId );\n        this.zooKeeper = instantiateZooKeeper();\n        this.receiver = receiver;\n        this.machineId = machineId;\n        this.committedTx = committedTx;\n        this.sequenceNr = \"not initialized yet\";\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"public boolean thisIsMaster()\n    {\n        return zooClient.getMaster() == machineId;\n    }","id":20190,"modified_method":"public boolean thisIsMaster()\n    {\n        MachineInfo master = zooClient.getMaster();\n        return master != null && master.getMachineId() == machineId;\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Master getMaster()\n    {\n        if ( masterClient != null )\n        {\n            return masterClient;\n        }\n        \n        int masterId = zooClient.getMaster();\n        if ( masterId == machineId )\n        {\n            throw new ZooKeeperException( \"I am master, so can't call getMaster() here\",\n                    new Exception() );\n        }\n        invalidateMaster();\n        createMaster( masterId );\n        return masterClient;\n    }","id":20191,"modified_method":"public Master getMaster()\n    {\n        if ( masterClient != null )\n        {\n            return masterClient;\n        }\n        \n        MachineInfo master = zooClient.getMaster();\n        if ( master != null && master.getMachineId() == machineId )\n        {\n            throw new ZooKeeperException( \"I am master, so can't call getMaster() here\",\n                    new Exception() );\n        }\n        invalidateMaster();\n        if ( master != null )\n        {\n            createMaster( master.getMachineId() );\n        }\n        else\n        {\n            // TODO Really?\n            createMaster( -1 );\n        }\n        return masterClient;\n    }","commit_id":"1d0c465cc333dd5c60e325051d6f9bfce3c069fa","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static Button createHelpButton(final Shell shell, final String title, final PluginInterface plugin) {\n      Button button = new Button(shell, SWT.PUSH);\n      button.setImage(GUIResource.getInstance().getImageHelpWeb());\n      button.setText(BaseMessages.getString(PKG, \"System.Button.Help\"));\n      button.setToolTipText(BaseMessages.getString(PKG, \"System.Tooltip.Help\"));\n      FormData fdButton = new FormData();\n      fdButton.left = new FormAttachment(0,0);\n      fdButton.bottom = new FormAttachment(100, 0);\n      button.setLayoutData(fdButton);\n      \n      button.addSelectionListener(new SelectionAdapter() {\n        @Override\n        public void widgetSelected(SelectionEvent arg0) {\n          StringBuilder html = new StringBuilder();\n          html.append(\"<HTML><TITLE>\").append(plugin.getName()).append(\"<\/TITLE>\");\n          html.append(\"<HEAD>\");\n          html.append(\"<STYLE type=\\\"text/css\\\">\");\n\n          html.append(\"body {\");\n          html.append(\"  background-color:#a7c4e2;\");\n          html.append(\"  font-family:arial,helvetica,sans-serif;\");\n          html.append(\"  font-size:16px;\");\n          html.append(\"}\");\n            \n          html.append(\"<\/STYLE>\");\n          \n          html.append(\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"docs/English/welcome/kettle.css\\\" />\");\n          html.append(\"<\/HEAD>\");\n          html.append(\"<BODY>\");\n          html.append(\"<b>Name<\/b>: \").append(plugin.getName()).append(\"<br>\");\n          html.append(\"<b>ID: \").append(plugin.getIds()[0]).append(\"<br>\");\n          if (!Const.isEmpty(plugin.getDescription())) {\n            html.append(\"<b>Description<\/b>: \").append(plugin.getDescription()).append(\"<br>\");\n          }\n          if (!Const.isEmpty(plugin.getImageFile())) {\n            html.append(\"<b>Icon<\/b>: \").append(plugin.getImageFile()).append(\"<br>\");\n          }\n          if (!Const.isEmpty(plugin.getDocumentationUrl())) {\n            html.append(\"<b>Documenation<\/b>: <a href=\\\"\").append(plugin.getDocumentationUrl()).append(\"\\\">\").append(\"Click here to view the documentation\").append(\"<\/a><br>\");\n          }\n          if (!Const.isEmpty(plugin.getCasesUrl())) {\n            html.append(\"<b>Cases<\/b>: <a href=\\\"\").append(plugin.getCasesUrl()).append(\"\\\">\").append(\"Click here to view related PDI cases\").append(\"<\/a><br>\");\n          }\n          if (!Const.isEmpty(plugin.getForumUrl())) {\n            html.append(\"<b>Forum<\/b>: <a href=\\\"\").append(plugin.getForumUrl()).append(\"\\\">\").append(\"Click here to go to the forum\").append(\"<\/a><br>\");\n          }\n          html.append(\"<\/BODY><\/HTML>\");\n          \n          ShowBrowserDialog browserDialog = new ShowBrowserDialog(shell, title, html.toString());\n          browserDialog.open();\n        }\n      });\n      return button;\n    }","id":20192,"modified_method":"public static Button createHelpButton(final Composite parent, final String title, final PluginInterface plugin) {\n      Button button = new Button(parent, SWT.PUSH);\n      button.setImage(GUIResource.getInstance().getImageHelpWeb());\n      button.setText(BaseMessages.getString(PKG, \"System.Button.Help\"));\n      button.setToolTipText(BaseMessages.getString(PKG, \"System.Tooltip.Help\"));\n      FormData fdButton = new FormData();\n      fdButton.left = new FormAttachment(0,0);\n      fdButton.bottom = new FormAttachment(100, 0);\n      button.setLayoutData(fdButton);\n      \n      button.addSelectionListener(new SelectionAdapter() {\n        @Override\n        public void widgetSelected(SelectionEvent arg0) {\n          StringBuilder html = new StringBuilder();\n          html.append(\"<HTML><TITLE>\").append(plugin.getName()).append(\"<\/TITLE>\");\n          html.append(\"<HEAD>\");\n          html.append(\"<STYLE type=\\\"text/css\\\">\");\n\n          html.append(\"body {\");\n          html.append(\"  background-color:#a7c4e2;\");\n          html.append(\"  font-family:arial,helvetica,sans-serif;\");\n          html.append(\"  font-size:16px;\");\n          html.append(\"}\");\n            \n          html.append(\"<\/STYLE>\");\n          \n          html.append(\"<link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"docs/English/welcome/kettle.css\\\" />\");\n          html.append(\"<\/HEAD>\");\n          html.append(\"<BODY>\");\n          html.append(\"<b>Name<\/b>: \").append(plugin.getName()).append(\"<br>\");\n          html.append(\"<b>ID: \").append(plugin.getIds()[0]).append(\"<br>\");\n          if (!Const.isEmpty(plugin.getDescription())) {\n            html.append(\"<b>Description<\/b>: \").append(plugin.getDescription()).append(\"<br>\");\n          }\n          if (!Const.isEmpty(plugin.getImageFile())) {\n            html.append(\"<b>Icon<\/b>: \").append(plugin.getImageFile()).append(\"<br>\");\n          }\n          if (!Const.isEmpty(plugin.getDocumentationUrl())) {\n            html.append(\"<b>Documenation<\/b>: <a href=\\\"\").append(plugin.getDocumentationUrl()).append(\"\\\">\").append(\"Click here to view the documentation\").append(\"<\/a><br>\");\n          }\n          if (!Const.isEmpty(plugin.getCasesUrl())) {\n            html.append(\"<b>Cases<\/b>: <a href=\\\"\").append(plugin.getCasesUrl()).append(\"\\\">\").append(\"Click here to view related PDI cases\").append(\"<\/a><br>\");\n          }\n          if (!Const.isEmpty(plugin.getForumUrl())) {\n            html.append(\"<b>Forum<\/b>: <a href=\\\"\").append(plugin.getForumUrl()).append(\"\\\">\").append(\"Click here to go to the forum\").append(\"<\/a><br>\");\n          }\n          html.append(\"<\/BODY><\/HTML>\");\n          \n          ShowBrowserDialog browserDialog = new ShowBrowserDialog(parent.getShell(), title, html.toString());\n          browserDialog.open();\n        }\n      });\n      return button;\n    }","commit_id":"5e6aaab19143fd48d54f613b932fa1390f323c50","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open() {\n    Shell parent = getParent();\n    Display display = parent.getDisplay();\n\n    shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n    props.setLook(shell);\n    setShellImage(shell, input);\n\n    ModifyListener lsMod = new ModifyListener() {\n      public void modifyText(ModifyEvent e) {\n        input.setChanged();\n      }\n    };\n\n    FocusListener lsConnectionFocus = new FocusAdapter() {\n\n      public void focusLost(FocusEvent event) {\n        input.setChanged();\n        setTableFieldCombo();\n      }\n    };\n\n    ModifyListener lsTableMod = new ModifyListener() {\n      public void modifyText(ModifyEvent arg0) {\n        input.setChanged();\n        setTableFieldCombo();\n      }\n    };\n\n    backupChanged = input.hasChanged();\n    backupUpdate = input.isUpdate();\n    backupAutoInc = input.isAutoIncrement();\n    ci = input.getDatabaseMeta();\n\n    shell.setLayout(new FormLayout());\n    shell.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Shell.Title\")); //$NON-NLS-1$\n\n    int middle = props.getMiddlePct();\n    int margin = Const.MARGIN;\n\n    sComp = new ScrolledComposite(shell, SWT.V_SCROLL | SWT.H_SCROLL);\n    sComp.setLayout(new FormLayout());\n\n    comp = new Composite(sComp, SWT.NONE);\n    props.setLook(comp);\n\n    FormLayout fileLayout = new FormLayout();\n    fileLayout.marginWidth = 3;\n    fileLayout.marginHeight = 3;\n    comp.setLayout(fileLayout);\n\n    // Stepname line\n    wlStepname = new Label(comp, SWT.RIGHT);\n    wlStepname.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Stepname.Label\")); //$NON-NLS-1$\n    props.setLook(wlStepname);\n    fdlStepname = new FormData();\n    fdlStepname.left = new FormAttachment(0, 0);\n    fdlStepname.right = new FormAttachment(middle, -margin);\n    fdlStepname.top = new FormAttachment(0, margin);\n    wlStepname.setLayoutData(fdlStepname);\n    wStepname = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    wStepname.setText(stepname);\n    props.setLook(wStepname);\n    wStepname.addModifyListener(lsMod);\n    fdStepname = new FormData();\n    fdStepname.left = new FormAttachment(middle, 0);\n    fdStepname.top = new FormAttachment(0, margin);\n    fdStepname.right = new FormAttachment(100, 0);\n    wStepname.setLayoutData(fdStepname);\n\n    // Update the dimension?\n    wlUpdate = new Label(comp, SWT.RIGHT);\n    wlUpdate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Update.Label\")); //$NON-NLS-1$\n    props.setLook(wlUpdate);\n    FormData fdlUpdate = new FormData();\n    fdlUpdate.left = new FormAttachment(0, 0);\n    fdlUpdate.right = new FormAttachment(middle, -margin);\n    fdlUpdate.top = new FormAttachment(wStepname, margin);\n    wlUpdate.setLayoutData(fdlUpdate);\n    wUpdate = new Button(comp, SWT.CHECK);\n    props.setLook(wUpdate);\n    FormData fdUpdate = new FormData();\n    fdUpdate.left = new FormAttachment(middle, 0);\n    fdUpdate.top = new FormAttachment(wStepname, margin);\n    fdUpdate.right = new FormAttachment(100, 0);\n    wUpdate.setLayoutData(fdUpdate);\n\n    // Clicking on update changes the options in the update combo boxes!\n    wUpdate.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        input.setUpdate(!input.isUpdate());\n        input.setChanged();\n\n        setFlags();\n      }\n    });\n\n    // Connection line\n    wConnection = addConnectionLine(comp, wUpdate, middle, margin);\n    if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)\n      wConnection.select(0);\n    // wConnection.addModifyListener(lsConnectionMod);\n    // wConnection.addSelectionListener(lsSelection);\n    wConnection.addFocusListener(lsConnectionFocus);\n    wConnection.addModifyListener(new ModifyListener() {\n      public void modifyText(ModifyEvent e) {\n        // We have new content: change ci connection:\n        ci = transMeta.findDatabase(wConnection.getText());\n        setFlags();\n      }\n    });\n\n    // Schema line...\n    wlSchema = new Label(comp, SWT.RIGHT);\n    wlSchema.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TargetSchema.Label\")); //$NON-NLS-1$\n    props.setLook(wlSchema);\n    FormData fdlSchema = new FormData();\n    fdlSchema.left = new FormAttachment(0, 0);\n    fdlSchema.right = new FormAttachment(middle, -margin);\n    fdlSchema.top = new FormAttachment(wConnection, margin);\n    wlSchema.setLayoutData(fdlSchema);\n\n    wbSchema = new Button(comp, SWT.PUSH | SWT.CENTER);\n    props.setLook(wbSchema);\n    wbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\n    fdbSchema = new FormData();\n    fdbSchema.top = new FormAttachment(wConnection, margin);\n    fdbSchema.right = new FormAttachment(100, 0);\n    wbSchema.setLayoutData(fdbSchema);\n\n    wSchema = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wSchema);\n    wSchema.addModifyListener(lsTableMod);\n    FormData fdSchema = new FormData();\n    fdSchema.left = new FormAttachment(middle, 0);\n    fdSchema.top = new FormAttachment(wConnection, margin);\n    fdSchema.right = new FormAttachment(wbSchema, -margin);\n    wSchema.setLayoutData(fdSchema);\n\n    // Table line...\n    wlTable = new Label(comp, SWT.RIGHT);\n    wlTable.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TargeTable.Label\")); //$NON-NLS-1$\n    props.setLook(wlTable);\n    FormData fdlTable = new FormData();\n    fdlTable.left = new FormAttachment(0, 0);\n    fdlTable.right = new FormAttachment(middle, -margin);\n    fdlTable.top = new FormAttachment(wbSchema, margin);\n    wlTable.setLayoutData(fdlTable);\n\n    wbTable = new Button(comp, SWT.PUSH | SWT.CENTER);\n    props.setLook(wbTable);\n    wbTable.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Browse.Button\")); //$NON-NLS-1$\n    FormData fdbTable = new FormData();\n    fdbTable.right = new FormAttachment(100, 0);\n    fdbTable.top = new FormAttachment(wbSchema, margin);\n    wbTable.setLayoutData(fdbTable);\n\n    wTable = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTable);\n    wTable.addModifyListener(lsTableMod);\n    FormData fdTable = new FormData();\n    fdTable.left = new FormAttachment(middle, 0);\n    fdTable.top = new FormAttachment(wbSchema, margin);\n    fdTable.right = new FormAttachment(wbTable, 0);\n    wTable.setLayoutData(fdTable);\n\n    // Commit size ...\n    wlCommit = new Label(comp, SWT.RIGHT);\n    wlCommit.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Commit.Label\")); //$NON-NLS-1$\n    props.setLook(wlCommit);\n    FormData fdlCommit = new FormData();\n    fdlCommit.left = new FormAttachment(0, 0);\n    fdlCommit.right = new FormAttachment(middle, -margin);\n    fdlCommit.top = new FormAttachment(wTable, margin);\n    wlCommit.setLayoutData(fdlCommit);\n    wCommit = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wCommit);\n    wCommit.addModifyListener(lsMod);\n    FormData fdCommit = new FormData();\n    fdCommit.left = new FormAttachment(middle, 0);\n    fdCommit.top = new FormAttachment(wTable, margin);\n    fdCommit.right = new FormAttachment(100, 0);\n    wCommit.setLayoutData(fdCommit);\n\n    // Use Cache?\n    wlUseCache = new Label(comp, SWT.RIGHT);\n    wlUseCache.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UseCache.Label\")); //$NON-NLS-1$\n    props.setLook(wlUseCache);\n    FormData fdlUseCache = new FormData();\n    fdlUseCache.left = new FormAttachment(0, 0);\n    fdlUseCache.right = new FormAttachment(middle, -margin);\n    fdlUseCache.top = new FormAttachment(wCommit, margin);\n    wlUseCache.setLayoutData(fdlUseCache);\n    wUseCache = new Button(comp, SWT.CHECK);\n    props.setLook(wUseCache);\n    wUseCache.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent arg0) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n    FormData fdUseCache = new FormData();\n    fdUseCache.left = new FormAttachment(middle, 0);\n    fdUseCache.top = new FormAttachment(wCommit, margin);\n    fdUseCache.right = new FormAttachment(100, 0);\n    wUseCache.setLayoutData(fdUseCache);\n\n    // Preload cache?\n    wlPreloadCache = new Label(comp, SWT.RIGHT);\n    wlPreloadCache.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.PreloadCache.Label\")); //$NON-NLS-1$\n    props.setLook(wlPreloadCache);\n    FormData fdlPreloadCache = new FormData();\n    fdlPreloadCache.left = new FormAttachment(0, 0);\n    fdlPreloadCache.right = new FormAttachment(middle, -margin);\n    fdlPreloadCache.top = new FormAttachment(wUseCache, margin);\n    wlPreloadCache.setLayoutData(fdlPreloadCache);\n    wPreloadCache = new Button(comp, SWT.CHECK);\n    props.setLook(wPreloadCache);\n    wPreloadCache.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent arg0) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n    FormData fdPreloadCache = new FormData();\n    fdPreloadCache.left = new FormAttachment(middle, 0);\n    fdPreloadCache.top = new FormAttachment(wUseCache, margin);\n    fdPreloadCache.right = new FormAttachment(100, 0);\n    wPreloadCache.setLayoutData(fdPreloadCache);\n\n    // Cache size ...\n    wlCacheSize = new Label(comp, SWT.RIGHT);\n    wlCacheSize.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.CacheSize.Label\")); //$NON-NLS-1$\n    props.setLook(wlCacheSize);\n    FormData fdlCacheSize = new FormData();\n    fdlCacheSize.left = new FormAttachment(0, 0);\n    fdlCacheSize.right = new FormAttachment(middle, -margin);\n    fdlCacheSize.top = new FormAttachment(wPreloadCache, margin);\n    wlCacheSize.setLayoutData(fdlCacheSize);\n    wCacheSize = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wCacheSize);\n    wCacheSize.addModifyListener(lsMod);\n    FormData fdCacheSize = new FormData();\n    fdCacheSize.left = new FormAttachment(middle, 0);\n    fdCacheSize.top = new FormAttachment(wPreloadCache, margin);\n    fdCacheSize.right = new FormAttachment(100, 0);\n    wCacheSize.setLayoutData(fdCacheSize);\n\n    wlTkRename = new Label(comp, SWT.RIGHT);\n\n    wTabFolder = new CTabFolder(comp, SWT.BORDER);\n    props.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\n\n    // ////////////////////////\n    // START OF KEY TAB ///\n    // /\n    wKeyTab = new CTabItem(wTabFolder, SWT.NONE);\n    wKeyTab.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.KeyTab.CTabItem\")); //$NON-NLS-1$\n\n    FormLayout keyLayout = new FormLayout();\n    keyLayout.marginWidth = 3;\n    keyLayout.marginHeight = 3;\n\n    Composite wKeyComp = new Composite(wTabFolder, SWT.NONE);\n    props.setLook(wKeyComp);\n    wKeyComp.setLayout(keyLayout);\n\n    //\n    // The Lookup fields: usually the key\n    //\n    wlKey = new Label(wKeyComp, SWT.NONE);\n    wlKey.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.KeyFields.Label\")); //$NON-NLS-1$\n    props.setLook(wlKey);\n    FormData fdlKey = new FormData();\n    fdlKey.left = new FormAttachment(0, 0);\n    fdlKey.top = new FormAttachment(0, margin);\n    fdlKey.right = new FormAttachment(100, 0);\n    wlKey.setLayoutData(fdlKey);\n\n    int nrKeyCols = 2;\n    int nrKeyRows = (input.getKeyStream() != null ? input.getKeyStream().length : 1);\n\n    ciKey = new ColumnInfo[nrKeyCols];\n    ciKey[0] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.DimensionField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    ciKey[1] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.FieldInStream\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    tableFieldColumns.add(ciKey[0]);\n    wKey = new TableView(transMeta, wKeyComp, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, ciKey, nrKeyRows, lsMod, props);\n\n    FormData fdKey = new FormData();\n    fdKey.left = new FormAttachment(0, 0);\n    fdKey.top = new FormAttachment(wlKey, margin);\n    fdKey.right = new FormAttachment(100, 0);\n    fdKey.bottom = new FormAttachment(100, 0);\n    wKey.setLayoutData(fdKey);\n\n    fdKeyComp = new FormData();\n    fdKeyComp.left = new FormAttachment(0, 0);\n    fdKeyComp.top = new FormAttachment(0, 0);\n    fdKeyComp.right = new FormAttachment(100, 0);\n    fdKeyComp.bottom = new FormAttachment(100, 0);\n    wKeyComp.setLayoutData(fdKeyComp);\n\n    wKeyComp.layout();\n    wKeyTab.setControl(wKeyComp);\n\n    // ///////////////////////////////////////////////////////////\n    // / END OF KEY TAB\n    // ///////////////////////////////////////////////////////////\n\n    // Fields tab...\n    //\n    wFieldsTab = new CTabItem(wTabFolder, SWT.NONE);\n    wFieldsTab.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.FieldsTab.CTabItem.Title\")); //$NON-NLS-1$\n\n    Composite wFieldsComp = new Composite(wTabFolder, SWT.NONE);\n    props.setLook(wFieldsComp);\n\n    FormLayout fieldsCompLayout = new FormLayout();\n    fieldsCompLayout.marginWidth = Const.FORM_MARGIN;\n    fieldsCompLayout.marginHeight = Const.FORM_MARGIN;\n    wFieldsComp.setLayout(fieldsCompLayout);\n\n    // THE UPDATE/INSERT TABLE\n    wlUpIns = new Label(wFieldsComp, SWT.NONE);\n    wlUpIns.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UpdateOrInsertFields.Label\")); //$NON-NLS-1$\n    props.setLook(wlUpIns);\n    FormData fdlUpIns = new FormData();\n    fdlUpIns.left = new FormAttachment(0, 0);\n    fdlUpIns.top = new FormAttachment(0, margin);\n    wlUpIns.setLayoutData(fdlUpIns);\n\n    int UpInsCols = 3;\n    int UpInsRows = (input.getFieldStream() != null ? input.getFieldStream().length : 1);\n\n    ciUpIns = new ColumnInfo[UpInsCols];\n    ciUpIns[0] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.DimensionField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    ciUpIns[1] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    ciUpIns[2] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.TypeOfDimensionUpdate\"), ColumnInfo.COLUMN_TYPE_CCOMBO, input.isUpdate() ? DimensionLookupMeta.typeDesc : DimensionLookupMeta.typeDescLookup); //$NON-NLS-1$\n    tableFieldColumns.add(ciUpIns[0]);\n    wUpIns = new TableView(transMeta, wFieldsComp, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, ciUpIns, UpInsRows, lsMod, props);\n\n    FormData fdUpIns = new FormData();\n    fdUpIns.left = new FormAttachment(0, 0);\n    fdUpIns.top = new FormAttachment(wlUpIns, margin);\n    fdUpIns.right = new FormAttachment(100, 0);\n    fdUpIns.bottom = new FormAttachment(100, 0);\n    wUpIns.setLayoutData(fdUpIns);\n\n    //\n    // Search the fields in the background\n    //\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        StepMeta stepMeta = transMeta.findStep(stepname);\n        if (stepMeta != null) {\n          try {\n            RowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\n\n            // Remember these fields...\n            for (int i = 0; i < row.size(); i++) {\n              inputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\n            }\n\n            setComboBoxes();\n          } catch (KettleException e) {\n            logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\n          }\n        }\n      }\n    };\n    new Thread(runnable).start();\n\n    fdFieldsComp = new FormData();\n    fdFieldsComp.left = new FormAttachment(0, 0);\n    fdFieldsComp.top = new FormAttachment(0, 0);\n    fdFieldsComp.right = new FormAttachment(100, 0);\n    fdFieldsComp.bottom = new FormAttachment(100, 0);\n    wFieldsComp.setLayoutData(fdFieldsComp);\n\n    wFieldsComp.layout();\n    wFieldsTab.setControl(wFieldsComp);\n\n    fdTabFolder = new FormData();\n    fdTabFolder.left = new FormAttachment(0, 0);\n    fdTabFolder.top = new FormAttachment(wCacheSize, margin);\n    fdTabFolder.right = new FormAttachment(100, 0);\n    fdTabFolder.height = 200;\n    wTabFolder.setLayoutData(fdTabFolder);\n\n    // Technical key field:\n    wlTk = new Label(comp, SWT.RIGHT);\n    wlTk.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TechnicalKeyField.Label\")); //$NON-NLS-1$\n    props.setLook(wlTk);\n    FormData fdlTk = new FormData();\n    fdlTk.left = new FormAttachment(0, 0);\n    fdlTk.right = new FormAttachment(middle, -margin);\n    fdlTk.top = new FormAttachment(wTabFolder, 2 * margin);\n\n    wlTk.setLayoutData(fdlTk);\n    wTk = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTk);\n    wTk.addModifyListener(lsMod);\n    FormData fdTk = new FormData();\n    fdTk.left = new FormAttachment(middle, 0);\n    fdTk.top = new FormAttachment(wTabFolder, 2 * margin);\n    fdTk.right = new FormAttachment(50 + middle / 2, 0);\n    wTk.setLayoutData(fdTk);\n    wTk.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    wlTkRename.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.NewName.Label\")); //$NON-NLS-1$\n    props.setLook(wlTkRename);\n    FormData fdlTkRename = new FormData();\n    fdlTkRename.left = new FormAttachment(50 + middle / 2, margin);\n    fdlTkRename.top = new FormAttachment(wTabFolder, 2 * margin);\n    wlTkRename.setLayoutData(fdlTkRename);\n    wTkRename = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTkRename);\n    wTkRename.addModifyListener(lsMod);\n    FormData fdTkRename = new FormData();\n    fdTkRename.left = new FormAttachment(wlTkRename, margin);\n    fdTkRename.top = new FormAttachment(wTabFolder, 2 * margin);\n    fdTkRename.right = new FormAttachment(100, 0);\n    wTkRename.setLayoutData(fdTkRename);\n\n    // //////////////////////////////////////////////////\n    // The key creation box\n    // //////////////////////////////////////////////////\n\n    gTechGroup = new Group(comp, SWT.SHADOW_ETCHED_IN);\n    gTechGroup.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TechGroup.Label\")); //$NON-NLS-1$;\n    GridLayout gridLayout = new GridLayout(3, false);\n    gTechGroup.setLayout(gridLayout);\n    FormData fdTechGroup = new FormData();\n    fdTechGroup.left = new FormAttachment(middle, 0);\n    fdTechGroup.top = new FormAttachment(wTkRename, 2 * margin);\n    fdTechGroup.right = new FormAttachment(100, 0);\n    gTechGroup.setBackground(shell.getBackground()); // the default looks ugly\n    gTechGroup.setLayoutData(fdTechGroup);\n\n    // Use maximum of table + 1\n    wTableMax = new Button(gTechGroup, SWT.RADIO);\n    props.setLook(wTableMax);\n    wTableMax.setSelection(false);\n    GridData gdTableMax = new GridData();\n    wTableMax.setLayoutData(gdTableMax);\n    wTableMax.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TableMaximum.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$\n    wlTableMax = new Label(gTechGroup, SWT.LEFT);\n    wlTableMax.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TableMaximum.Label\")); //$NON-NLS-1$\n    props.setLook(wlTableMax);\n    GridData gdlTableMax = new GridData(GridData.FILL_BOTH);\n    gdlTableMax.horizontalSpan = 2;\n    gdlTableMax.verticalSpan = 1;\n    wlTableMax.setLayoutData(gdlTableMax);\n\n    // Sequence Check Button\n    wSeqButton = new Button(gTechGroup, SWT.RADIO);\n    props.setLook(wSeqButton);\n    wSeqButton.setSelection(false);\n    GridData gdSeqButton = new GridData();\n    wSeqButton.setLayoutData(gdSeqButton);\n    wSeqButton.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Sequence.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    wlSeqButton = new Label(gTechGroup, SWT.LEFT);\n    wlSeqButton.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Sequence.Label\")); //$NON-NLS-1$\n    props.setLook(wlSeqButton);\n    GridData gdlSeqButton = new GridData();\n    wlSeqButton.setLayoutData(gdlSeqButton);\n\n    wSeq = new Text(gTechGroup, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wSeq);\n    wSeq.addModifyListener(lsMod);\n    GridData gdSeq = new GridData(GridData.FILL_HORIZONTAL);\n    wSeq.setLayoutData(gdSeq);\n    wSeq.addFocusListener(new FocusListener() {\n      public void focusGained(FocusEvent arg0) {\n        input.setTechKeyCreation(DimensionLookupMeta.CREATION_METHOD_SEQUENCE);\n        wSeqButton.setSelection(true);\n        wAutoinc.setSelection(false);\n        wTableMax.setSelection(false);\n      }\n\n      public void focusLost(FocusEvent arg0) {\n      }\n    });\n\n    // Use an autoincrement field?\n    wAutoinc = new Button(gTechGroup, SWT.RADIO);\n    props.setLook(wAutoinc);\n    wAutoinc.setSelection(false);\n    GridData gdAutoinc = new GridData();\n    wAutoinc.setLayoutData(gdAutoinc);\n    wAutoinc.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AutoincButton.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$\n    wlAutoinc = new Label(gTechGroup, SWT.LEFT);\n    wlAutoinc.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Autoincrement.Label\")); //$NON-NLS-1$\n    props.setLook(wlAutoinc);\n    GridData gdlAutoinc = new GridData();\n    wlAutoinc.setLayoutData(gdlAutoinc);\n\n    // //////////////////////////////////////////////////\n    // The key creation box END\n    // //////////////////////////////////////////////////\n\n    // Version key field:\n    wlVersion = new Label(comp, SWT.RIGHT);\n    wlVersion.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Version.Label\")); //$NON-NLS-1$\n    props.setLook(wlVersion);\n    FormData fdlVersion = new FormData();\n    fdlVersion.left = new FormAttachment(0, 0);\n    fdlVersion.right = new FormAttachment(middle, -margin);\n    fdlVersion.top = new FormAttachment(gTechGroup, 2 * margin);\n    wlVersion.setLayoutData(fdlVersion);\n    wVersion = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wVersion);\n    wVersion.addModifyListener(lsMod);\n    FormData fdVersion = new FormData();\n    fdVersion.left = new FormAttachment(middle, 0);\n    fdVersion.top = new FormAttachment(gTechGroup, 2 * margin);\n    fdVersion.right = new FormAttachment(100, 0);\n    wVersion.setLayoutData(fdVersion);\n    wVersion.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Datefield line\n    wlDatefield = new Label(comp, SWT.RIGHT);\n    wlDatefield.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Datefield.Label\")); //$NON-NLS-1$\n    props.setLook(wlDatefield);\n    FormData fdlDatefield = new FormData();\n    fdlDatefield.left = new FormAttachment(0, 0);\n    fdlDatefield.right = new FormAttachment(middle, -margin);\n    fdlDatefield.top = new FormAttachment(wVersion, 2*margin);\n    wlDatefield.setLayoutData(fdlDatefield);\n    wDatefield = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wDatefield);\n    wDatefield.addModifyListener(lsMod);\n    FormData fdDatefield = new FormData();\n    fdDatefield.left = new FormAttachment(middle, 0);\n    fdDatefield.top = new FormAttachment(wVersion, 2*margin);\n    fdDatefield.right = new FormAttachment(100, 0);\n    wDatefield.setLayoutData(fdDatefield);\n    wDatefield.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFields();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n    \n    // Fromdate line\n    //\n    // 0 [wlFromdate] middle [wFromdate] (100-middle)/3 [wlMinyear]\n    // 2*(100-middle)/3 [wMinyear] 100%\n    //\n    wlFromdate = new Label(comp, SWT.RIGHT);\n    wlFromdate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Fromdate.Label\")); //$NON-NLS-1$\n    props.setLook(wlFromdate);\n    FormData fdlFromdate = new FormData();\n    fdlFromdate.left = new FormAttachment(0, 0);\n    fdlFromdate.right = new FormAttachment(middle, -margin);\n    fdlFromdate.top = new FormAttachment(wDatefield, 2*margin);\n    wlFromdate.setLayoutData(fdlFromdate);\n    wFromdate = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wFromdate);\n    wFromdate.addModifyListener(lsMod);\n    FormData fdFromdate = new FormData();\n    fdFromdate.left = new FormAttachment(middle, 0);\n    fdFromdate.right = new FormAttachment(middle + (100 - middle) / 3, -margin);\n    fdFromdate.top = new FormAttachment(wDatefield, 2*margin);\n    wFromdate.setLayoutData(fdFromdate);\n    wFromdate.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Minyear line\n    wlMinyear = new Label(comp, SWT.RIGHT);\n    wlMinyear.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Minyear.Label\")); //$NON-NLS-1$\n    props.setLook(wlMinyear);\n    FormData fdlMinyear = new FormData();\n    fdlMinyear.left = new FormAttachment(wFromdate, margin);\n    fdlMinyear.right = new FormAttachment(middle + 2 * (100 - middle) / 3, -margin);\n    fdlMinyear.top = new FormAttachment(wDatefield, 2*margin);\n    wlMinyear.setLayoutData(fdlMinyear);\n    wMinyear = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wMinyear);\n    wMinyear.addModifyListener(lsMod);\n    FormData fdMinyear = new FormData();\n    fdMinyear.left = new FormAttachment(wlMinyear, margin);\n    fdMinyear.right = new FormAttachment(100, 0);\n    fdMinyear.top = new FormAttachment(wDatefield, 2*margin);\n    wMinyear.setLayoutData(fdMinyear);\n    wMinyear.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Minyear.ToolTip\")); //$NON-NLS-1$\n\n    // Add a line with an option to specify an alternative start date...\n    //\n    wlUseAltStartDate = new Label(comp, SWT.RIGHT);\n    wlUseAltStartDate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UseAlternativeStartDate.Label\")); //$NON-NLS-1$\n    props.setLook(wlUseAltStartDate);\n    FormData fdlUseAltStartDate = new FormData();\n    fdlUseAltStartDate.left = new FormAttachment(0, 0);\n    fdlUseAltStartDate.right = new FormAttachment(middle, -margin);\n    fdlUseAltStartDate.top = new FormAttachment(wFromdate, margin);\n    wlUseAltStartDate.setLayoutData(fdlUseAltStartDate);\n    wUseAltStartDate = new Button(comp, SWT.CHECK);\n    props.setLook(wUseAltStartDate);\n    wUseAltStartDate.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UseAlternativeStartDate.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    FormData fdUseAltStartDate = new FormData();\n    fdUseAltStartDate.left = new FormAttachment(middle, 0);\n    fdUseAltStartDate.top = new FormAttachment(wFromdate, margin);\n    wUseAltStartDate.setLayoutData(fdUseAltStartDate);\n    wUseAltStartDate.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n\n    // The choice...\n    //\n    wAltStartDate = new CCombo(comp, SWT.BORDER);\n    props.setLook(wAltStartDate);\n    // All options except for \"No alternative\"...\n    wAltStartDate.removeAll();\n    for (int i = 1; i < DimensionLookupMeta.getStartDateAlternativeDescriptions().length; i++) {\n      wAltStartDate.add(DimensionLookupMeta.getStartDateAlternativeDescriptions()[i]);\n    }\n    wAltStartDate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AlternativeStartDate.SelectItemDefault\"));\n    wAltStartDate.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AlternativeStartDate.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    FormData fdAltStartDate = new FormData();\n    fdAltStartDate.left = new FormAttachment(wUseAltStartDate, 2 * margin);\n    fdAltStartDate.right = new FormAttachment(wUseAltStartDate, 200);\n    fdAltStartDate.top = new FormAttachment(wFromdate, margin);\n    wAltStartDate.setLayoutData(fdAltStartDate);\n    wAltStartDate.addModifyListener(new ModifyListener() {\n      public void modifyText(ModifyEvent arg0) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n    wAltStartDateField = new CCombo(comp, SWT.SINGLE | SWT.BORDER);\n    props.setLook(wAltStartDateField);\n    wAltStartDateField.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AlternativeStartDateField.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    FormData fdAltStartDateField = new FormData();\n    fdAltStartDateField.left = new FormAttachment(wAltStartDate, 2 * margin);\n    fdAltStartDateField.right = new FormAttachment(100, 0);\n    fdAltStartDateField.top = new FormAttachment(wFromdate, margin);\n    wAltStartDateField.setLayoutData(fdAltStartDateField);\n    wAltStartDateField.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Todate line\n    wlTodate = new Label(comp, SWT.RIGHT);\n    wlTodate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Todate.Label\")); //$NON-NLS-1$\n    props.setLook(wlTodate);\n    FormData fdlTodate = new FormData();\n    fdlTodate.left = new FormAttachment(0, 0);\n    fdlTodate.right = new FormAttachment(middle, -margin);\n    fdlTodate.top = new FormAttachment(wAltStartDate, margin);\n    wlTodate.setLayoutData(fdlTodate);\n    wTodate = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTodate);\n    wTodate.addModifyListener(lsMod);\n    FormData fdTodate = new FormData();\n    fdTodate.left = new FormAttachment(middle, 0);\n    fdTodate.right = new FormAttachment(middle + (100 - middle) / 3, -margin);\n    fdTodate.top = new FormAttachment(wAltStartDate, margin);\n    wTodate.setLayoutData(fdTodate);\n    wTodate.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Maxyear line\n    wlMaxyear = new Label(comp, SWT.RIGHT);\n    wlMaxyear.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Maxyear.Label\")); //$NON-NLS-1$\n    props.setLook(wlMaxyear);\n    FormData fdlMaxyear = new FormData();\n    fdlMaxyear.left = new FormAttachment(wTodate, margin);\n    fdlMaxyear.right = new FormAttachment(middle + 2 * (100 - middle) / 3, -margin);\n    fdlMaxyear.top = new FormAttachment(wAltStartDate, margin);\n    wlMaxyear.setLayoutData(fdlMaxyear);\n    wMaxyear = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wMaxyear);\n    wMaxyear.addModifyListener(lsMod);\n    FormData fdMaxyear = new FormData();\n    fdMaxyear.left = new FormAttachment(wlMaxyear, margin);\n    fdMaxyear.right = new FormAttachment(100, 0);\n    fdMaxyear.top = new FormAttachment(wAltStartDate, margin);\n    wMaxyear.setLayoutData(fdMaxyear);\n    wMaxyear.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Maxyear.ToolTip\")); //$NON-NLS-1$\n\n    // THE BOTTOM BUTTONS\n    wOK = new Button(comp, SWT.PUSH);\n    wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\t\t\n    wGet = new Button(comp, SWT.PUSH);\n    wGet.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.GetFields.Button\")); //$NON-NLS-1$\n    wCreate = new Button(comp, SWT.PUSH);\n    wCreate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.SQL.Button\")); //$NON-NLS-1$\n    wCancel = new Button(comp, SWT.PUSH);\n    wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n    setButtonPositions(new Button[] { wOK, wCancel, wGet, wCreate }, margin, wMaxyear);\n\n    FormData fdComp = new FormData();\n    fdComp.left = new FormAttachment(0, 0);\n    fdComp.top = new FormAttachment(0, 0);\n    fdComp.right = new FormAttachment(100, 0);\n    fdComp.bottom = new FormAttachment(100, 0);\n    comp.setLayoutData(fdComp);\n\n    comp.pack();\n    Rectangle bounds = comp.getBounds();\n\n    sComp.setContent(comp);\n    sComp.setExpandHorizontal(true);\n    sComp.setExpandVertical(true);\n    sComp.setMinWidth(bounds.width);\n    sComp.setMinHeight(bounds.height);\n\n    // Add listeners\n    lsOK = new Listener() {\n      public void handleEvent(Event e) {\n        ok();\n      }\n    };\n    lsGet = new Listener() {\n      public void handleEvent(Event e) {\n        get();\n      }\n    };\n    lsCreate = new Listener() {\n      public void handleEvent(Event e) {\n        create();\n      }\n    };\n    lsCancel = new Listener() {\n      public void handleEvent(Event e) {\n        cancel();\n      }\n    };\n\n    wOK.addListener(SWT.Selection, lsOK);\n    wGet.addListener(SWT.Selection, lsGet);\n    wCreate.addListener(SWT.Selection, lsCreate);\n    wCancel.addListener(SWT.Selection, lsCancel);\n\n\n\n    setTableMax();\n    setSequence();\n    setAutoincUse();\n\n    lsDef = new SelectionAdapter() {\n      public void widgetDefaultSelected(SelectionEvent e) {\n        ok();\n      }\n    };\n\n    wStepname.addSelectionListener(lsDef);\n    wSchema.addSelectionListener(lsDef);\n    wTable.addSelectionListener(lsDef);\n    wCommit.addSelectionListener(lsDef);\n    wCacheSize.addSelectionListener(lsDef);\n    wTk.addSelectionListener(lsDef);\n    wTkRename.addSelectionListener(lsDef);\n    wSeq.addSelectionListener(lsDef);\n    wVersion.addSelectionListener(lsDef);\n    wDatefield.addSelectionListener(lsDef);\n    wFromdate.addSelectionListener(lsDef);\n    wMinyear.addSelectionListener(lsDef);\n    wTodate.addSelectionListener(lsDef);\n    wMaxyear.addSelectionListener(lsDef);\n\n    // Detect X or ALT-F4 or something that kills this window...\n    shell.addShellListener(new ShellAdapter() {\n      public void shellClosed(ShellEvent e) {\n        cancel();\n      }\n    });\n    wbSchema.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        getSchemaNames();\n      }\n    });\n    wbTable.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        getTableName();\n      }\n    });\n\n    wTabFolder.setSelection(0);\n\n    // Set the shell size, based upon previous time...\n    setSize();\n\n    getData();\n    setTableFieldCombo();\n    input.setChanged(backupChanged);\n\n    shell.open();\n    while (!shell.isDisposed()) {\n      if (!display.readAndDispatch())\n        display.sleep();\n    }\n    return stepname;\n  }","id":20193,"modified_method":"public String open() {\n    Shell parent = getParent();\n    Display display = parent.getDisplay();\n\n    shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n    props.setLook(shell);\n\n    ModifyListener lsMod = new ModifyListener() {\n      public void modifyText(ModifyEvent e) {\n        input.setChanged();\n      }\n    };\n\n    FocusListener lsConnectionFocus = new FocusAdapter() {\n\n      public void focusLost(FocusEvent event) {\n        input.setChanged();\n        setTableFieldCombo();\n      }\n    };\n\n    ModifyListener lsTableMod = new ModifyListener() {\n      public void modifyText(ModifyEvent arg0) {\n        input.setChanged();\n        setTableFieldCombo();\n      }\n    };\n\n    backupChanged = input.hasChanged();\n    backupUpdate = input.isUpdate();\n    backupAutoInc = input.isAutoIncrement();\n    ci = input.getDatabaseMeta();\n\n    GridLayout shellLayout = new GridLayout();\n    shellLayout.numColumns = 1;\n    shell.setLayout(shellLayout);\n    shell.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Shell.Title\")); //$NON-NLS-1$\n\n    int middle = props.getMiddlePct();\n    int margin = Const.MARGIN;\n    \n    Composite sCompParent = new Composite(shell, SWT.NONE);\n    sCompParent.setLayout(new FillLayout(SWT.VERTICAL));\n    GridData sCompGridData = new GridData(GridData.FILL_BOTH);\n    sCompGridData.grabExcessHorizontalSpace = true;\n    sCompGridData.grabExcessVerticalSpace = true;\n    sCompParent.setLayoutData(sCompGridData);\n\n    sComp = new ScrolledComposite(sCompParent, SWT.V_SCROLL | SWT.H_SCROLL);\n    sComp.setLayout(new FormLayout());\n    sComp.setExpandHorizontal(true);\n    sComp.setExpandVertical(true);\n    \n    helpComp = new Composite(shell, SWT.NONE);\n    helpComp.setLayout(new FormLayout());\n    GridData helpCompData = new GridData();\n    helpCompData.grabExcessHorizontalSpace = true;\n    helpCompData.grabExcessVerticalSpace = false;\n    helpComp.setLayoutData(helpCompData);\n    setShellImage(shell, input);\n\n    comp = new Composite(sComp, SWT.NONE);\n    props.setLook(comp);\n\n    FormLayout fileLayout = new FormLayout();\n    fileLayout.marginWidth = 3;\n    fileLayout.marginHeight = 3;\n    comp.setLayout(fileLayout);\n\n    // Stepname line\n    wlStepname = new Label(comp, SWT.RIGHT);\n    wlStepname.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Stepname.Label\")); //$NON-NLS-1$\n    props.setLook(wlStepname);\n    fdlStepname = new FormData();\n    fdlStepname.left = new FormAttachment(0, 0);\n    fdlStepname.right = new FormAttachment(middle, -margin);\n    fdlStepname.top = new FormAttachment(0, margin);\n    wlStepname.setLayoutData(fdlStepname);\n    wStepname = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    wStepname.setText(stepname);\n    props.setLook(wStepname);\n    wStepname.addModifyListener(lsMod);\n    fdStepname = new FormData();\n    fdStepname.left = new FormAttachment(middle, 0);\n    fdStepname.top = new FormAttachment(0, margin);\n    fdStepname.right = new FormAttachment(100, 0);\n    wStepname.setLayoutData(fdStepname);\n\n    // Update the dimension?\n    wlUpdate = new Label(comp, SWT.RIGHT);\n    wlUpdate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Update.Label\")); //$NON-NLS-1$\n    props.setLook(wlUpdate);\n    FormData fdlUpdate = new FormData();\n    fdlUpdate.left = new FormAttachment(0, 0);\n    fdlUpdate.right = new FormAttachment(middle, -margin);\n    fdlUpdate.top = new FormAttachment(wStepname, margin);\n    wlUpdate.setLayoutData(fdlUpdate);\n    wUpdate = new Button(comp, SWT.CHECK);\n    props.setLook(wUpdate);\n    FormData fdUpdate = new FormData();\n    fdUpdate.left = new FormAttachment(middle, 0);\n    fdUpdate.top = new FormAttachment(wStepname, margin);\n    fdUpdate.right = new FormAttachment(100, 0);\n    wUpdate.setLayoutData(fdUpdate);\n\n    // Clicking on update changes the options in the update combo boxes!\n    wUpdate.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        input.setUpdate(!input.isUpdate());\n        input.setChanged();\n\n        setFlags();\n      }\n    });\n\n    // Connection line\n    wConnection = addConnectionLine(comp, wUpdate, middle, margin);\n    if (input.getDatabaseMeta() == null && transMeta.nrDatabases() == 1)\n      wConnection.select(0);\n    // wConnection.addModifyListener(lsConnectionMod);\n    // wConnection.addSelectionListener(lsSelection);\n    wConnection.addFocusListener(lsConnectionFocus);\n    wConnection.addModifyListener(new ModifyListener() {\n      public void modifyText(ModifyEvent e) {\n        // We have new content: change ci connection:\n        ci = transMeta.findDatabase(wConnection.getText());\n        setFlags();\n      }\n    });\n\n    // Schema line...\n    wlSchema = new Label(comp, SWT.RIGHT);\n    wlSchema.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TargetSchema.Label\")); //$NON-NLS-1$\n    props.setLook(wlSchema);\n    FormData fdlSchema = new FormData();\n    fdlSchema.left = new FormAttachment(0, 0);\n    fdlSchema.right = new FormAttachment(middle, -margin);\n    fdlSchema.top = new FormAttachment(wConnection, margin);\n    wlSchema.setLayoutData(fdlSchema);\n\n    wbSchema = new Button(comp, SWT.PUSH | SWT.CENTER);\n    props.setLook(wbSchema);\n    wbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\n    fdbSchema = new FormData();\n    fdbSchema.top = new FormAttachment(wConnection, margin);\n    fdbSchema.right = new FormAttachment(100, 0);\n    wbSchema.setLayoutData(fdbSchema);\n\n    wSchema = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wSchema);\n    wSchema.addModifyListener(lsTableMod);\n    FormData fdSchema = new FormData();\n    fdSchema.left = new FormAttachment(middle, 0);\n    fdSchema.top = new FormAttachment(wConnection, margin);\n    fdSchema.right = new FormAttachment(wbSchema, -margin);\n    wSchema.setLayoutData(fdSchema);\n\n    // Table line...\n    wlTable = new Label(comp, SWT.RIGHT);\n    wlTable.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TargeTable.Label\")); //$NON-NLS-1$\n    props.setLook(wlTable);\n    FormData fdlTable = new FormData();\n    fdlTable.left = new FormAttachment(0, 0);\n    fdlTable.right = new FormAttachment(middle, -margin);\n    fdlTable.top = new FormAttachment(wbSchema, margin);\n    wlTable.setLayoutData(fdlTable);\n\n    wbTable = new Button(comp, SWT.PUSH | SWT.CENTER);\n    props.setLook(wbTable);\n    wbTable.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Browse.Button\")); //$NON-NLS-1$\n    FormData fdbTable = new FormData();\n    fdbTable.right = new FormAttachment(100, 0);\n    fdbTable.top = new FormAttachment(wbSchema, margin);\n    wbTable.setLayoutData(fdbTable);\n\n    wTable = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTable);\n    wTable.addModifyListener(lsTableMod);\n    FormData fdTable = new FormData();\n    fdTable.left = new FormAttachment(middle, 0);\n    fdTable.top = new FormAttachment(wbSchema, margin);\n    fdTable.right = new FormAttachment(wbTable, 0);\n    wTable.setLayoutData(fdTable);\n\n    // Commit size ...\n    wlCommit = new Label(comp, SWT.RIGHT);\n    wlCommit.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Commit.Label\")); //$NON-NLS-1$\n    props.setLook(wlCommit);\n    FormData fdlCommit = new FormData();\n    fdlCommit.left = new FormAttachment(0, 0);\n    fdlCommit.right = new FormAttachment(middle, -margin);\n    fdlCommit.top = new FormAttachment(wTable, margin);\n    wlCommit.setLayoutData(fdlCommit);\n    wCommit = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wCommit);\n    wCommit.addModifyListener(lsMod);\n    FormData fdCommit = new FormData();\n    fdCommit.left = new FormAttachment(middle, 0);\n    fdCommit.top = new FormAttachment(wTable, margin);\n    fdCommit.right = new FormAttachment(100, 0);\n    wCommit.setLayoutData(fdCommit);\n\n    // Use Cache?\n    wlUseCache = new Label(comp, SWT.RIGHT);\n    wlUseCache.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UseCache.Label\")); //$NON-NLS-1$\n    props.setLook(wlUseCache);\n    FormData fdlUseCache = new FormData();\n    fdlUseCache.left = new FormAttachment(0, 0);\n    fdlUseCache.right = new FormAttachment(middle, -margin);\n    fdlUseCache.top = new FormAttachment(wCommit, margin);\n    wlUseCache.setLayoutData(fdlUseCache);\n    wUseCache = new Button(comp, SWT.CHECK);\n    props.setLook(wUseCache);\n    wUseCache.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent arg0) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n    FormData fdUseCache = new FormData();\n    fdUseCache.left = new FormAttachment(middle, 0);\n    fdUseCache.top = new FormAttachment(wCommit, margin);\n    fdUseCache.right = new FormAttachment(100, 0);\n    wUseCache.setLayoutData(fdUseCache);\n\n    // Preload cache?\n    wlPreloadCache = new Label(comp, SWT.RIGHT);\n    wlPreloadCache.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.PreloadCache.Label\")); //$NON-NLS-1$\n    props.setLook(wlPreloadCache);\n    FormData fdlPreloadCache = new FormData();\n    fdlPreloadCache.left = new FormAttachment(0, 0);\n    fdlPreloadCache.right = new FormAttachment(middle, -margin);\n    fdlPreloadCache.top = new FormAttachment(wUseCache, margin);\n    wlPreloadCache.setLayoutData(fdlPreloadCache);\n    wPreloadCache = new Button(comp, SWT.CHECK);\n    props.setLook(wPreloadCache);\n    wPreloadCache.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent arg0) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n    FormData fdPreloadCache = new FormData();\n    fdPreloadCache.left = new FormAttachment(middle, 0);\n    fdPreloadCache.top = new FormAttachment(wUseCache, margin);\n    fdPreloadCache.right = new FormAttachment(100, 0);\n    wPreloadCache.setLayoutData(fdPreloadCache);\n\n    // Cache size ...\n    wlCacheSize = new Label(comp, SWT.RIGHT);\n    wlCacheSize.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.CacheSize.Label\")); //$NON-NLS-1$\n    props.setLook(wlCacheSize);\n    FormData fdlCacheSize = new FormData();\n    fdlCacheSize.left = new FormAttachment(0, 0);\n    fdlCacheSize.right = new FormAttachment(middle, -margin);\n    fdlCacheSize.top = new FormAttachment(wPreloadCache, margin);\n    wlCacheSize.setLayoutData(fdlCacheSize);\n    wCacheSize = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wCacheSize);\n    wCacheSize.addModifyListener(lsMod);\n    FormData fdCacheSize = new FormData();\n    fdCacheSize.left = new FormAttachment(middle, 0);\n    fdCacheSize.top = new FormAttachment(wPreloadCache, margin);\n    fdCacheSize.right = new FormAttachment(100, 0);\n    wCacheSize.setLayoutData(fdCacheSize);\n\n    wlTkRename = new Label(comp, SWT.RIGHT);\n\n    wTabFolder = new CTabFolder(comp, SWT.BORDER);\n    props.setLook(wTabFolder, Props.WIDGET_STYLE_TAB);\n\n    // ////////////////////////\n    // START OF KEY TAB ///\n    // /\n    wKeyTab = new CTabItem(wTabFolder, SWT.NONE);\n    wKeyTab.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.KeyTab.CTabItem\")); //$NON-NLS-1$\n\n    FormLayout keyLayout = new FormLayout();\n    keyLayout.marginWidth = 3;\n    keyLayout.marginHeight = 3;\n\n    Composite wKeyComp = new Composite(wTabFolder, SWT.NONE);\n    props.setLook(wKeyComp);\n    wKeyComp.setLayout(keyLayout);\n\n    //\n    // The Lookup fields: usually the key\n    //\n    wlKey = new Label(wKeyComp, SWT.NONE);\n    wlKey.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.KeyFields.Label\")); //$NON-NLS-1$\n    props.setLook(wlKey);\n    FormData fdlKey = new FormData();\n    fdlKey.left = new FormAttachment(0, 0);\n    fdlKey.top = new FormAttachment(0, margin);\n    fdlKey.right = new FormAttachment(100, 0);\n    wlKey.setLayoutData(fdlKey);\n\n    int nrKeyCols = 2;\n    int nrKeyRows = (input.getKeyStream() != null ? input.getKeyStream().length : 1);\n\n    ciKey = new ColumnInfo[nrKeyCols];\n    ciKey[0] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.DimensionField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    ciKey[1] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.FieldInStream\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    tableFieldColumns.add(ciKey[0]);\n    wKey = new TableView(transMeta, wKeyComp, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, ciKey, nrKeyRows, lsMod, props);\n\n    FormData fdKey = new FormData();\n    fdKey.left = new FormAttachment(0, 0);\n    fdKey.top = new FormAttachment(wlKey, margin);\n    fdKey.right = new FormAttachment(100, 0);\n    fdKey.bottom = new FormAttachment(100, 0);\n    wKey.setLayoutData(fdKey);\n\n    fdKeyComp = new FormData();\n    fdKeyComp.left = new FormAttachment(0, 0);\n    fdKeyComp.top = new FormAttachment(0, 0);\n    fdKeyComp.right = new FormAttachment(100, 0);\n    fdKeyComp.bottom = new FormAttachment(100, 0);\n    wKeyComp.setLayoutData(fdKeyComp);\n\n    wKeyComp.layout();\n    wKeyTab.setControl(wKeyComp);\n\n    // ///////////////////////////////////////////////////////////\n    // / END OF KEY TAB\n    // ///////////////////////////////////////////////////////////\n\n    // Fields tab...\n    //\n    wFieldsTab = new CTabItem(wTabFolder, SWT.NONE);\n    wFieldsTab.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.FieldsTab.CTabItem.Title\")); //$NON-NLS-1$\n\n    Composite wFieldsComp = new Composite(wTabFolder, SWT.NONE);\n    props.setLook(wFieldsComp);\n\n    FormLayout fieldsCompLayout = new FormLayout();\n    fieldsCompLayout.marginWidth = Const.FORM_MARGIN;\n    fieldsCompLayout.marginHeight = Const.FORM_MARGIN;\n    wFieldsComp.setLayout(fieldsCompLayout);\n\n    // THE UPDATE/INSERT TABLE\n    wlUpIns = new Label(wFieldsComp, SWT.NONE);\n    wlUpIns.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UpdateOrInsertFields.Label\")); //$NON-NLS-1$\n    props.setLook(wlUpIns);\n    FormData fdlUpIns = new FormData();\n    fdlUpIns.left = new FormAttachment(0, 0);\n    fdlUpIns.top = new FormAttachment(0, margin);\n    wlUpIns.setLayoutData(fdlUpIns);\n\n    int UpInsCols = 3;\n    int UpInsRows = (input.getFieldStream() != null ? input.getFieldStream().length : 1);\n\n    ciUpIns = new ColumnInfo[UpInsCols];\n    ciUpIns[0] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.DimensionField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    ciUpIns[1] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n    ciUpIns[2] = new ColumnInfo(BaseMessages.getString(PKG, \"DimensionLookupDialog.ColumnInfo.TypeOfDimensionUpdate\"), ColumnInfo.COLUMN_TYPE_CCOMBO, input.isUpdate() ? DimensionLookupMeta.typeDesc : DimensionLookupMeta.typeDescLookup); //$NON-NLS-1$\n    tableFieldColumns.add(ciUpIns[0]);\n    wUpIns = new TableView(transMeta, wFieldsComp, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL, ciUpIns, UpInsRows, lsMod, props);\n\n    FormData fdUpIns = new FormData();\n    fdUpIns.left = new FormAttachment(0, 0);\n    fdUpIns.top = new FormAttachment(wlUpIns, margin);\n    fdUpIns.right = new FormAttachment(100, 0);\n    fdUpIns.bottom = new FormAttachment(100, 0);\n    wUpIns.setLayoutData(fdUpIns);\n\n    //\n    // Search the fields in the background\n    //\n\n    final Runnable runnable = new Runnable() {\n      public void run() {\n        StepMeta stepMeta = transMeta.findStep(stepname);\n        if (stepMeta != null) {\n          try {\n            RowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\n\n            // Remember these fields...\n            for (int i = 0; i < row.size(); i++) {\n              inputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\n            }\n\n            setComboBoxes();\n          } catch (KettleException e) {\n            logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\n          }\n        }\n      }\n    };\n    new Thread(runnable).start();\n\n    fdFieldsComp = new FormData();\n    fdFieldsComp.left = new FormAttachment(0, 0);\n    fdFieldsComp.top = new FormAttachment(0, 0);\n    fdFieldsComp.right = new FormAttachment(100, 0);\n    fdFieldsComp.bottom = new FormAttachment(100, 0);\n    wFieldsComp.setLayoutData(fdFieldsComp);\n\n    wFieldsComp.layout();\n    wFieldsTab.setControl(wFieldsComp);\n\n    fdTabFolder = new FormData();\n    fdTabFolder.left = new FormAttachment(0, 0);\n    fdTabFolder.top = new FormAttachment(wCacheSize, margin);\n    fdTabFolder.right = new FormAttachment(100, 0);\n    fdTabFolder.height = 200;\n    wTabFolder.setLayoutData(fdTabFolder);\n\n    // Technical key field:\n    wlTk = new Label(comp, SWT.RIGHT);\n    wlTk.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TechnicalKeyField.Label\")); //$NON-NLS-1$\n    props.setLook(wlTk);\n    FormData fdlTk = new FormData();\n    fdlTk.left = new FormAttachment(0, 0);\n    fdlTk.right = new FormAttachment(middle, -margin);\n    fdlTk.top = new FormAttachment(wTabFolder, 2 * margin);\n\n    wlTk.setLayoutData(fdlTk);\n    wTk = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTk);\n    wTk.addModifyListener(lsMod);\n    FormData fdTk = new FormData();\n    fdTk.left = new FormAttachment(middle, 0);\n    fdTk.top = new FormAttachment(wTabFolder, 2 * margin);\n    fdTk.right = new FormAttachment(50 + middle / 2, 0);\n    wTk.setLayoutData(fdTk);\n    wTk.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    wlTkRename.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.NewName.Label\")); //$NON-NLS-1$\n    props.setLook(wlTkRename);\n    FormData fdlTkRename = new FormData();\n    fdlTkRename.left = new FormAttachment(50 + middle / 2, margin);\n    fdlTkRename.top = new FormAttachment(wTabFolder, 2 * margin);\n    wlTkRename.setLayoutData(fdlTkRename);\n    wTkRename = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTkRename);\n    wTkRename.addModifyListener(lsMod);\n    FormData fdTkRename = new FormData();\n    fdTkRename.left = new FormAttachment(wlTkRename, margin);\n    fdTkRename.top = new FormAttachment(wTabFolder, 2 * margin);\n    fdTkRename.right = new FormAttachment(100, 0);\n    wTkRename.setLayoutData(fdTkRename);\n\n    // //////////////////////////////////////////////////\n    // The key creation box\n    // //////////////////////////////////////////////////\n\n    gTechGroup = new Group(comp, SWT.SHADOW_ETCHED_IN);\n    gTechGroup.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TechGroup.Label\")); //$NON-NLS-1$;\n    GridLayout gridLayout = new GridLayout(3, false);\n    gTechGroup.setLayout(gridLayout);\n    FormData fdTechGroup = new FormData();\n    fdTechGroup.left = new FormAttachment(middle, 0);\n    fdTechGroup.top = new FormAttachment(wTkRename, 2 * margin);\n    fdTechGroup.right = new FormAttachment(100, 0);\n    gTechGroup.setBackground(shell.getBackground()); // the default looks ugly\n    gTechGroup.setLayoutData(fdTechGroup);\n\n    // Use maximum of table + 1\n    wTableMax = new Button(gTechGroup, SWT.RADIO);\n    props.setLook(wTableMax);\n    wTableMax.setSelection(false);\n    GridData gdTableMax = new GridData();\n    wTableMax.setLayoutData(gdTableMax);\n    wTableMax.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TableMaximum.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$\n    wlTableMax = new Label(gTechGroup, SWT.LEFT);\n    wlTableMax.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.TableMaximum.Label\")); //$NON-NLS-1$\n    props.setLook(wlTableMax);\n    GridData gdlTableMax = new GridData(GridData.FILL_BOTH);\n    gdlTableMax.horizontalSpan = 2;\n    gdlTableMax.verticalSpan = 1;\n    wlTableMax.setLayoutData(gdlTableMax);\n\n    // Sequence Check Button\n    wSeqButton = new Button(gTechGroup, SWT.RADIO);\n    props.setLook(wSeqButton);\n    wSeqButton.setSelection(false);\n    GridData gdSeqButton = new GridData();\n    wSeqButton.setLayoutData(gdSeqButton);\n    wSeqButton.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Sequence.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    wlSeqButton = new Label(gTechGroup, SWT.LEFT);\n    wlSeqButton.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Sequence.Label\")); //$NON-NLS-1$\n    props.setLook(wlSeqButton);\n    GridData gdlSeqButton = new GridData();\n    wlSeqButton.setLayoutData(gdlSeqButton);\n\n    wSeq = new Text(gTechGroup, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wSeq);\n    wSeq.addModifyListener(lsMod);\n    GridData gdSeq = new GridData(GridData.FILL_HORIZONTAL);\n    wSeq.setLayoutData(gdSeq);\n    wSeq.addFocusListener(new FocusListener() {\n      public void focusGained(FocusEvent arg0) {\n        input.setTechKeyCreation(DimensionLookupMeta.CREATION_METHOD_SEQUENCE);\n        wSeqButton.setSelection(true);\n        wAutoinc.setSelection(false);\n        wTableMax.setSelection(false);\n      }\n\n      public void focusLost(FocusEvent arg0) {\n      }\n    });\n\n    // Use an autoincrement field?\n    wAutoinc = new Button(gTechGroup, SWT.RADIO);\n    props.setLook(wAutoinc);\n    wAutoinc.setSelection(false);\n    GridData gdAutoinc = new GridData();\n    wAutoinc.setLayoutData(gdAutoinc);\n    wAutoinc.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AutoincButton.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$\n    wlAutoinc = new Label(gTechGroup, SWT.LEFT);\n    wlAutoinc.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Autoincrement.Label\")); //$NON-NLS-1$\n    props.setLook(wlAutoinc);\n    GridData gdlAutoinc = new GridData();\n    wlAutoinc.setLayoutData(gdlAutoinc);\n\n    // //////////////////////////////////////////////////\n    // The key creation box END\n    // //////////////////////////////////////////////////\n\n    // Version key field:\n    wlVersion = new Label(comp, SWT.RIGHT);\n    wlVersion.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Version.Label\")); //$NON-NLS-1$\n    props.setLook(wlVersion);\n    FormData fdlVersion = new FormData();\n    fdlVersion.left = new FormAttachment(0, 0);\n    fdlVersion.right = new FormAttachment(middle, -margin);\n    fdlVersion.top = new FormAttachment(gTechGroup, 2 * margin);\n    wlVersion.setLayoutData(fdlVersion);\n    wVersion = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wVersion);\n    wVersion.addModifyListener(lsMod);\n    FormData fdVersion = new FormData();\n    fdVersion.left = new FormAttachment(middle, 0);\n    fdVersion.top = new FormAttachment(gTechGroup, 2 * margin);\n    fdVersion.right = new FormAttachment(100, 0);\n    wVersion.setLayoutData(fdVersion);\n    wVersion.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Datefield line\n    wlDatefield = new Label(comp, SWT.RIGHT);\n    wlDatefield.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Datefield.Label\")); //$NON-NLS-1$\n    props.setLook(wlDatefield);\n    FormData fdlDatefield = new FormData();\n    fdlDatefield.left = new FormAttachment(0, 0);\n    fdlDatefield.right = new FormAttachment(middle, -margin);\n    fdlDatefield.top = new FormAttachment(wVersion, 2*margin);\n    wlDatefield.setLayoutData(fdlDatefield);\n    wDatefield = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wDatefield);\n    wDatefield.addModifyListener(lsMod);\n    FormData fdDatefield = new FormData();\n    fdDatefield.left = new FormAttachment(middle, 0);\n    fdDatefield.top = new FormAttachment(wVersion, 2*margin);\n    fdDatefield.right = new FormAttachment(100, 0);\n    wDatefield.setLayoutData(fdDatefield);\n    wDatefield.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFields();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n    \n    // Fromdate line\n    //\n    // 0 [wlFromdate] middle [wFromdate] (100-middle)/3 [wlMinyear]\n    // 2*(100-middle)/3 [wMinyear] 100%\n    //\n    wlFromdate = new Label(comp, SWT.RIGHT);\n    wlFromdate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Fromdate.Label\")); //$NON-NLS-1$\n    props.setLook(wlFromdate);\n    FormData fdlFromdate = new FormData();\n    fdlFromdate.left = new FormAttachment(0, 0);\n    fdlFromdate.right = new FormAttachment(middle, -margin);\n    fdlFromdate.top = new FormAttachment(wDatefield, 2*margin);\n    wlFromdate.setLayoutData(fdlFromdate);\n    wFromdate = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wFromdate);\n    wFromdate.addModifyListener(lsMod);\n    FormData fdFromdate = new FormData();\n    fdFromdate.left = new FormAttachment(middle, 0);\n    fdFromdate.right = new FormAttachment(middle + (100 - middle) / 3, -margin);\n    fdFromdate.top = new FormAttachment(wDatefield, 2*margin);\n    wFromdate.setLayoutData(fdFromdate);\n    wFromdate.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Minyear line\n    wlMinyear = new Label(comp, SWT.RIGHT);\n    wlMinyear.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Minyear.Label\")); //$NON-NLS-1$\n    props.setLook(wlMinyear);\n    FormData fdlMinyear = new FormData();\n    fdlMinyear.left = new FormAttachment(wFromdate, margin);\n    fdlMinyear.right = new FormAttachment(middle + 2 * (100 - middle) / 3, -margin);\n    fdlMinyear.top = new FormAttachment(wDatefield, 2*margin);\n    wlMinyear.setLayoutData(fdlMinyear);\n    wMinyear = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wMinyear);\n    wMinyear.addModifyListener(lsMod);\n    FormData fdMinyear = new FormData();\n    fdMinyear.left = new FormAttachment(wlMinyear, margin);\n    fdMinyear.right = new FormAttachment(100, 0);\n    fdMinyear.top = new FormAttachment(wDatefield, 2*margin);\n    wMinyear.setLayoutData(fdMinyear);\n    wMinyear.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Minyear.ToolTip\")); //$NON-NLS-1$\n\n    // Add a line with an option to specify an alternative start date...\n    //\n    wlUseAltStartDate = new Label(comp, SWT.RIGHT);\n    wlUseAltStartDate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UseAlternativeStartDate.Label\")); //$NON-NLS-1$\n    props.setLook(wlUseAltStartDate);\n    FormData fdlUseAltStartDate = new FormData();\n    fdlUseAltStartDate.left = new FormAttachment(0, 0);\n    fdlUseAltStartDate.right = new FormAttachment(middle, -margin);\n    fdlUseAltStartDate.top = new FormAttachment(wFromdate, margin);\n    wlUseAltStartDate.setLayoutData(fdlUseAltStartDate);\n    wUseAltStartDate = new Button(comp, SWT.CHECK);\n    props.setLook(wUseAltStartDate);\n    wUseAltStartDate.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.UseAlternativeStartDate.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    FormData fdUseAltStartDate = new FormData();\n    fdUseAltStartDate.left = new FormAttachment(middle, 0);\n    fdUseAltStartDate.top = new FormAttachment(wFromdate, margin);\n    wUseAltStartDate.setLayoutData(fdUseAltStartDate);\n    wUseAltStartDate.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n\n    // The choice...\n    //\n    wAltStartDate = new CCombo(comp, SWT.BORDER);\n    props.setLook(wAltStartDate);\n    // All options except for \"No alternative\"...\n    wAltStartDate.removeAll();\n    for (int i = 1; i < DimensionLookupMeta.getStartDateAlternativeDescriptions().length; i++) {\n      wAltStartDate.add(DimensionLookupMeta.getStartDateAlternativeDescriptions()[i]);\n    }\n    wAltStartDate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AlternativeStartDate.SelectItemDefault\"));\n    wAltStartDate.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AlternativeStartDate.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    FormData fdAltStartDate = new FormData();\n    fdAltStartDate.left = new FormAttachment(wUseAltStartDate, 2 * margin);\n    fdAltStartDate.right = new FormAttachment(wUseAltStartDate, 200);\n    fdAltStartDate.top = new FormAttachment(wFromdate, margin);\n    wAltStartDate.setLayoutData(fdAltStartDate);\n    wAltStartDate.addModifyListener(new ModifyListener() {\n      public void modifyText(ModifyEvent arg0) {\n        setFlags();\n        input.setChanged();\n      }\n    });\n    wAltStartDateField = new CCombo(comp, SWT.SINGLE | SWT.BORDER);\n    props.setLook(wAltStartDateField);\n    wAltStartDateField.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.AlternativeStartDateField.Tooltip\", Const.CR)); //$NON-NLS-1$ //$NON-NLS-2$    \n    FormData fdAltStartDateField = new FormData();\n    fdAltStartDateField.left = new FormAttachment(wAltStartDate, 2 * margin);\n    fdAltStartDateField.right = new FormAttachment(100, 0);\n    fdAltStartDateField.top = new FormAttachment(wFromdate, margin);\n    wAltStartDateField.setLayoutData(fdAltStartDateField);\n    wAltStartDateField.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Todate line\n    wlTodate = new Label(comp, SWT.RIGHT);\n    wlTodate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Todate.Label\")); //$NON-NLS-1$\n    props.setLook(wlTodate);\n    FormData fdlTodate = new FormData();\n    fdlTodate.left = new FormAttachment(0, 0);\n    fdlTodate.right = new FormAttachment(middle, -margin);\n    fdlTodate.top = new FormAttachment(wAltStartDate, margin);\n    wlTodate.setLayoutData(fdlTodate);\n    wTodate = new CCombo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wTodate);\n    wTodate.addModifyListener(lsMod);\n    FormData fdTodate = new FormData();\n    fdTodate.left = new FormAttachment(middle, 0);\n    fdTodate.right = new FormAttachment(middle + (100 - middle) / 3, -margin);\n    fdTodate.top = new FormAttachment(wAltStartDate, margin);\n    wTodate.setLayoutData(fdTodate);\n    wTodate.addFocusListener(new FocusListener() {\n      public void focusLost(org.eclipse.swt.events.FocusEvent e) {\n      }\n\n      public void focusGained(org.eclipse.swt.events.FocusEvent e) {\n        Cursor busy = new Cursor(shell.getDisplay(), SWT.CURSOR_WAIT);\n        shell.setCursor(busy);\n        getFieldsFromTable();\n        shell.setCursor(null);\n        busy.dispose();\n      }\n    });\n\n    // Maxyear line\n    wlMaxyear = new Label(comp, SWT.RIGHT);\n    wlMaxyear.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Maxyear.Label\")); //$NON-NLS-1$\n    props.setLook(wlMaxyear);\n    FormData fdlMaxyear = new FormData();\n    fdlMaxyear.left = new FormAttachment(wTodate, margin);\n    fdlMaxyear.right = new FormAttachment(middle + 2 * (100 - middle) / 3, -margin);\n    fdlMaxyear.top = new FormAttachment(wAltStartDate, margin);\n    wlMaxyear.setLayoutData(fdlMaxyear);\n    wMaxyear = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n    props.setLook(wMaxyear);\n    wMaxyear.addModifyListener(lsMod);\n    FormData fdMaxyear = new FormData();\n    fdMaxyear.left = new FormAttachment(wlMaxyear, margin);\n    fdMaxyear.right = new FormAttachment(100, 0);\n    fdMaxyear.top = new FormAttachment(wAltStartDate, margin);\n    wMaxyear.setLayoutData(fdMaxyear);\n    wMaxyear.setToolTipText(BaseMessages.getString(PKG, \"DimensionLookupDialog.Maxyear.ToolTip\")); //$NON-NLS-1$\n\n    // THE BOTTOM BUTTONS\n    wOK = new Button(comp, SWT.PUSH);\n    wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\t\t\n    wGet = new Button(comp, SWT.PUSH);\n    wGet.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.GetFields.Button\")); //$NON-NLS-1$\n    wCreate = new Button(comp, SWT.PUSH);\n    wCreate.setText(BaseMessages.getString(PKG, \"DimensionLookupDialog.SQL.Button\")); //$NON-NLS-1$\n    wCancel = new Button(comp, SWT.PUSH);\n    wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n    setButtonPositions(new Button[] { wOK, wCancel, wGet, wCreate }, margin, wMaxyear);\n\n    FormData fdComp = new FormData();\n    fdComp.left = new FormAttachment(0, 0);\n    fdComp.top = new FormAttachment(0, 0);\n    fdComp.right = new FormAttachment(100, 0);\n    fdComp.bottom = new FormAttachment(100, 0);\n    comp.setLayoutData(fdComp);\n\n    comp.pack();\n    Rectangle bounds = comp.getBounds();\n\n    sComp.setContent(comp);\n    sComp.setExpandHorizontal(true);\n    sComp.setExpandVertical(true);\n    sComp.setMinWidth(bounds.width);\n    sComp.setMinHeight(bounds.height);\n\n    // Add listeners\n    lsOK = new Listener() {\n      public void handleEvent(Event e) {\n        ok();\n      }\n    };\n    lsGet = new Listener() {\n      public void handleEvent(Event e) {\n        get();\n      }\n    };\n    lsCreate = new Listener() {\n      public void handleEvent(Event e) {\n        create();\n      }\n    };\n    lsCancel = new Listener() {\n      public void handleEvent(Event e) {\n        cancel();\n      }\n    };\n\n    wOK.addListener(SWT.Selection, lsOK);\n    wGet.addListener(SWT.Selection, lsGet);\n    wCreate.addListener(SWT.Selection, lsCreate);\n    wCancel.addListener(SWT.Selection, lsCancel);\n\n\n\n    setTableMax();\n    setSequence();\n    setAutoincUse();\n\n    lsDef = new SelectionAdapter() {\n      public void widgetDefaultSelected(SelectionEvent e) {\n        ok();\n      }\n    };\n\n    wStepname.addSelectionListener(lsDef);\n    wSchema.addSelectionListener(lsDef);\n    wTable.addSelectionListener(lsDef);\n    wCommit.addSelectionListener(lsDef);\n    wCacheSize.addSelectionListener(lsDef);\n    wTk.addSelectionListener(lsDef);\n    wTkRename.addSelectionListener(lsDef);\n    wSeq.addSelectionListener(lsDef);\n    wVersion.addSelectionListener(lsDef);\n    wDatefield.addSelectionListener(lsDef);\n    wFromdate.addSelectionListener(lsDef);\n    wMinyear.addSelectionListener(lsDef);\n    wTodate.addSelectionListener(lsDef);\n    wMaxyear.addSelectionListener(lsDef);\n\n    // Detect X or ALT-F4 or something that kills this window...\n    shell.addShellListener(new ShellAdapter() {\n      public void shellClosed(ShellEvent e) {\n        cancel();\n      }\n    });\n    wbSchema.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        getSchemaNames();\n      }\n    });\n    wbTable.addSelectionListener(new SelectionAdapter() {\n      public void widgetSelected(SelectionEvent e) {\n        getTableName();\n      }\n    });\n\n    wTabFolder.setSelection(0);\n\n    // Set the shell size, based upon previous time...\n    setSize();\n\n    getData();\n    setTableFieldCombo();\n    input.setChanged(backupChanged);\n\n    shell.open();\n    while (!shell.isDisposed()) {\n      if (!display.readAndDispatch())\n        display.sleep();\n    }\n    return stepname;\n  }","commit_id":"5e6aaab19143fd48d54f613b932fa1390f323c50","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open() {\r\n    Shell parent = getParent();\r\n    Display display = parent.getDisplay();\r\n\r\n    shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n    props.setLook(shell);\r\n    setShellImage(shell, input);\r\n\r\n    lsMod = new ModifyListener() {\r\n      public void modifyText(ModifyEvent e) {\r\n        input.setChanged();\r\n      }\r\n    };\r\n    changed = input.hasChanged();\r\n\r\n    shell.setLayout(new FormLayout());\r\n    shell.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DialogTitle\"));\r\n\r\n    middle = props.getMiddlePct();\r\n    margin = Const.MARGIN;\r\n    \r\n    sComp = new ScrolledComposite(shell, SWT.V_SCROLL | SWT.H_SCROLL );\r\n    sComp.setLayout(new FormLayout());\r\n    \r\n    comp = new Composite(sComp, SWT.NONE );\r\n    props.setLook(comp);\r\n\r\n    FormLayout fileLayout = new FormLayout();\r\n    fileLayout.marginWidth  = 3;\r\n    fileLayout.marginHeight = 3;\r\n    comp.setLayout(fileLayout);\r\n\r\n    // Stepname line\r\n    wlStepname = new Label(comp, SWT.RIGHT);\r\n    wlStepname.setText(BaseMessages.getString(PKG, \"System.Label.StepName\"));\r\n    props.setLook(wlStepname);\r\n    fdlStepname = new FormData();\r\n    fdlStepname.left = new FormAttachment(0, 0);\r\n    fdlStepname.top = new FormAttachment(0, margin);\r\n    fdlStepname.right = new FormAttachment(middle, -margin);\r\n    wlStepname.setLayoutData(fdlStepname);\r\n    wStepname = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    wStepname.setText(stepname);\r\n    props.setLook(wStepname);\r\n    wStepname.addModifyListener(lsMod);\r\n    fdStepname = new FormData();\r\n    fdStepname.left = new FormAttachment(middle, 0);\r\n    fdStepname.top = new FormAttachment(0, margin);\r\n    fdStepname.right = new FormAttachment(100, 0);\r\n    wStepname.setLayoutData(fdStepname);\r\n\r\n\r\n    // Filename line\r\n    wlDirectory = new Label(comp, SWT.RIGHT);\r\n    wlDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.Directory.Label\"));\r\n    props.setLook(wlDirectory);\r\n    FormData fdlDirectory = new FormData();\r\n    fdlDirectory.left = new FormAttachment(0, 0);\r\n    fdlDirectory.top = new FormAttachment(wStepname, margin);\r\n    fdlDirectory.right = new FormAttachment(middle, -margin);\r\n    wlDirectory.setLayoutData(fdlDirectory);\r\n\r\n    wbbDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbbDirectory);\r\n    wbbDirectory.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n    wbbDirectory.setToolTipText(BaseMessages.getString(PKG, \"System.Tooltip.BrowseForRepositoryDirectory\"));\r\n    FormData fdbDirectory = new FormData();\r\n    fdbDirectory.right = new FormAttachment(100, 0);\r\n    fdbDirectory.top = new FormAttachment(wStepname, margin);\r\n    wbbDirectory.setLayoutData(fdbDirectory);\r\n\r\n    wbaDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbaDirectory);\r\n    wbaDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryAdd.Button\"));\r\n    wbaDirectory.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryAdd.Tooltip\"));\r\n    FormData fdbaDirectory = new FormData();\r\n    fdbaDirectory.right = new FormAttachment(wbbDirectory, -margin);\r\n    fdbaDirectory.top = new FormAttachment(wStepname, margin);\r\n    wbaDirectory.setLayoutData(fdbaDirectory);\r\n\r\n    wDirectory = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wDirectory);\r\n    wDirectory.addModifyListener(lsMod);\r\n    FormData fdDirectory = new FormData();\r\n    fdDirectory.left = new FormAttachment(middle, 0);\r\n    fdDirectory.right = new FormAttachment(wbaDirectory, -margin);\r\n    fdDirectory.top = new FormAttachment(wStepname, margin);\r\n    wDirectory.setLayoutData(fdDirectory);\r\n    \r\n\r\n    wlNameMask = new Label(comp, SWT.RIGHT);\r\n    wlNameMask.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.NameMask.Label\"));\r\n    props.setLook(wlNameMask);\r\n    FormData fdlNameMask = new FormData();\r\n    fdlNameMask.left = new FormAttachment(0, 0);\r\n    fdlNameMask.top = new FormAttachment(wDirectory, margin);\r\n    fdlNameMask.right = new FormAttachment(middle, -margin);\r\n    wlNameMask.setLayoutData(fdlNameMask);\r\n    wNameMask = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wNameMask);\r\n    wNameMask.addModifyListener(lsMod);\r\n    FormData fdNameMask = new FormData();\r\n    fdNameMask.left = new FormAttachment(middle, 0);\r\n    fdNameMask.top = new FormAttachment(wDirectory, margin);\r\n    fdNameMask.right = new FormAttachment(wDirectory, 0, SWT.RIGHT);\r\n    wNameMask.setLayoutData(fdNameMask);\r\n\r\n    wlExcludeNameMask = new Label(comp, SWT.RIGHT);\r\n    wlExcludeNameMask.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ExcludeNameMask.Label\"));\r\n    props.setLook(wlExcludeNameMask);\r\n    FormData fdlExcludeNameMask = new FormData();\r\n    fdlExcludeNameMask.left = new FormAttachment(0, 0);\r\n    fdlExcludeNameMask.top = new FormAttachment(wNameMask, margin);\r\n    fdlExcludeNameMask.right = new FormAttachment(middle, -margin);\r\n    wlExcludeNameMask.setLayoutData(fdlExcludeNameMask);\r\n    wExcludeFilemask = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wExcludeFilemask);\r\n    wExcludeFilemask.addModifyListener(lsMod);\r\n    FormData fdExcludeNameMask = new FormData();\r\n    fdExcludeNameMask.left = new FormAttachment(middle, 0);\r\n    fdExcludeNameMask.top = new FormAttachment(wNameMask, margin);\r\n    fdExcludeNameMask.right = new FormAttachment(wDirectory, 0, SWT.RIGHT);\r\n    wExcludeFilemask.setLayoutData(fdExcludeNameMask);\r\n\r\n    // Directory list line\r\n    wlDirectoryList = new Label(comp, SWT.RIGHT);\r\n    wlDirectoryList.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryList.Label\"));\r\n    props.setLook(wlDirectoryList);\r\n    FormData fdlDirectoryList = new FormData();\r\n    fdlDirectoryList.left = new FormAttachment(0, 0);\r\n    fdlDirectoryList.top = new FormAttachment(wExcludeFilemask, margin);\r\n    fdlDirectoryList.right = new FormAttachment(middle, -margin);\r\n    wlDirectoryList.setLayoutData(fdlDirectoryList);\r\n\r\n    // Buttons to the right of the screen...\r\n    wbdDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbdDirectory);\r\n    wbdDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryDelete.Button\"));\r\n    wbdDirectory.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryDelete.Tooltip\"));\r\n    FormData fdbdDirectory = new FormData();\r\n    fdbdDirectory.right = new FormAttachment(100, 0);\r\n    fdbdDirectory.top = new FormAttachment(wExcludeFilemask, 40);\r\n    wbdDirectory.setLayoutData(fdbdDirectory);\r\n\r\n    wbeDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbeDirectory);\r\n    wbeDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryEdit.Button\"));\r\n    wbeDirectory.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryEdit.Tooltip\"));\r\n    FormData fdbeDirectory = new FormData();\r\n    fdbeDirectory.right = new FormAttachment(100, 0);\r\n    fdbeDirectory.left = new FormAttachment(wbdDirectory, 0, SWT.LEFT);\r\n    fdbeDirectory.top = new FormAttachment(wbdDirectory, margin);\r\n    wbeDirectory.setLayoutData(fdbeDirectory);\r\n\r\n    ColumnInfo[] colinfo = new ColumnInfo[] { new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.Directory.Column\"), ColumnInfo.COLUMN_TYPE_TEXT, false),\r\n        new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.NameWildcard.Column\"), ColumnInfo.COLUMN_TYPE_TEXT, false),\r\n        new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ExcludeNameWildcard.Column\"), ColumnInfo.COLUMN_TYPE_TEXT, false),\r\n        new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.IncludeSubDirs.Column\"), ColumnInfo.COLUMN_TYPE_CCOMBO, YES_NO_COMBO) };\r\n\r\n    colinfo[0].setUsingVariables(true);\r\n    colinfo[1].setUsingVariables(true);\r\n    colinfo[1].setToolTip(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.RegExpColumn.Column\"));\r\n    colinfo[2].setUsingVariables(true);\r\n    colinfo[2].setToolTip(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ExcludeRegExpColumn.Column\"));\r\n    colinfo[3].setToolTip(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.IncludeSubDirs.ToolTip\"));\r\n\r\n    wDirectoryList = new TableView(transMeta, comp, SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER, colinfo, colinfo.length, lsMod, props);\r\n    props.setLook(wDirectoryList);\r\n    FormData fdDirectoryList = new FormData();\r\n    fdDirectoryList.left = new FormAttachment(middle, 0);\r\n    fdDirectoryList.right = new FormAttachment(wbdDirectory, -margin);\r\n    fdDirectoryList.top = new FormAttachment(wExcludeFilemask, margin);\r\n    fdDirectoryList.bottom = new FormAttachment(wExcludeFilemask, 200);\r\n    wDirectoryList.setLayoutData(fdDirectoryList);\r\n\r\n    // Filter File Type\r\n    wlObjectTypeSelection = new Label(comp, SWT.RIGHT);\r\n    wlObjectTypeSelection.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ObjectTypeSelection.Label\"));\r\n    props.setLook(wlObjectTypeSelection);\r\n    FormData fdlFilterFileType = new FormData();\r\n    fdlFilterFileType.left = new FormAttachment(0, 0);\r\n    fdlFilterFileType.right = new FormAttachment(middle, 0);\r\n    fdlFilterFileType.top = new FormAttachment(wDirectoryList, 3 * margin);\r\n    wlObjectTypeSelection.setLayoutData(fdlFilterFileType);\r\n    wObjectTypeSelection = new CCombo(comp, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n    wObjectTypeSelection.add(ObjectTypeSelection.Jobs.getDescription());\r\n    wObjectTypeSelection.add(ObjectTypeSelection.Transformations.getDescription());\r\n    wObjectTypeSelection.add(ObjectTypeSelection.All.getDescription());\r\n    props.setLook(wObjectTypeSelection);\r\n    FormData fdFilterFileType = new FormData();\r\n    fdFilterFileType.left = new FormAttachment(middle, 0);\r\n    fdFilterFileType.top = new FormAttachment(wDirectoryList, 3 * margin);\r\n    fdFilterFileType.right = new FormAttachment(100, 0);\r\n    wObjectTypeSelection.setLayoutData(fdFilterFileType);\r\n\r\n    wlInclRownum = new Label(comp, SWT.RIGHT);\r\n    wlInclRownum.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.InclRownum.Label\"));\r\n    props.setLook(wlInclRownum);\r\n    FormData fdlInclRownum = new FormData();\r\n    fdlInclRownum.left = new FormAttachment(0, 0);\r\n    fdlInclRownum.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    fdlInclRownum.right = new FormAttachment(middle, -margin);\r\n    wlInclRownum.setLayoutData(fdlInclRownum);\r\n    wInclRownum = new Button(comp, SWT.CHECK);\r\n    props.setLook(wInclRownum);\r\n    wInclRownum.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.InclRownum.Tooltip\"));\r\n    FormData fdRownum = new FormData();\r\n    fdRownum.left = new FormAttachment(middle, 0);\r\n    fdRownum.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    wInclRownum.setLayoutData(fdRownum);\r\n\r\n    wlInclRownumField = new Label(comp, SWT.RIGHT);\r\n    wlInclRownumField.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.InclRownumField.Label\"));\r\n    props.setLook(wlInclRownumField);\r\n    FormData fdlInclRownumField = new FormData();\r\n    fdlInclRownumField.left = new FormAttachment(wInclRownum, margin);\r\n    fdlInclRownumField.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    wlInclRownumField.setLayoutData(fdlInclRownumField);\r\n    wInclRownumField = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wInclRownumField);\r\n    wInclRownumField.addModifyListener(lsMod);\r\n    FormData fdInclRownumField = new FormData();\r\n    fdInclRownumField.left = new FormAttachment(wlInclRownumField, margin);\r\n    fdInclRownumField.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    fdInclRownumField.right = new FormAttachment(100, 0);\r\n    wInclRownumField.setLayoutData(fdInclRownumField);\r\n\r\n    // ///////////////////////////////////////////////////////////\r\n    // / END OF FILE Filter TAB\r\n    // ///////////////////////////////////////////////////////////\r\n\r\n    wOK = new Button(comp, SWT.PUSH);\r\n    wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\"));\r\n\r\n    wPreview = new Button(comp, SWT.PUSH);\r\n    wPreview.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.Preview.Button\"));\r\n\r\n    wCancel = new Button(comp, SWT.PUSH);\r\n    wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\"));\r\n\r\n    setButtonPositions(new Button[] { wOK, wPreview, wCancel }, margin, wInclRownumField);\r\n    \r\n    FormData fdComp = new FormData();\r\n    fdComp.left  = new FormAttachment(0, 0);\r\n    fdComp.top   = new FormAttachment(0, 0);\r\n    fdComp.right = new FormAttachment(100, 0);\r\n    fdComp.bottom= new FormAttachment(100, 0);\r\n    comp.setLayoutData(fdComp);\r\n\r\n    comp.pack();\r\n    Rectangle bounds = comp.getBounds();\r\n\r\n    sComp.setContent(comp);\r\n    sComp.setExpandHorizontal(true);\r\n    sComp.setExpandVertical(true);\r\n    sComp.setMinWidth(bounds.width);\r\n    sComp.setMinHeight(bounds.height);\r\n    \r\n    \r\n    // Add listeners\r\n    lsOK = new Listener() {\r\n      public void handleEvent(Event e) {\r\n        ok();\r\n      }\r\n    };\r\n    lsPreview = new Listener() {\r\n      public void handleEvent(Event e) {\r\n        preview();\r\n      }\r\n    };\r\n    lsCancel = new Listener() {\r\n      public void handleEvent(Event e) {\r\n        cancel();\r\n      }\r\n    };\r\n\r\n    wOK.addListener(SWT.Selection, lsOK);\r\n    wPreview.addListener(SWT.Selection, lsPreview);\r\n    wCancel.addListener(SWT.Selection, lsCancel);\r\n\r\n    lsDef = new SelectionAdapter() {\r\n      public void widgetDefaultSelected(SelectionEvent e) {\r\n        ok();\r\n      }\r\n    };\r\n\r\n    wStepname.addSelectionListener(lsDef);\r\n\r\n    // Add the file to the list of files...\r\n    SelectionAdapter selA = new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent arg0) {\r\n        wDirectoryList.add(new String[] { wDirectory.getText(), wNameMask.getText(), wExcludeFilemask.getText(), \"Y\", });\r\n        wDirectory.setText(\"\");\r\n        wNameMask.setText(\"\");\r\n        wDirectoryList.removeEmptyRows();\r\n        wDirectoryList.setRowNums();\r\n        wDirectoryList.optWidth(true);\r\n      }\r\n    };\r\n    wbaDirectory.addSelectionListener(selA);\r\n    wDirectory.addSelectionListener(selA);\r\n\r\n    // Delete files from the list of files...\r\n    wbdDirectory.addSelectionListener(new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent arg0) {\r\n        int idx[] = wDirectoryList.getSelectionIndices();\r\n        wDirectoryList.remove(idx);\r\n        wDirectoryList.removeEmptyRows();\r\n        wDirectoryList.setRowNums();\r\n      }\r\n    });\r\n\r\n    // Edit the selected file & remove from the list...\r\n    wbeDirectory.addSelectionListener(new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent arg0) {\r\n        int idx = wDirectoryList.getSelectionIndex();\r\n        if (idx >= 0) {\r\n          String string[] = wDirectoryList.getItem(idx);\r\n          wDirectory.setText(string[0]);\r\n          wNameMask.setText(string[1]);\r\n          wExcludeFilemask.setText(string[2]);\r\n          wDirectoryList.remove(idx);\r\n        }\r\n        wDirectoryList.removeEmptyRows();\r\n        wDirectoryList.setRowNums();\r\n      }\r\n    });\r\n\r\n    // Listen to the Browse... button\r\n    wbbDirectory.addSelectionListener(new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent e) {\r\n        displaydirectoryList();\r\n      }\r\n    });\r\n\r\n    // Detect X or ALT-F4 or something that kills this window...\r\n    shell.addShellListener(new ShellAdapter() {\r\n      public void shellClosed(ShellEvent e) {\r\n        cancel();\r\n      }\r\n    });\r\n\r\n    // Set the shell size, based upon previous time...\r\n    getData(input);\r\n    setSize();\r\n\r\n    shell.open();\r\n    while (!shell.isDisposed()) {\r\n      if (!display.readAndDispatch())\r\n        display.sleep();\r\n    }\r\n    return stepname;\r\n  }","id":20194,"modified_method":"public String open() {\r\n    Shell parent = getParent();\r\n    Display display = parent.getDisplay();\r\n\r\n    shell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\r\n    props.setLook(shell);\r\n\r\n    lsMod = new ModifyListener() {\r\n      public void modifyText(ModifyEvent e) {\r\n        input.setChanged();\r\n      }\r\n    };\r\n    changed = input.hasChanged();\r\n\r\n    GridLayout shellLayout = new GridLayout();\n    shellLayout.numColumns = 1;\n    shell.setLayout(shellLayout);\r\n    shell.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DialogTitle\"));\r\n\r\n    middle = props.getMiddlePct();\r\n    margin = Const.MARGIN;\n    \n    Composite sCompParent = new Composite(shell, SWT.NONE);\n    sCompParent.setLayout(new FillLayout(SWT.VERTICAL));\n    GridData sCompGridData = new GridData(GridData.FILL_BOTH);\n    sCompGridData.grabExcessHorizontalSpace = true;\n    sCompGridData.grabExcessVerticalSpace = true;\n    sCompParent.setLayoutData(sCompGridData);\r\n    \r\n    sComp = new ScrolledComposite(sCompParent, SWT.V_SCROLL | SWT.H_SCROLL );\r\n    sComp.setLayout(new FormLayout());\n    sComp.setExpandHorizontal(true);\n    sComp.setExpandVertical(true);\n    \n    helpComp = new Composite(shell, SWT.NONE);\n    helpComp.setLayout(new FormLayout());\n    GridData helpCompData = new GridData();\n    helpCompData.grabExcessHorizontalSpace = true;\n    helpCompData.grabExcessVerticalSpace = false;\n    helpComp.setLayoutData(helpCompData);\n    setShellImage(shell, input);\r\n    \r\n    comp = new Composite(sComp, SWT.NONE );\r\n    props.setLook(comp);\r\n\r\n    FormLayout fileLayout = new FormLayout();\r\n    fileLayout.marginWidth  = 3;\r\n    fileLayout.marginHeight = 3;\r\n    comp.setLayout(fileLayout);\r\n\r\n    // Stepname line\r\n    wlStepname = new Label(comp, SWT.RIGHT);\r\n    wlStepname.setText(BaseMessages.getString(PKG, \"System.Label.StepName\"));\r\n    props.setLook(wlStepname);\r\n    fdlStepname = new FormData();\r\n    fdlStepname.left = new FormAttachment(0, 0);\r\n    fdlStepname.top = new FormAttachment(0, margin);\r\n    fdlStepname.right = new FormAttachment(middle, -margin);\r\n    wlStepname.setLayoutData(fdlStepname);\r\n    wStepname = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    wStepname.setText(stepname);\r\n    props.setLook(wStepname);\r\n    wStepname.addModifyListener(lsMod);\r\n    fdStepname = new FormData();\r\n    fdStepname.left = new FormAttachment(middle, 0);\r\n    fdStepname.top = new FormAttachment(0, margin);\r\n    fdStepname.right = new FormAttachment(100, 0);\r\n    wStepname.setLayoutData(fdStepname);\r\n\r\n\r\n    // Filename line\r\n    wlDirectory = new Label(comp, SWT.RIGHT);\r\n    wlDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.Directory.Label\"));\r\n    props.setLook(wlDirectory);\r\n    FormData fdlDirectory = new FormData();\r\n    fdlDirectory.left = new FormAttachment(0, 0);\r\n    fdlDirectory.top = new FormAttachment(wStepname, margin);\r\n    fdlDirectory.right = new FormAttachment(middle, -margin);\r\n    wlDirectory.setLayoutData(fdlDirectory);\r\n\r\n    wbbDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbbDirectory);\r\n    wbbDirectory.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n    wbbDirectory.setToolTipText(BaseMessages.getString(PKG, \"System.Tooltip.BrowseForRepositoryDirectory\"));\r\n    FormData fdbDirectory = new FormData();\r\n    fdbDirectory.right = new FormAttachment(100, 0);\r\n    fdbDirectory.top = new FormAttachment(wStepname, margin);\r\n    wbbDirectory.setLayoutData(fdbDirectory);\r\n\r\n    wbaDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbaDirectory);\r\n    wbaDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryAdd.Button\"));\r\n    wbaDirectory.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryAdd.Tooltip\"));\r\n    FormData fdbaDirectory = new FormData();\r\n    fdbaDirectory.right = new FormAttachment(wbbDirectory, -margin);\r\n    fdbaDirectory.top = new FormAttachment(wStepname, margin);\r\n    wbaDirectory.setLayoutData(fdbaDirectory);\r\n\r\n    wDirectory = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wDirectory);\r\n    wDirectory.addModifyListener(lsMod);\r\n    FormData fdDirectory = new FormData();\r\n    fdDirectory.left = new FormAttachment(middle, 0);\r\n    fdDirectory.right = new FormAttachment(wbaDirectory, -margin);\r\n    fdDirectory.top = new FormAttachment(wStepname, margin);\r\n    wDirectory.setLayoutData(fdDirectory);\r\n    \r\n\r\n    wlNameMask = new Label(comp, SWT.RIGHT);\r\n    wlNameMask.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.NameMask.Label\"));\r\n    props.setLook(wlNameMask);\r\n    FormData fdlNameMask = new FormData();\r\n    fdlNameMask.left = new FormAttachment(0, 0);\r\n    fdlNameMask.top = new FormAttachment(wDirectory, margin);\r\n    fdlNameMask.right = new FormAttachment(middle, -margin);\r\n    wlNameMask.setLayoutData(fdlNameMask);\r\n    wNameMask = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wNameMask);\r\n    wNameMask.addModifyListener(lsMod);\r\n    FormData fdNameMask = new FormData();\r\n    fdNameMask.left = new FormAttachment(middle, 0);\r\n    fdNameMask.top = new FormAttachment(wDirectory, margin);\r\n    fdNameMask.right = new FormAttachment(wDirectory, 0, SWT.RIGHT);\r\n    wNameMask.setLayoutData(fdNameMask);\r\n\r\n    wlExcludeNameMask = new Label(comp, SWT.RIGHT);\r\n    wlExcludeNameMask.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ExcludeNameMask.Label\"));\r\n    props.setLook(wlExcludeNameMask);\r\n    FormData fdlExcludeNameMask = new FormData();\r\n    fdlExcludeNameMask.left = new FormAttachment(0, 0);\r\n    fdlExcludeNameMask.top = new FormAttachment(wNameMask, margin);\r\n    fdlExcludeNameMask.right = new FormAttachment(middle, -margin);\r\n    wlExcludeNameMask.setLayoutData(fdlExcludeNameMask);\r\n    wExcludeFilemask = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wExcludeFilemask);\r\n    wExcludeFilemask.addModifyListener(lsMod);\r\n    FormData fdExcludeNameMask = new FormData();\r\n    fdExcludeNameMask.left = new FormAttachment(middle, 0);\r\n    fdExcludeNameMask.top = new FormAttachment(wNameMask, margin);\r\n    fdExcludeNameMask.right = new FormAttachment(wDirectory, 0, SWT.RIGHT);\r\n    wExcludeFilemask.setLayoutData(fdExcludeNameMask);\r\n\r\n    // Directory list line\r\n    wlDirectoryList = new Label(comp, SWT.RIGHT);\r\n    wlDirectoryList.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryList.Label\"));\r\n    props.setLook(wlDirectoryList);\r\n    FormData fdlDirectoryList = new FormData();\r\n    fdlDirectoryList.left = new FormAttachment(0, 0);\r\n    fdlDirectoryList.top = new FormAttachment(wExcludeFilemask, margin);\r\n    fdlDirectoryList.right = new FormAttachment(middle, -margin);\r\n    wlDirectoryList.setLayoutData(fdlDirectoryList);\r\n\r\n    // Buttons to the right of the screen...\r\n    wbdDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbdDirectory);\r\n    wbdDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryDelete.Button\"));\r\n    wbdDirectory.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryDelete.Tooltip\"));\r\n    FormData fdbdDirectory = new FormData();\r\n    fdbdDirectory.right = new FormAttachment(100, 0);\r\n    fdbdDirectory.top = new FormAttachment(wExcludeFilemask, 40);\r\n    wbdDirectory.setLayoutData(fdbdDirectory);\r\n\r\n    wbeDirectory = new Button(comp, SWT.PUSH | SWT.CENTER);\r\n    props.setLook(wbeDirectory);\r\n    wbeDirectory.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryEdit.Button\"));\r\n    wbeDirectory.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.DirectoryEdit.Tooltip\"));\r\n    FormData fdbeDirectory = new FormData();\r\n    fdbeDirectory.right = new FormAttachment(100, 0);\r\n    fdbeDirectory.left = new FormAttachment(wbdDirectory, 0, SWT.LEFT);\r\n    fdbeDirectory.top = new FormAttachment(wbdDirectory, margin);\r\n    wbeDirectory.setLayoutData(fdbeDirectory);\r\n\r\n    ColumnInfo[] colinfo = new ColumnInfo[] { new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.Directory.Column\"), ColumnInfo.COLUMN_TYPE_TEXT, false),\r\n        new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.NameWildcard.Column\"), ColumnInfo.COLUMN_TYPE_TEXT, false),\r\n        new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ExcludeNameWildcard.Column\"), ColumnInfo.COLUMN_TYPE_TEXT, false),\r\n        new ColumnInfo(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.IncludeSubDirs.Column\"), ColumnInfo.COLUMN_TYPE_CCOMBO, YES_NO_COMBO) };\r\n\r\n    colinfo[0].setUsingVariables(true);\r\n    colinfo[1].setUsingVariables(true);\r\n    colinfo[1].setToolTip(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.RegExpColumn.Column\"));\r\n    colinfo[2].setUsingVariables(true);\r\n    colinfo[2].setToolTip(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ExcludeRegExpColumn.Column\"));\r\n    colinfo[3].setToolTip(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.IncludeSubDirs.ToolTip\"));\r\n\r\n    wDirectoryList = new TableView(transMeta, comp, SWT.FULL_SELECTION | SWT.SINGLE | SWT.BORDER, colinfo, colinfo.length, lsMod, props);\r\n    props.setLook(wDirectoryList);\r\n    FormData fdDirectoryList = new FormData();\r\n    fdDirectoryList.left = new FormAttachment(middle, 0);\r\n    fdDirectoryList.right = new FormAttachment(wbdDirectory, -margin);\r\n    fdDirectoryList.top = new FormAttachment(wExcludeFilemask, margin);\r\n    fdDirectoryList.bottom = new FormAttachment(wExcludeFilemask, 200);\r\n    wDirectoryList.setLayoutData(fdDirectoryList);\r\n\r\n    // Filter File Type\r\n    wlObjectTypeSelection = new Label(comp, SWT.RIGHT);\r\n    wlObjectTypeSelection.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.ObjectTypeSelection.Label\"));\r\n    props.setLook(wlObjectTypeSelection);\r\n    FormData fdlFilterFileType = new FormData();\r\n    fdlFilterFileType.left = new FormAttachment(0, 0);\r\n    fdlFilterFileType.right = new FormAttachment(middle, 0);\r\n    fdlFilterFileType.top = new FormAttachment(wDirectoryList, 3 * margin);\r\n    wlObjectTypeSelection.setLayoutData(fdlFilterFileType);\r\n    wObjectTypeSelection = new CCombo(comp, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\r\n    wObjectTypeSelection.add(ObjectTypeSelection.Jobs.getDescription());\r\n    wObjectTypeSelection.add(ObjectTypeSelection.Transformations.getDescription());\r\n    wObjectTypeSelection.add(ObjectTypeSelection.All.getDescription());\r\n    props.setLook(wObjectTypeSelection);\r\n    FormData fdFilterFileType = new FormData();\r\n    fdFilterFileType.left = new FormAttachment(middle, 0);\r\n    fdFilterFileType.top = new FormAttachment(wDirectoryList, 3 * margin);\r\n    fdFilterFileType.right = new FormAttachment(100, 0);\r\n    wObjectTypeSelection.setLayoutData(fdFilterFileType);\r\n\r\n    wlInclRownum = new Label(comp, SWT.RIGHT);\r\n    wlInclRownum.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.InclRownum.Label\"));\r\n    props.setLook(wlInclRownum);\r\n    FormData fdlInclRownum = new FormData();\r\n    fdlInclRownum.left = new FormAttachment(0, 0);\r\n    fdlInclRownum.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    fdlInclRownum.right = new FormAttachment(middle, -margin);\r\n    wlInclRownum.setLayoutData(fdlInclRownum);\r\n    wInclRownum = new Button(comp, SWT.CHECK);\r\n    props.setLook(wInclRownum);\r\n    wInclRownum.setToolTipText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.InclRownum.Tooltip\"));\r\n    FormData fdRownum = new FormData();\r\n    fdRownum.left = new FormAttachment(middle, 0);\r\n    fdRownum.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    wInclRownum.setLayoutData(fdRownum);\r\n\r\n    wlInclRownumField = new Label(comp, SWT.RIGHT);\r\n    wlInclRownumField.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.InclRownumField.Label\"));\r\n    props.setLook(wlInclRownumField);\r\n    FormData fdlInclRownumField = new FormData();\r\n    fdlInclRownumField.left = new FormAttachment(wInclRownum, margin);\r\n    fdlInclRownumField.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    wlInclRownumField.setLayoutData(fdlInclRownumField);\r\n    wInclRownumField = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n    props.setLook(wInclRownumField);\r\n    wInclRownumField.addModifyListener(lsMod);\r\n    FormData fdInclRownumField = new FormData();\r\n    fdInclRownumField.left = new FormAttachment(wlInclRownumField, margin);\r\n    fdInclRownumField.top = new FormAttachment(wObjectTypeSelection, 2 * margin);\r\n    fdInclRownumField.right = new FormAttachment(100, 0);\r\n    wInclRownumField.setLayoutData(fdInclRownumField);\r\n\r\n    // ///////////////////////////////////////////////////////////\r\n    // / END OF FILE Filter TAB\r\n    // ///////////////////////////////////////////////////////////\r\n\r\n    wOK = new Button(comp, SWT.PUSH);\r\n    wOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\"));\r\n\r\n    wPreview = new Button(comp, SWT.PUSH);\r\n    wPreview.setText(BaseMessages.getString(PKG, \"GetRepositoryNamesDialog.Preview.Button\"));\r\n\r\n    wCancel = new Button(comp, SWT.PUSH);\r\n    wCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\"));\r\n\r\n    setButtonPositions(new Button[] { wOK, wPreview, wCancel }, margin, wInclRownumField);\r\n    \r\n    FormData fdComp = new FormData();\r\n    fdComp.left  = new FormAttachment(0, 0);\r\n    fdComp.top   = new FormAttachment(0, 0);\r\n    fdComp.right = new FormAttachment(100, 0);\r\n    fdComp.bottom= new FormAttachment(100, 0);\r\n    comp.setLayoutData(fdComp);\r\n\r\n    comp.pack();\r\n    Rectangle bounds = comp.getBounds();\r\n\r\n    sComp.setContent(comp);\r\n    sComp.setExpandHorizontal(true);\r\n    sComp.setExpandVertical(true);\r\n    sComp.setMinWidth(bounds.width);\r\n    sComp.setMinHeight(bounds.height);\r\n    \r\n    \r\n    // Add listeners\r\n    lsOK = new Listener() {\r\n      public void handleEvent(Event e) {\r\n        ok();\r\n      }\r\n    };\r\n    lsPreview = new Listener() {\r\n      public void handleEvent(Event e) {\r\n        preview();\r\n      }\r\n    };\r\n    lsCancel = new Listener() {\r\n      public void handleEvent(Event e) {\r\n        cancel();\r\n      }\r\n    };\r\n\r\n    wOK.addListener(SWT.Selection, lsOK);\r\n    wPreview.addListener(SWT.Selection, lsPreview);\r\n    wCancel.addListener(SWT.Selection, lsCancel);\r\n\r\n    lsDef = new SelectionAdapter() {\r\n      public void widgetDefaultSelected(SelectionEvent e) {\r\n        ok();\r\n      }\r\n    };\r\n\r\n    wStepname.addSelectionListener(lsDef);\r\n\r\n    // Add the file to the list of files...\r\n    SelectionAdapter selA = new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent arg0) {\r\n        wDirectoryList.add(new String[] { wDirectory.getText(), wNameMask.getText(), wExcludeFilemask.getText(), \"Y\", });\r\n        wDirectory.setText(\"\");\r\n        wNameMask.setText(\"\");\r\n        wDirectoryList.removeEmptyRows();\r\n        wDirectoryList.setRowNums();\r\n        wDirectoryList.optWidth(true);\r\n      }\r\n    };\r\n    wbaDirectory.addSelectionListener(selA);\r\n    wDirectory.addSelectionListener(selA);\r\n\r\n    // Delete files from the list of files...\r\n    wbdDirectory.addSelectionListener(new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent arg0) {\r\n        int idx[] = wDirectoryList.getSelectionIndices();\r\n        wDirectoryList.remove(idx);\r\n        wDirectoryList.removeEmptyRows();\r\n        wDirectoryList.setRowNums();\r\n      }\r\n    });\r\n\r\n    // Edit the selected file & remove from the list...\r\n    wbeDirectory.addSelectionListener(new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent arg0) {\r\n        int idx = wDirectoryList.getSelectionIndex();\r\n        if (idx >= 0) {\r\n          String string[] = wDirectoryList.getItem(idx);\r\n          wDirectory.setText(string[0]);\r\n          wNameMask.setText(string[1]);\r\n          wExcludeFilemask.setText(string[2]);\r\n          wDirectoryList.remove(idx);\r\n        }\r\n        wDirectoryList.removeEmptyRows();\r\n        wDirectoryList.setRowNums();\r\n      }\r\n    });\r\n\r\n    // Listen to the Browse... button\r\n    wbbDirectory.addSelectionListener(new SelectionAdapter() {\r\n      public void widgetSelected(SelectionEvent e) {\r\n        displaydirectoryList();\r\n      }\r\n    });\r\n\r\n    // Detect X or ALT-F4 or something that kills this window...\r\n    shell.addShellListener(new ShellAdapter() {\r\n      public void shellClosed(ShellEvent e) {\r\n        cancel();\r\n      }\r\n    });\r\n\r\n    // Set the shell size, based upon previous time...\r\n    getData(input);\r\n    setSize();\r\n\r\n    shell.open();\r\n    while (!shell.isDisposed()) {\r\n      if (!display.readAndDispatch())\r\n        display.sleep();\r\n    }\r\n    return stepname;\r\n  }","commit_id":"5e6aaab19143fd48d54f613b932fa1390f323c50","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n        setShellImage(shell, input);\n\n\t\tModifyListener lsMod = new ModifyListener()\n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e)\n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\r\n\t\tModifyListener lsTableMod = new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent arg0) {\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\r\n\t\tSelectionListener lsSelection = new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tshell.setLayout(new FormLayout());\n\t\tshell.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Shell.Title\")); //$NON-NLS-1$\n\r\n\t    ScrolledComposite sComp = new ScrolledComposite(shell, SWT.V_SCROLL | SWT.H_SCROLL );\r\n        sComp.setLayout(new FormLayout());\r\n        \r\n        Composite comp = new Composite(sComp, SWT.NONE );\r\n        props.setLook(comp);\r\n\r\n        FormLayout fileLayout = new FormLayout();\r\n        fileLayout.marginWidth  = 3;\r\n        fileLayout.marginHeight = 3;\r\n        comp.setLayout(fileLayout);\r\n\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Stepname line\n\t\twlStepname = new Label(comp, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname = new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\n\t\tfdlStepname.top = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname = new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top = new FormAttachment(0, margin);\n\t\tfdStepname.right = new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\n\n\t\t// Connection line\n\t\twConnection = addConnectionLine(comp, wStepname, middle, margin);\n\t\tif (input.getDatabaseMeta()==null && transMeta.nrDatabases()==1) wConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\r\n\t\twConnection.addSelectionListener(lsSelection);\n\n        // Schema line...\n        wlSchema=new Label(comp, SWT.RIGHT);\n        wlSchema.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TargetSchema.Label\")); //$NON-NLS-1$\n        props.setLook(wlSchema);\n        fdlSchema=new FormData();\n        fdlSchema.left = new FormAttachment(0, 0);\n        fdlSchema.right= new FormAttachment(middle, -margin);\n        fdlSchema.top  = new FormAttachment(wConnection, margin*2);\n        wlSchema.setLayoutData(fdlSchema);\r\n        \r\n    \twbSchema=new Button(comp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSchema);\r\n \t\twbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n \t\tfdbSchema=new FormData();\r\n \t\tfdbSchema.top  = new FormAttachment(wConnection, 2*margin);\r\n \t\tfdbSchema.right= new FormAttachment(100, 0);\r\n\t\twbSchema.setLayoutData(fdbSchema);\n\n        wSchema=new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wSchema);\n        wSchema.addModifyListener(lsTableMod);\n        fdSchema=new FormData();\n        fdSchema.left = new FormAttachment(middle, 0);\n        fdSchema.top  = new FormAttachment(wConnection, margin*2);\n        fdSchema.right= new FormAttachment(wbSchema, margin);\n        wSchema.setLayoutData(fdSchema);\n\n\t\t// Table line...\n\t\twlTable = new Label(comp, SWT.RIGHT);\n\t\twlTable.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TargetTable.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlTable);\n\t\tfdlTable = new FormData();\n\t\tfdlTable.left = new FormAttachment(0, 0);\n\t\tfdlTable.right = new FormAttachment(middle, -margin);\n\t\tfdlTable.top = new FormAttachment(wbSchema, margin);\n\t\twlTable.setLayoutData(fdlTable);\n\t\t\n\t\twbTable = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbTable);\n\t\twbTable.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbTable = new FormData();\n\t\tfdbTable.right = new FormAttachment(100, 0);\n\t\tfdbTable.top = new FormAttachment(wbSchema, margin);\n\t\twbTable.setLayoutData(fdbTable);\n\t\twTable = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wTable);\n\t\twTable.addModifyListener(lsTableMod);\n\t\tfdTable = new FormData();\n\t\tfdTable.left = new FormAttachment(middle, 0);\n\t\tfdTable.top = new FormAttachment(wbSchema, margin);\n\t\tfdTable.right = new FormAttachment(wbTable, -margin);\n\t\twTable.setLayoutData(fdTable);\n\n\t\t// Sqlldr line...\n\t\twlSqlldr = new Label(comp, SWT.RIGHT);\n\t\twlSqlldr.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Sqlldr.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlSqlldr);\n\t\tfdlSqlldr = new FormData();\n\t\tfdlSqlldr.left = new FormAttachment(0, 0);\n\t\tfdlSqlldr.right = new FormAttachment(middle, -margin);\n\t\tfdlSqlldr.top = new FormAttachment(wTable, margin);\n\t\twlSqlldr.setLayoutData(fdlSqlldr);\n\t\t\n\t\twbSqlldr = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbSqlldr);\n\t\twbSqlldr.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbSqlldr = new FormData();\n\t\tfdbSqlldr.right = new FormAttachment(100, 0);\n\t\tfdbSqlldr.top = new FormAttachment(wTable, margin);\n\t\twbSqlldr.setLayoutData(fdbSqlldr);\n\t\twSqlldr = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wSqlldr);\n\t\twSqlldr.addModifyListener(lsMod);\n\t\tfdSqlldr = new FormData();\n\t\tfdSqlldr.left = new FormAttachment(middle, 0);\n\t\tfdSqlldr.top = new FormAttachment(wTable, margin);\n\t\tfdSqlldr.right = new FormAttachment(wbSqlldr, -margin);\n\t\twSqlldr.setLayoutData(fdSqlldr);\n\t\t\t\t\n\t\t// Load Method line\n\t\twlLoadMethod = new Label(comp, SWT.RIGHT);\n\t\twlLoadMethod.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.LoadMethod.Label\"));\n\t\tprops.setLook(wlLoadMethod);\n\t\tfdlLoadMethod = new FormData();\n\t\tfdlLoadMethod.left = new FormAttachment(0, 0);\n\t\tfdlLoadMethod.right = new FormAttachment(middle, -margin);\n\t\tfdlLoadMethod.top = new FormAttachment(wSqlldr, margin);\n\t\twlLoadMethod.setLayoutData(fdlLoadMethod);\n\t\twLoadMethod = new CCombo(comp, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\n\t\twLoadMethod.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoEndLoadMethod.Label\"));\n\t\twLoadMethod.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ManualLoadMethod.Label\"));\r\n\t\twLoadMethod.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoConcLoadMethod.Label\"));\n\t\twLoadMethod.select(0); // +1: starts at -1\n\t\twLoadMethod.addModifyListener(lsMod);\n\t\t\n\t\tprops.setLook(wLoadMethod);\n\t\tfdLoadMethod= new FormData();\n\t\tfdLoadMethod.left = new FormAttachment(middle, 0);\n\t\tfdLoadMethod.top = new FormAttachment(wSqlldr, margin);\n\t\tfdLoadMethod.right = new FormAttachment(100, 0);\n\t\twLoadMethod.setLayoutData(fdLoadMethod);\n\t\t\n\t\tfdLoadMethod = new FormData();\n\t\tfdLoadMethod.left = new FormAttachment(middle, 0);\n\t\tfdLoadMethod.top = new FormAttachment(wSqlldr, margin);\n\t\tfdLoadMethod.right = new FormAttachment(100, 0);\n\t\twLoadMethod.setLayoutData(fdLoadMethod);\t\t\t\t\t\n\t\t\n\t\t// Load Action line\n\t\twlLoadAction = new Label(comp, SWT.RIGHT);\n\t\twlLoadAction.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.LoadAction.Label\"));\n\t\tprops.setLook(wlLoadAction);\n\t\tfdlLoadAction = new FormData();\n\t\tfdlLoadAction.left = new FormAttachment(0, 0);\n\t\tfdlLoadAction.right = new FormAttachment(middle, -margin);\n\t\tfdlLoadAction.top = new FormAttachment(wLoadMethod, margin);\n\t\twlLoadAction.setLayoutData(fdlLoadAction);\n\t\twLoadAction = new CCombo(comp, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AppendLoadAction.Label\"));\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.InsertLoadAction.Label\"));\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ReplaceLoadAction.Label\"));\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TruncateLoadAction.Label\"));\n\t\t\n\t\twLoadAction.select(0); // +1: starts at -1\n\t\twLoadAction.addModifyListener(lsMod);\n\t\t\n\t\tprops.setLook(wLoadAction);\n\t\tfdLoadAction= new FormData();\n\t\tfdLoadAction.left = new FormAttachment(middle, 0);\n\t\tfdLoadAction.top = new FormAttachment(wLoadMethod, margin);\n\t\tfdLoadAction.right = new FormAttachment(100, 0);\n\t\twLoadAction.setLayoutData(fdLoadAction);\n\t\t\n\t\tfdLoadAction = new FormData();\n\t\tfdLoadAction.left = new FormAttachment(middle, 0);\n\t\tfdLoadAction.top = new FormAttachment(wLoadMethod, margin);\n\t\tfdLoadAction.right = new FormAttachment(100, 0);\n\t\twLoadAction.setLayoutData(fdLoadAction);\t\t\t\t\n\n\t\t// MaxErrors file line\n\t\twlMaxErrors = new Label(comp, SWT.RIGHT);\n\t\twlMaxErrors.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.MaxErrors.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlMaxErrors);\n\t\tfdlMaxErrors = new FormData();\n\t\tfdlMaxErrors.left = new FormAttachment(0, 0);\n\t\tfdlMaxErrors.top = new FormAttachment(wLoadAction, margin);\n\t\tfdlMaxErrors.right = new FormAttachment(middle, -margin);\n\t\twlMaxErrors.setLayoutData(fdlMaxErrors);\n\t\twMaxErrors = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wMaxErrors);\n\t\twMaxErrors.addModifyListener(lsMod);\n\t\tfdMaxErrors = new FormData();\n\t\tfdMaxErrors.left = new FormAttachment(middle, 0);\n\t\tfdMaxErrors.top = new FormAttachment(wLoadAction, margin);\n\t\tfdMaxErrors.right = new FormAttachment(100, 0);\n\t\twMaxErrors.setLayoutData(fdMaxErrors);\t\t\t\t\t\t\n\t\t\n\t\t// Commmit/batch file line\n\t\twlCommit = new Label(comp, SWT.RIGHT);\n\t\twlCommit.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Commit.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlCommit);\n\t\tfdlCommit = new FormData();\n\t\tfdlCommit.left = new FormAttachment(0, 0);\n\t\tfdlCommit.top = new FormAttachment(wMaxErrors, margin);\n\t\tfdlCommit.right = new FormAttachment(middle, -margin);\n\t\twlCommit.setLayoutData(fdlCommit);\n\t\twCommit = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wCommit);\n\t\twCommit.addModifyListener(lsMod);\n\t\tfdCommit = new FormData();\n\t\tfdCommit.left = new FormAttachment(middle, 0);\n\t\tfdCommit.top = new FormAttachment(wMaxErrors, margin);\n\t\tfdCommit.right = new FormAttachment(100, 0);\n\t\twCommit.setLayoutData(fdCommit);\t\t\t\t\n\t\t\n\t\t// Bindsize line\n\t\twlBindSize = new Label(comp, SWT.RIGHT);\n\t\twlBindSize.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.BindSize.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlBindSize);\n\t\tfdlBindSize = new FormData();\n\t\tfdlBindSize.left = new FormAttachment(0, 0);\n\t\tfdlBindSize.top = new FormAttachment(wCommit, margin);\n\t\tfdlBindSize.right = new FormAttachment(middle, -margin);\n\t\twlBindSize.setLayoutData(fdlBindSize);\n\t\twBindSize = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wBindSize);\n\t\twBindSize.addModifyListener(lsMod);\n\t\tfdBindSize = new FormData();\n\t\tfdBindSize.left = new FormAttachment(middle, 0);\n\t\tfdBindSize.top = new FormAttachment(wCommit, margin);\n\t\tfdBindSize.right = new FormAttachment(100, 0);\n\t\twBindSize.setLayoutData(fdBindSize);\t\t\n\n\t\t// Readsize line\n\t\twlReadSize = new Label(comp, SWT.RIGHT);\n\t\twlReadSize.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ReadSize.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReadSize);\n\t\tfdlReadSize = new FormData();\n\t\tfdlReadSize.left = new FormAttachment(0, 0);\n\t\tfdlReadSize.top = new FormAttachment(wBindSize, margin);\n\t\tfdlReadSize.right = new FormAttachment(middle, -margin);\n\t\twlReadSize.setLayoutData(fdlReadSize);\n\t\twReadSize = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wReadSize);\n\t\twReadSize.addModifyListener(lsMod);\n\t\tfdReadSize = new FormData();\n\t\tfdReadSize.left = new FormAttachment(middle, 0);\n\t\tfdReadSize.top = new FormAttachment(wBindSize, margin);\n\t\tfdReadSize.right = new FormAttachment(100, 0);\n\t\twReadSize.setLayoutData(fdReadSize);\t\t\n\n\t\t// Db Name Override line\n\t\twlDbNameOverride = new Label(comp, SWT.RIGHT);\n\t\twlDbNameOverride.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DbNameOverride.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDbNameOverride);\n\t\tfdlDbNameOverride = new FormData();\n\t\tfdlDbNameOverride.left = new FormAttachment(0, 0);\n\t\tfdlDbNameOverride.top = new FormAttachment(wReadSize, margin);\n\t\tfdlDbNameOverride.right = new FormAttachment(middle, -margin);\n\t\twlDbNameOverride.setLayoutData(fdlDbNameOverride);\n\t\twDbNameOverride = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wDbNameOverride);\n\t\twDbNameOverride.addModifyListener(lsMod);\n\t\tfdDbNameOverride = new FormData();\n\t\tfdDbNameOverride.left = new FormAttachment(middle, 0);\n\t\tfdDbNameOverride.top = new FormAttachment(wReadSize, margin);\n\t\tfdDbNameOverride.right = new FormAttachment(100, 0);\n\t\twDbNameOverride.setLayoutData(fdDbNameOverride);\t\t\t\t\n\t\t\n\t\t// Control file line\n\t\twlControlFile = new Label(comp, SWT.RIGHT);\n\t\twlControlFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ControlFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlControlFile);\n\t\tfdlControlFile = new FormData();\n\t\tfdlControlFile.left = new FormAttachment(0, 0);\n\t\tfdlControlFile.top = new FormAttachment(wDbNameOverride, margin);\n\t\tfdlControlFile.right = new FormAttachment(middle, -margin);\n\t\twlControlFile.setLayoutData(fdlControlFile);\t\t\n\t\twbControlFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbControlFile);\n\t\twbControlFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbControlFile = new FormData();\n\t\tfdbControlFile.right = new FormAttachment(100, 0);\n\t\tfdbControlFile.top = new FormAttachment(wDbNameOverride, margin);\n\t\twbControlFile.setLayoutData(fdbControlFile);\n\t\twControlFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\t\t\t\t\n \t\tprops.setLook(wControlFile);\n\t\twControlFile.addModifyListener(lsMod);\n\t\tfdControlFile = new FormData();\n\t\tfdControlFile.left = new FormAttachment(middle, 0);\n\t\tfdControlFile.top = new FormAttachment(wDbNameOverride, margin);\n\t\tfdControlFile.right = new FormAttachment(wbControlFile, -margin);\n\t\twControlFile.setLayoutData(fdControlFile);\t\t\n\n\t\t// Data file line\n\t\twlDataFile = new Label(comp, SWT.RIGHT);\n\t\twlDataFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DataFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDataFile);\n\t\tfdlDataFile = new FormData();\n\t\tfdlDataFile.left = new FormAttachment(0, 0);\n\t\tfdlDataFile.top = new FormAttachment(wControlFile, margin);\n\t\tfdlDataFile.right = new FormAttachment(middle, -margin);\n\t\twlDataFile.setLayoutData(fdlDataFile);\n\t\twbDataFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbDataFile);\n\t\twbDataFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbDataFile = new FormData();\n\t\tfdbDataFile.right = new FormAttachment(100, 0);\n\t\tfdbDataFile.top = new FormAttachment(wControlFile, margin);\n\t\twbDataFile.setLayoutData(fdbDataFile);\t\n\t\twDataFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wDataFile);\n\t\twDataFile.addModifyListener(lsMod);\n\t\tfdDataFile = new FormData();\n\t\tfdDataFile.left = new FormAttachment(middle, 0);\n\t\tfdDataFile.top = new FormAttachment(wControlFile, margin);\n\t\tfdDataFile.right = new FormAttachment(wbDataFile, -margin);\n\t\twDataFile.setLayoutData(fdDataFile);\n\t\t\n\t\t// Log file line\n\t\twlLogFile = new Label(comp, SWT.RIGHT);\n\t\twlLogFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.LogFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlLogFile);\n\t\tfdlLogFile = new FormData();\n\t\tfdlLogFile.left = new FormAttachment(0, 0);\n\t\tfdlLogFile.top = new FormAttachment(wDataFile, margin);\n\t\tfdlLogFile.right = new FormAttachment(middle, -margin);\n\t\twlLogFile.setLayoutData(fdlLogFile);\n\t\twbLogFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbLogFile);\n\t\twbLogFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbLogFile = new FormData();\n\t\tfdbLogFile.right = new FormAttachment(100, 0);\n\t\tfdbLogFile.top = new FormAttachment(wDataFile, margin);\n\t\twbLogFile.setLayoutData(fdbLogFile);\n\t\twLogFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wLogFile);\n\t\twLogFile.addModifyListener(lsMod);\n\t\tfdLogFile = new FormData();\n\t\tfdLogFile.left = new FormAttachment(middle, 0);\n\t\tfdLogFile.top = new FormAttachment(wDataFile, margin);\n\t\tfdLogFile.right = new FormAttachment(wbLogFile, -margin);\n\t\twLogFile.setLayoutData(fdLogFile);\t\t\n\n\t\t// Bad file line\n\t\twlBadFile = new Label(comp, SWT.RIGHT);\n\t\twlBadFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.BadFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlBadFile);\n\t\tfdlBadFile = new FormData();\n\t\tfdlBadFile.left = new FormAttachment(0, 0);\n\t\tfdlBadFile.top = new FormAttachment(wLogFile, margin);\n\t\tfdlBadFile.right = new FormAttachment(middle, -margin);\n\t\twlBadFile.setLayoutData(fdlBadFile);\n\t\twbBadFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbBadFile);\n\t\twbBadFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbBadFile = new FormData();\n\t\tfdbBadFile.right = new FormAttachment(100, 0);\n\t\tfdbBadFile.top = new FormAttachment(wLogFile, margin);\n\t\twbBadFile.setLayoutData(fdbBadFile);\t\t\n\t\twBadFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wBadFile);\n\t\twBadFile.addModifyListener(lsMod);\n\t\tfdBadFile = new FormData();\n\t\tfdBadFile.left = new FormAttachment(middle, 0);\n\t\tfdBadFile.top = new FormAttachment(wLogFile, margin);\n\t\tfdBadFile.right = new FormAttachment(wbBadFile, -margin);\n\t\twBadFile.setLayoutData(fdBadFile);\t\t\n\t\t\n\t\t// Discard file line\n\t\twlDiscardFile = new Label(comp, SWT.RIGHT);\n\t\twlDiscardFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DiscardFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDiscardFile);\n\t\tfdlDiscardFile = new FormData();\n\t\tfdlDiscardFile.left = new FormAttachment(0, 0);\n\t\tfdlDiscardFile.top = new FormAttachment(wBadFile, margin);\n\t\tfdlDiscardFile.right = new FormAttachment(middle, -margin);\n\t\twlDiscardFile.setLayoutData(fdlDiscardFile);\n\t\twbDiscardFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbDiscardFile);\n\t\twbDiscardFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbDiscardFile = new FormData();\n\t\tfdbDiscardFile.right = new FormAttachment(100, 0);\n\t\tfdbDiscardFile.top = new FormAttachment(wBadFile, margin);\n\t\twbDiscardFile.setLayoutData(fdbDiscardFile);\n\t\twDiscardFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wDiscardFile);\n\t\twDiscardFile.addModifyListener(lsMod);\n\t\tfdDiscardFile = new FormData();\n\t\tfdDiscardFile.left = new FormAttachment(middle, 0);\n\t\tfdDiscardFile.top = new FormAttachment(wBadFile, margin);\n\t\tfdDiscardFile.right = new FormAttachment(wbDiscardFile, -margin);\n\t\twDiscardFile.setLayoutData(fdDiscardFile);\t\t\t\n\t\t\n\t\t//\n        // Control encoding line\n        //\n        // The drop down is editable as it may happen an encoding may not be present\n        // on one machine, but you may want to use it on your execution server\n        //\n        wlEncoding=new Label(comp, SWT.RIGHT);\n        wlEncoding.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Encoding.Label\"));\n        props.setLook(wlEncoding);\n        fdlEncoding=new FormData();\n        fdlEncoding.left  = new FormAttachment(0, 0);\n        fdlEncoding.top   = new FormAttachment(wDiscardFile, margin);\n        fdlEncoding.right = new FormAttachment(middle, -margin);\n        wlEncoding.setLayoutData(fdlEncoding);\n        wEncoding=new Combo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        wEncoding.setToolTipText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Encoding.Tooltip\"));\n        wEncoding.setItems(encodings);\n        props.setLook(wEncoding);\n        fdEncoding=new FormData();\n        fdEncoding.left = new FormAttachment(middle, 0);\n        fdEncoding.top  = new FormAttachment(wDiscardFile, margin);\n        fdEncoding.right= new FormAttachment(100, 0);        \n        wEncoding.setLayoutData(fdEncoding);\n        wEncoding.addModifyListener(lsMod);\r\n               \r\n        // Oracle character set name line\r\n        wlCharacterSetName=new Label(comp, SWT.RIGHT);\r\n        wlCharacterSetName.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.CharacterSetName.Label\"));\r\n        props.setLook(wlCharacterSetName);\r\n        fdlCharacterSetName=new FormData();\r\n        fdlCharacterSetName.left  = new FormAttachment(0, 0);\r\n        fdlCharacterSetName.top   = new FormAttachment(wEncoding, margin);\r\n        fdlCharacterSetName.right = new FormAttachment(middle, -margin);\r\n        wlCharacterSetName.setLayoutData(fdlCharacterSetName);\r\n        wCharacterSetName=new Combo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wCharacterSetName.setToolTipText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.CharacterSetName.Tooltip\"));\r\n        wCharacterSetName.setItems(characterSetNames);\r\n        props.setLook(wCharacterSetName);\r\n        fdCharacterSetName=new FormData();\r\n        fdCharacterSetName.left = new FormAttachment(middle, 0);\r\n        fdCharacterSetName.top  = new FormAttachment(wEncoding, margin);\r\n        fdCharacterSetName.right= new FormAttachment(100, 0);        \r\n        wCharacterSetName.setLayoutData(fdCharacterSetName);\r\n        wCharacterSetName.addModifyListener(lsMod);\r\n        \r\n        // Alternate Record Terminator\r\n\t\twlAltRecordTerm = new Label(comp, SWT.RIGHT);\r\n\t\twlAltRecordTerm.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AltRecordTerm.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlAltRecordTerm);\r\n\t\tfdlAltRecordTerm = new FormData();\r\n\t\tfdlAltRecordTerm.left = new FormAttachment(0, 0);\r\n\t\tfdlAltRecordTerm.top = new FormAttachment(wCharacterSetName, margin);\r\n\t\tfdlAltRecordTerm.right = new FormAttachment(middle, -margin);\r\n\t\twlAltRecordTerm.setLayoutData(fdlAltRecordTerm);\r\n\t\twAltRecordTerm = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wAltRecordTerm);\r\n\t\tfdAltRecordTerm = new FormData();\r\n\t\tfdAltRecordTerm.left = new FormAttachment(middle, 0);\r\n\t\tfdAltRecordTerm.top = new FormAttachment(wCharacterSetName, margin);\r\n\t\tfdAltRecordTerm.right = new FormAttachment(100, 0);\r\n\t\twAltRecordTerm.setLayoutData(fdAltRecordTerm);\r\n\t\twAltRecordTerm.addModifyListener(lsMod);\t\t\n\t\t\t\t\n\t\t// DirectPath line\n\t\twlDirectPath = new Label(comp, SWT.RIGHT);\n\t\twlDirectPath.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DirectPath.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDirectPath);\n\t\tfdlDirectPath = new FormData();\n\t\tfdlDirectPath.left = new FormAttachment(0, 0);\n\t\tfdlDirectPath.top = new FormAttachment(wAltRecordTerm, margin);\n\t\tfdlDirectPath.right = new FormAttachment(middle, -margin);\n\t\twlDirectPath.setLayoutData(fdlDirectPath);\n\t\twDirectPath = new Button(comp, SWT.CHECK);\n \t\tprops.setLook(wDirectPath);\n\t\tfdDirectPath = new FormData();\n\t\tfdDirectPath.left = new FormAttachment(middle, 0);\n\t\tfdDirectPath.top = new FormAttachment(wAltRecordTerm, margin);\n\t\tfdDirectPath.right = new FormAttachment(100, 0);\n\t\twDirectPath.setLayoutData(fdDirectPath);\t\n\t\twDirectPath.addSelectionListener(new SelectionAdapter() \n\t\t    {\n\t\t\t    public void widgetSelected(SelectionEvent e) \n\t\t\t    {\n  \t\t\t\t    input.setChanged();\r\n              // Parallel loading is only possible with a direct path option...\r\n              //\r\n              if (!wDirectPath.getSelection()) wParallel.setSelection(false);\n  \t\t    \t}\n\t\t    }\n\t    );\n\n\t\t// Erase files line\n\t\twlEraseFiles = new Label(comp, SWT.RIGHT);\n\t\twlEraseFiles.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.EraseFiles.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlEraseFiles);\n\t\tfdlEraseFiles = new FormData();\n\t\tfdlEraseFiles.left = new FormAttachment(0, 0);\n\t\tfdlEraseFiles.top = new FormAttachment(wDirectPath, margin);\n\t\tfdlEraseFiles.right = new FormAttachment(middle, -margin);\n\t\twlEraseFiles.setLayoutData(fdlEraseFiles);\n\t\twEraseFiles = new Button(comp, SWT.CHECK);\n \t\tprops.setLook(wEraseFiles);\n\t\tfdEraseFiles = new FormData();\n\t\tfdEraseFiles.left = new FormAttachment(middle, 0);\n\t\tfdEraseFiles.top = new FormAttachment(wDirectPath, margin);\n\t\tfdEraseFiles.right = new FormAttachment(100, 0);\n\t\twEraseFiles.setLayoutData(fdEraseFiles);\t\t\t\t\n\t\twEraseFiles.addSelectionListener(new SelectionAdapter() \n    \t    {\n\t\t        public void widgetSelected(SelectionEvent e) \n\t\t        {\n\t\t\t\t    input.setChanged();\n\t\t    \t}\n\t        }\n        );\r\n\t\t\r\n\t\t// Fail on warning line\r\n\t\twlFailOnWarning = new Label(comp, SWT.RIGHT);\r\n\t\twlFailOnWarning.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.FailOnWarning.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFailOnWarning);\r\n\t\tfdlFailOnWarning = new FormData();\r\n\t\tfdlFailOnWarning.left = new FormAttachment(0, 0);\r\n\t\tfdlFailOnWarning.top = new FormAttachment(wEraseFiles, margin);\r\n\t\tfdlFailOnWarning.right = new FormAttachment(middle, -margin);\r\n\t\twlFailOnWarning.setLayoutData(fdlFailOnWarning);\r\n\t\twFailOnWarning = new Button(comp, SWT.CHECK);\r\n \t\tprops.setLook(wFailOnWarning);\r\n\t\tfdFailOnWarning = new FormData();\r\n\t\tfdFailOnWarning.left = new FormAttachment(middle, 0);\r\n\t\tfdFailOnWarning.top = new FormAttachment(wEraseFiles, margin);\r\n\t\tfdFailOnWarning.right = new FormAttachment(100, 0);\r\n\t\twFailOnWarning.setLayoutData(fdFailOnWarning);\t\t\t\t\r\n\t\twFailOnWarning.addSelectionListener(new SelectionAdapter() \r\n    \t    {\r\n\t\t        public void widgetSelected(SelectionEvent e) \r\n\t\t        {\r\n\t\t\t\t    input.setChanged();\r\n\t\t    \t}\r\n\t        }\r\n        );\r\n\t\t\r\n\t\t// Fail on error line\r\n\t\twlFailOnError = new Label(comp, SWT.RIGHT);\r\n\t\twlFailOnError.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.FailOnError.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFailOnError);\r\n\t\tfdlFailOnError = new FormData();\r\n\t\tfdlFailOnError.left = new FormAttachment(0, 0);\r\n\t\tfdlFailOnError.top = new FormAttachment(wFailOnWarning, margin);\r\n\t\tfdlFailOnError.right = new FormAttachment(middle, -margin);\r\n\t\twlFailOnError.setLayoutData(fdlFailOnError);\r\n\t\twFailOnError = new Button(comp, SWT.CHECK);\r\n \t\tprops.setLook(wFailOnError);\r\n\t\tfdFailOnError = new FormData();\r\n\t\tfdFailOnError.left = new FormAttachment(middle, 0);\r\n\t\tfdFailOnError.top = new FormAttachment(wFailOnWarning, margin);\r\n\t\tfdFailOnError.right = new FormAttachment(100, 0);\r\n\t\twFailOnError.setLayoutData(fdFailOnError);\t\t\t\t\r\n\t\twFailOnError.addSelectionListener(new SelectionAdapter() \r\n    \t    {\r\n\t\t        public void widgetSelected(SelectionEvent e) \r\n\t\t        {\r\n\t\t\t\t    input.setChanged();\r\n\t\t    \t}\r\n\t        }\r\n        );\n\r\n    // Fail on error line\r\n    wlParallel = new Label(comp, SWT.RIGHT);\r\n    wlParallel.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Parallel.Label\")); //$NON-NLS-1$\r\n    props.setLook(wlParallel);\r\n    fdlParallel = new FormData();\r\n    fdlParallel.left = new FormAttachment(0, 0);\r\n    fdlParallel.top = new FormAttachment(wFailOnError, margin);\r\n    fdlParallel.right = new FormAttachment(middle, -margin);\r\n    wlParallel.setLayoutData(fdlParallel);\r\n    wParallel = new Button(comp, SWT.CHECK);\r\n    props.setLook(wParallel);\r\n    fdParallel = new FormData();\r\n    fdParallel.left = new FormAttachment(middle, 0);\r\n    fdParallel.top = new FormAttachment(wFailOnError, margin);\r\n    fdParallel.right = new FormAttachment(100, 0);\r\n    wParallel.setLayoutData(fdParallel);        \r\n    wParallel.addSelectionListener(new SelectionAdapter() \r\n          {\r\n            public void widgetSelected(SelectionEvent e) \r\n            {\r\n              input.setChanged();\r\n              // Parallel loading is only possible with a direct path option...\r\n              //\r\n              if (wParallel.getSelection()) wDirectPath.setSelection(true);\r\n            }\r\n          }\r\n        );\r\n\r\n\t\t\n\t\t// THE BUTTONS\n\t\twOK = new Button(comp, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twSQL = new Button(comp, SWT.PUSH);\n\t\twSQL.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.SQL.Button\")); //$NON-NLS-1$\n\t\twCancel = new Button(comp, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n\t\tsetButtonPositions(new Button[] { wOK, wCancel , wSQL }, margin, null);\n\n\t\t// The field Table\n\t\twlReturn = new Label(comp, SWT.NONE);\n\t\twlReturn.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Fields.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReturn);\n\t\tfdlReturn = new FormData();\n\t\tfdlReturn.left = new FormAttachment(0, 0);\n\t\tfdlReturn.top = new FormAttachment(wParallel, margin);\n\t\twlReturn.setLayoutData(fdlReturn);\n\n\t\tint UpInsCols = 3;\n\t\tint UpInsRows = (input.getFieldTable() != null ? input.getFieldTable().length : 1);\n\n\t\tciReturn = new ColumnInfo[UpInsCols];\n\t\tciReturn[0] = new ColumnInfo(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ColumnInfo.TableField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[1] = new ColumnInfo(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[2] = new ColumnInfo(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ColumnInfo.DateMask\"), ColumnInfo.COLUMN_TYPE_CCOMBO, \n\t\t\t\t                     new String[] {\"\",                //$NON-NLS-1$\n\t\t\t                                       BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateMask.Label\"),\n\t                                        \t   BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateTimeMask.Label\")}, true); \n\t\ttableFieldColumns.add(ciReturn[0]);\n\t\twReturn = new TableView(transMeta, comp, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL,\n\t\t\t\tciReturn, UpInsRows, lsMod, props);\n\n\t\twGetLU = new Button(comp, SWT.PUSH);\n\t\twGetLU.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.GetFields.Label\")); //$NON-NLS-1$\n\t\tfdGetLU = new FormData();\n\t\tfdGetLU.top   = new FormAttachment(wlReturn, margin);\n\t\tfdGetLU.right = new FormAttachment(100, 0);\n\t\twGetLU.setLayoutData(fdGetLU);\n\r\n\t\twDoMapping = new Button(comp, SWT.PUSH);\r\n\t\twDoMapping.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.EditMapping.Label\")); //$NON-NLS-1$\r\n\t\tfdDoMapping = new FormData();\r\n\t\tfdDoMapping.top   = new FormAttachment(wGetLU, margin);\r\n\t\tfdDoMapping.right = new FormAttachment(100, 0);\r\n\t\twDoMapping.setLayoutData(fdDoMapping);\r\n\r\n\t\twDoMapping.addListener(SWT.Selection, new Listener() { \tpublic void handleEvent(Event arg0) { generateMappings();}});\r\n\r\n\t\t\n\t\tfdReturn = new FormData();\n\t\tfdReturn.left = new FormAttachment(0, 0);\n\t\tfdReturn.top = new FormAttachment(wlReturn, margin);\n\t\tfdReturn.right = new FormAttachment(wGetLU, -margin);\n\t\tfdReturn.bottom = new FormAttachment(wOK, -2*margin);\n\t\twReturn.setLayoutData(fdReturn);\r\n\t\t\r\n\t\t\r\n        FormData fdComp = new FormData();\r\n        fdComp.left  = new FormAttachment(0, 0);\r\n        fdComp.top   = new FormAttachment(0, 0);\r\n        fdComp.right = new FormAttachment(100, 0);\r\n        fdComp.bottom= new FormAttachment(100, 0);\r\n        comp.setLayoutData(fdComp);\r\n\r\n        comp.pack();\r\n        Rectangle bounds = comp.getBounds();\r\n\r\n        sComp.setContent(comp);\r\n        sComp.setExpandHorizontal(true);\r\n        sComp.setExpandVertical(true);\r\n        sComp.setMinWidth(bounds.width);\r\n        sComp.setMinHeight(bounds.height);\r\n\r\n\t    // \r\n        // Search the fields in the background\r\n        //\r\n        \r\n        final Runnable runnable = new Runnable()\r\n        {\r\n            public void run()\r\n            {\r\n                StepMeta stepMeta = transMeta.findStep(stepname);\r\n                if (stepMeta!=null)\r\n                {\r\n                    try\r\n                    {\r\n                    \tRowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\r\n                        \r\n                        // Remember these fields...\r\n                        for (int i=0;i<row.size();i++)\r\n                        {\r\n                        \tinputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\r\n                        }\r\n                        \r\n                        setComboBoxes(); \r\n                    }\r\n                    catch(KettleException e)\r\n                    {\r\n                        logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        new Thread(runnable).start();\n\n\t\twbSqlldr.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wSqlldr.getText() != null)\n                {\n                    dialog.setFileName(wSqlldr.getText());\n                }\n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twSqlldr.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\n\t\t\t\n\t\twbControlFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wControlFile.getText() != null)\n                {\n                    dialog.setFileName(wControlFile.getText());\n                }\n                dialog.setFilterNames(ALL_FILETYPES);               \n                if (dialog.open() != null)\n                {\n                \twControlFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\t\n\t\t\n\t\twbDataFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wDataFile.getText() != null)\n                {\n                    dialog.setFileName(wDataFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twDataFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\n\n\t\twbLogFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wLogFile.getText() != null)\n                {\n                    dialog.setFileName(wLogFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twLogFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\n\t\t\n\t\twbBadFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wBadFile.getText() != null)\n                {\n                    dialog.setFileName(wBadFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twBadFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\n\t\t\n\t\twbDiscardFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wDiscardFile.getText() != null)\n                {\n                    dialog.setFileName(wDiscardFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twDiscardFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\t\t\n\t\t\n\t\t// Add listeners\n\t\tlsOK = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tok();\n\t\t\t}\n\t\t};\n\t\tlsGetLU = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tgetUpdate();\n\t\t\t}\n\t\t};\n\t\tlsSQL = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcreate();\n\t\t\t}\n\t\t};\n\t\tlsCancel = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\twOK.addListener(SWT.Selection, lsOK);\n\t\twGetLU.addListener(SWT.Selection, lsGetLU);\n\t\twSQL.addListener(SWT.Selection, lsSQL);\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\n\t\tlsDef = new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\n\t\twStepname.addSelectionListener(lsDef);\n        wSchema.addSelectionListener(lsDef);\n        wTable.addSelectionListener(lsDef);\n        wMaxErrors.addSelectionListener(lsDef);\n        wCommit.addSelectionListener(lsDef);\n        wBindSize.addSelectionListener(lsDef);\n        wReadSize.addSelectionListener(lsDef);\n        wDbNameOverride.addSelectionListener(lsDef);\n        wControlFile.addSelectionListener(lsDef);\n        wDataFile.addSelectionListener(lsDef);\n        wLogFile.addSelectionListener(lsDef);\n        wBadFile.addSelectionListener(lsDef);\n        wDiscardFile.addSelectionListener(lsDef);\r\n        wAltRecordTerm.addSelectionListener(lsDef);\n\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(new ShellAdapter()\n\t\t{\n\t\t\tpublic void shellClosed(ShellEvent e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t});\n\t\twbSchema.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tgetSchemaNames();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\n\n\t\twbTable.addSelectionListener(new SelectionAdapter()\n\t\t{\n\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t{\n\t\t\t\tgetTableName();\n\t\t\t}\n\t\t});\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\n\t\tgetData();\r\n\t\tsetTableFieldCombo();\n\t\tinput.setChanged(changed);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","id":20195,"modified_method":"public String open()\n\t{\n\t\tShell parent = getParent();\n\t\tDisplay display = parent.getDisplay();\n\n\t\tshell = new Shell(parent, SWT.DIALOG_TRIM | SWT.RESIZE | SWT.MAX | SWT.MIN);\n \t\tprops.setLook(shell);\n\n\t\tModifyListener lsMod = new ModifyListener()\n\t\t{\n\t\t\tpublic void modifyText(ModifyEvent e)\n\t\t\t{\n\t\t\t\tinput.setChanged();\n\t\t\t}\n\t\t};\r\n\t\tModifyListener lsTableMod = new ModifyListener() {\r\n\t\t\tpublic void modifyText(ModifyEvent arg0) {\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\r\n\t\tSelectionListener lsSelection = new SelectionAdapter()\r\n\t\t{\r\n\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t{\r\n\t\t\t\tinput.setChanged();\r\n\t\t\t\tsetTableFieldCombo();\r\n\t\t\t}\r\n\t\t};\n\t\tchanged = input.hasChanged();\n\n\t\tGridLayout shellLayout = new GridLayout();\n    shellLayout.numColumns = 1;\n    shell.setLayout(shellLayout);\n\t\tshell.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Shell.Title\")); //$NON-NLS-1$\n\n\t\tComposite sCompParent = new Composite(shell, SWT.NONE);\n    sCompParent.setLayout(new FillLayout(SWT.VERTICAL));\n    GridData sCompGridData = new GridData(GridData.FILL_BOTH);\n    sCompGridData.grabExcessHorizontalSpace = true;\n    sCompGridData.grabExcessVerticalSpace = true;\n    sCompParent.setLayoutData(sCompGridData);\n    \r\n\t    ScrolledComposite sComp = new ScrolledComposite(sCompParent, SWT.V_SCROLL | SWT.H_SCROLL );\r\n        sComp.setLayout(new FormLayout());\r\n        \r\n        Composite comp = new Composite(sComp, SWT.NONE );\r\n        props.setLook(comp);\r\n\r\n        FormLayout fileLayout = new FormLayout();\r\n        fileLayout.marginWidth  = 3;\r\n        fileLayout.marginHeight = 3;\r\n        comp.setLayout(fileLayout);\n        \n    helpComp = new Composite(shell, SWT.NONE);\n    helpComp.setLayout(new FormLayout());\n    GridData helpCompData = new GridData();\n    helpCompData.grabExcessHorizontalSpace = true;\n    helpCompData.grabExcessVerticalSpace = false;\n    helpComp.setLayoutData(helpCompData);\n    setShellImage(shell, input);\r\n\n\t\tint middle = props.getMiddlePct();\n\t\tint margin = Const.MARGIN;\n\n\t\t// Stepname line\n\t\twlStepname = new Label(comp, SWT.RIGHT);\n\t\twlStepname.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Stepname.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlStepname);\n\t\tfdlStepname = new FormData();\n\t\tfdlStepname.left = new FormAttachment(0, 0);\n\t\tfdlStepname.right = new FormAttachment(middle, -margin);\n\t\tfdlStepname.top = new FormAttachment(0, margin);\n\t\twlStepname.setLayoutData(fdlStepname);\n\t\twStepname = new Text(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n\t\twStepname.setText(stepname);\n \t\tprops.setLook(wStepname);\n\t\twStepname.addModifyListener(lsMod);\n\t\tfdStepname = new FormData();\n\t\tfdStepname.left = new FormAttachment(middle, 0);\n\t\tfdStepname.top = new FormAttachment(0, margin);\n\t\tfdStepname.right = new FormAttachment(100, 0);\n\t\twStepname.setLayoutData(fdStepname);\n\n\t\t// Connection line\n\t\twConnection = addConnectionLine(comp, wStepname, middle, margin);\n\t\tif (input.getDatabaseMeta()==null && transMeta.nrDatabases()==1) wConnection.select(0);\n\t\twConnection.addModifyListener(lsMod);\r\n\t\twConnection.addSelectionListener(lsSelection);\n\n        // Schema line...\n        wlSchema=new Label(comp, SWT.RIGHT);\n        wlSchema.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TargetSchema.Label\")); //$NON-NLS-1$\n        props.setLook(wlSchema);\n        fdlSchema=new FormData();\n        fdlSchema.left = new FormAttachment(0, 0);\n        fdlSchema.right= new FormAttachment(middle, -margin);\n        fdlSchema.top  = new FormAttachment(wConnection, margin*2);\n        wlSchema.setLayoutData(fdlSchema);\r\n        \r\n    \twbSchema=new Button(comp, SWT.PUSH| SWT.CENTER);\r\n \t\tprops.setLook(wbSchema);\r\n \t\twbSchema.setText(BaseMessages.getString(PKG, \"System.Button.Browse\"));\r\n \t\tfdbSchema=new FormData();\r\n \t\tfdbSchema.top  = new FormAttachment(wConnection, 2*margin);\r\n \t\tfdbSchema.right= new FormAttachment(100, 0);\r\n\t\twbSchema.setLayoutData(fdbSchema);\n\n        wSchema=new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        props.setLook(wSchema);\n        wSchema.addModifyListener(lsTableMod);\n        fdSchema=new FormData();\n        fdSchema.left = new FormAttachment(middle, 0);\n        fdSchema.top  = new FormAttachment(wConnection, margin*2);\n        fdSchema.right= new FormAttachment(wbSchema, margin);\n        wSchema.setLayoutData(fdSchema);\n\n\t\t// Table line...\n\t\twlTable = new Label(comp, SWT.RIGHT);\n\t\twlTable.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TargetTable.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlTable);\n\t\tfdlTable = new FormData();\n\t\tfdlTable.left = new FormAttachment(0, 0);\n\t\tfdlTable.right = new FormAttachment(middle, -margin);\n\t\tfdlTable.top = new FormAttachment(wbSchema, margin);\n\t\twlTable.setLayoutData(fdlTable);\n\t\t\n\t\twbTable = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbTable);\n\t\twbTable.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbTable = new FormData();\n\t\tfdbTable.right = new FormAttachment(100, 0);\n\t\tfdbTable.top = new FormAttachment(wbSchema, margin);\n\t\twbTable.setLayoutData(fdbTable);\n\t\twTable = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wTable);\n\t\twTable.addModifyListener(lsTableMod);\n\t\tfdTable = new FormData();\n\t\tfdTable.left = new FormAttachment(middle, 0);\n\t\tfdTable.top = new FormAttachment(wbSchema, margin);\n\t\tfdTable.right = new FormAttachment(wbTable, -margin);\n\t\twTable.setLayoutData(fdTable);\n\n\t\t// Sqlldr line...\n\t\twlSqlldr = new Label(comp, SWT.RIGHT);\n\t\twlSqlldr.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Sqlldr.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlSqlldr);\n\t\tfdlSqlldr = new FormData();\n\t\tfdlSqlldr.left = new FormAttachment(0, 0);\n\t\tfdlSqlldr.right = new FormAttachment(middle, -margin);\n\t\tfdlSqlldr.top = new FormAttachment(wTable, margin);\n\t\twlSqlldr.setLayoutData(fdlSqlldr);\n\t\t\n\t\twbSqlldr = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbSqlldr);\n\t\twbSqlldr.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbSqlldr = new FormData();\n\t\tfdbSqlldr.right = new FormAttachment(100, 0);\n\t\tfdbSqlldr.top = new FormAttachment(wTable, margin);\n\t\twbSqlldr.setLayoutData(fdbSqlldr);\n\t\twSqlldr = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wSqlldr);\n\t\twSqlldr.addModifyListener(lsMod);\n\t\tfdSqlldr = new FormData();\n\t\tfdSqlldr.left = new FormAttachment(middle, 0);\n\t\tfdSqlldr.top = new FormAttachment(wTable, margin);\n\t\tfdSqlldr.right = new FormAttachment(wbSqlldr, -margin);\n\t\twSqlldr.setLayoutData(fdSqlldr);\n\t\t\t\t\n\t\t// Load Method line\n\t\twlLoadMethod = new Label(comp, SWT.RIGHT);\n\t\twlLoadMethod.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.LoadMethod.Label\"));\n\t\tprops.setLook(wlLoadMethod);\n\t\tfdlLoadMethod = new FormData();\n\t\tfdlLoadMethod.left = new FormAttachment(0, 0);\n\t\tfdlLoadMethod.right = new FormAttachment(middle, -margin);\n\t\tfdlLoadMethod.top = new FormAttachment(wSqlldr, margin);\n\t\twlLoadMethod.setLayoutData(fdlLoadMethod);\n\t\twLoadMethod = new CCombo(comp, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\n\t\twLoadMethod.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoEndLoadMethod.Label\"));\n\t\twLoadMethod.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ManualLoadMethod.Label\"));\r\n\t\twLoadMethod.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AutoConcLoadMethod.Label\"));\n\t\twLoadMethod.select(0); // +1: starts at -1\n\t\twLoadMethod.addModifyListener(lsMod);\n\t\t\n\t\tprops.setLook(wLoadMethod);\n\t\tfdLoadMethod= new FormData();\n\t\tfdLoadMethod.left = new FormAttachment(middle, 0);\n\t\tfdLoadMethod.top = new FormAttachment(wSqlldr, margin);\n\t\tfdLoadMethod.right = new FormAttachment(100, 0);\n\t\twLoadMethod.setLayoutData(fdLoadMethod);\n\t\t\n\t\tfdLoadMethod = new FormData();\n\t\tfdLoadMethod.left = new FormAttachment(middle, 0);\n\t\tfdLoadMethod.top = new FormAttachment(wSqlldr, margin);\n\t\tfdLoadMethod.right = new FormAttachment(100, 0);\n\t\twLoadMethod.setLayoutData(fdLoadMethod);\t\t\t\t\t\n\t\t\n\t\t// Load Action line\n\t\twlLoadAction = new Label(comp, SWT.RIGHT);\n\t\twlLoadAction.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.LoadAction.Label\"));\n\t\tprops.setLook(wlLoadAction);\n\t\tfdlLoadAction = new FormData();\n\t\tfdlLoadAction.left = new FormAttachment(0, 0);\n\t\tfdlLoadAction.right = new FormAttachment(middle, -margin);\n\t\tfdlLoadAction.top = new FormAttachment(wLoadMethod, margin);\n\t\twlLoadAction.setLayoutData(fdlLoadAction);\n\t\twLoadAction = new CCombo(comp, SWT.SINGLE | SWT.READ_ONLY | SWT.BORDER);\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AppendLoadAction.Label\"));\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.InsertLoadAction.Label\"));\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ReplaceLoadAction.Label\"));\n\t\twLoadAction.add(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.TruncateLoadAction.Label\"));\n\t\t\n\t\twLoadAction.select(0); // +1: starts at -1\n\t\twLoadAction.addModifyListener(lsMod);\n\t\t\n\t\tprops.setLook(wLoadAction);\n\t\tfdLoadAction= new FormData();\n\t\tfdLoadAction.left = new FormAttachment(middle, 0);\n\t\tfdLoadAction.top = new FormAttachment(wLoadMethod, margin);\n\t\tfdLoadAction.right = new FormAttachment(100, 0);\n\t\twLoadAction.setLayoutData(fdLoadAction);\n\t\t\n\t\tfdLoadAction = new FormData();\n\t\tfdLoadAction.left = new FormAttachment(middle, 0);\n\t\tfdLoadAction.top = new FormAttachment(wLoadMethod, margin);\n\t\tfdLoadAction.right = new FormAttachment(100, 0);\n\t\twLoadAction.setLayoutData(fdLoadAction);\t\t\t\t\n\n\t\t// MaxErrors file line\n\t\twlMaxErrors = new Label(comp, SWT.RIGHT);\n\t\twlMaxErrors.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.MaxErrors.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlMaxErrors);\n\t\tfdlMaxErrors = new FormData();\n\t\tfdlMaxErrors.left = new FormAttachment(0, 0);\n\t\tfdlMaxErrors.top = new FormAttachment(wLoadAction, margin);\n\t\tfdlMaxErrors.right = new FormAttachment(middle, -margin);\n\t\twlMaxErrors.setLayoutData(fdlMaxErrors);\n\t\twMaxErrors = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wMaxErrors);\n\t\twMaxErrors.addModifyListener(lsMod);\n\t\tfdMaxErrors = new FormData();\n\t\tfdMaxErrors.left = new FormAttachment(middle, 0);\n\t\tfdMaxErrors.top = new FormAttachment(wLoadAction, margin);\n\t\tfdMaxErrors.right = new FormAttachment(100, 0);\n\t\twMaxErrors.setLayoutData(fdMaxErrors);\t\t\t\t\t\t\n\t\t\n\t\t// Commmit/batch file line\n\t\twlCommit = new Label(comp, SWT.RIGHT);\n\t\twlCommit.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Commit.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlCommit);\n\t\tfdlCommit = new FormData();\n\t\tfdlCommit.left = new FormAttachment(0, 0);\n\t\tfdlCommit.top = new FormAttachment(wMaxErrors, margin);\n\t\tfdlCommit.right = new FormAttachment(middle, -margin);\n\t\twlCommit.setLayoutData(fdlCommit);\n\t\twCommit = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wCommit);\n\t\twCommit.addModifyListener(lsMod);\n\t\tfdCommit = new FormData();\n\t\tfdCommit.left = new FormAttachment(middle, 0);\n\t\tfdCommit.top = new FormAttachment(wMaxErrors, margin);\n\t\tfdCommit.right = new FormAttachment(100, 0);\n\t\twCommit.setLayoutData(fdCommit);\t\t\t\t\n\t\t\n\t\t// Bindsize line\n\t\twlBindSize = new Label(comp, SWT.RIGHT);\n\t\twlBindSize.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.BindSize.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlBindSize);\n\t\tfdlBindSize = new FormData();\n\t\tfdlBindSize.left = new FormAttachment(0, 0);\n\t\tfdlBindSize.top = new FormAttachment(wCommit, margin);\n\t\tfdlBindSize.right = new FormAttachment(middle, -margin);\n\t\twlBindSize.setLayoutData(fdlBindSize);\n\t\twBindSize = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wBindSize);\n\t\twBindSize.addModifyListener(lsMod);\n\t\tfdBindSize = new FormData();\n\t\tfdBindSize.left = new FormAttachment(middle, 0);\n\t\tfdBindSize.top = new FormAttachment(wCommit, margin);\n\t\tfdBindSize.right = new FormAttachment(100, 0);\n\t\twBindSize.setLayoutData(fdBindSize);\t\t\n\n\t\t// Readsize line\n\t\twlReadSize = new Label(comp, SWT.RIGHT);\n\t\twlReadSize.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ReadSize.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReadSize);\n\t\tfdlReadSize = new FormData();\n\t\tfdlReadSize.left = new FormAttachment(0, 0);\n\t\tfdlReadSize.top = new FormAttachment(wBindSize, margin);\n\t\tfdlReadSize.right = new FormAttachment(middle, -margin);\n\t\twlReadSize.setLayoutData(fdlReadSize);\n\t\twReadSize = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wReadSize);\n\t\twReadSize.addModifyListener(lsMod);\n\t\tfdReadSize = new FormData();\n\t\tfdReadSize.left = new FormAttachment(middle, 0);\n\t\tfdReadSize.top = new FormAttachment(wBindSize, margin);\n\t\tfdReadSize.right = new FormAttachment(100, 0);\n\t\twReadSize.setLayoutData(fdReadSize);\t\t\n\n\t\t// Db Name Override line\n\t\twlDbNameOverride = new Label(comp, SWT.RIGHT);\n\t\twlDbNameOverride.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DbNameOverride.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDbNameOverride);\n\t\tfdlDbNameOverride = new FormData();\n\t\tfdlDbNameOverride.left = new FormAttachment(0, 0);\n\t\tfdlDbNameOverride.top = new FormAttachment(wReadSize, margin);\n\t\tfdlDbNameOverride.right = new FormAttachment(middle, -margin);\n\t\twlDbNameOverride.setLayoutData(fdlDbNameOverride);\n\t\twDbNameOverride = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wDbNameOverride);\n\t\twDbNameOverride.addModifyListener(lsMod);\n\t\tfdDbNameOverride = new FormData();\n\t\tfdDbNameOverride.left = new FormAttachment(middle, 0);\n\t\tfdDbNameOverride.top = new FormAttachment(wReadSize, margin);\n\t\tfdDbNameOverride.right = new FormAttachment(100, 0);\n\t\twDbNameOverride.setLayoutData(fdDbNameOverride);\t\t\t\t\n\t\t\n\t\t// Control file line\n\t\twlControlFile = new Label(comp, SWT.RIGHT);\n\t\twlControlFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ControlFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlControlFile);\n\t\tfdlControlFile = new FormData();\n\t\tfdlControlFile.left = new FormAttachment(0, 0);\n\t\tfdlControlFile.top = new FormAttachment(wDbNameOverride, margin);\n\t\tfdlControlFile.right = new FormAttachment(middle, -margin);\n\t\twlControlFile.setLayoutData(fdlControlFile);\t\t\n\t\twbControlFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbControlFile);\n\t\twbControlFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbControlFile = new FormData();\n\t\tfdbControlFile.right = new FormAttachment(100, 0);\n\t\tfdbControlFile.top = new FormAttachment(wDbNameOverride, margin);\n\t\twbControlFile.setLayoutData(fdbControlFile);\n\t\twControlFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\t\t\t\t\n \t\tprops.setLook(wControlFile);\n\t\twControlFile.addModifyListener(lsMod);\n\t\tfdControlFile = new FormData();\n\t\tfdControlFile.left = new FormAttachment(middle, 0);\n\t\tfdControlFile.top = new FormAttachment(wDbNameOverride, margin);\n\t\tfdControlFile.right = new FormAttachment(wbControlFile, -margin);\n\t\twControlFile.setLayoutData(fdControlFile);\t\t\n\n\t\t// Data file line\n\t\twlDataFile = new Label(comp, SWT.RIGHT);\n\t\twlDataFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DataFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDataFile);\n\t\tfdlDataFile = new FormData();\n\t\tfdlDataFile.left = new FormAttachment(0, 0);\n\t\tfdlDataFile.top = new FormAttachment(wControlFile, margin);\n\t\tfdlDataFile.right = new FormAttachment(middle, -margin);\n\t\twlDataFile.setLayoutData(fdlDataFile);\n\t\twbDataFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbDataFile);\n\t\twbDataFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbDataFile = new FormData();\n\t\tfdbDataFile.right = new FormAttachment(100, 0);\n\t\tfdbDataFile.top = new FormAttachment(wControlFile, margin);\n\t\twbDataFile.setLayoutData(fdbDataFile);\t\n\t\twDataFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wDataFile);\n\t\twDataFile.addModifyListener(lsMod);\n\t\tfdDataFile = new FormData();\n\t\tfdDataFile.left = new FormAttachment(middle, 0);\n\t\tfdDataFile.top = new FormAttachment(wControlFile, margin);\n\t\tfdDataFile.right = new FormAttachment(wbDataFile, -margin);\n\t\twDataFile.setLayoutData(fdDataFile);\n\t\t\n\t\t// Log file line\n\t\twlLogFile = new Label(comp, SWT.RIGHT);\n\t\twlLogFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.LogFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlLogFile);\n\t\tfdlLogFile = new FormData();\n\t\tfdlLogFile.left = new FormAttachment(0, 0);\n\t\tfdlLogFile.top = new FormAttachment(wDataFile, margin);\n\t\tfdlLogFile.right = new FormAttachment(middle, -margin);\n\t\twlLogFile.setLayoutData(fdlLogFile);\n\t\twbLogFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbLogFile);\n\t\twbLogFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbLogFile = new FormData();\n\t\tfdbLogFile.right = new FormAttachment(100, 0);\n\t\tfdbLogFile.top = new FormAttachment(wDataFile, margin);\n\t\twbLogFile.setLayoutData(fdbLogFile);\n\t\twLogFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wLogFile);\n\t\twLogFile.addModifyListener(lsMod);\n\t\tfdLogFile = new FormData();\n\t\tfdLogFile.left = new FormAttachment(middle, 0);\n\t\tfdLogFile.top = new FormAttachment(wDataFile, margin);\n\t\tfdLogFile.right = new FormAttachment(wbLogFile, -margin);\n\t\twLogFile.setLayoutData(fdLogFile);\t\t\n\n\t\t// Bad file line\n\t\twlBadFile = new Label(comp, SWT.RIGHT);\n\t\twlBadFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.BadFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlBadFile);\n\t\tfdlBadFile = new FormData();\n\t\tfdlBadFile.left = new FormAttachment(0, 0);\n\t\tfdlBadFile.top = new FormAttachment(wLogFile, margin);\n\t\tfdlBadFile.right = new FormAttachment(middle, -margin);\n\t\twlBadFile.setLayoutData(fdlBadFile);\n\t\twbBadFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbBadFile);\n\t\twbBadFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbBadFile = new FormData();\n\t\tfdbBadFile.right = new FormAttachment(100, 0);\n\t\tfdbBadFile.top = new FormAttachment(wLogFile, margin);\n\t\twbBadFile.setLayoutData(fdbBadFile);\t\t\n\t\twBadFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wBadFile);\n\t\twBadFile.addModifyListener(lsMod);\n\t\tfdBadFile = new FormData();\n\t\tfdBadFile.left = new FormAttachment(middle, 0);\n\t\tfdBadFile.top = new FormAttachment(wLogFile, margin);\n\t\tfdBadFile.right = new FormAttachment(wbBadFile, -margin);\n\t\twBadFile.setLayoutData(fdBadFile);\t\t\n\t\t\n\t\t// Discard file line\n\t\twlDiscardFile = new Label(comp, SWT.RIGHT);\n\t\twlDiscardFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DiscardFile.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDiscardFile);\n\t\tfdlDiscardFile = new FormData();\n\t\tfdlDiscardFile.left = new FormAttachment(0, 0);\n\t\tfdlDiscardFile.top = new FormAttachment(wBadFile, margin);\n\t\tfdlDiscardFile.right = new FormAttachment(middle, -margin);\n\t\twlDiscardFile.setLayoutData(fdlDiscardFile);\n\t\twbDiscardFile = new Button(comp, SWT.PUSH | SWT.CENTER);\n \t\tprops.setLook(wbDiscardFile);\n\t\twbDiscardFile.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Browse.Button\")); //$NON-NLS-1$\n\t\tfdbDiscardFile = new FormData();\n\t\tfdbDiscardFile.right = new FormAttachment(100, 0);\n\t\tfdbDiscardFile.top = new FormAttachment(wBadFile, margin);\n\t\twbDiscardFile.setLayoutData(fdbDiscardFile);\n\t\twDiscardFile = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n \t\tprops.setLook(wDiscardFile);\n\t\twDiscardFile.addModifyListener(lsMod);\n\t\tfdDiscardFile = new FormData();\n\t\tfdDiscardFile.left = new FormAttachment(middle, 0);\n\t\tfdDiscardFile.top = new FormAttachment(wBadFile, margin);\n\t\tfdDiscardFile.right = new FormAttachment(wbDiscardFile, -margin);\n\t\twDiscardFile.setLayoutData(fdDiscardFile);\t\t\t\n\t\t\n\t\t//\n        // Control encoding line\n        //\n        // The drop down is editable as it may happen an encoding may not be present\n        // on one machine, but you may want to use it on your execution server\n        //\n        wlEncoding=new Label(comp, SWT.RIGHT);\n        wlEncoding.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Encoding.Label\"));\n        props.setLook(wlEncoding);\n        fdlEncoding=new FormData();\n        fdlEncoding.left  = new FormAttachment(0, 0);\n        fdlEncoding.top   = new FormAttachment(wDiscardFile, margin);\n        fdlEncoding.right = new FormAttachment(middle, -margin);\n        wlEncoding.setLayoutData(fdlEncoding);\n        wEncoding=new Combo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\n        wEncoding.setToolTipText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Encoding.Tooltip\"));\n        wEncoding.setItems(encodings);\n        props.setLook(wEncoding);\n        fdEncoding=new FormData();\n        fdEncoding.left = new FormAttachment(middle, 0);\n        fdEncoding.top  = new FormAttachment(wDiscardFile, margin);\n        fdEncoding.right= new FormAttachment(100, 0);        \n        wEncoding.setLayoutData(fdEncoding);\n        wEncoding.addModifyListener(lsMod);\r\n               \r\n        // Oracle character set name line\r\n        wlCharacterSetName=new Label(comp, SWT.RIGHT);\r\n        wlCharacterSetName.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.CharacterSetName.Label\"));\r\n        props.setLook(wlCharacterSetName);\r\n        fdlCharacterSetName=new FormData();\r\n        fdlCharacterSetName.left  = new FormAttachment(0, 0);\r\n        fdlCharacterSetName.top   = new FormAttachment(wEncoding, margin);\r\n        fdlCharacterSetName.right = new FormAttachment(middle, -margin);\r\n        wlCharacterSetName.setLayoutData(fdlCharacterSetName);\r\n        wCharacterSetName=new Combo(comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n        wCharacterSetName.setToolTipText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.CharacterSetName.Tooltip\"));\r\n        wCharacterSetName.setItems(characterSetNames);\r\n        props.setLook(wCharacterSetName);\r\n        fdCharacterSetName=new FormData();\r\n        fdCharacterSetName.left = new FormAttachment(middle, 0);\r\n        fdCharacterSetName.top  = new FormAttachment(wEncoding, margin);\r\n        fdCharacterSetName.right= new FormAttachment(100, 0);        \r\n        wCharacterSetName.setLayoutData(fdCharacterSetName);\r\n        wCharacterSetName.addModifyListener(lsMod);\r\n        \r\n        // Alternate Record Terminator\r\n\t\twlAltRecordTerm = new Label(comp, SWT.RIGHT);\r\n\t\twlAltRecordTerm.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.AltRecordTerm.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlAltRecordTerm);\r\n\t\tfdlAltRecordTerm = new FormData();\r\n\t\tfdlAltRecordTerm.left = new FormAttachment(0, 0);\r\n\t\tfdlAltRecordTerm.top = new FormAttachment(wCharacterSetName, margin);\r\n\t\tfdlAltRecordTerm.right = new FormAttachment(middle, -margin);\r\n\t\twlAltRecordTerm.setLayoutData(fdlAltRecordTerm);\r\n\t\twAltRecordTerm = new TextVar(transMeta, comp, SWT.SINGLE | SWT.LEFT | SWT.BORDER);\r\n \t\tprops.setLook(wAltRecordTerm);\r\n\t\tfdAltRecordTerm = new FormData();\r\n\t\tfdAltRecordTerm.left = new FormAttachment(middle, 0);\r\n\t\tfdAltRecordTerm.top = new FormAttachment(wCharacterSetName, margin);\r\n\t\tfdAltRecordTerm.right = new FormAttachment(100, 0);\r\n\t\twAltRecordTerm.setLayoutData(fdAltRecordTerm);\r\n\t\twAltRecordTerm.addModifyListener(lsMod);\t\t\n\t\t\t\t\n\t\t// DirectPath line\n\t\twlDirectPath = new Label(comp, SWT.RIGHT);\n\t\twlDirectPath.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DirectPath.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlDirectPath);\n\t\tfdlDirectPath = new FormData();\n\t\tfdlDirectPath.left = new FormAttachment(0, 0);\n\t\tfdlDirectPath.top = new FormAttachment(wAltRecordTerm, margin);\n\t\tfdlDirectPath.right = new FormAttachment(middle, -margin);\n\t\twlDirectPath.setLayoutData(fdlDirectPath);\n\t\twDirectPath = new Button(comp, SWT.CHECK);\n \t\tprops.setLook(wDirectPath);\n\t\tfdDirectPath = new FormData();\n\t\tfdDirectPath.left = new FormAttachment(middle, 0);\n\t\tfdDirectPath.top = new FormAttachment(wAltRecordTerm, margin);\n\t\tfdDirectPath.right = new FormAttachment(100, 0);\n\t\twDirectPath.setLayoutData(fdDirectPath);\t\n\t\twDirectPath.addSelectionListener(new SelectionAdapter() \n\t\t    {\n\t\t\t    public void widgetSelected(SelectionEvent e) \n\t\t\t    {\n  \t\t\t\t    input.setChanged();\r\n              // Parallel loading is only possible with a direct path option...\r\n              //\r\n              if (!wDirectPath.getSelection()) wParallel.setSelection(false);\n  \t\t    \t}\n\t\t    }\n\t    );\n\n\t\t// Erase files line\n\t\twlEraseFiles = new Label(comp, SWT.RIGHT);\n\t\twlEraseFiles.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.EraseFiles.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlEraseFiles);\n\t\tfdlEraseFiles = new FormData();\n\t\tfdlEraseFiles.left = new FormAttachment(0, 0);\n\t\tfdlEraseFiles.top = new FormAttachment(wDirectPath, margin);\n\t\tfdlEraseFiles.right = new FormAttachment(middle, -margin);\n\t\twlEraseFiles.setLayoutData(fdlEraseFiles);\n\t\twEraseFiles = new Button(comp, SWT.CHECK);\n \t\tprops.setLook(wEraseFiles);\n\t\tfdEraseFiles = new FormData();\n\t\tfdEraseFiles.left = new FormAttachment(middle, 0);\n\t\tfdEraseFiles.top = new FormAttachment(wDirectPath, margin);\n\t\tfdEraseFiles.right = new FormAttachment(100, 0);\n\t\twEraseFiles.setLayoutData(fdEraseFiles);\t\t\t\t\n\t\twEraseFiles.addSelectionListener(new SelectionAdapter() \n    \t    {\n\t\t        public void widgetSelected(SelectionEvent e) \n\t\t        {\n\t\t\t\t    input.setChanged();\n\t\t    \t}\n\t        }\n        );\r\n\t\t\r\n\t\t// Fail on warning line\r\n\t\twlFailOnWarning = new Label(comp, SWT.RIGHT);\r\n\t\twlFailOnWarning.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.FailOnWarning.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFailOnWarning);\r\n\t\tfdlFailOnWarning = new FormData();\r\n\t\tfdlFailOnWarning.left = new FormAttachment(0, 0);\r\n\t\tfdlFailOnWarning.top = new FormAttachment(wEraseFiles, margin);\r\n\t\tfdlFailOnWarning.right = new FormAttachment(middle, -margin);\r\n\t\twlFailOnWarning.setLayoutData(fdlFailOnWarning);\r\n\t\twFailOnWarning = new Button(comp, SWT.CHECK);\r\n \t\tprops.setLook(wFailOnWarning);\r\n\t\tfdFailOnWarning = new FormData();\r\n\t\tfdFailOnWarning.left = new FormAttachment(middle, 0);\r\n\t\tfdFailOnWarning.top = new FormAttachment(wEraseFiles, margin);\r\n\t\tfdFailOnWarning.right = new FormAttachment(100, 0);\r\n\t\twFailOnWarning.setLayoutData(fdFailOnWarning);\t\t\t\t\r\n\t\twFailOnWarning.addSelectionListener(new SelectionAdapter() \r\n    \t    {\r\n\t\t        public void widgetSelected(SelectionEvent e) \r\n\t\t        {\r\n\t\t\t\t    input.setChanged();\r\n\t\t    \t}\r\n\t        }\r\n        );\r\n\t\t\r\n\t\t// Fail on error line\r\n\t\twlFailOnError = new Label(comp, SWT.RIGHT);\r\n\t\twlFailOnError.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.FailOnError.Label\")); //$NON-NLS-1$\r\n \t\tprops.setLook(wlFailOnError);\r\n\t\tfdlFailOnError = new FormData();\r\n\t\tfdlFailOnError.left = new FormAttachment(0, 0);\r\n\t\tfdlFailOnError.top = new FormAttachment(wFailOnWarning, margin);\r\n\t\tfdlFailOnError.right = new FormAttachment(middle, -margin);\r\n\t\twlFailOnError.setLayoutData(fdlFailOnError);\r\n\t\twFailOnError = new Button(comp, SWT.CHECK);\r\n \t\tprops.setLook(wFailOnError);\r\n\t\tfdFailOnError = new FormData();\r\n\t\tfdFailOnError.left = new FormAttachment(middle, 0);\r\n\t\tfdFailOnError.top = new FormAttachment(wFailOnWarning, margin);\r\n\t\tfdFailOnError.right = new FormAttachment(100, 0);\r\n\t\twFailOnError.setLayoutData(fdFailOnError);\t\t\t\t\r\n\t\twFailOnError.addSelectionListener(new SelectionAdapter() \r\n    \t    {\r\n\t\t        public void widgetSelected(SelectionEvent e) \r\n\t\t        {\r\n\t\t\t\t    input.setChanged();\r\n\t\t    \t}\r\n\t        }\r\n        );\n\r\n    // Fail on error line\r\n    wlParallel = new Label(comp, SWT.RIGHT);\r\n    wlParallel.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Parallel.Label\")); //$NON-NLS-1$\r\n    props.setLook(wlParallel);\r\n    fdlParallel = new FormData();\r\n    fdlParallel.left = new FormAttachment(0, 0);\r\n    fdlParallel.top = new FormAttachment(wFailOnError, margin);\r\n    fdlParallel.right = new FormAttachment(middle, -margin);\r\n    wlParallel.setLayoutData(fdlParallel);\r\n    wParallel = new Button(comp, SWT.CHECK);\r\n    props.setLook(wParallel);\r\n    fdParallel = new FormData();\r\n    fdParallel.left = new FormAttachment(middle, 0);\r\n    fdParallel.top = new FormAttachment(wFailOnError, margin);\r\n    fdParallel.right = new FormAttachment(100, 0);\r\n    wParallel.setLayoutData(fdParallel);        \r\n    wParallel.addSelectionListener(new SelectionAdapter() \r\n          {\r\n            public void widgetSelected(SelectionEvent e) \r\n            {\r\n              input.setChanged();\r\n              // Parallel loading is only possible with a direct path option...\r\n              //\r\n              if (wParallel.getSelection()) wDirectPath.setSelection(true);\r\n            }\r\n          }\r\n        );\r\n\r\n\t\t\n\t\t// THE BUTTONS\n\t\twOK = new Button(comp, SWT.PUSH);\n\t\twOK.setText(BaseMessages.getString(PKG, \"System.Button.OK\")); //$NON-NLS-1$\n\t\twSQL = new Button(comp, SWT.PUSH);\n\t\twSQL.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.SQL.Button\")); //$NON-NLS-1$\n\t\twCancel = new Button(comp, SWT.PUSH);\n\t\twCancel.setText(BaseMessages.getString(PKG, \"System.Button.Cancel\")); //$NON-NLS-1$\n\n\t\tsetButtonPositions(new Button[] { wOK, wCancel , wSQL }, margin, null);\n\n\t\t// The field Table\n\t\twlReturn = new Label(comp, SWT.NONE);\n\t\twlReturn.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.Fields.Label\")); //$NON-NLS-1$\n \t\tprops.setLook(wlReturn);\n\t\tfdlReturn = new FormData();\n\t\tfdlReturn.left = new FormAttachment(0, 0);\n\t\tfdlReturn.top = new FormAttachment(wParallel, margin);\n\t\twlReturn.setLayoutData(fdlReturn);\n\n\t\tint UpInsCols = 3;\n\t\tint UpInsRows = (input.getFieldTable() != null ? input.getFieldTable().length : 1);\n\n\t\tciReturn = new ColumnInfo[UpInsCols];\n\t\tciReturn[0] = new ColumnInfo(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ColumnInfo.TableField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[1] = new ColumnInfo(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ColumnInfo.StreamField\"), ColumnInfo.COLUMN_TYPE_CCOMBO, new String[] { \"\" }, false); //$NON-NLS-1$\n\t\tciReturn[2] = new ColumnInfo(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.ColumnInfo.DateMask\"), ColumnInfo.COLUMN_TYPE_CCOMBO, \n\t\t\t\t                     new String[] {\"\",                //$NON-NLS-1$\n\t\t\t                                       BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateMask.Label\"),\n\t                                        \t   BaseMessages.getString(PKG, \"OraBulkLoaderDialog.DateTimeMask.Label\")}, true); \n\t\ttableFieldColumns.add(ciReturn[0]);\n\t\twReturn = new TableView(transMeta, comp, SWT.BORDER | SWT.FULL_SELECTION | SWT.MULTI | SWT.V_SCROLL | SWT.H_SCROLL,\n\t\t\t\tciReturn, UpInsRows, lsMod, props);\n\n\t\twGetLU = new Button(comp, SWT.PUSH);\n\t\twGetLU.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.GetFields.Label\")); //$NON-NLS-1$\n\t\tfdGetLU = new FormData();\n\t\tfdGetLU.top   = new FormAttachment(wlReturn, margin);\n\t\tfdGetLU.right = new FormAttachment(100, 0);\n\t\tfdGetLU.left = new FormAttachment(wReturn, margin);\n\t\twGetLU.setLayoutData(fdGetLU);\n\r\n\t\twDoMapping = new Button(comp, SWT.PUSH);\r\n\t\twDoMapping.setText(BaseMessages.getString(PKG, \"OraBulkLoaderDialog.EditMapping.Label\")); //$NON-NLS-1$\r\n\t\tfdDoMapping = new FormData();\r\n\t\tfdDoMapping.top   = new FormAttachment(wGetLU, margin);\r\n\t\tfdDoMapping.right = new FormAttachment(100, 0);\r\n\t\twDoMapping.setLayoutData(fdDoMapping);\r\n\r\n\t\twDoMapping.addListener(SWT.Selection, new Listener() { \tpublic void handleEvent(Event arg0) { generateMappings();}});\r\n\r\n\t\t\n\t\tfdReturn = new FormData();\n\t\tfdReturn.left = new FormAttachment(0, 0);\n\t\tfdReturn.top = new FormAttachment(wlReturn, margin);\n\t\tfdReturn.right = new FormAttachment(wDoMapping, -margin);\n\t\tfdReturn.bottom = new FormAttachment(wOK, -2*margin);\n\t\twReturn.setLayoutData(fdReturn);\r\n\t\t\r\n\t\t\r\n        FormData fdComp = new FormData();\r\n        fdComp.left  = new FormAttachment(0, 0);\r\n        fdComp.top   = new FormAttachment(0, 0);\r\n        fdComp.right = new FormAttachment(100, 0);\r\n        fdComp.bottom= new FormAttachment(100, 0);\r\n        comp.setLayoutData(fdComp);\r\n\r\n        comp.pack();\r\n        Rectangle bounds = comp.getBounds();\r\n\r\n        sComp.setContent(comp);\r\n        sComp.setExpandHorizontal(true);\r\n        sComp.setExpandVertical(true);\r\n        sComp.setMinWidth(bounds.width);\r\n        sComp.setMinHeight(bounds.height);\r\n\r\n\t    // \r\n        // Search the fields in the background\r\n        //\r\n        \r\n        final Runnable runnable = new Runnable()\r\n        {\r\n            public void run()\r\n            {\r\n                StepMeta stepMeta = transMeta.findStep(stepname);\r\n                if (stepMeta!=null)\r\n                {\r\n                    try\r\n                    {\r\n                    \tRowMetaInterface row = transMeta.getPrevStepFields(stepMeta);\r\n                        \r\n                        // Remember these fields...\r\n                        for (int i=0;i<row.size();i++)\r\n                        {\r\n                        \tinputFields.put(row.getValueMeta(i).getName(), Integer.valueOf(i));\r\n                        }\r\n                        \r\n                        setComboBoxes(); \r\n                    }\r\n                    catch(KettleException e)\r\n                    {\r\n                        logError(BaseMessages.getString(PKG, \"System.Dialog.GetFieldsFailed.Message\"));\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        new Thread(runnable).start();\n\n\t\twbSqlldr.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wSqlldr.getText() != null)\n                {\n                    dialog.setFileName(wSqlldr.getText());\n                }\n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twSqlldr.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\n\t\t\t\n\t\twbControlFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wControlFile.getText() != null)\n                {\n                    dialog.setFileName(wControlFile.getText());\n                }\n                dialog.setFilterNames(ALL_FILETYPES);               \n                if (dialog.open() != null)\n                {\n                \twControlFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\t\n\t\t\n\t\twbDataFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wDataFile.getText() != null)\n                {\n                    dialog.setFileName(wDataFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twDataFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\n\n\t\twbLogFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wLogFile.getText() != null)\n                {\n                    dialog.setFileName(wLogFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twLogFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\n\t\t\n\t\twbBadFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wBadFile.getText() != null)\n                {\n                    dialog.setFileName(wBadFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twBadFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\n\t\t\n\t\twbDiscardFile.addSelectionListener(new SelectionAdapter()\n        {\n            public void widgetSelected(SelectionEvent e)\n            {\n                FileDialog dialog = new FileDialog(shell, SWT.OPEN);\n                dialog.setFilterExtensions(new String[] { \"*\" });\n                if (wDiscardFile.getText() != null)\n                {\n                    dialog.setFileName(wDiscardFile.getText());\n                }                \n                dialog.setFilterNames(ALL_FILETYPES);\n                if (dialog.open() != null)\n                {\n                \twDiscardFile.setText(dialog.getFilterPath() + Const.FILE_SEPARATOR\n                                      + dialog.getFileName());\n                }\n            }\n        });\t\t\t\n\t\t\n\t\t// Add listeners\n\t\tlsOK = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tok();\n\t\t\t}\n\t\t};\n\t\tlsGetLU = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tgetUpdate();\n\t\t\t}\n\t\t};\n\t\tlsSQL = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcreate();\n\t\t\t}\n\t\t};\n\t\tlsCancel = new Listener()\n\t\t{\n\t\t\tpublic void handleEvent(Event e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t};\n\n\t\twOK.addListener(SWT.Selection, lsOK);\n\t\twGetLU.addListener(SWT.Selection, lsGetLU);\n\t\twSQL.addListener(SWT.Selection, lsSQL);\n\t\twCancel.addListener(SWT.Selection, lsCancel);\n\n\t\tlsDef = new SelectionAdapter() { public void widgetDefaultSelected(SelectionEvent e) { ok(); } };\n\n\t\twStepname.addSelectionListener(lsDef);\n        wSchema.addSelectionListener(lsDef);\n        wTable.addSelectionListener(lsDef);\n        wMaxErrors.addSelectionListener(lsDef);\n        wCommit.addSelectionListener(lsDef);\n        wBindSize.addSelectionListener(lsDef);\n        wReadSize.addSelectionListener(lsDef);\n        wDbNameOverride.addSelectionListener(lsDef);\n        wControlFile.addSelectionListener(lsDef);\n        wDataFile.addSelectionListener(lsDef);\n        wLogFile.addSelectionListener(lsDef);\n        wBadFile.addSelectionListener(lsDef);\n        wDiscardFile.addSelectionListener(lsDef);\r\n        wAltRecordTerm.addSelectionListener(lsDef);\n\n\t\t// Detect X or ALT-F4 or something that kills this window...\n\t\tshell.addShellListener(new ShellAdapter()\n\t\t{\n\t\t\tpublic void shellClosed(ShellEvent e)\n\t\t\t{\n\t\t\t\tcancel();\n\t\t\t}\n\t\t});\n\t\twbSchema.addSelectionListener\r\n\t\t(\r\n\t\t\tnew SelectionAdapter()\r\n\t\t\t{\r\n\t\t\t\tpublic void widgetSelected(SelectionEvent e) \r\n\t\t\t\t{\r\n\t\t\t\t\tgetSchemaNames();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\n\n\t\twbTable.addSelectionListener(new SelectionAdapter()\n\t\t{\n\t\t\tpublic void widgetSelected(SelectionEvent e)\n\t\t\t{\n\t\t\t\tgetTableName();\n\t\t\t}\n\t\t});\n\n\t\t// Set the shell size, based upon previous time...\n\t\tsetSize();\n\n\t\tgetData();\r\n\t\tsetTableFieldCombo();\n\t\tinput.setChanged(changed);\n\n\t\tshell.open();\n\t\twhile (!shell.isDisposed())\n\t\t{\n\t\t\tif (!display.readAndDispatch())\n\t\t\t\tdisplay.sleep();\n\t\t}\n\t\treturn stepname;\n\t}","commit_id":"5e6aaab19143fd48d54f613b932fa1390f323c50","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"blogs-page-content\\\">\");\n\n\t\tBlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tString content = HtmlUtil.extractText(entry.getContent());\n\n\t\tsb.append(StringUtil.shorten(content, 200));\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":20196,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\treturn getBody(\n\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext);\n\t}","commit_id":"5d51513fc75e53e2b46345473294df727176b421","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetBookmarkLink(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"bookmarks-page-content\\\">\");\n\n\t\tBookmarksEntry entry = BookmarksEntryLocalServiceUtil.getEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tsb.append(entry.getDescription());\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":20197,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\treturn getBody(\n\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext);\n\t}","commit_id":"5d51513fc75e53e2b46345473294df727176b421","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(15);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"date\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"date\"));\n\t\tsb.append(\": <\/strong>\");\n\n\t\tFormat dateFormatDate = getFormatDateTime(\n\t\t\tserviceContext.getLocale(), serviceContext.getTimeZone());\n\n\t\tCalEvent event = CalEventLocalServiceUtil.getEvent(\n\t\t\tactivity.getClassPK());\n\n\t\tsb.append(dateFormatDate.format((event.getStartDate())));\n\n\t\tsb.append(\"<\/div><div class=\\\"location\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"location\"));\n\t\tsb.append(\": <\/strong>\");\n\t\tsb.append(event.getLocation());\n\t\tsb.append(\"<\/div><div class=\\\"description\\\"><strong>\");\n\t\tsb.append(serviceContext.translate(\"description\"));\n\t\tsb.append(\": <\/strong>\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":20198,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\treturn getBody(\n\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext);\n\t}","commit_id":"5d51513fc75e53e2b46345473294df727176b421","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(11);\n\n\t\tsb.append(\"<div class=\\\"activity-body document\\\">\");\n\t\tsb.append(\"<span class=\\\"document-thumbnail\\\"><img src=\\\"\");\n\n\t\tFileEntry fileEntry = DLAppLocalServiceUtil.getFileEntry(\n\t\t\tactivity.getClassPK());\n\n\t\tFileVersion fileVersion = fileEntry.getFileVersion();\n\n\t\tString thumbnailSrc = DLUtil.getThumbnailSrc(\n\t\t\tfileEntry, fileVersion, null, serviceContext.getThemeDisplay());\n\n\t\tsb.append(thumbnailSrc);\n\t\tsb.append(\"\\\"><\/span>\");\n\t\tsb.append(\"<div class=\\\"document-container\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"version\\\">\");\n\t\tsb.append(\n\t\t\tserviceContext.translate(\"version-x\", fileVersion.getVersion()));\n\t\tsb.append(\"<\/div><div class=\\\"document-content\\\">\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tassetRenderer.getSummary(serviceContext.getLocale()), 200));\n\n\t\tsb.append(\"<\/div><\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":20199,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\treturn getBody(\n\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext);\n\t}","commit_id":"5d51513fc75e53e2b46345473294df727176b421","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\tStringBundler sb = new StringBundler(5);\n\n\t\tsb.append(\"<div class=\\\"activity-body\\\"><div class=\\\"title\\\">\");\n\t\tsb.append(\n\t\t\tgetPageTitle(\n\t\t\t\tactivity.getClassName(), activity.getClassPK(),\n\t\t\t\tserviceContext));\n\t\tsb.append(\"<\/div><div class=\\\"forum-page-content\\\">\");\n\n\t\tAssetRenderer assetRenderer = getAssetRenderer(\n\t\t\tactivity.getClassName(), activity.getClassPK());\n\n\t\tsb.append(\n\t\t\tStringUtil.shorten(\n\t\t\t\tHtmlUtil.extractText(\n\t\t\t\t\tassetRenderer.getSummary(\n\t\t\t\t\t\tserviceContext.getLocale())), 200));\n\n\t\tsb.append(\"<\/div><\/div>\");\n\n\t\treturn sb.toString();\n\t}","id":20200,"modified_method":"@Override\n\tprotected String getBody(\n\t\t\tSocialActivity activity, ServiceContext serviceContext)\n\t\tthrows Exception {\n\n\t\treturn getBody(\n\t\t\tactivity.getClassName(), activity.getClassPK(), serviceContext);\n\t}","commit_id":"5d51513fc75e53e2b46345473294df727176b421","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"/**\n\t * Creates a new folder from an existing folder object.\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param folder The folder to be written to the Cms.\n\t * @param foldername The complete path of the new name of this folder.\n\t * \n\t * @return The created folder.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public CmsFolder createFolder(A_CmsProject project,\n                                   CmsFolder folder,\n                                   String foldername)\n         throws CmsException {\n             try {   \n               synchronized ( m_statementResourceWrite) {\n                // write new resource to the database\n                //RESOURCE_NAME\n                m_statementResourceWrite.setString(1,absoluteName(folder.getAbsolutePath()));\n                //RESOURCE_TYPE\n                m_statementResourceWrite.setInt(2,folder.getType());\n                //RESOURCE_FLAGS\n                m_statementResourceWrite.setInt(3,folder.getFlags());\n                //USER_ID\n                m_statementResourceWrite.setInt(4,folder.getOwnerId());\n                //GROUP_ID\n                m_statementResourceWrite.setInt(5,folder.getGroupId());\n                //PROJECT_ID\n                m_statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                m_statementResourceWrite.setInt(7,folder.getAccessFlags());\n                //STATE\n                m_statementResourceWrite.setInt(8,C_STATE_NEW);\n                //LOCKED_BY\n                m_statementResourceWrite.setInt(9,folder.isLockedBy());\n                //LAUNCHER_TYPE\n                m_statementResourceWrite.setInt(10,folder.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                m_statementResourceWrite.setString(11,folder.getLauncherClassname());\n                //DATE_CREATED\n                m_statementResourceWrite.setLong(12,folder.getDateCreated());\n                //DATE_LASTMODIFIED\n                m_statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                m_statementResourceWrite.setInt(14,0);\n                m_statementResourceWrite.executeUpdate();\n               }\n            } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readFolder(project,folder.getAbsolutePath());\n     }","id":20201,"modified_method":"/**\n\t * Creates a new folder from an existing folder object.\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param folder The folder to be written to the Cms.\n\t * @param foldername The complete path of the new name of this folder.\n\t * \n\t * @return The created folder.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public CmsFolder createFolder(A_CmsProject project,\n                                   CmsFolder folder,\n                                   String foldername)\n         throws CmsException {\n            try {   \n                // write new resource to the database\n                PreparedStatement statementResourceWrite=m_Con.prepareStatement(C_RESOURCE_WRITE);\n                //RESOURCE_NAME\n                statementResourceWrite.setString(1,absoluteName(folder.getAbsolutePath()));\n                //RESOURCE_TYPE\n                statementResourceWrite.setInt(2,folder.getType());\n                //RESOURCE_FLAGS\n                statementResourceWrite.setInt(3,folder.getFlags());\n                //USER_ID\n                statementResourceWrite.setInt(4,folder.getOwnerId());\n                //GROUP_ID\n                statementResourceWrite.setInt(5,folder.getGroupId());\n                //PROJECT_ID\n                statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                statementResourceWrite.setInt(7,folder.getAccessFlags());\n                //STATE\n                statementResourceWrite.setInt(8,C_STATE_NEW);\n                //LOCKED_BY\n                statementResourceWrite.setInt(9,folder.isLockedBy());\n                //LAUNCHER_TYPE\n                statementResourceWrite.setInt(10,folder.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                statementResourceWrite.setString(11,folder.getLauncherClassname());\n                //DATE_CREATED\n                statementResourceWrite.setLong(12,folder.getDateCreated());\n                //DATE_LASTMODIFIED\n                statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                statementResourceWrite.setInt(14,0);\n                statementResourceWrite.executeUpdate();\n            } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readFolder(project,folder.getAbsolutePath());\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Reads a file from the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n\t * @return file The read file.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public CmsFile readFile(A_CmsProject project,\n                             A_CmsProject onlineProject,\n                             String filename)\n         throws CmsException {\n          \n         CmsFile file=null;\n         int projectId;\n         \n         ResultSet res =null;\n         try {\n             // if the actual prject is the online project read file header and content\n             // from the online project\n             if (project.equals(onlineProject)) {\n                 synchronized(m_statementFileReadOnline) {\n                    m_statementFileReadOnline.setString(1,absoluteName(filename));\n                    m_statementFileReadOnline.setInt(2,onlineProject.getId());\n                    res = m_statementFileReadOnline.executeQuery();  \n                    if(res.next()) {\n                         file = new CmsFile(filename,\n                                            res.getInt(C_RESOURCE_TYPE),\n                                            res.getInt(C_RESOURCE_FLAGS),\n                                            res.getInt(C_USER_ID),\n                                            res.getInt(C_GROUP_ID),\n                                            onlineProject.getId(),\n                                            res.getInt(C_ACCESS_FLAGS),\n                                            res.getInt(C_STATE),\n                                            res.getInt(C_LOCKED_BY),\n                                            res.getInt(C_LAUNCHER_TYPE),\n                                            res.getString(C_LAUNCHER_CLASSNAME),\n                                            res.getLong(C_DATE_CREATED),\n                                            res.getLong(C_DATE_LASTMODIFIED),\n                                            res.getBytes(C_FILE_CONTENT),\n                                            res.getInt(C_SIZE)\n                                           );\n                     } else {\n                       throw new CmsException(filename,CmsException.C_NOT_FOUND);  \n                    }\n                 }                 \n             } else {\n               // reading a file from an offline project must be done in two steps:\n               // first read the file header from the offline project, then get either\n               // the file content of the offline project (if it is already existing)\n               // or form the online project.\n               \n               // get the file header\n               file=readFileHeader(project,filename);\n               // check if the file is marked as deleted\n               if (file.getState() == C_STATE_DELETED) {\n                   throw new CmsException(CmsException.C_NOT_FOUND); \n               }\n               \n               \n               \n               // test if the file content of this file is already existing in the\n               // offline project. This is done by checking if the file state is\n               // set to UNCHANGED. If it is, the file content must be read from the \n               // online project.\n               if (file.getState()==C_STATE_UNCHANGED) {\n                   projectId=onlineProject.getId();\n               } else {\n                   projectId=project.getId();\n               }\n               // read the file content\n               synchronized (m_statementFileRead) {\n                   m_statementFileRead.setString(1,absoluteName(filename));\n                   m_statementFileRead.setInt(2,projectId);\n                   res = m_statementFileRead.executeQuery();\n                   if (res.next()) {\n                       file.setContents(res.getBytes(C_FILE_CONTENT));\n                   } else {\n                         throw new CmsException(filename,CmsException.C_NOT_FOUND);  \n                   }\n               }               \n             }                \n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         \n         return file;\n     }","id":20202,"modified_method":"/**\n\t * Reads a file from the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n\t * @return file The read file.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public CmsFile readFile(A_CmsProject project,\n                             A_CmsProject onlineProject,\n                             String filename)\n         throws CmsException {\n          \n         CmsFile file=null;\n         int projectId;\n         \n         ResultSet res =null;\n         try {\n             // if the actual prject is the online project read file header and content\n             // from the online project\n             if (project.equals(onlineProject)) {\n                    PreparedStatement statementFileReadOnline=m_Con.prepareStatement(C_FILE_READ_ONLINE);\n                    statementFileReadOnline.setString(1,absoluteName(filename));\n                    statementFileReadOnline.setInt(2,onlineProject.getId());\n                    res = statementFileReadOnline.executeQuery();  \n                    if(res.next()) {\n                         file = new CmsFile(filename,\n                                            res.getInt(C_RESOURCE_TYPE),\n                                            res.getInt(C_RESOURCE_FLAGS),\n                                            res.getInt(C_USER_ID),\n                                            res.getInt(C_GROUP_ID),\n                                            onlineProject.getId(),\n                                            res.getInt(C_ACCESS_FLAGS),\n                                            res.getInt(C_STATE),\n                                            res.getInt(C_LOCKED_BY),\n                                            res.getInt(C_LAUNCHER_TYPE),\n                                            res.getString(C_LAUNCHER_CLASSNAME),\n                                            res.getLong(C_DATE_CREATED),\n                                            res.getLong(C_DATE_LASTMODIFIED),\n                                            (res.getString(C_FILE_CONTENT)).getBytes(),\n                                            res.getInt(C_SIZE)\n                                           );\n                     } else {\n                       throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+filename,CmsException.C_NOT_FOUND);  \n                  }                \n             } else {\n               // reading a file from an offline project must be done in two steps:\n               // first read the file header from the offline project, then get either\n               // the file content of the offline project (if it is already existing)\n               // or form the online project.\n               \n               // get the file header\n               file=readFileHeader(project,filename);\n               // check if the file is marked as deleted\n               if (file.getState() == C_STATE_DELETED) {\n                   throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+CmsException.C_NOT_FOUND); \n               }\n               \n               \n               \n               // test if the file content of this file is already existing in the\n               // offline project. This is done by checking if the file state is\n               // set to UNCHANGED. If it is, the file content must be read from the \n               // online project.\n               if (file.getState()==C_STATE_UNCHANGED) {\n                   projectId=onlineProject.getId();\n               } else {\n                   projectId=project.getId();\n               }\n               // read the file content\n                   PreparedStatement statementFileRead=m_Con.prepareStatement(C_FILE_READ);\n                   statementFileRead.setString(1,absoluteName(filename));\n                   statementFileRead.setInt(2,projectId);\n                   res = statementFileRead.executeQuery();\n                   if (res.next()) {\n                       file.setContents(res.getBytes(C_FILE_CONTENT));\n                   } else {\n                         throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+filename,CmsException.C_NOT_FOUND);  \n                   }    \n             }                \n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return file;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Writes the fileheader to the Cms.\n     * \n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void writeFileHeader(A_CmsProject project,\n                                 A_CmsProject onlineProject,\n                                 CmsFile file)\n         throws CmsException {\n         \n           ResultSet res;\n           byte[] content;\n           \n           try {  \n                // check if the file content for this file is already existing in the\n                // offline project. If not, load it from the online project and add it\n                // to the offline project.\n                if (file.getState() == C_STATE_UNCHANGED) {\n                    // read file content form the online project\n                   synchronized (m_statementFileRead) {\n                        m_statementFileRead.setString(1,absoluteName(file.getAbsolutePath()));\n                        m_statementFileRead.setInt(2,onlineProject.getId());     \n                        res = m_statementFileRead.executeQuery();\n                        if (res.next()) {\n                          content=res.getBytes(C_FILE_CONTENT);\n                        } else {\n                          throw new CmsException(file.getAbsolutePath(),CmsException.C_NOT_FOUND);  \n                        }\n                   }\n                   // add the file content to the offline project.\n                   synchronized (m_statementFileWrite) {\n                        m_statementFileWrite.setString(1,absoluteName(file.getAbsolutePath()));\n                        m_statementFileWrite.setInt(2,project.getId());     \n                        m_statementFileWrite.setBytes(3,content);\n                        m_statementFileWrite.executeUpdate();\n                   }             \n                  }             \n                \n               synchronized ( m_statementResourceUpdate) {\n                    // update resource in the database\n          \n                    //RESOURCE_TYPE\n                    m_statementResourceUpdate.setInt(1,file.getType());\n                    //RESOURCE_FLAGS\n                    m_statementResourceUpdate.setInt(2,file.getFlags());\n                    //USER_ID\n                    m_statementResourceUpdate.setInt(3,file.getOwnerId());\n                    //GROUP_ID\n                    m_statementResourceUpdate.setInt(4,file.getGroupId());\n                    //ACCESS_FLAGS\n                    m_statementResourceUpdate.setInt(5,file.getAccessFlags());\n                    //STATE\n                    m_statementResourceUpdate.setInt(6,C_STATE_CHANGED);\n                    //LOCKED_BY\n                    m_statementResourceUpdate.setInt(7,file.isLockedBy());\n                    //LAUNCHER_TYPE\n                    m_statementResourceUpdate.setInt(8,file.getLauncherType());\n                    //LAUNCHER_CLASSNAME\n                    m_statementResourceUpdate.setString(9,file.getLauncherClassname());\n                    //DATE_LASTMODIFIED\n                    m_statementResourceUpdate.setLong(10,System.currentTimeMillis());\n                    //SIZE\n                    m_statementResourceUpdate.setInt(11,file.getContents().length);\n                \n                    // set query parameters\n                    m_statementResourceUpdate.setString(12,absoluteName(file.getAbsolutePath()));\n                    m_statementResourceUpdate.setInt(13,file.getProjectId());\n                    m_statementResourceUpdate.executeUpdate();               \n                  }\n               } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n     }","id":20203,"modified_method":"/**\n\t * Writes the fileheader to the Cms.\n     * \n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void writeFileHeader(A_CmsProject project,\n                                 A_CmsProject onlineProject,\n                                 CmsFile file)\n         throws CmsException {\n         \n           ResultSet res;\n           byte[] content;\n           \n           try {  \n                // check if the file content for this file is already existing in the\n                // offline project. If not, load it from the online project and add it\n                // to the offline project.\n                if (file.getState() == C_STATE_UNCHANGED) {\n                    // read file content form the online project\n    \n                    PreparedStatement statementFileRead=m_Con.prepareStatement(C_FILE_READ);\n                    statementFileRead.setString(1,absoluteName(file.getAbsolutePath()));\n                    statementFileRead.setInt(2,onlineProject.getId());     \n                    res = statementFileRead.executeQuery();\n                    if (res.next()) {\n                       content=res.getBytes(C_FILE_CONTENT);\n                    } else {\n                        throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+file.getAbsolutePath(),CmsException.C_NOT_FOUND);  \n                    }\n    \n                    // add the file content to the offline project.\n                    PreparedStatement statementFileWrite=m_Con.prepareStatement(C_FILE_WRITE);\n              \n                    statementFileWrite.setString(1,absoluteName(file.getAbsolutePath()));\n                    statementFileWrite.setInt(2,project.getId());     \n                    statementFileWrite.setBytes(3,content);\n                    statementFileWrite.executeUpdate();\n                }             \n                // update resource in the database\n                PreparedStatement statementResourceUpdate=m_Con.prepareStatement(C_RESOURCE_UPDATE);\n                //RESOURCE_TYPE\n                statementResourceUpdate.setInt(1,file.getType());\n                //RESOURCE_FLAGS\n                statementResourceUpdate.setInt(2,file.getFlags());\n                //USER_ID\n                statementResourceUpdate.setInt(3,file.getOwnerId());\n                //GROUP_ID\n                statementResourceUpdate.setInt(4,file.getGroupId());\n                //ACCESS_FLAGS\n                statementResourceUpdate.setInt(5,file.getAccessFlags());\n                //STATE\n                statementResourceUpdate.setInt(6,C_STATE_CHANGED);\n                //LOCKED_BY\n                statementResourceUpdate.setInt(7,file.isLockedBy());\n                //LAUNCHER_TYPE\n                statementResourceUpdate.setInt(8,file.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                statementResourceUpdate.setString(9,file.getLauncherClassname());\n                //DATE_LASTMODIFIED\n                statementResourceUpdate.setLong(10,System.currentTimeMillis());\n                //SIZE\n                statementResourceUpdate.setInt(11,file.getContents().length);\n                // set query parameters\n                statementResourceUpdate.setString(12,absoluteName(file.getAbsolutePath()));\n                statementResourceUpdate.setInt(13,file.getProjectId());\n                statementResourceUpdate.executeUpdate();               \n                \n               } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n      * Deletes a folder in the database. \n      * This method is used to physically remove a folder form the database, therefore it\n      * can only be accessed from within the access module.\n      * \n      * @param folder The folder to be deleted.\n      * @exception CmsException Throws CmsException if operation was not succesful\n      */\n     private void deleteFolder(CmsFolder folder) \n        throws CmsException{\n            try { \n            // delete the folder\n            synchronized ( m_statementResourceDelete) {\n                    m_statementResourceDelete.setString(1,absoluteName(folder.getAbsolutePath()));\n                    m_statementResourceDelete.setInt(2,folder.getProjectId());\n                    m_statementResourceDelete.executeUpdate();               \n                  }\n              } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }         \n     }","id":20204,"modified_method":"/**\n      * Deletes a folder in the database. \n      * This method is used to physically remove a folder form the database, therefore it\n      * can only be accessed from within the access module.\n      * \n      * @param folder The folder to be deleted.\n      * @exception CmsException Throws CmsException if operation was not succesful\n      */\n     private void deleteFolder(CmsFolder folder) \n        throws CmsException{\n            try { \n              // delete the folder\n              PreparedStatement statementResourceDelete=m_Con.prepareStatement(C_RESOURCE_DELETE);\n              statementResourceDelete.setString(1,absoluteName(folder.getAbsolutePath()));\n              statementResourceDelete.setInt(2,folder.getProjectId());\n              statementResourceDelete.executeUpdate();               \n             } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }         \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Creates a new file with the given content and resourcetype.\n     *\n\t * @param user The user who wants to create the file.\n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * @param flags The flags of this resource.\n\t * @param contents The contents of the new file.\n\t * @param resourceType The resourceType of the new file.\n\t * \n\t * @return file The created file.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful\n     */    \n\t public CmsFile createFile(A_CmsUser user,\n                               A_CmsProject project,\n                               A_CmsProject onlineProject,\n                               String filename, int flags,\n\t\t\t\t\t\t\t   byte[] contents, A_CmsResourceType resourceType)\n\t\t\t\t\t\t\t\n         throws CmsException {\n               \n           try {   \n               synchronized ( m_statementResourceWrite) {\n                // write new resource to the database\n                //RESOURCE_NAME\n                m_statementResourceWrite.setString(1,absoluteName(filename));\n                //RESOURCE_TYPE\n                m_statementResourceWrite.setInt(2,resourceType.getResourceType());\n                //RESOURCE_FLAGS\n                m_statementResourceWrite.setInt(3,flags);\n                //USER_ID\n                m_statementResourceWrite.setInt(4,user.getId());\n                //GROUP_ID\n                m_statementResourceWrite.setInt(5,user.getDefaultGroupId());\n                //PROJECT_ID\n                m_statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                m_statementResourceWrite.setInt(7,C_ACCESS_DEFAULT_FLAGS);\n                //STATE\n                m_statementResourceWrite.setInt(8,C_STATE_NEW);\n                //LOCKED_BY\n                m_statementResourceWrite.setInt(9,C_UNKNOWN_ID);\n                //LAUNCHER_TYPE\n                m_statementResourceWrite.setInt(10,resourceType.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                m_statementResourceWrite.setString(11,resourceType.getLauncherClass());\n                //DATE_CREATED\n                m_statementResourceWrite.setLong(12,System.currentTimeMillis());\n                //DATE_LASTMODIFIED\n                m_statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                m_statementResourceWrite.setInt(14,contents.length);\n                m_statementResourceWrite.executeUpdate();\n               }\n               synchronized (m_statementFileWrite) {\n                //RESOURCE_NAME\n                m_statementFileWrite.setString(1,absoluteName(filename));\n                //PROJECT_ID\n                m_statementFileWrite.setInt(2,project.getId());\n                //FILE_CONTENT\n                m_statementFileWrite.setBytes(3,contents);\n                m_statementFileWrite.executeUpdate();\n                   \n               }\n         } catch (SQLException e){                        \n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readFile(project,onlineProject,filename);\n     }","id":20205,"modified_method":"/**\n\t * Creates a new file with the given content and resourcetype.\n     *\n\t * @param user The user who wants to create the file.\n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * @param flags The flags of this resource.\n\t * @param contents The contents of the new file.\n\t * @param resourceType The resourceType of the new file.\n\t * \n\t * @return file The created file.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful\n     */    \n\t public CmsFile createFile(A_CmsUser user,\n                               A_CmsProject project,\n                               A_CmsProject onlineProject,\n                               String filename, int flags,\n\t\t\t\t\t\t\t   byte[] contents, A_CmsResourceType resourceType)\n\t\t\t\t\t\t\t\n         throws CmsException {\n               \n           try {             \n                PreparedStatement statementResourceWrite=m_Con.prepareStatement(C_RESOURCE_WRITE);\n                // write new resource to the database\n                //RESOURCE_NAME\n                statementResourceWrite.setString(1,absoluteName(filename));\n                //RESOURCE_TYPE\n                statementResourceWrite.setInt(2,resourceType.getResourceType());\n                //RESOURCE_FLAGS\n                statementResourceWrite.setInt(3,flags);\n                //USER_ID\n                statementResourceWrite.setInt(4,user.getId());\n                //GROUP_ID\n                statementResourceWrite.setInt(5,user.getDefaultGroupId());\n                //PROJECT_ID\n                statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                statementResourceWrite.setInt(7,C_ACCESS_DEFAULT_FLAGS);\n                //STATE\n                statementResourceWrite.setInt(8,C_STATE_NEW);\n                //LOCKED_BY\n                statementResourceWrite.setInt(9,C_UNKNOWN_ID);\n                //LAUNCHER_TYPE\n                statementResourceWrite.setInt(10,resourceType.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                statementResourceWrite.setString(11,resourceType.getLauncherClass());\n                //DATE_CREATED\n                statementResourceWrite.setLong(12,System.currentTimeMillis());\n                //DATE_LASTMODIFIED\n                statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                statementResourceWrite.setInt(14,contents.length);\n                statementResourceWrite.executeUpdate();\n\n                PreparedStatement statementFileWrite=m_Con.prepareStatement(C_FILE_WRITE);\n                //RESOURCE_NAME\n                statementFileWrite.setString(1,absoluteName(filename));\n                //PROJECT_ID\n                statementFileWrite.setInt(2,project.getId());\n                //FILE_CONTENT\n                statementFileWrite.setBytes(3,contents);\n                statementFileWrite.executeUpdate();\n\n         } catch (SQLException e){                        \n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readFile(project,onlineProject,filename);\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a Vector with all file headers of a folder.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername the complete path to the folder.\n\t * \n\t * @return subfiles A Vector with all file headers of the folder.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public Vector getFilesInFolder(A_CmsProject project, String foldername)\n         throws CmsException {\n         Vector files=new Vector();\n         CmsResource file=null;\n         ResultSet res =null;\n         \n           try {\n            //  get all files in folder\n             Statement s = m_Con.createStatement();\t\t\n  \n             res =s.executeQuery(C_RESOURCE_GETFILESINFOLDER1+absoluteName(foldername)\n                                +C_RESOURCE_GETFILESINFOLDER2+project.getId()+\n                                 C_RESOURCE_GETFILESINFOLDER3);\n            // create new file objects\n\t\t    while ( res.next() ) {\n                     file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           new byte[0],\n                                           res.getInt(C_SIZE)\n                                           );\n                     \n             }\n\n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n           return files;\n     }","id":20206,"modified_method":"/**\n\t * Returns a Vector with all file headers of a folder.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername the complete path to the folder.\n\t * \n\t * @return subfiles A Vector with all file headers of the folder.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public Vector getFilesInFolder(A_CmsProject project, String foldername)\n         throws CmsException {\n         Vector files=new Vector();\n         CmsResource file=null;\n         ResultSet res =null;\n         \n           try {\n            //  get all files in folder\n             Statement s = m_Con.createStatement();\t\t\n  \n             res =s.executeQuery(C_RESOURCE_GETFILESINFOLDER1+absoluteName(foldername)\n                                +C_RESOURCE_GETFILESINFOLDER2+project.getId()+\n                                 C_RESOURCE_GETFILESINFOLDER3);\n            // create new file objects\n\t\t    while ( res.next() ) {\n                     file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           new byte[0],\n                                           res.getInt(C_SIZE)\n                                           );\n                     \n             }\n\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n           return files;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a Vector with all subfolders.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername the complete path to the folder.\n\t * \n\t * @return Vector with all subfolders for the given folder.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public Vector getSubFolders(A_CmsProject project, String foldername)\n         throws CmsException {\n         Vector folders=new Vector();\n         CmsFolder folder=null;\n         ResultSet res =null;\n         \n           try {\n            //  get all subfolders\n             Statement s = m_Con.createStatement();\t\t\n  \n             res =s.executeQuery(C_RESOURCE_GETSUBFOLDERS1+absoluteName(foldername)\n                                +C_RESOURCE_GETSUBFOLDERS2+project.getId()+\n                                 C_RESOURCE_GETSUBFOLDERS3);\n            // create new folder objects\n\t\t    while ( res.next() ) {\n               folder = new CmsFolder(res.getString(C_RESOURCE_NAME),\n                                               res.getInt(C_RESOURCE_TYPE),\n                                               res.getInt(C_RESOURCE_FLAGS),\n                                               res.getInt(C_USER_ID),\n                                               res.getInt(C_GROUP_ID),\n                                               res.getInt(C_PROJECT_ID_RESOURCES),\n                                               res.getInt(C_ACCESS_FLAGS),\n                                               res.getInt(C_STATE),\n                                               res.getInt(C_LOCKED_BY),\n                                               res.getLong(C_DATE_CREATED),\n                                               res.getLong(C_DATE_LASTMODIFIED)\n                                               );\n             \n             }\n\n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n         return folders;\n     }","id":20207,"modified_method":"/**\n\t * Returns a Vector with all subfolders.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername the complete path to the folder.\n\t * \n\t * @return Vector with all subfolders for the given folder.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public Vector getSubFolders(A_CmsProject project, String foldername)\n         throws CmsException {\n         Vector folders=new Vector();\n         CmsFolder folder=null;\n         ResultSet res =null;\n         \n           try {\n            //  get all subfolders\n             Statement s = m_Con.createStatement();\t\t\n  \n             res =s.executeQuery(C_RESOURCE_GETSUBFOLDERS1+absoluteName(foldername)\n                                +C_RESOURCE_GETSUBFOLDERS2+project.getId()+\n                                 C_RESOURCE_GETSUBFOLDERS3);\n            // create new folder objects\n\t\t    while ( res.next() ) {\n               folder = new CmsFolder(res.getString(C_RESOURCE_NAME),\n                                               res.getInt(C_RESOURCE_TYPE),\n                                               res.getInt(C_RESOURCE_FLAGS),\n                                               res.getInt(C_USER_ID),\n                                               res.getInt(C_GROUP_ID),\n                                               res.getInt(C_PROJECT_ID_RESOURCES),\n                                               res.getInt(C_ACCESS_FLAGS),\n                                               res.getInt(C_STATE),\n                                               res.getInt(C_LOCKED_BY),\n                                               res.getLong(C_DATE_CREATED),\n                                               res.getLong(C_DATE_LASTMODIFIED)\n                                               );\n             \n             }\n\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n         return folders;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Publishes a specified project to the online project. <br>\n     *\n     * @param project The project to be published.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @return Vector of all resource names that are published.\n     * @exception CmsException  Throws CmsException if operation was not succesful.\n     */\n    public Vector publishProject(A_CmsProject project, A_CmsProject onlineProject)\n        throws CmsException {\n        \n        Vector resources = new Vector();\n        CmsFile file;\n        CmsFolder folder;\n        \n        ResultSet res;\n        \n        try {\n            // read all files that are in the requested project\n            synchronized (m_statementProjectReadFiles) {\n                   //get all files from the actual project\n                    m_statementProjectReadFiles.setInt(1,project.getId());\n                    res=m_statementProjectReadFiles.executeQuery();               \n                  }\n            // create new file objects\n\t\t    while ( res.next() ) {\n                     file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           onlineProject.getId(),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           res.getBytes(C_FILE_CONTENT),\n                                           res.getInt(C_SIZE)\n                                           );\n             // check the state of the file\n             // new or changed files are copied to the online project, those files\n             // marked as deleted are deleted in the online project.\n             if ((file.getState()== C_STATE_CHANGED) || \n                 (file.getState() == C_STATE_NEW)) {\n                 // delete an exitsing old file in the online project\n                 deleteFile(file);\n                 // write the new file\n                 createFile(onlineProject,onlineProject,file,file.getAbsolutePath());\n                 resources.addElement(file.getAbsolutePath()); \n             } else if (file.getState() == C_STATE_DELETED) {\n                  deleteFile(file);\n                  resources.addElement(file.getAbsolutePath()); \n             }\n             \n             }\n            // read all folders that are in the requested project\n            synchronized (m_statementProjectReadFolders) {\n                   //get all folders from the actual project\n                    m_statementProjectReadFolders.setInt(1,project.getId());\n                    m_statementProjectReadFolders.setInt(2,C_TYPE_FOLDER);\n                    res=m_statementProjectReadFolders.executeQuery();               \n                  }\n            // create new folder objects\n\t\t    while ( res.next() ) {\n                     folder = new CmsFolder(res.getString(C_RESOURCE_NAME),\n                                               res.getInt(C_RESOURCE_TYPE),\n                                               res.getInt(C_RESOURCE_FLAGS),\n                                               res.getInt(C_USER_ID),\n                                               res.getInt(C_GROUP_ID),\n                                               onlineProject.getId(),\n                                               res.getInt(C_ACCESS_FLAGS),\n                                               res.getInt(C_STATE),\n                                               res.getInt(C_LOCKED_BY),\n                                               res.getLong(C_DATE_CREATED),\n                                               res.getLong(C_DATE_LASTMODIFIED)\n                                               );\n                     // check the state of the folder\n                     // Any folder in the offline project is written to the online project\n                     // to keep the filesystem structure consistant.\n                     // Folders that are marked as DELETED are physically deleted \n                     // in the online project.\n                    if ((folder.getState()== C_STATE_CHANGED) || \n                        (folder.getState() == C_STATE_NEW) ||\n                        (folder.getState() == C_STATE_UNCHANGED )){\n                        // delete an exitsing old folder in the online project\n                        deleteFolder(folder);\n                        // write the new folder\n                        createFolder(onlineProject,folder,folder.getAbsolutePath());\n                        resources.addElement(folder.getAbsolutePath()); \n                    } else if (folder.getState() == C_STATE_DELETED) {\n                        deleteFolder(folder);\n                        resources.addElement(folder.getAbsolutePath()); \n                }\n            }\n         \n            \n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n           return resources;\n    }","id":20208,"modified_method":"/**\n     * Publishes a specified project to the online project. <br>\n     *\n     * @param project The project to be published.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @return Vector of all resource names that are published.\n     * @exception CmsException  Throws CmsException if operation was not succesful.\n     */\n    public Vector publishProject(A_CmsProject project, A_CmsProject onlineProject)\n        throws CmsException {\n        \n        Vector resources = new Vector();\n        CmsFile file;\n        CmsFolder folder;\n        \n        ResultSet res;\n        \n        try {\n            // read all files that are in the requested project\n            PreparedStatement statementProjectReadFiles=m_Con.prepareStatement(C_PROJECT_READ_FILES);\n            //get all files from the actual project\n            statementProjectReadFiles.setInt(1,project.getId());\n            res=statementProjectReadFiles.executeQuery();               \n            // create new file objects\n\t\t    while ( res.next() ) {\n                     file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           onlineProject.getId(),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           res.getBytes(C_FILE_CONTENT),\n                                           res.getInt(C_SIZE)\n                                           );\n             // check the state of the file\n             // new or changed files are copied to the online project, those files\n             // marked as deleted are deleted in the online project.\n             if ((file.getState()== C_STATE_CHANGED) || \n                 (file.getState() == C_STATE_NEW)) {\n                 // delete an exitsing old file in the online project\n                 deleteFile(file);\n                 // write the new file\n                 createFile(onlineProject,onlineProject,file,file.getAbsolutePath());\n                 resources.addElement(file.getAbsolutePath()); \n             } else if (file.getState() == C_STATE_DELETED) {\n                  deleteFile(file);\n                  resources.addElement(file.getAbsolutePath()); \n             }\n             \n             }\n            // read all folders that are in the requested project\n            PreparedStatement statementProjectReadFolders=m_Con.prepareStatement(C_PROJECT_READ_FOLDER);\n            //get all folders from the actual project\n            statementProjectReadFolders.setInt(1,project.getId());\n            statementProjectReadFolders.setInt(2,C_TYPE_FOLDER);\n            res=statementProjectReadFolders.executeQuery();               \n              \n            // create new folder objects\n\t\t    while ( res.next() ) {\n                     folder = new CmsFolder(res.getString(C_RESOURCE_NAME),\n                                               res.getInt(C_RESOURCE_TYPE),\n                                               res.getInt(C_RESOURCE_FLAGS),\n                                               res.getInt(C_USER_ID),\n                                               res.getInt(C_GROUP_ID),\n                                               onlineProject.getId(),\n                                               res.getInt(C_ACCESS_FLAGS),\n                                               res.getInt(C_STATE),\n                                               res.getInt(C_LOCKED_BY),\n                                               res.getLong(C_DATE_CREATED),\n                                               res.getLong(C_DATE_LASTMODIFIED)\n                                               );\n                     // check the state of the folder\n                     // Any folder in the offline project is written to the online project\n                     // to keep the filesystem structure consistant.\n                     // Folders that are marked as DELETED are physically deleted \n                     // in the online project.\n                    if ((folder.getState()== C_STATE_CHANGED) || \n                        (folder.getState() == C_STATE_NEW) ||\n                        (folder.getState() == C_STATE_UNCHANGED )){\n                        // delete an exitsing old folder in the online project\n                        deleteFolder(folder);\n                        // write the new folder\n                        createFolder(onlineProject,folder,folder.getAbsolutePath());\n                        resources.addElement(folder.getAbsolutePath()); \n                    } else if (folder.getState() == C_STATE_DELETED) {\n                        deleteFolder(folder);\n                        resources.addElement(folder.getAbsolutePath()); \n                }\n            }\n\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n           return resources;\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Creates a new file from an given CmsFile object and a new filename.\n     *\n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param file The file to be written to the Cms.\n\t * @param filename The complete new name of the file (including pathinformation).\n\t * \n\t * @return file The created file.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful\n     */    \n\t public CmsFile createFile(A_CmsProject project,\n                               A_CmsProject onlineProject,\n                               CmsFile file,String filename)\n         throws CmsException {\n            try {   \n               synchronized ( m_statementResourceWrite) {\n                // write new resource to the database\n                //RESOURCE_NAME\n                m_statementResourceWrite.setString(1,absoluteName(filename));\n                //RESOURCE_TYPE\n                m_statementResourceWrite.setInt(2,file.getType());\n                //RESOURCE_FLAGS\n                m_statementResourceWrite.setInt(3,file.getFlags());\n                //USER_ID\n                m_statementResourceWrite.setInt(4,file.getOwnerId());\n                //GROUP_ID\n                m_statementResourceWrite.setInt(5,file.getGroupId());\n                //PROJECT_ID\n                m_statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                m_statementResourceWrite.setInt(7,file.getAccessFlags());\n                //STATE\n                m_statementResourceWrite.setInt(8,C_STATE_NEW);\n                //LOCKED_BY\n                m_statementResourceWrite.setInt(9,file.isLockedBy());\n                //LAUNCHER_TYPE\n                m_statementResourceWrite.setInt(10,file.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                m_statementResourceWrite.setString(11,file.getLauncherClassname());\n                //DATE_CREATED\n                m_statementResourceWrite.setLong(12,file.getDateCreated());\n                //DATE_LASTMODIFIED\n                m_statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                m_statementResourceWrite.setInt(14,file.getContents().length);\n                m_statementResourceWrite.executeUpdate();\n               }\n               synchronized (m_statementFileWrite) {\n                //RESOURCE_NAME\n                m_statementFileWrite.setString(1,absoluteName(filename));\n                //PROJECT_ID\n                m_statementFileWrite.setInt(2,project.getId());\n                //FILE_CONTENT\n                m_statementFileWrite.setBytes(3,file.getContents());\n                m_statementFileWrite.executeUpdate();\n                   \n               }\n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readFile(project,onlineProject,filename);\n      }","id":20209,"modified_method":"/**\n\t * Creates a new file from an given CmsFile object and a new filename.\n     *\n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param file The file to be written to the Cms.\n\t * @param filename The complete new name of the file (including pathinformation).\n\t * \n\t * @return file The created file.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful\n     */    \n\t public CmsFile createFile(A_CmsProject project,\n                               A_CmsProject onlineProject,\n                               CmsFile file,String filename)\n         throws CmsException {\n              try {   \n                PreparedStatement statementResourceWrite=m_Con.prepareStatement(C_RESOURCE_WRITE);\n                // write new resource to the database\n                //RESOURCE_NAME\n                statementResourceWrite.setString(1,absoluteName(filename));\n                //RESOURCE_TYPE\n                statementResourceWrite.setInt(2,file.getType());\n                //RESOURCE_FLAGS\n                statementResourceWrite.setInt(3,file.getFlags());\n                //USER_ID\n                statementResourceWrite.setInt(4,file.getOwnerId());\n                //GROUP_ID\n                statementResourceWrite.setInt(5,file.getGroupId());\n                //PROJECT_ID\n                statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                statementResourceWrite.setInt(7,file.getAccessFlags());\n                //STATE\n                statementResourceWrite.setInt(8,C_STATE_NEW);\n                //LOCKED_BY\n                statementResourceWrite.setInt(9,file.isLockedBy());\n                //LAUNCHER_TYPE\n                statementResourceWrite.setInt(10,file.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                statementResourceWrite.setString(11,file.getLauncherClassname());\n                //DATE_CREATED\n                statementResourceWrite.setLong(12,file.getDateCreated());\n                //DATE_LASTMODIFIED\n                statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                statementResourceWrite.setInt(14,file.getContents().length);\n                statementResourceWrite.executeUpdate();\n                \n                PreparedStatement statementFileWrite=m_Con.prepareStatement(C_FILE_WRITE);\n                //RESOURCE_NAME\n                statementFileWrite.setString(1,absoluteName(filename));\n                //PROJECT_ID\n                statementFileWrite.setInt(2,project.getId());\n                //FILE_CONTENT\n                statementFileWrite.setBytes(3,file.getContents());\n                statementFileWrite.executeUpdate();\n                   \n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         } \n         return readFile(project,onlineProject,filename);\n      }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Writes a folder to the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername The complete name of the folder (including pathinformation).\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void writeFolder(A_CmsProject project, CmsFolder folder)\n         throws CmsException {\n         \n           try {   \n               synchronized ( m_statementResourceUpdate) {\n                // update resource in the database\n          \n                //RESOURCE_TYPE\n                m_statementResourceUpdate.setInt(1,folder.getType());\n                //RESOURCE_FLAGS\n                m_statementResourceUpdate.setInt(2,folder.getFlags());\n                //USER_ID\n                m_statementResourceUpdate.setInt(3,folder.getOwnerId());\n                //GROUP_ID\n                m_statementResourceUpdate.setInt(4,folder.getGroupId());\n                //ACCESS_FLAGS\n                m_statementResourceUpdate.setInt(5,folder.getAccessFlags());\n                //STATE\n                m_statementResourceUpdate.setInt(6,C_STATE_CHANGED);\n                //LOCKED_BY\n                m_statementResourceUpdate.setInt(7,folder.isLockedBy());\n                //LAUNCHER_TYPE\n                m_statementResourceUpdate.setInt(8,folder.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                m_statementResourceUpdate.setString(9,folder.getLauncherClassname());\n                //DATE_LASTMODIFIED\n                m_statementResourceUpdate.setLong(10,System.currentTimeMillis());\n                //SIZE\n                m_statementResourceUpdate.setInt(11,0);\n                \n                // set query parameters\n                m_statementResourceUpdate.setString(12,absoluteName(folder.getAbsolutePath()));\n                m_statementResourceUpdate.setInt(13,folder.getProjectId());\n                m_statementResourceUpdate.executeUpdate();\n                }\n               } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n     }","id":20210,"modified_method":"/**\n\t * Writes a folder to the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername The complete name of the folder (including pathinformation).\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void writeFolder(A_CmsProject project, CmsFolder folder)\n         throws CmsException {\n         \n           try {   \n                // update resource in the database\n                PreparedStatement statementResourceUpdate=m_Con.prepareStatement(C_RESOURCE_UPDATE);\n                //RESOURCE_TYPE\n                statementResourceUpdate.setInt(1,folder.getType());\n                //RESOURCE_FLAGS\n                statementResourceUpdate.setInt(2,folder.getFlags());\n                //USER_ID\n                statementResourceUpdate.setInt(3,folder.getOwnerId());\n                //GROUP_ID\n                statementResourceUpdate.setInt(4,folder.getGroupId());\n                //ACCESS_FLAGS\n                statementResourceUpdate.setInt(5,folder.getAccessFlags());\n                //STATE\n                statementResourceUpdate.setInt(6,C_STATE_CHANGED);\n                //LOCKED_BY\n                statementResourceUpdate.setInt(7,folder.isLockedBy());\n                //LAUNCHER_TYPE\n                statementResourceUpdate.setInt(8,folder.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                statementResourceUpdate.setString(9,folder.getLauncherClassname());\n                //DATE_LASTMODIFIED\n                statementResourceUpdate.setLong(10,System.currentTimeMillis());\n                //SIZE\n                statementResourceUpdate.setInt(11,0);\n                \n                // set query parameters\n                statementResourceUpdate.setString(12,absoluteName(folder.getAbsolutePath()));\n                statementResourceUpdate.setInt(13,folder.getProjectId());\n                statementResourceUpdate.executeUpdate();\n            } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Deletes the folder.\n\t * \n\t * Only empty folders can be deleted yet.\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername The complete path of the folder.\n\t * @param force If force is set to true, all sub-resources will be deleted.\n\t * If force is set to false, the folder will be deleted only if it is empty.\n\t * This parameter is not used yet as only empty folders can be deleted!\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void deleteFolder(A_CmsProject project, String foldername, boolean force)\n         throws CmsException {\n         \n         // the current implementation only deletes empty folders\n         // check if the folder has any files in it\n         Vector files=getFilesInFolder(project,foldername);\n         if (files.size()==0) {\n             // check if the folder has any folders in it\n             Vector folders=getSubFolders(project,foldername);\n             if (folders.size()==0) {\n                 //this folder is empty, delete it\n                 try { \n                 synchronized ( m_statementResourceRemove) {\n                   // mark the folder as deleted       \n                    m_statementResourceRemove.setInt(1,C_STATE_DELETED);\n                    m_statementResourceRemove.setString(2,absoluteName(foldername));\n                    m_statementResourceRemove.setInt(3,project.getId());\n                    m_statementResourceRemove.executeUpdate();               \n                  }\n                } catch (SQLException e){\n                 throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n                }        \n              } else {\n                 throw new CmsException(foldername,CmsException.C_NOT_EMPTY);  \n              }\n         } else {\n                 throw new CmsException(foldername,CmsException.C_NOT_EMPTY);  \n         }\n     }","id":20211,"modified_method":"/**\n\t * Deletes the folder.\n\t * \n\t * Only empty folders can be deleted yet.\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername The complete path of the folder.\n\t * @param force If force is set to true, all sub-resources will be deleted.\n\t * If force is set to false, the folder will be deleted only if it is empty.\n\t * This parameter is not used yet as only empty folders can be deleted!\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void deleteFolder(A_CmsProject project, String foldername, boolean force)\n         throws CmsException {\n         \n         // the current implementation only deletes empty folders\n         // check if the folder has any files in it\n         Vector files=getFilesInFolder(project,foldername);\n         if (files.size()==0) {\n             // check if the folder has any folders in it\n             Vector folders=getSubFolders(project,foldername);\n             if (folders.size()==0) {\n                 //this folder is empty, delete it\n                 try { \n                    // mark the folder as deleted       \n                    PreparedStatement statementResourceRemove=m_Con.prepareStatement(C_RESOURCE_REMOVE);  \n                    statementResourceRemove.setInt(1,C_STATE_DELETED);\n                    statementResourceRemove.setString(2,absoluteName(foldername));\n                    statementResourceRemove.setInt(3,project.getId());\n                    statementResourceRemove.executeUpdate();              \n                } catch (SQLException e){\n                 throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n                }        \n              } else {\n                 throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+foldername,CmsException.C_NOT_EMPTY);  \n              }\n         } else {\n                 throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+foldername,CmsException.C_NOT_EMPTY);  \n         }\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Creates a new folder \n\t * \n\t * @param user The user who wants to create the folder.\n\t * @param project The project in which the resource will be used.\n\t * @param foldername The complete path to the folder in which the new folder will \n\t * be created.\n\t * @param flags The flags of this resource.\n\t * \n\t * @return The created folder.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public CmsFolder createFolder(A_CmsUser user,\n                                   A_CmsProject project, \n                                   String foldername,\n                                   int flags)\n         throws CmsException {\n           try {   \n               synchronized ( m_statementResourceWrite) {\n                // write new resource to the database\n                //RESOURCE_NAME\n                m_statementResourceWrite.setString(1,absoluteName(foldername));\n                //RESOURCE_TYPE\n                m_statementResourceWrite.setInt(2,C_TYPE_FOLDER);\n                //RESOURCE_FLAGS\n                m_statementResourceWrite.setInt(3,flags);\n                //USER_ID\n                m_statementResourceWrite.setInt(4,user.getId());\n                //GROUP_ID\n                m_statementResourceWrite.setInt(5,user.getDefaultGroupId());\n                //PROJECT_ID\n                m_statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                m_statementResourceWrite.setInt(7,C_ACCESS_DEFAULT_FLAGS);\n                //STATE\n                m_statementResourceWrite.setInt(8,C_STATE_NEW);\n                //LOCKED_BY\n                m_statementResourceWrite.setInt(9,C_UNKNOWN_ID);\n                //LAUNCHER_TYPE\n                m_statementResourceWrite.setInt(10,C_UNKNOWN_LAUNCHER_ID);\n                //LAUNCHER_CLASSNAME\n                m_statementResourceWrite.setString(11,C_UNKNOWN_LAUNCHER);\n                //DATE_CREATED\n                m_statementResourceWrite.setLong(12,System.currentTimeMillis());\n                //DATE_LASTMODIFIED\n                m_statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                m_statementResourceWrite.setInt(14,0);\n                m_statementResourceWrite.executeUpdate();\n               }\n            } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readFolder(project,foldername);\n     }","id":20212,"modified_method":"/**\n\t * Creates a new folder \n\t * \n\t * @param user The user who wants to create the folder.\n\t * @param project The project in which the resource will be used.\n\t * @param foldername The complete path to the folder in which the new folder will \n\t * be created.\n\t * @param flags The flags of this resource.\n\t * \n\t * @return The created folder.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public CmsFolder createFolder(A_CmsUser user,\n                                   A_CmsProject project, \n                                   String foldername,\n                                   int flags)\n         throws CmsException {\n         try {  \n            // write new resource to the database\n            PreparedStatement statementResourceWrite=m_Con.prepareStatement(C_RESOURCE_WRITE);\n            //RESOURCE_NAME\n            statementResourceWrite.setString(1,absoluteName(foldername));\n            //RESOURCE_TYPE\n            statementResourceWrite.setInt(2,C_TYPE_FOLDER);\n            //RESOURCE_FLAGS\n            statementResourceWrite.setInt(3,flags);\n            //USER_ID\n            statementResourceWrite.setInt(4,user.getId());\n            //GROUP_ID\n            statementResourceWrite.setInt(5,user.getDefaultGroupId());\n            //PROJECT_ID\n            statementResourceWrite.setInt(6,project.getId());\n            //ACCESS_FLAGS\n            statementResourceWrite.setInt(7,C_ACCESS_DEFAULT_FLAGS);\n            //STATE\n            statementResourceWrite.setInt(8,C_STATE_NEW);\n            //LOCKED_BY\n            statementResourceWrite.setInt(9,C_UNKNOWN_ID);\n            //LAUNCHER_TYPE\n            statementResourceWrite.setInt(10,C_UNKNOWN_LAUNCHER_ID);\n            //LAUNCHER_CLASSNAME\n            statementResourceWrite.setString(11,C_UNKNOWN_LAUNCHER);\n            //DATE_CREATED\n            statementResourceWrite.setLong(12,System.currentTimeMillis());\n            //DATE_LASTMODIFIED\n            statementResourceWrite.setLong(13,System.currentTimeMillis());\n            //SIZE\n            statementResourceWrite.setInt(14,0);\n            statementResourceWrite.executeUpdate();\n            \n           } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         } \n         return readFolder(project,foldername);\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n      * Deletes a file in the database. \n      * This method is used to physically remove a file form the database, therefore it\n      * can only be accessed from within the access module.\n      * \n      * @param file The file to be deleted.\n      * @exception CmsException Throws CmsException if operation was not succesful\n      */\n     private void deleteFile(CmsFile file) \n        throws CmsException{\n            try { \n            // delete the file header\n            synchronized ( m_statementResourceDelete) {\n                    m_statementResourceDelete.setString(1,absoluteName(file.getAbsolutePath()));\n                    m_statementResourceDelete.setInt(2,file.getProjectId());\n                    m_statementResourceDelete.executeUpdate();               \n                  }\n            // delete the file content\n            synchronized ( m_statementFileDelete) {\n                    m_statementFileDelete.setString(1,absoluteName(file.getAbsolutePath()));\n                    m_statementFileDelete.setInt(2,file.getProjectId());\n                    m_statementFileDelete.executeUpdate();               \n                  }\n               } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }         \n     }","id":20213,"modified_method":"/**\n      * Deletes a file in the database. \n      * This method is used to physically remove a file form the database, therefore it\n      * can only be accessed from within the access module.\n      * \n      * @param file The file to be deleted.\n      * @exception CmsException Throws CmsException if operation was not succesful\n      */\n     private void deleteFile(CmsFile file) \n        throws CmsException{\n            try { \n            // delete the file header\n            PreparedStatement statementResourceDelete=m_Con.prepareStatement(C_RESOURCE_DELETE);\n            statementResourceDelete.setString(1,absoluteName(file.getAbsolutePath()));\n            statementResourceDelete.setInt(2,file.getProjectId());\n            statementResourceDelete.executeUpdate(); \n            \n            // delete the file content\n            PreparedStatement statementFileDelete=m_Con.prepareStatement(C_FILE_DELETE);\n            statementFileDelete.setString(1,absoluteName(file.getAbsolutePath()));\n            statementFileDelete.setInt(2,file.getProjectId());\n            statementFileDelete.executeUpdate();               \n            } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }         \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Reads a file header from the Cms.<BR/>\n\t * The reading excludes the filecontent.\n\t * \n\t * @param callingUser The user who wants to use this method.\n\t * @param project The project in which the resource will be used.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n\t * @return file The read file.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public CmsFile readFileHeader(A_CmsProject project, String filename)\n         throws CmsException {\n                 \n         CmsFile file=null;\n         ResultSet res =null;\n           \n         try {  \n              synchronized ( m_statementResourceRead) {\n                   // read file data from database\n                   m_statementResourceRead.setString(1,absoluteName(filename));\n                   m_statementResourceRead.setInt(2,project.getId());\n                   res = m_statementResourceRead.executeQuery();\n               }\n               // create new file\n               if(res.next()) {\n                        file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           new byte[0],\n                                           res.getInt(C_SIZE)\n                                           );\n                         // check if this resource is marked as deleted\n                        if (file.getState() == C_STATE_DELETED) {\n                            throw new CmsException(file.getAbsolutePath(),CmsException.C_NOT_FOUND);  \n                        }\n               } else {\n                 throw new CmsException(filename,CmsException.C_NOT_FOUND);  \n               }\n \n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n        return file;\n       }","id":20214,"modified_method":"/**\n\t * Reads a file header from the Cms.<BR/>\n\t * The reading excludes the filecontent.\n\t * \n\t * @param callingUser The user who wants to use this method.\n\t * @param project The project in which the resource will be used.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n\t * @return file The read file.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public CmsFile readFileHeader(A_CmsProject project, String filename)\n         throws CmsException {\n                 \n         CmsFile file=null;\n         ResultSet res =null;\n           \n         try {  \n               PreparedStatement statementResourceRead=m_Con.prepareStatement(C_RESOURCE_READ);\n               // read file data from database\n               statementResourceRead.setString(1,absoluteName(filename));\n               statementResourceRead.setInt(2,project.getId());\n               res = statementResourceRead.executeQuery();\n\n               // create new file\n               if(res.next()) {\n                        file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           new byte[0],\n                                           res.getInt(C_SIZE)\n                                           );\n                         // check if this resource is marked as deleted\n                        if (file.getState() == C_STATE_DELETED) {\n                            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+file.getAbsolutePath(),CmsException.C_NOT_FOUND);  \n                        }\n               } else {\n                 throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+filename,CmsException.C_NOT_FOUND);  \n               }\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n        return file;\n       }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Reads a folder from the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername The name of the folder to be read.\n\t * \n\t * @return The read folder.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public CmsFolder readFolder(A_CmsProject project, String foldername)\n         throws CmsException {\n         \n         CmsFolder folder=null;\n         ResultSet res =null;\n           \n         try {  \n            /*  synchronized ( m_statementResourceRead) {\n                   // read resource data from database\n                   m_statementResourceRead.setString(1,absoluteName(foldername));\n                   m_statementResourceRead.setInt(2,project.getId());\n                   res = m_statementResourceRead.executeQuery();\n               }*/\n              Statement s = m_Con.createStatement();\t\t\t\n\t\t\t  s.setEscapeProcessing(false);\t\n\t\t\t  res = s.executeQuery(\"SELECT * FROM RESOURCES WHERE RESOURCE_NAME = '\"+foldername\n                                   +\"' AND PROJECT_ID = \"+project.getId());\n               // create new resource\n               if(res.next()) {\n                        folder = new CmsFolder(res.getString(C_RESOURCE_NAME),\n                                               res.getInt(C_RESOURCE_TYPE),\n                                               res.getInt(C_RESOURCE_FLAGS),\n                                               res.getInt(C_USER_ID),\n                                               res.getInt(C_GROUP_ID),\n                                               res.getInt(C_PROJECT_ID_RESOURCES),\n                                               res.getInt(C_ACCESS_FLAGS),\n                                               res.getInt(C_STATE),\n                                               res.getInt(C_LOCKED_BY),\n                                               res.getLong(C_DATE_CREATED),\n                                               res.getLong(C_DATE_LASTMODIFIED)\n                                               );\n                        // check if this resource is marked as deleted\n                        if (folder.getState() == C_STATE_DELETED) {\n                            throw new CmsException(folder.getAbsolutePath(),CmsException.C_NOT_FOUND);  \n                        }\n                   }else {\n                 throw new CmsException(foldername,CmsException.C_NOT_FOUND);  \n               }\n \n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n        return folder;\n        \n    }","id":20215,"modified_method":"/**\n\t * Reads a folder from the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param foldername The name of the folder to be read.\n\t * \n\t * @return The read folder.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public CmsFolder readFolder(A_CmsProject project, String foldername)\n         throws CmsException {\n         \n         CmsFolder folder=null;\n         ResultSet res =null;\n           \n         try {  \n               PreparedStatement statementResourceRead=m_Con.prepareStatement(C_RESOURCE_READ);\n               statementResourceRead.setString(1,absoluteName(foldername));\n               statementResourceRead.setInt(2,project.getId());\n               res = statementResourceRead.executeQuery();\n               // create new resource\n               if(res.next()) {\n                        folder = new CmsFolder(res.getString(C_RESOURCE_NAME),\n                                               res.getInt(C_RESOURCE_TYPE),\n                                               res.getInt(C_RESOURCE_FLAGS),\n                                               res.getInt(C_USER_ID),\n                                               res.getInt(C_GROUP_ID),\n                                               res.getInt(C_PROJECT_ID_RESOURCES),\n                                               res.getInt(C_ACCESS_FLAGS),\n                                               res.getInt(C_STATE),\n                                               res.getInt(C_LOCKED_BY),\n                                               res.getLong(C_DATE_CREATED),\n                                               res.getLong(C_DATE_LASTMODIFIED)\n                                               );\n                        // check if this resource is marked as deleted\n                        if (folder.getState() == C_STATE_DELETED) {\n                            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+folder.getAbsolutePath(),CmsException.C_NOT_FOUND);  \n                        }\n                   }else {\n                 throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+foldername,CmsException.C_NOT_FOUND);  \n               }\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n        return folder;\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Deletes the file.\n\t * \n     * @param project The project in which the resource will be used.\n\t * @param filename The complete path of the file.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void deleteFile(A_CmsProject project, String filename)\n         throws CmsException {\n         try { \n            synchronized ( m_statementResourceRemove) {\n                   // mark the file as deleted       \n                    m_statementResourceRemove.setInt(1,C_STATE_DELETED);\n                    m_statementResourceRemove.setString(2,absoluteName(filename));\n                    m_statementResourceRemove.setInt(3,project.getId());\n                    m_statementResourceRemove.executeUpdate();               \n                  }\n               } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }        \n     }","id":20216,"modified_method":"/**\n\t * Deletes the file.\n\t * \n     * @param project The project in which the resource will be used.\n\t * @param filename The complete path of the file.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void deleteFile(A_CmsProject project, String filename)\n         throws CmsException {\n         try { \n           PreparedStatement statementResourceRemove=m_Con.prepareStatement(C_RESOURCE_REMOVE);  \n           // mark the file as deleted       \n           statementResourceRemove.setInt(1,C_STATE_DELETED);\n           statementResourceRemove.setString(2,absoluteName(filename));\n           statementResourceRemove.setInt(3,project.getId());\n           statementResourceRemove.executeUpdate();               \n          \n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }        \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Reads all file headers of a file in the OpenCms.<BR>\n\t * The reading excludes the filecontent.\n\t * \n     * @param filename The name of the file to be read.\n\t * \n\t * @return Vector of file headers read from the Cms.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public Vector readAllFileHeaders(String filename)\n         throws CmsException {\n          \n         CmsFile file=null;\n         ResultSet res =null;\n         Vector allHeaders = new Vector();\n         \n         try {  \n              synchronized ( m_statementResourceReadAll) {\n                   // read file header data from database\n                   m_statementResourceReadAll.setString(1,absoluteName(filename));\n                   res = m_statementResourceReadAll.executeQuery();\n               }\n               // create new file headers\n               while(res.next()) {\n                        file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           new byte[0],\n                                           res.getInt(C_SIZE)\n                                           );\n                       \n                        allHeaders.addElement(file);\n               }\n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return allHeaders;\n     }","id":20217,"modified_method":"/**\n\t * Reads all file headers of a file in the OpenCms.<BR>\n\t * The reading excludes the filecontent.\n\t * \n     * @param filename The name of the file to be read.\n\t * \n\t * @return Vector of file headers read from the Cms.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public Vector readAllFileHeaders(String filename)\n         throws CmsException {\n          \n         CmsFile file=null;\n         ResultSet res =null;\n         Vector allHeaders = new Vector();\n         \n         try {  \n               PreparedStatement statementResourceReadAll=m_Con.prepareStatement(C_RESOURCE_READ_ALL);\n               // read file header data from database\n               statementResourceReadAll.setString(1,absoluteName(filename));\n               res = statementResourceReadAll.executeQuery();\n               // create new file headers\n               while(res.next()) {\n                        file = new CmsFile(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           new byte[0],\n                                           res.getInt(C_SIZE)\n                                           );\n                       \n                        allHeaders.addElement(file);\n               }\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return allHeaders;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Creates a new resource from an given CmsResource object.\n     *\n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param resource The resource to be written to the Cms.\n\t * \n\t * @return The created resource.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful\n     */    \n\t public A_CmsResource createResource(A_CmsProject project,\n                                         A_CmsProject onlineProject,\n                                         A_CmsResource resource)\n         throws CmsException {\n            try {   \n               synchronized ( m_statementResourceWrite) {\n                // write new resource to the database\n                //RESOURCE_NAME\n                m_statementResourceWrite.setString(1,absoluteName(resource.getAbsolutePath()));\n                //RESOURCE_TYPE\n                m_statementResourceWrite.setInt(2,resource.getType());\n                //RESOURCE_FLAGS\n                m_statementResourceWrite.setInt(3,resource.getFlags());\n                //USER_ID\n                m_statementResourceWrite.setInt(4,resource.getOwnerId());\n                //GROUP_ID\n                m_statementResourceWrite.setInt(5,resource.getGroupId());\n                //PROJECT_ID\n                m_statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                m_statementResourceWrite.setInt(7,resource.getAccessFlags());\n                //STATE\n                m_statementResourceWrite.setInt(8,resource.getState());\n                //LOCKED_BY\n                m_statementResourceWrite.setInt(9,resource.isLockedBy());\n                //LAUNCHER_TYPE\n                m_statementResourceWrite.setInt(10,resource.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                m_statementResourceWrite.setString(11,resource.getLauncherClassname());\n                //DATE_CREATED\n                m_statementResourceWrite.setLong(12,resource.getDateCreated());\n                //DATE_LASTMODIFIED\n                m_statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                m_statementResourceWrite.setInt(14,resource.getLength());\n                m_statementResourceWrite.executeUpdate();\n               }\n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readResource(project,resource.getAbsolutePath());\n      }","id":20218,"modified_method":"/**\n\t * Creates a new resource from an given CmsResource object.\n     *\n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param resource The resource to be written to the Cms.\n\t * \n\t * @return The created resource.\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful\n     */    \n\t public A_CmsResource createResource(A_CmsProject project,\n                                         A_CmsProject onlineProject,\n                                         A_CmsResource resource)\n         throws CmsException {\n            try {   \n                PreparedStatement statementResourceWrite=m_Con.prepareStatement(C_RESOURCE_WRITE);\n                // write new resource to the database\n                //RESOURCE_NAME\n                statementResourceWrite.setString(1,absoluteName(resource.getAbsolutePath()));\n                //RESOURCE_TYPE\n                statementResourceWrite.setInt(2,resource.getType());\n                //RESOURCE_FLAGS\n                statementResourceWrite.setInt(3,resource.getFlags());\n                //USER_ID\n                statementResourceWrite.setInt(4,resource.getOwnerId());\n                //GROUP_ID\n                statementResourceWrite.setInt(5,resource.getGroupId());\n                //PROJECT_ID\n                statementResourceWrite.setInt(6,project.getId());\n                //ACCESS_FLAGS\n                statementResourceWrite.setInt(7,resource.getAccessFlags());\n                //STATE\n                statementResourceWrite.setInt(8,resource.getState());\n                //LOCKED_BY\n                statementResourceWrite.setInt(9,resource.isLockedBy());\n                //LAUNCHER_TYPE\n                statementResourceWrite.setInt(10,resource.getLauncherType());\n                //LAUNCHER_CLASSNAME\n                statementResourceWrite.setString(11,resource.getLauncherClassname());\n                //DATE_CREATED\n                statementResourceWrite.setLong(12,resource.getDateCreated());\n                //DATE_LASTMODIFIED\n                statementResourceWrite.setLong(13,System.currentTimeMillis());\n                //SIZE\n                statementResourceWrite.setInt(14,resource.getLength());\n                statementResourceWrite.executeUpdate();\n\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readResource(project,resource.getAbsolutePath());\n      }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Constructor, creartes a new CmsAccessFileMySql object and connects it to the\n     * user information database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessFileMySql(A_CmsMountPoint mountpoint)\t\n        throws CmsException, ClassNotFoundException {\n        \n        m_mountpoint= (CmsMountPoint) mountpoint;\n        Class.forName(mountpoint.getDriver());\n        initConnections(mountpoint.getConnect());\n        initStatements();\n        \n    }","id":20219,"modified_method":"/**\n     * Constructor, creartes a new CmsAccessFileMySql object and connects it to the\n     * user information database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessFileMySql(A_CmsMountPoint mountpoint)\t\n        throws CmsException, ClassNotFoundException {\n        \n        m_mountpoint= (CmsMountPoint) mountpoint;\n        Class.forName(mountpoint.getDriver());\n        initConnections(mountpoint.getConnect());\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Reads a resource from the Cms.<BR/>\n\t * A resource is either a file header or a folder.\n\t * \n\t * @param callingUser The user who wants to use this method.\n\t * @param project The project in which the resource will be used.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n\t * @return The resource read.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t private A_CmsResource readResource(A_CmsProject project, String filename)\n         throws CmsException {\n                 \n         CmsResource file=null;\n         ResultSet res =null;\n           \n         try {  \n              synchronized ( m_statementResourceRead) {\n                   // read resource data from database\n                   m_statementResourceRead.setString(1,absoluteName(filename));\n                   m_statementResourceRead.setInt(2,project.getId());\n                   res = m_statementResourceRead.executeQuery();\n               }\n               // create new resource\n               if(res.next()) {\n                        file = new CmsResource(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           res.getInt(C_SIZE)\n                                           );\n               } else {\n                 throw new CmsException(filename,CmsException.C_NOT_FOUND);  \n               }\n \n         } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n        return file;\n       }","id":20220,"modified_method":"/**\n\t * Reads a resource from the Cms.<BR/>\n\t * A resource is either a file header or a folder.\n\t * \n\t * @param callingUser The user who wants to use this method.\n\t * @param project The project in which the resource will be used.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n\t * @return The resource read.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t private A_CmsResource readResource(A_CmsProject project, String filename)\n         throws CmsException {\n                 \n         CmsResource file=null;\n         ResultSet res =null;\n           \n         try {  \n               // read resource data from database\n               PreparedStatement statementResourceRead=m_Con.prepareStatement(C_RESOURCE_READ);\n               statementResourceRead.setString(1,absoluteName(filename));\n               statementResourceRead.setInt(2,project.getId());\n               res = statementResourceRead.executeQuery();\n               // create new resource\n               if(res.next()) {\n                        file = new CmsResource(res.getString(C_RESOURCE_NAME),\n                                           res.getInt(C_RESOURCE_TYPE),\n                                           res.getInt(C_RESOURCE_FLAGS),\n                                           res.getInt(C_USER_ID),\n                                           res.getInt(C_GROUP_ID),\n                                           res.getInt(C_PROJECT_ID_RESOURCES),\n                                           res.getInt(C_ACCESS_FLAGS),\n                                           res.getInt(C_STATE),\n                                           res.getInt(C_LOCKED_BY),\n                                           res.getInt(C_LAUNCHER_TYPE),\n                                           res.getString(C_LAUNCHER_CLASSNAME),\n                                           res.getLong(C_DATE_CREATED),\n                                           res.getLong(C_DATE_LASTMODIFIED),\n                                           res.getInt(C_SIZE)\n                                           );\n               } else {\n                 throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+filename,CmsException.C_NOT_FOUND);  \n               }\n \n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n        return file;\n       }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Writes a file to the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void writeFile(A_CmsProject project,\n                           A_CmsProject onlineProject,\n                           CmsFile file)\n       throws CmsException {\n     \n           try {   \n             // update the file header in the RESOURCE database.\n             writeFileHeader(project,onlineProject,file);\n             // update the file content in the FILES database.\n             synchronized ( m_statementFileUpdate) {\n               //FILE_CONTENT\n                m_statementFileUpdate.setBytes(1,file.getContents());\n                // set query parameters\n                m_statementFileUpdate.setString(2,absoluteName(file.getAbsolutePath()));\n                m_statementFileUpdate.setInt(3,file.getProjectId());\n                m_statementFileUpdate.executeUpdate();\n              }\n             } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n\n      }","id":20221,"modified_method":"/**\n\t * Writes a file to the Cms.<BR/>\n\t * \n\t * @param project The project in which the resource will be used.\n\t * @param onlineProject The online project of the OpenCms.\n\t * @param filename The complete name of the new file (including pathinformation).\n\t * \n     * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void writeFile(A_CmsProject project,\n                           A_CmsProject onlineProject,\n                           CmsFile file)\n       throws CmsException {\n     \n           try {   \n             // update the file header in the RESOURCE database.\n             writeFileHeader(project,onlineProject,file);\n             // update the file content in the FILES database.\n             PreparedStatement statementFileUpdate=m_Con.prepareStatement(C_FILE_UPDATE);\n             //FILE_CONTENT\n             statementFileUpdate.setBytes(1,file.getContents());\n             // set query parameters\n             statementFileUpdate.setString(2,absoluteName(file.getAbsolutePath()));\n             statementFileUpdate.setInt(3,file.getProjectId());\n             statementFileUpdate.executeUpdate();\n           } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n      }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a group object.<P/>\n\t * \n\t * @param groupname The id of the group that is to be read.\n\t * @return Group.\n\t * \n\t * @exception CmsException  Throws CmsException if operation was not succesful\n\t */\n     public A_CmsGroup readGroup(int id)\n         throws CmsException {\n  \n         A_CmsGroup group=null;\n         ResultSet res = null;\n   \n         try{\n\t\t\t // create statement\n\t\t\t PreparedStatement statementGroupReadId=m_Con.prepareStatement(C_GROUP_READID);\n\t\t\t \n\t\t\t // read the group from the database\n\t\t\t statementGroupReadId.setInt(1,id);\n\t\t\t res = statementGroupReadId.executeQuery();\n\t\t\t \n            Statement s = m_Con.createStatement();\t\t\t\n\t\t\ts.setEscapeProcessing(false);\t\n            res = s.executeQuery(\"SELECT * FROM GROUPS WHERE GROUP_ID = \"+id);\n            \n             // create new Cms group object\n\t\t\t if(res.next()) {\n                group=new CmsGroup(res.getInt(C_GROUP_ID),\n                                   res.getInt(C_PARENT_GROUP_ID),\n                                   res.getString(C_GROUP_NAME),\n                                   res.getString(C_GROUP_DESCRIPTION),\n                                   res.getInt(C_GROUP_FLAGS));                                \n             } else {\n                 throw new CmsException(\"[\" + this.getClass().getName() + \"] \"+id,CmsException.C_NO_GROUP);\n             }\n       \n         } catch (SQLException e){\n             throw new CmsException(\"[\" + this.getClass().getName() + \"] \"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return group;\n     }","id":20222,"modified_method":"/**\n\t * Returns a group object.<P/>\n\t * \n\t * @param groupname The id of the group that is to be read.\n\t * @return Group.\n\t * \n\t * @exception CmsException  Throws CmsException if operation was not succesful\n\t */\n     public A_CmsGroup readGroup(int id)\n         throws CmsException {\n  \n         A_CmsGroup group=null;\n         ResultSet res = null;\n   \n         try{\n              // read the group from the database\n\n                PreparedStatement statementGroupReadId=m_Con.prepareStatement(C_GROUP_READID);             \n                statementGroupReadId.setInt(1,id);\n                res = statementGroupReadId.executeQuery();\n   \n             // create new Cms group object\n\t\t\t if(res.next()) {\n                group=new CmsGroup(res.getInt(C_GROUP_ID),\n                                   res.getInt(C_PARENT_GROUP_ID),\n                                   res.getString(C_GROUP_NAME),\n                                   res.getString(C_GROUP_DESCRIPTION),\n                                   res.getInt(C_GROUP_FLAGS));                                \n             } else {\n                 throw new CmsException(\"[\" + this.getClass().getName() + \"] \"+id,CmsException.C_NO_GROUP);\n             }\n       \n         } catch (SQLException e){\n             throw new CmsException(\"[\" + this.getClass().getName() + \"] \"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return group;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Deletes a serializable object from the propertys.\n\t * \n\t * @param name The name of the property.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic void deleteProperty(String name)\n        throws CmsException {\n        \n\t\ttry\t{\n            synchronized (m_statementPropertyDelete) {\n                m_statementPropertyDelete.setString(1,name);\n                m_statementPropertyDelete.executeUpdate();\n            }           \n\t\t}catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n    }","id":20223,"modified_method":"/**\n\t * Deletes a serializable object from the propertys.\n\t * \n\t * @param name The name of the property.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic void deleteProperty(String name)\n        throws CmsException {\n        \n\t\ttry\t{\n           PreparedStatement statementPropertyDelete=m_Con.prepareStatement(C_PROPERTY_DELETE);\n           statementPropertyDelete.setString(1,name);\n           statementPropertyDelete.executeUpdate();       \n\t\t}catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Creates a serializable object in the propertys.\n\t * \n\t * @param name The name of the property.\n\t * @param object The property-object.\n\t * \n\t * @return object The property-object.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\t public Serializable addProperty(String name, Serializable object)\n         throws CmsException {\n         \n        Serializable property=null;\n        byte[] value;\n        \n         try\t{\t\t\t\n            // serialize the object\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(object);\n            oout.close();\n            value=bout.toByteArray();\n            \n            // create the object\n            synchronized (m_statementPropertyWrite) {\n                m_statementPropertyWrite.setString(1,name);\n                m_statementPropertyWrite.setBytes(2,value);\n                m_statementPropertyWrite.executeUpdate();\n            }\n        } catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t} catch (IOException e){\n            throw new CmsException(CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n       \n        return readProperty(name);\n     }","id":20224,"modified_method":"/**\n\t * Creates a serializable object in the propertys.\n\t * \n\t * @param name The name of the property.\n\t * @param object The property-object.\n\t * \n\t * @return object The property-object.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\t public Serializable addProperty(String name, Serializable object)\n         throws CmsException {\n         \n        Serializable property=null;\n        byte[] value;\n        \n         try\t{\t\t\t\n            // serialize the object\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(object);\n            oout.close();\n            value=bout.toByteArray();\n            \n            // create the object\n                PreparedStatement statementPropertyWrite=m_Con.prepareStatement(C_PROPERTY_WRITE);\n                statementPropertyWrite.setString(1,name);\n                statementPropertyWrite.setBytes(2,value);\n                statementPropertyWrite.executeUpdate();\n        } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t} catch (IOException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n        return readProperty(name);\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Writes a serializable object to the propertys.\n\t * \n\t * @param name The name of the property.\n\t * @param object The property-object.\n\t * \n\t * @return object The property-object.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic Serializable writeProperty(String name, Serializable object)\n        throws CmsException {\n        \n        byte[] value=null;\n        \n        try\t{\t\t\t\n            // serialize the object\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(object);\n            oout.close();\n            value=bout.toByteArray();   \n            \n            synchronized (m_statementPropertyUpdate) {\n                m_statementPropertyUpdate.setBytes(1,value);\n                m_statementPropertyUpdate.setString(2,name);\n\t\t        m_statementPropertyUpdate.executeUpdate();\n            }\n\t\t\t\n        }\n        catch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n        catch (IOException e){\n            throw new CmsException(CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n\n          return readProperty(name);\n    }","id":20225,"modified_method":"/**\n\t * Writes a serializable object to the propertys.\n\t * \n\t * @param name The name of the property.\n\t * @param object The property-object.\n\t * \n\t * @return object The property-object.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic Serializable writeProperty(String name, Serializable object)\n        throws CmsException {\n        \n        byte[] value=null;\n        \n        try\t{\t\t\t\n            // serialize the object\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(object);\n            oout.close();\n            value=bout.toByteArray();   \n            \n            PreparedStatement statementPropertyUpdate=m_Con.prepareStatement(C_PROPERTY_UPDATE);\n            statementPropertyUpdate.setBytes(1,value);\n            statementPropertyUpdate.setString(2,name);\n\t\t    statementPropertyUpdate.executeUpdate();\n        }\n        catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n        catch (IOException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n\n          return readProperty(name);\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Reads a serializable object from the propertys.\n\t * \n\t * @param name The name of the property.\n\t * \n\t * @return object The property-object.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic Serializable readProperty(String name)\n        throws CmsException {\n        \n        Serializable property=null;\n        byte[] value;\n        ResultSet res = null;\n            \n        // create get the property data from the database\n    \ttry {\n            synchronized (m_statementPropertyRead) {\n                m_statementPropertyRead.setString(1,name);\n           \t    res = m_statementPropertyRead.executeQuery();\n            }\n\t\t\t\n            if(res.next()) {\n\t\t\t\tvalue = res.getBytes(C_PROPERTY_VALUE);\n                // now deserialize the object\n                ByteArrayInputStream bin= new ByteArrayInputStream(value);\n                ObjectInputStream oin = new ObjectInputStream(bin);\n                property=(Serializable)oin.readObject();                \n\t\t\t}\t\n\t\t\t\n\t\t}\n\t\tcatch (SQLException e){\n            throw new CmsException(e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\t\n        catch (IOException e){\n            throw new CmsException(CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n\t    catch (ClassNotFoundException e){\n            throw new CmsException(CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\t\n        return property;\n    }","id":20226,"modified_method":"/**\n\t * Reads a serializable object from the propertys.\n\t * \n\t * @param name The name of the property.\n\t * \n\t * @return object The property-object.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic Serializable readProperty(String name)\n        throws CmsException {\n        \n        Serializable property=null;\n        byte[] value;\n        ResultSet res = null;\n            \n        // create get the property data from the database\n    \ttry {\n          PreparedStatement statementPropertyRead=m_Con.prepareStatement(C_PROPERTY_READ);\n          statementPropertyRead.setString(1,name);\n          res = statementPropertyRead.executeQuery();\n       \t\t\n          if(res.next()) {\n\t\t\t\tvalue = res.getBytes(C_PROPERTY_VALUE);\n                // now deserialize the object\n                ByteArrayInputStream bin= new ByteArrayInputStream(value);\n                ObjectInputStream oin = new ObjectInputStream(bin);\n                property=(Serializable)oin.readObject();                \n\t\t\t}\t\n\t\t}\n\t\tcatch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\t\n        catch (IOException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n\t    catch (ClassNotFoundException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\t\n        return property;\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Constructor, creartes a new CmsAccessProperty object and connects it to the\n     * property database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessPropertyMySql(String driver,String conUrl)\t\n        throws CmsException, ClassNotFoundException {\n        Class.forName(driver);\n        initConnections(conUrl);\n        initStatements();\n    }","id":20227,"modified_method":"/**\n     * Constructor, creartes a new CmsAccessProperty object and connects it to the\n     * property database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessPropertyMySql(String driver,String conUrl)\t\n        throws CmsException, ClassNotFoundException {\n        Class.forName(driver);\n        initConnections(conUrl);\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Adds a user to a group.<BR/>\n     *\n\t * Only the admin can do this.<P/>\n\t * \n\t * @param username The name of the user that is to be added to the group.\n\t * @param groupname The name of the group.\n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\t\n\t public void addUserToGroup(String username, String groupname)\n         throws CmsException {\n         A_CmsUser user;\n         A_CmsGroup group;\n         \n         user=m_accessUser.readUser(username);\n         //check if the user exists\n         if (user != null) {\n            group=m_accessGroup.readGroup(groupname);\n            //check if group exists\n            if (group != null){\n                //add this user to the group\n                m_accessGroup.addUserToGroup(user.getId(),group.getId());\n            } else {\n                throw new CmsException(\"[CmsAccessUserGroup/addUserToGroup(username/groupname)]:Groupname \"+groupname,CmsException.C_NO_GROUP);\n            }\n         } else {\n            throw new CmsException(\"[CmsAccessUserGroup/addUserToGroup(username/groupname)]:Username \"+username,CmsException.C_NO_USER);\n       }\n     }","id":20228,"modified_method":"/**\n\t * Adds a user to a group.<BR/>\n     *\n\t * Only the admin can do this.<P/>\n\t * \n\t * @param username The name of the user that is to be added to the group.\n\t * @param groupname The name of the group.\n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\t\n\t public void addUserToGroup(String username, String groupname)\n         throws CmsException {\n         A_CmsUser user;\n         A_CmsGroup group;\n         \n         user=m_accessUser.readUser(username);\n         //check if the user exists\n         if (user != null) {\n            group=m_accessGroup.readGroup(groupname);\n            //check if group exists\n            if (group != null){\n                //add this user to the group\n                m_accessGroup.addUserToGroup(user.getId(),group.getId());\n            } else {\n                throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+groupname,CmsException.C_NO_GROUP);\n            }\n         } else {\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NO_USER);\n       }\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n\t * Deletes a user from the Cms.\n\t * \n\t * Only a adminstrator can do this.<P/>\n\t * \n\t * @param name The name of the user to be deleted.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public void deleteUser(String username)\n\t\tthrows CmsException {\n         A_CmsUser user =null;\n         int userId=C_UNKNOWN_ID;\n         user=m_accessUser.readUser(username);\n         //check if this user is existing\n         if (user!= null){\n             userId=user.getId();\n             m_accessUser.deleteUser(username);\n             m_accessUserInfo.deleteUserInformation(userId);\n         } else {\n             throw new CmsException(\"[CmsAccessUserGroup/deleteUser(username)]:Username \"+username,CmsException.C_NOT_FOUND);\n         }\n        }","id":20229,"modified_method":"/** \n\t * Deletes a user from the Cms.\n\t * \n\t * Only a adminstrator can do this.<P/>\n\t * \n\t * @param name The name of the user to be deleted.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public void deleteUser(String username)\n\t\tthrows CmsException {\n         A_CmsUser user =null;\n         int userId=C_UNKNOWN_ID;\n         user=m_accessUser.readUser(username);\n         //check if this user is existing\n         if (user!= null){\n             userId=user.getId();\n             m_accessUser.deleteUser(username);\n             m_accessUserInfo.deleteUserInformation(userId);\n         } else {\n             throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NOT_FOUND);\n         }\n        }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Writes a existing user to the CMS.<BR/>\n\t * \n\t * Only the administrator can do this.<P/>\n\t * \n\t * @param user The name of the user to be updated.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t  public void writeUser(A_CmsUser user)\n         throws CmsException {\n            int userId=C_UNKNOWN_ID;\n            //check if this user is existing\n            if (user != null) {\n                // write it to database\n                userId=user.getId();\n                m_accessUserInfo.writeUserInformation(userId,user.getAdditionalInfo());               \n            } else {\n              throw new CmsException(\"[CmsAccessUserGroup/writeUser(user)]:Username \"+user.getName(),CmsException.C_NOT_FOUND);\n            }   \n     }","id":20230,"modified_method":"/**\n\t * Writes a existing user to the CMS.<BR/>\n\t * \n\t * Only the administrator can do this.<P/>\n\t * \n\t * @param user The name of the user to be updated.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t  public void writeUser(A_CmsUser user)\n         throws CmsException {\n            int userId=C_UNKNOWN_ID;\n            //check if this user is existing\n            if (user != null) {\n                // write it to database\n                userId=user.getId();\n                m_accessUserInfo.writeUserInformation(userId,user.getAdditionalInfo());               \n            } else {\n              throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+user.getName(),CmsException.C_NOT_FOUND);\n            }   \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a list of users in a group.<P/>\n\t * \n\t * @param groupname The name of the group to list users from.\n\t * @return Vector of users.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public Vector getUsersOfGroup(String groupname)\n         throws CmsException {\n         A_CmsGroup group=null;\n         A_CmsUser user=null;\n         int userid;\n         Vector users=new Vector();\n         Vector userids=new Vector();\n         \n         group=m_accessGroup.readGroup(groupname);\n         //check if group exists\n         if (group != null) {\n             // get all user id's of the users in the group\n             userids=m_accessGroup.getUsersOfGroup(group.getId());      \n             // get all users that have those id's \n             Enumeration enu=userids.elements();\n             while (enu.hasMoreElements()){\n                 userid=((Integer)enu.nextElement()).intValue();\n                 user=m_accessUser.readUser(userid);\n                  // check if this user really exists\n                 if (user != null) {\n                    users.addElement(user);\n                 }\n             }\n         }   else {\n               throw new CmsException(\"[CmsAccessUserGroup/getUsersOfGroup(groupname)]:Groupname \"+groupname,CmsException.C_NO_GROUP);\n         }\n         return users;\n     }","id":20231,"modified_method":"/**\n\t * Returns a list of users in a group.<P/>\n\t * \n\t * @param groupname The name of the group to list users from.\n\t * @return Vector of users.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n\t public Vector getUsersOfGroup(String groupname)\n         throws CmsException {\n         A_CmsGroup group=null;\n         A_CmsUser user=null;\n         int userid;\n         Vector users=new Vector();\n         Vector userids=new Vector();\n         \n         group=m_accessGroup.readGroup(groupname);\n         //check if group exists\n         if (group != null) {\n             // get all user id's of the users in the group\n             userids=m_accessGroup.getUsersOfGroup(group.getId());      \n             // get all users that have those id's \n             Enumeration enu=userids.elements();\n             while (enu.hasMoreElements()){\n                 userid=((Integer)enu.nextElement()).intValue();\n                 user=m_accessUser.readUser(userid);\n                  // check if this user really exists\n                 if (user != null) {\n                    users.addElement(user);\n                 }\n             }\n         }   else {\n               throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+groupname,CmsException.C_NO_GROUP);\n         }\n         return users;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Removes a user from a group.\n\t * \n\t * Only the admin can do this.<P/>\n\t * \n\t * @param username The name of the user that is to be removed from the group.\n\t * @param groupname The name of the group.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void removeUserFromGroup(String username, String groupname)\n            throws CmsException {\n         A_CmsUser user;\n         A_CmsGroup group;\n         \n         user=readUser(username);\n         //check if the user exists\n         if (user != null) {\n            group=m_accessGroup.readGroup(groupname);\n            //check if group exists\n            if (group != null){       \n                // do not remmove the user from its default group\n                if (user.getDefaultGroupId() != group.getId()) {\n                    //remove this user from the group\n                    m_accessGroup.removeUserFromGroup(user.getId(),group.getId());\n                } else {\n                    throw new CmsException(\"[CmsAccessUserGroup/removeUserFromGroup(username,groupname)]:\",CmsException.C_NO_DEFAULT_GROUP);\n                }\n            } else {\n                throw new CmsException(\"[CmsAccessUserGroup/removeUserFromGroup(username,groupname)]:Groupname \"+groupname,CmsException.C_NO_GROUP);\n            }\n         } else {\n            throw new CmsException(\"[CmsAccessUserGroup/removeUserFromGroup(username,groupname)]:Username \"+username,CmsException.C_NO_USER);\n       }\n     }","id":20232,"modified_method":"/**\n\t * Removes a user from a group.\n\t * \n\t * Only the admin can do this.<P/>\n\t * \n\t * @param username The name of the user that is to be removed from the group.\n\t * @param groupname The name of the group.\n\t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\t\n\t public void removeUserFromGroup(String username, String groupname)\n            throws CmsException {\n         A_CmsUser user;\n         A_CmsGroup group;\n         \n         user=readUser(username);\n         //check if the user exists\n         if (user != null) {\n            group=m_accessGroup.readGroup(groupname);\n            //check if group exists\n            if (group != null){       \n                // do not remmove the user from its default group\n                if (user.getDefaultGroupId() != group.getId()) {\n                    //remove this user from the group\n                    m_accessGroup.removeUserFromGroup(user.getId(),group.getId());\n                } else {\n                    throw new CmsException(\"[\"+this.getClass().getName()+\"]\",CmsException.C_NO_DEFAULT_GROUP);\n                }\n            } else {\n                throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+groupname,CmsException.C_NO_GROUP);\n            }\n         } else {\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NO_USER);\n       }\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Checks if a user is member of a group.<P/>\n\t *  \n\t * @param nameuser The name of the user to check.\n\t * @param groupname The name of the group to check.\n\t * @return True or False\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public boolean userInGroup(String username, String groupname)\n         throws CmsException {\n         boolean userInGroup=false;\n         A_CmsUser user=null;\n         A_CmsGroup group=null;\n         \n         user=m_accessUser.readUser(username);\n         //check if the user exists\n         if (user != null) {\n            group=m_accessGroup.readGroup(groupname);\n            //check if group exists\n            if (group != null){\n                //add this user to the group\n                userInGroup=m_accessGroup.userInGroup(user.getId(),group.getId());\n            } else {\n                throw new CmsException(\"[CmsAccessUserGroup/userInGroup(username,groupname)]:Groupname \"+groupname,CmsException.C_NO_GROUP);\n            }\n         } else {\n            throw new CmsException(\"[CmsAccessUserGroup/userInGroup(username,groupname)]:Userame \"+username,CmsException.C_NO_USER);\n       }\n         \n         return userInGroup;\n     }","id":20233,"modified_method":"/**\n\t * Checks if a user is member of a group.<P/>\n\t *  \n\t * @param nameuser The name of the user to check.\n\t * @param groupname The name of the group to check.\n\t * @return True or False\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public boolean userInGroup(String username, String groupname)\n         throws CmsException {\n         boolean userInGroup=false;\n         A_CmsUser user=null;\n         A_CmsGroup group=null;\n         \n         user=m_accessUser.readUser(username);\n         //check if the user exists\n         if (user != null) {\n            group=m_accessGroup.readGroup(groupname);\n            //check if group exists\n            if (group != null){\n                //add this user to the group\n                userInGroup=m_accessGroup.userInGroup(user.getId(),group.getId());\n            } else {\n                throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+groupname,CmsException.C_NO_GROUP);\n            }\n         } else {\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NO_USER);\n       }\n         \n         return userInGroup;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a user object if the password for the user is correct.<P/>\n\t * \n\t * @param username The username of the user that is to be read.\n\t * @param password The password of the user that is to be read.\n\t * @return User\n\t * \n\t * @exception CmsException  Throws CmsException if operation was not succesful\n\t */\t\t\n\t public A_CmsUser readUser(String username, String password)\n         throws CmsException {\n         \n         A_CmsUser user=null;\n         Hashtable infos=null;\n         A_CmsGroup defaultGroup=null;\n         \n         user=m_accessUser.readUser(username,password);\n         if (user!= null){\n             infos=m_accessUserInfo.readUserInformation(user.getId());\n             user.setAdditionalInfo(infos);\n             defaultGroup=m_accessGroup.readGroup(user.getDefaultGroupId());\n             user.setDefaultGroup(defaultGroup);\n         } else {\n             throw new CmsException(\"[CmsAccessUserGroup/readUser(username,password)]:Username \"+username,CmsException.C_NO_ACCESS);\n         }\n         return user;\n     }","id":20234,"modified_method":"/**\n\t * Returns a user object if the password for the user is correct.<P/>\n\t * \n\t * @param username The username of the user that is to be read.\n\t * @param password The password of the user that is to be read.\n\t * @return User\n\t * \n\t * @exception CmsException  Throws CmsException if operation was not succesful\n\t */\t\t\n\t public A_CmsUser readUser(String username, String password)\n         throws CmsException {\n         \n         A_CmsUser user=null;\n         Hashtable infos=null;\n         A_CmsGroup defaultGroup=null;\n         \n         user=m_accessUser.readUser(username,password);\n         if (user!= null){\n             infos=m_accessUserInfo.readUserInformation(user.getId());\n             user.setAdditionalInfo(infos);\n             defaultGroup=m_accessGroup.readGroup(user.getDefaultGroupId());\n             user.setDefaultGroup(defaultGroup);\n         } else {\n             throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NO_ACCESS);\n         }\n         return user;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param username The name of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public A_CmsUser readUser(String username)\n         throws CmsException {\n         A_CmsUser user=null;\n         Hashtable infos=null;\n         A_CmsGroup defaultGroup=null;\n         user=m_accessUser.readUser(username);\n         if (user!= null){\n             infos=m_accessUserInfo.readUserInformation(user.getId()); \n             user.setAdditionalInfo(infos);\n             defaultGroup=m_accessGroup.readGroup(user.getDefaultGroupId());\n             user.setDefaultGroup(defaultGroup);\n         } else {\n             throw new CmsException(\"[CmsAccessUserGroup/readUser(username)]: Username \"+username,CmsException.C_NOT_FOUND);\n         }\n         return user;\n     }","id":20235,"modified_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param username The name of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public A_CmsUser readUser(String username)\n         throws CmsException {\n         A_CmsUser user=null;\n         Hashtable infos=null;\n         A_CmsGroup defaultGroup=null;\n         user=m_accessUser.readUser(username);\n         if (user!= null){\n             infos=m_accessUserInfo.readUserInformation(user.getId()); \n             user.setAdditionalInfo(infos);\n             defaultGroup=m_accessGroup.readGroup(user.getDefaultGroupId());\n             user.setDefaultGroup(defaultGroup);\n         } else {\n             throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NOT_FOUND);\n         }\n         return user;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param userid The id of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\tpublic A_CmsUser readUser(int id)\n        throws CmsException {\n         A_CmsUser user=null;\n         Hashtable infos=null;\n         A_CmsGroup defaultGroup=null;\n         user=m_accessUser.readUser(id);\n         if (user!= null){\n             infos=m_accessUserInfo.readUserInformation(user.getId()); \n             user.setAdditionalInfo(infos);\n             defaultGroup=m_accessGroup.readGroup(user.getDefaultGroupId());\n             user.setDefaultGroup(defaultGroup);\n         } else {\n             throw new CmsException(\"[CmsAccessUserGroup/readUser(id)]:UserId \"+id,CmsException.C_NOT_FOUND);\n         }\n         return user;\n    }","id":20236,"modified_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param userid The id of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\tpublic A_CmsUser readUser(int id)\n        throws CmsException {\n         A_CmsUser user=null;\n         Hashtable infos=null;\n         A_CmsGroup defaultGroup=null;\n         user=m_accessUser.readUser(id);\n         if (user!= null){\n             infos=m_accessUserInfo.readUserInformation(user.getId()); \n             user.setAdditionalInfo(infos);\n             defaultGroup=m_accessGroup.readGroup(user.getDefaultGroupId());\n             user.setDefaultGroup(defaultGroup);\n         } else {\n             throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+id,CmsException.C_NOT_FOUND);\n         }\n         return user;\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a list of groups of a user.<P/>\n\t * \n\t * @param username The name of the user.\n\t * @return Vector of groups\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public Vector getGroupsOfUser(String username)\n         throws CmsException {\n         Vector groups=new Vector();\n         A_CmsUser user=null;\n         \n         user=m_accessUser.readUser(username);\n         if (user != null) {\n            groups=m_accessGroup.getGroupsOfUser(user.getId());\n            } else {\n            throw new CmsException(\"[CmsAccessUserGroup/getGroupsOfUser(username)]:Username \"+username,CmsException.C_NO_USER);\n       }\n         return groups;\n     }","id":20237,"modified_method":"/**\n\t * Returns a list of groups of a user.<P/>\n\t * \n\t * @param username The name of the user.\n\t * @return Vector of groups\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public Vector getGroupsOfUser(String username)\n         throws CmsException {\n         Vector groups=new Vector();\n         A_CmsUser user=null;\n         \n         user=m_accessUser.readUser(username);\n         if (user != null) {\n            groups=m_accessGroup.getGroupsOfUser(user.getId());\n            } else {\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NO_USER);\n       }\n         return groups;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Creates a new hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * @param id The id of the user.\n\t * @param object The hashtable including the user information\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic void addUserInformation(int id, Hashtable object)\n        throws  CmsException {\n        byte[] value=null;\n        try\t{\t\t\t\n            // serialize the hashtable\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(object);\n            oout.close();\n            value=bout.toByteArray();\n            // write data to database     \n            synchronized(m_statementUserinfoWrite) {\n                m_statementUserinfoWrite.setInt(1,id);\n                m_statementUserinfoWrite.setBytes(2,value);\n                m_statementUserinfoWrite.executeUpdate();    \n            }\n        \n         }\n        catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/addUserInformation(id,object)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n        catch (IOException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/addUserInformation(id,object)]:\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n     \n    }","id":20238,"modified_method":"/**\n\t * Creates a new hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * @param id The id of the user.\n\t * @param object The hashtable including the user information\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic void addUserInformation(int id, Hashtable object)\n        throws  CmsException {\n        byte[] value=null;\n        try\t{\t\t\t\n            // serialize the hashtable\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(object);\n            oout.close();\n            value=bout.toByteArray();\n            // write data to database     \n            PreparedStatement statementUserinfoWrite=m_Con.prepareStatement(C_USERINFO_WRITE);\n            statementUserinfoWrite.setInt(1,id);\n            statementUserinfoWrite.setBytes(2,value);\n            statementUserinfoWrite.executeUpdate();          \n         }\n        catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n        catch (IOException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/addUserInformation(id,object)]:\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n     \n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Constructor, creartes a new CmsAccessUserInfoMySql object and connects it to the\n     * user information database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessUserInfoMySql(String driver,String conUrl)\t\n        throws CmsException, ClassNotFoundException {\n        Class.forName(driver);\n        initConnections(conUrl);\n        initStatements();\n    }","id":20239,"modified_method":"/**\n     * Constructor, creartes a new CmsAccessUserInfoMySql object and connects it to the\n     * user information database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessUserInfoMySql(String driver,String conUrl)\t\n        throws CmsException, ClassNotFoundException {\n        Class.forName(driver);\n        initConnections(conUrl);\n   }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Reads a hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * The hashtable is read from the database and deserialized.\n\t * \n\t * @param id The id of the user.\n\t * \n\t * @return object The additional user information.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic Hashtable readUserInformation(int id)\n        throws CmsException {\n        \n        Hashtable info=null;\n        byte[] value;\n        ResultSet res = null;\n       \n        // get the additional user information data from the database\n    \ttry {\n            /*synchronized(m_statementUserinfoRead) {\n\t\t        m_statementUserinfoRead.setInt(1,id);\n           \t    res = m_statementUserinfoRead.executeQuery();\n            }*/\n            Statement s = m_Con.createStatement();\t\t\t\n\t\t\ts.setEscapeProcessing(false);\t\n         \n            res = s.executeQuery(\"SELECT * FROM USERS_ADDITIONALINFO WHERE USER_ID = \"+id);\n\t        if(res.next()) {\n                value = res.getBytes(C_USER_INFO);\n                 // now deserialize the object\n                ByteArrayInputStream bin= new ByteArrayInputStream(value);\n                ObjectInputStream oin = new ObjectInputStream(bin);\n                info=(Hashtable)oin.readObject();                \n\t\t     } else {\n                throw new CmsException(\"[CmsAccessUserInfoMySql/readUserInformation(id)]: User ID:\"+id,CmsException.C_NO_USER);\n             }\n\t\t\t\n\t\t}\n\t\tcatch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/readUserInformation(id)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\t\n        catch (IOException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/readUserInformation(id)]:\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n\t    catch (ClassNotFoundException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql]:\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\t\n  \n        return info;\n    }","id":20240,"modified_method":"/**\n\t * Reads a hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * The hashtable is read from the database and deserialized.\n\t * \n\t * @param id The id of the user.\n\t * \n\t * @return object The additional user information.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\tpublic Hashtable readUserInformation(int id)\n        throws CmsException {\n        \n        Hashtable info=null;\n        byte[] value;\n        ResultSet res = null;\n       \n        // get the additional user information data from the database\n    \ttry {\n            PreparedStatement statementUserinfoRead=m_Con.prepareStatement(C_USERINFO_READ);\n\t\t    statementUserinfoRead.setInt(1,id);\n       \t    res = statementUserinfoRead.executeQuery();\n \n            if(res.next()) {\n                value = res.getBytes(C_USER_INFO);\n                 // now deserialize the object\n                ByteArrayInputStream bin= new ByteArrayInputStream(value);\n                ObjectInputStream oin = new ObjectInputStream(bin);\n                info=(Hashtable)oin.readObject();                \n\t\t     } else {\n                throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+id,CmsException.C_NO_USER);\n             }\n\t\t\t\n\t\t}\n\t\tcatch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\t\n        catch (IOException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n\t    catch (ClassNotFoundException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\t\n        return info;\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Deletes a hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * @param id The id of the user.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\t public void deleteUserInformation(int id)\n         throws CmsException {\n               \n\t\ttry\t{\t\t\t\n            synchronized(m_statementUserinfoDelete) {\n                m_statementUserinfoDelete.setInt(1,id);\n          \t    m_statementUserinfoDelete.executeUpdate();  \n            }\n\t\t}catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/deleteUser(id)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         \n     }","id":20241,"modified_method":"/**\n\t * Deletes a hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * @param id The id of the user.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\t public void deleteUserInformation(int id)\n         throws CmsException {\n               \n\t\ttry\t{\t\t\t\n          PreparedStatement statementUserinfoDelete=m_Con.prepareStatement(C_USERINFO_DELETE);\n          statementUserinfoDelete.setInt(1,id);\n          statementUserinfoDelete.executeUpdate();  \n\t\t}catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Writes a hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * The hashtable is serialized and written into the databse.\n\t * \n\t * @param id The id of the user.\n\t * @param infos The additional user information.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\t public void writeUserInformation(int id , Hashtable infos)\n         throws CmsException {\n         \n        byte[] value=null;\n        try\t{\t\t\t\n            // serialize the hashtable\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(infos);\n            oout.close();\n            value=bout.toByteArray();\n            \n            synchronized (m_statementUserinfoUpdate) {\n                m_statementUserinfoUpdate.setBytes(1,value);\n                m_statementUserinfoUpdate.setInt(2,id);\n      \t\t    m_statementUserinfoUpdate.executeUpdate();\n            }\n     \n         }\n        catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/writeUserInformation(id,infos)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n        catch (IOException e){\n            throw new CmsException(\"[CmsAccessUserInfoMySql/writeUserInformation(id,infos)]:\",CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}\n   \n     }","id":20242,"modified_method":"/**\n\t * Writes a hashtable containing additional user information to the user \n\t * information database.\n\t * \n\t * The hashtable is serialized and written into the databse.\n\t * \n\t * @param id The id of the user.\n\t * @param infos The additional user information.\n\t * \n\t * @exception CmsException Throws CmsException if something goes wrong.\n\t */\n\t public void writeUserInformation(int id , Hashtable infos)\n         throws CmsException {\n         \n        byte[] value=null;\n        try\t{\t\t\t\n            // serialize the hashtable\n            ByteArrayOutputStream bout= new ByteArrayOutputStream();            \n            ObjectOutputStream oout=new ObjectOutputStream(bout);\n            oout.writeObject(infos);\n            oout.close();\n            value=bout.toByteArray();\n  \n            PreparedStatement statementUserinfoUpdate=m_Con.prepareStatement(C_USERINFO_UPDATE);\n            statementUserinfoUpdate.setBytes(1,value);\n            statementUserinfoUpdate.setInt(2,id);\n      \t\tstatementUserinfoUpdate.executeUpdate();\n         }\n        catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n        catch (IOException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\",CmsException. C_SERIALIZATION, e);\t\t\t\n\t\t}   \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns all users<P/>\n\t * \n\t * @return users A Vector of all existing users.\n \t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n     public Vector getUsers()\n     throws CmsException {\n         Vector users=new Vector();\n         A_CmsUser user=null;\n         ResultSet res =null;\n         \n         try {\n            //  get all users\n            synchronized(m_statementUserGetAll) {\n                res = m_statementUserGetAll.executeQuery();\n            }\n            // create new Cms group objects\n\t\t    while ( res.next() ) {\n                    user=new CmsUser(res.getInt(C_USER_ID),\n                                     res.getString(C_USER_NAME),\n                                     res.getString(C_USER_DESCRIPTION));\n                    users.addElement(user);\n             }\n             \n       \n         } catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserMySql/getUsers()]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n         return users;\n     }","id":20243,"modified_method":"/**\n\t * Returns all users<P/>\n\t * \n\t * @return users A Vector of all existing users.\n \t * @exception CmsException Throws CmsException if operation was not succesful.\n\t */\n     public Vector getUsers()\n     throws CmsException {\n         Vector users=new Vector();\n         A_CmsUser user=null;\n         ResultSet res =null;\n         \n         try {\n            //  get all users\n                PreparedStatement statementUserGetAll=m_Con.prepareStatement(C_USER_GETALL);\n                res = statementUserGetAll.executeQuery();\n            // create new Cms group objects\n\t\t    while ( res.next() ) {\n                    user=new CmsUser(res.getInt(C_USER_ID),\n                                     res.getString(C_USER_NAME),\n                                     res.getString(C_USER_DESCRIPTION));\n                    users.addElement(user);\n             }\n             \n       \n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\n         }\n         return users;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a user object if the password for the user is correct.<P/>\n\t * \n\t * @param username The username of the user that is to be read.\n\t * @param password The password of the user that is to be read.\n\t * @return User\n\t * \n\t * @exception CmsException  Throws CmsException if operation was not succesful\n\t */\t\t\n\t public A_CmsUser readUser(String username, String password)\n         throws CmsException {\n         \n         A_CmsUser user=null;\n         ResultSet res=null;\n   \n         try{\n             // read the user from the database\n            /* synchronized (m_statementUserReadPwd) {\n                m_statementUserReadPwd.setString(1,username);\n                m_statementUserReadPwd.setString(2,password);\n                res = m_statementUserReadPwd.executeQuery();\n             }*/\n            Statement s = m_Con.createStatement();\t\t\t\n\t\t\ts.setEscapeProcessing(false);\t\n\t\t\t\n            res = s.executeQuery(\"SELECT * FROM USERS WHERE USER_NAME = '\"+username+\n                                           \"' AND USER_PASSWORD = PASSWORD('\"+password+\"')\");\n             \n             // create new Cms user object\n\t\t\t if(res.next()) {\n                user=new CmsUser(res.getInt(C_USER_ID),\n                                 res.getString(C_USER_NAME),\n                                 res.getString(C_USER_DESCRIPTION));                                                        \n             } else {\n               throw new CmsException(\"[CmsAccessUserMySql/readUser(username/password)]:\"+username,CmsException.C_NO_ACCESS);  \n             }\n       \n         } catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserMySql/readUser(username/password)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return user;\n     }","id":20244,"modified_method":"/**\n\t * Returns a user object if the password for the user is correct.<P/>\n\t * \n\t * @param username The username of the user that is to be read.\n\t * @param password The password of the user that is to be read.\n\t * @return User\n\t * \n\t * @exception CmsException  Throws CmsException if operation was not succesful\n\t */\t\t\n\t public A_CmsUser readUser(String username, String password)\n         throws CmsException {\n         \n         A_CmsUser user=null;\n         ResultSet res=null;\n   \n         try{\n             PreparedStatement statementUserReadPwd=m_Con.prepareStatement(C_USER_READPWD);\n             statementUserReadPwd.setString(1,username);\n             statementUserReadPwd.setString(2,password);\n             res = statementUserReadPwd.executeQuery();\n              // create new Cms user object\n\t\t\t if(res.next()) {\n                user=new CmsUser(res.getInt(C_USER_ID),\n                                 res.getString(C_USER_NAME),\n                                 res.getString(C_USER_DESCRIPTION));                                                        \n             } else {\n               throw new CmsException(\"\"+this.getClass().getName()+\"]\"+username,CmsException.C_NO_ACCESS);  \n             }\n       \n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return user;\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n\t * Adds a user to the Cms.\n\t * \n\t * Only a adminstrator can add users to the cms.<P/>\n\t * \n\t * @param name The new name for the user.\n\t * @param password The new password for the user.\n\t * @param description The description for the user.\n\t * \n\t * @return user The added user will be returned.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public A_CmsUser createUser(String name, String password, \n\t\t\t\t\t   String description) \t\t\t\t\n        throws CmsException {\n\n                        \n         try {     \n            // write new user to the database\n             synchronized (m_statementUserWrite) {\n                m_statementUserWrite.setInt(1,0);\n                m_statementUserWrite.setString(2,name);\n                m_statementUserWrite.setString(3,password);\n                m_statementUserWrite.setString(4,description);\n                m_statementUserWrite.executeUpdate();\n             }\n          \n            \n         } catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserMySql/createUser(name,password,description)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readUser(name);\n     }","id":20245,"modified_method":"/** \n\t * Adds a user to the Cms.\n\t * \n\t * Only a adminstrator can add users to the cms.<P/>\n\t * \n\t * @param name The new name for the user.\n\t * @param password The new password for the user.\n\t * @param description The description for the user.\n\t * \n\t * @return user The added user will be returned.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public A_CmsUser createUser(String name, String password, \n\t\t\t\t\t   String description) \t\t\t\t\n        throws CmsException {\n\n                        \n         try {     \n            // write new user to the database\n                PreparedStatement statementUserWrite=m_Con.prepareStatement(C_USER_WRITE);\n                statementUserWrite.setInt(1,0);\n                statementUserWrite.setString(2,name);\n                statementUserWrite.setString(3,password);\n                statementUserWrite.setString(4,description);\n                statementUserWrite.executeUpdate();\n           \n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n         }\n         return readUser(name);\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param username The name of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public A_CmsUser readUser(String username)\n         throws CmsException {\n      \n         A_CmsUser user=null;\n         ResultSet res = null;\n\n         try{\n             // read the user from the database\n            /* synchronized (m_statementUserRead) {\n                m_statementUserRead.setString(1,username);\n                res = m_statementUserRead.executeQuery();\n             }*/\n            Statement s = m_Con.createStatement();\t\t\t\n\t\t\ts.setEscapeProcessing(false);\t\n\t\t\t\n            res = s.executeQuery(\"SELECT * FROM USERS WHERE USER_NAME = '\"+username+\"'\");\n             // create new Cms user object\n\t\t\t if(res.next()) {\n                user=new CmsUser(res.getInt(C_USER_ID),\n                                 res.getString(C_USER_NAME),\n                                 res.getString(C_USER_DESCRIPTION));                                                        \n             } else {\n                  throw new CmsException(\"[CmsAccessUserMySql/readUser(username)]:\"+username,CmsException.C_NO_USER);                  \t\n             }\n       \n         } catch (SQLException e){\n             throw new CmsException(\"[CmsAccessUserMySql/readUser(username)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return user;\n  \n     }","id":20246,"modified_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param username The name of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public A_CmsUser readUser(String username)\n         throws CmsException {\n      \n         A_CmsUser user=null;\n         ResultSet res = null;\n\n         try{\n            PreparedStatement statementUserRead=m_Con.prepareStatement(C_USER_READ);\n            statementUserRead.setString(1,username);\n            res = statementUserRead.executeQuery();\n   \n             // create new Cms user object\n\t\t\t if(res.next()) {\n                user=new CmsUser(res.getInt(C_USER_ID),\n                                 res.getString(C_USER_NAME),\n                                 res.getString(C_USER_DESCRIPTION));                                                        \n             } else {\n                  throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+username,CmsException.C_NO_USER);                  \t\n             }\n       \n         } catch (SQLException e){\n             throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return user;\n  \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n\t * Sets the password for a user.\n\t * \n\t * Only a adminstrator or the curretuser can do this.<P/>\n\t * \n\t * @param username The name of the user.\n\t * @param newPassword The new password.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public void setPassword(String username, String newPassword)\n         throws CmsException {\n          try {     \n              synchronized(m_statementSetPwd) {\n                // write new password\n                m_statementSetPwd.setString(1,newPassword);    \n                m_statementSetPwd.setString(2,username);\n                m_statementSetPwd.executeUpdate();\n              }\n            \n         } catch (SQLException e){\n             throw new CmsException(\"[CmsAccessUserMySql/setPassword(username,password)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n          }\n     }","id":20247,"modified_method":"/** \n\t * Sets the password for a user.\n\t * \n\t * Only a adminstrator or the curretuser can do this.<P/>\n\t * \n\t * @param username The name of the user.\n\t * @param newPassword The new password.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public void setPassword(String username, String newPassword)\n         throws CmsException {\n          try { \n                // write new password\n                PreparedStatement statementSetPwd=m_Con.prepareStatement(C_USER_SETPWD);\n                statementSetPwd.setString(1,newPassword);    \n                statementSetPwd.setString(2,username);\n                statementSetPwd.executeUpdate();     \n         } catch (SQLException e){\n             throw new CmsException(\"[\"+this.getClass().getName()+\"]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n          }\n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * Constructor, creartes a new CmsAccessUserMySql object and connects it to the\n     * user information database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessUserMySql(String driver,String conUrl)\t\n        throws CmsException, ClassNotFoundException {\n        Class.forName(driver);\n        initConnections(conUrl);\n        initStatements();\n    }","id":20248,"modified_method":"/**\n     * Constructor, creartes a new CmsAccessUserMySql object and connects it to the\n     * user information database.\n     *\n     * @param driver Name of the mySQL JDBC driver.\n     * @param conUrl The connection string to the database.\n     * \n     * @exception CmsException Throws CmsException if connection fails.\n     * \n     */\n    public CmsAccessUserMySql(String driver,String conUrl)\t\n        throws CmsException, ClassNotFoundException {\n        Class.forName(driver);\n        initConnections(conUrl);\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param userid The id of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public A_CmsUser readUser(int userid)\n         throws CmsException {\n      \n         A_CmsUser user=null;\n         ResultSet res = null;\n         \n         try{\n             // read the user from the database\n            /* synchronized(m_statementUserReadId) {\n                m_statementUserReadId.setInt(1,userid);\n                res = m_statementUserReadId.executeQuery();\n             }*/\n            Statement s = m_Con.createStatement();\t\t\t\n\t\t\ts.setEscapeProcessing(false);\t\n         \n            res = s.executeQuery(   \"SELECT * FROM USERS WHERE USER_ID = \"+userid);\n             \n             // create new Cms user object\n\t\t\t if(res.next()) {\n                user=new CmsUser(res.getInt(C_USER_ID),\n                                 res.getString(C_USER_NAME),\n                                 res.getString(C_USER_DESCRIPTION));                                                        \n             } else {\n                 throw new CmsException(\"[CmsAccessUserMySql/readUser(id)]: User ID:\"+userid,CmsException.C_NO_USER);\n             }\n             \n       \n         } catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserMySql/readUser(id)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return user;\n  \n     }","id":20249,"modified_method":"/**\n\t * Returns a user object.<P/>\n\t * \n\t * @param userid The id of the user that is to be read.\n\t * @return User\n\t * @exception CmsException Throws CmsException if operation was not succesful\n\t */\n\t public A_CmsUser readUser(int userid)\n         throws CmsException {\n      \n         A_CmsUser user=null;\n         ResultSet res = null;\n         \n         try{\n            PreparedStatement statementUserReadId=m_Con.prepareStatement(C_USER_READID);\n            statementUserReadId.setInt(1,userid);\n            res = statementUserReadId.executeQuery();\n             // create new Cms user object\n\t\t\t if(res.next()) {\n                user=new CmsUser(res.getInt(C_USER_ID),\n                                 res.getString(C_USER_NAME),\n                                 res.getString(C_USER_DESCRIPTION));                                                        \n             } else {\n                 throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+userid,CmsException.C_NO_USER);\n             }\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n         return user;\n  \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/** \n\t * Deletes a user from the Cms.\n\t * \n\t * Only a adminstrator can do this.<P/>\n\t * \n\t * @param name The name of the user to be deleted.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public void deleteUser(String username)\n         throws CmsException {\n          try {\n              synchronized(m_statementUserDelete) {\n                m_statementUserDelete.setString(1,username);\n                m_statementUserDelete.executeUpdate();\n              }\n         } catch (SQLException e){\n            throw new CmsException(\"[CmsAccessUserMySql/deleteUser(username)]:\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n \n     }","id":20250,"modified_method":"/** \n\t * Deletes a user from the Cms.\n\t * \n\t * Only a adminstrator can do this.<P/>\n\t * \n\t * @param name The name of the user to be deleted.\n\t * \n\t * @exception CmsException Throws CmsException if operation was not succesfull.\n\t */\n\t public void deleteUser(String username)\n         throws CmsException {\n          try {\n               PreparedStatement statementUserDelete=m_Con.prepareStatement(C_USER_DELETE);\n               statementUserDelete.setString(1,username);\n               statementUserDelete.executeUpdate();\n         } catch (SQLException e){\n            throw new CmsException(\"[\"+this.getClass().getName()+\"]\"+e.getMessage(),CmsException.C_SQL_ERROR, e);\t\t\t\n\t\t}\n \n     }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n     * This method gets the requested document from the OpenCms and returns it to the \n     * calling module.\n     * \n     * @param cms The CmsObject containing all information about the requested document\n     * and the requesting user.\n     * @return CmsFile object.\n     */\n     CmsFile initResource(CmsObject cms) \n        throws CmsException, IOException {\n          \n        CmsFile file=null;\n        try {\n            //read the requested file\n            file =cms.readFile(cms.getRequestContext().getUri());\n        } catch (CmsException e ) {\n           /* if (e.getType() == CmsException.C_NOT_FOUND) {\n                \n                // there was no file found with this name. \n                // it is possible that the requested resource was a folder, so try to access an\n                // index.html there\n                String resourceName=cms.getRequestContext().getUri();\n                // test if the requested file is already the index.html\n                if (!resourceName.endsWith(C_INDEX)) {\n                    // check if the requested file ends with an \"/\"\n                    if (!resourceName.endsWith(\"/\")) {\n                       resourceName+=\"/\";\n                     }\n                     //redirect the request to the index.html\n                    resourceName+=C_INDEX;\n                    cms.getRequestContext().getResponse().sendCmsRedirect(resourceName);\n                } else {\n                    // throw the CmsException.\n                    throw e;\n                }\n           } else {\n               // throw the CmsException.\n              throw e;\n          }*/\n        }\n        if (file != null) {\n            // test if this file is only available for internal access operations\n            if ((file.getAccessFlags() & C_ACCESS_INTERNAL_READ) >0) {\n            throw new CmsException (CmsException.C_EXTXT[CmsException.C_INTERNAL_FILE]+cms.getRequestContext().getUri(),\n                                    CmsException.C_INTERNAL_FILE);\n            }\n        }\n            \n        return file;\n    }","id":20251,"modified_method":"/**\n     * This method gets the requested document from the OpenCms and returns it to the \n     * calling module.\n     * \n     * @param cms The CmsObject containing all information about the requested document\n     * and the requesting user.\n     * @return CmsFile object.\n     */\n     CmsFile initResource(CmsObject cms) \n        throws CmsException, IOException {\n          \n        CmsFile file=null;\n        try {\n            //read the requested file\n            file =cms.readFile(cms.getRequestContext().getUri());\n        } catch (CmsException e ) {\n            if (e.getType() == CmsException.C_NOT_FOUND) {\n                \n                // there was no file found with this name. \n                // it is possible that the requested resource was a folder, so try to access an\n                // index.html there\n                String resourceName=cms.getRequestContext().getUri();\n                // test if the requested file is already the index.html\n                if (!resourceName.endsWith(C_INDEX)) {\n                    // check if the requested file ends with an \"/\"\n                    if (!resourceName.endsWith(\"/\")) {\n                       resourceName+=\"/\";\n                     }\n                     //redirect the request to the index.html\n                    resourceName+=C_INDEX;\n                    cms.getRequestContext().getResponse().sendCmsRedirect(resourceName);\n                } else {\n                    // throw the CmsException.\n                    throw e;\n                }\n           } else {\n               // throw the CmsException.\n              throw e;\n          }\n        }\n        if (file != null) {\n            // test if this file is only available for internal access operations\n            if ((file.getAccessFlags() & C_ACCESS_INTERNAL_READ) >0) {\n            throw new CmsException (CmsException.C_EXTXT[CmsException.C_INTERNAL_FILE]+cms.getRequestContext().getUri(),\n                                    CmsException.C_INTERNAL_FILE);\n            }\n        }\n            \n        return file;\n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"/**\n\t * Method invoked on each HTML GET request.\n\t * <p>\n\t * (Overloaded Servlet API method, requesting a document).\n\t * Reads the URI received from the client and invokes the appropiate action.\n\t * \n\t * @param req   The clints request.\n\t * @param res   The servlets response.\n\t * @exception ServletException Thrown if request fails.\n\t * @exception IOException Thrown if user autherization fails.\n\t */\n\tpublic void doGet(HttpServletRequest req, HttpServletResponse res) \n\t\tthrows ServletException, IOException {\t\n        \n        CmsRequestHttpServlet cmsReq= new CmsRequestHttpServlet(req);\n        CmsResponseHttpServlet cmsRes= new CmsResponseHttpServlet(req,res);\n       \n       try {\n            CmsObject cms=initUser(cmsReq,cmsRes);\n            CmsFile file=m_opencms.initResource(cms); \n            m_opencms.setResponse(cms,file);\n            m_opencms.showResource(cms,file);\n            updateUser(cms,cmsReq,cmsRes);\n        } catch (CmsException e) {\n            errorHandling(req,res,e);\n        } \n    }","id":20252,"modified_method":"/**\n\t * Method invoked on each HTML GET request.\n\t * <p>\n\t * (Overloaded Servlet API method, requesting a document).\n\t * Reads the URI received from the client and invokes the appropiate action.\n\t * \n\t * @param req   The clints request.\n\t * @param res   The servlets response.\n\t * @exception ServletException Thrown if request fails.\n\t * @exception IOException Thrown if user autherization fails.\n\t */\n\tpublic void doGet(HttpServletRequest req, HttpServletResponse res) \n\t\tthrows ServletException, IOException {\t\n        \n        CmsRequestHttpServlet cmsReq= new CmsRequestHttpServlet(req);\n        CmsResponseHttpServlet cmsRes= new CmsResponseHttpServlet(req,res);\n       \n       try {\n            CmsObject cms=initUser(cmsReq,cmsRes);\n            System.err.println(cms.getRequestContext().currentUser().getName());\n            CmsFile file=m_opencms.initResource(cms); \n            System.err.println(file.toString());\n            m_opencms.setResponse(cms,file);\n            m_opencms.showResource(cms,file);\n            updateUser(cms,cmsReq,cmsRes);\n        } catch (CmsException e) {\n            errorHandling(req,res,e);\n        } \n    }","commit_id":"b7b1a5c986781147b3492b2df88a08df34c13753","url":"https://github.com/alkacon/opencms-core"},{"original_method":"private ModelAndView doAddParameter(HttpServletRequest request, HttpServletResponse response, TreeCommand treeCmd, BindException errors) throws Exception {\n        System.err.println(String.format(\"current node = %s, data path = %s\", treeCmd.getCurrentNode(), treeCmd.getDataPath()));\n        ForeignSource fs = m_foreignSourceService.addParameter(treeCmd.getForeignSourceName(), treeCmd.getDataPath());\n        treeCmd.setFormData(fs);\n//        treeCmd.setCurrentNode(treeCmd.getCurrentNode()+\".parameter\")\n        return showForm(request, response, errors);\n    }","id":20253,"modified_method":"private ModelAndView doAddParameter(HttpServletRequest request, HttpServletResponse response, TreeCommand treeCmd, BindException errors) throws Exception {\n        ForeignSource fs = m_foreignSourceService.addParameter(treeCmd.getForeignSourceName(), treeCmd.getDataPath());\n        treeCmd.setFormData(fs);\n        return showForm(request, response, errors);\n    }","commit_id":"9964f5ae8a67996d58ebcf049af66300f1be36a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void updateDateStamp() {\n        try {\n            m_dateStamp = DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar());\n        } catch (DatatypeConfigurationException e) {\n            log().warn(\"unable to update datestamp\", e);\n        }\n    }","id":20254,"modified_method":"/**\n     * Update the date stamp to the current date and time\n     */\n    public void updateDateStamp() {\n        try {\n            m_dateStamp = DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar());\n        } catch (DatatypeConfigurationException e) {\n            log().warn(\"unable to update datestamp\", e);\n        }\n    }","commit_id":"9964f5ae8a67996d58ebcf049af66300f1be36a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected Map referenceData(HttpServletRequest request) throws Exception {\n        Map<String, Object> refData = new HashMap<String, Object>();\n        refData.put(\"groups\", m_provisioningService.getAllGroups());\n        refData.put(\"dbNodeCounts\", m_provisioningService.getGroupDbNodeCounts());\n        \n        \n        return refData;\n    }","id":20255,"modified_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected Map referenceData(HttpServletRequest request) throws Exception {\n        Map<String, Object> refData = new HashMap<String, Object>();\n\n        Set<String>               names          = new TreeSet<String>();\n        Map<String,ModelImport>   groups         = new TreeMap<String,ModelImport>();\n        Map<String,ForeignSource> foreignSources = new TreeMap<String,ForeignSource>();\n\n        for (ModelImport mi : m_provisioningService.getAllGroups()) {\n            names.add(mi.getForeignSource());\n            groups.put(mi.getForeignSource(), mi);\n        }\n        for (ForeignSource fs : m_foreignSourceService.getAllForeignSources()) {\n            names.add(fs.getName());\n            foreignSources.put(fs.getName(), fs);\n        }\n\n        refData.put(\"foreignSourceNames\", names);\n        refData.put(\"groups\", groups);\n        refData.put(\"foreignSources\", foreignSources);\n        refData.put(\"dbNodeCounts\", m_provisioningService.getGroupDbNodeCounts());\n        \n        return refData;\n    }","commit_id":"9964f5ae8a67996d58ebcf049af66300f1be36a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView doDeleteGroup(HttpServletRequest request, HttpServletResponse response, GroupAction command, BindException errors) throws Exception {\n        m_provisioningService.deleteProvisioningGroup(command.getGroupName());\n        return showForm(request, response, errors);\n    }","id":20256,"modified_method":"private ModelAndView doDeleteGroup(HttpServletRequest request, HttpServletResponse response, GroupAction command, BindException errors) throws Exception {\n        m_provisioningService.deleteProvisioningGroup(command.getGroupName());\n        m_foreignSourceService.deleteForeignSource(command.getGroupName());\n        return showForm(request, response, errors);\n    }","commit_id":"9964f5ae8a67996d58ebcf049af66300f1be36a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView doAddParameter(HttpServletRequest request, HttpServletResponse response, TreeCommand treeCmd, BindException errors) throws Exception {\n        System.err.println(String.format(\"current node = %s, data path = %s\", treeCmd.getCurrentNode(), treeCmd.getDataPath()));\n        ForeignSource fs = m_foreignSourceService.addParameter(treeCmd.getForeignSourceName(), treeCmd.getDataPath());\n        treeCmd.setFormData(fs);\n//        treeCmd.setCurrentNode(treeCmd.getCurrentNode()+\".parameter\")\n        return showForm(request, response, errors);\n    }","id":20257,"modified_method":"private ModelAndView doAddParameter(HttpServletRequest request, HttpServletResponse response, TreeCommand treeCmd, BindException errors) throws Exception {\n        ForeignSource fs = m_foreignSourceService.addParameter(treeCmd.getForeignSourceName(), treeCmd.getDataPath());\n        treeCmd.setFormData(fs);\n        return showForm(request, response, errors);\n    }","commit_id":"22d7fb97f3229b9cb1af35de42077a314ac71cd2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void updateDateStamp() {\n        try {\n            m_dateStamp = DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar());\n        } catch (DatatypeConfigurationException e) {\n            log().warn(\"unable to update datestamp\", e);\n        }\n    }","id":20258,"modified_method":"/**\n     * Update the date stamp to the current date and time\n     */\n    public void updateDateStamp() {\n        try {\n            m_dateStamp = DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar());\n        } catch (DatatypeConfigurationException e) {\n            log().warn(\"unable to update datestamp\", e);\n        }\n    }","commit_id":"22d7fb97f3229b9cb1af35de42077a314ac71cd2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView doDeleteGroup(HttpServletRequest request, HttpServletResponse response, GroupAction command, BindException errors) throws Exception {\n        m_provisioningService.deleteProvisioningGroup(command.getGroupName());\n        return showForm(request, response, errors);\n    }","id":20259,"modified_method":"private ModelAndView doDeleteGroup(HttpServletRequest request, HttpServletResponse response, GroupAction command, BindException errors) throws Exception {\n        m_provisioningService.deleteProvisioningGroup(command.getGroupName());\n        m_foreignSourceService.deleteForeignSource(command.getGroupName());\n        return showForm(request, response, errors);\n    }","commit_id":"22d7fb97f3229b9cb1af35de42077a314ac71cd2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected Map referenceData(HttpServletRequest request) throws Exception {\n        Map<String, Object> refData = new HashMap<String, Object>();\n        refData.put(\"groups\", m_provisioningService.getAllGroups());\n        refData.put(\"dbNodeCounts\", m_provisioningService.getGroupDbNodeCounts());\n        \n        \n        return refData;\n    }","id":20260,"modified_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected Map referenceData(HttpServletRequest request) throws Exception {\n        Map<String, Object> refData = new HashMap<String, Object>();\n\n        Set<String>               names          = new TreeSet<String>();\n        Map<String,ModelImport>   groups         = new TreeMap<String,ModelImport>();\n        Map<String,ForeignSource> foreignSources = new TreeMap<String,ForeignSource>();\n\n        for (ModelImport mi : m_provisioningService.getAllGroups()) {\n            names.add(mi.getForeignSource());\n            groups.put(mi.getForeignSource(), mi);\n        }\n        for (ForeignSource fs : m_foreignSourceService.getAllForeignSources()) {\n            names.add(fs.getName());\n            foreignSources.put(fs.getName(), fs);\n        }\n\n        refData.put(\"foreignSourceNames\", names);\n        refData.put(\"groups\", groups);\n        refData.put(\"foreignSources\", foreignSources);\n        refData.put(\"dbNodeCounts\", m_provisioningService.getGroupDbNodeCounts());\n        \n        return refData;\n    }","commit_id":"22d7fb97f3229b9cb1af35de42077a314ac71cd2","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView doAddParameter(HttpServletRequest request, HttpServletResponse response, TreeCommand treeCmd, BindException errors) throws Exception {\n        System.err.println(String.format(\"current node = %s, data path = %s\", treeCmd.getCurrentNode(), treeCmd.getDataPath()));\n        ForeignSource fs = m_foreignSourceService.addParameter(treeCmd.getForeignSourceName(), treeCmd.getDataPath());\n        treeCmd.setFormData(fs);\n//        treeCmd.setCurrentNode(treeCmd.getCurrentNode()+\".parameter\")\n        return showForm(request, response, errors);\n    }","id":20261,"modified_method":"private ModelAndView doAddParameter(HttpServletRequest request, HttpServletResponse response, TreeCommand treeCmd, BindException errors) throws Exception {\n        ForeignSource fs = m_foreignSourceService.addParameter(treeCmd.getForeignSourceName(), treeCmd.getDataPath());\n        treeCmd.setFormData(fs);\n        return showForm(request, response, errors);\n    }","commit_id":"4b999e1a6d335499dd5e68690357c5ef04cb7b12","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void updateDateStamp() {\n        try {\n            m_dateStamp = DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar());\n        } catch (DatatypeConfigurationException e) {\n            log().warn(\"unable to update datestamp\", e);\n        }\n    }","id":20262,"modified_method":"/**\n     * Update the date stamp to the current date and time\n     */\n    public void updateDateStamp() {\n        try {\n            m_dateStamp = DatatypeFactory.newInstance().newXMLGregorianCalendar(new GregorianCalendar());\n        } catch (DatatypeConfigurationException e) {\n            log().warn(\"unable to update datestamp\", e);\n        }\n    }","commit_id":"4b999e1a6d335499dd5e68690357c5ef04cb7b12","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView doDeleteGroup(HttpServletRequest request, HttpServletResponse response, GroupAction command, BindException errors) throws Exception {\n        m_provisioningService.deleteProvisioningGroup(command.getGroupName());\n        return showForm(request, response, errors);\n    }","id":20263,"modified_method":"private ModelAndView doDeleteGroup(HttpServletRequest request, HttpServletResponse response, GroupAction command, BindException errors) throws Exception {\n        m_provisioningService.deleteProvisioningGroup(command.getGroupName());\n        m_foreignSourceService.deleteForeignSource(command.getGroupName());\n        return showForm(request, response, errors);\n    }","commit_id":"4b999e1a6d335499dd5e68690357c5ef04cb7b12","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected Map referenceData(HttpServletRequest request) throws Exception {\n        Map<String, Object> refData = new HashMap<String, Object>();\n        refData.put(\"groups\", m_provisioningService.getAllGroups());\n        refData.put(\"dbNodeCounts\", m_provisioningService.getGroupDbNodeCounts());\n        \n        \n        return refData;\n    }","id":20264,"modified_method":"@SuppressWarnings(\"unchecked\")\n    @Override\n    protected Map referenceData(HttpServletRequest request) throws Exception {\n        Map<String, Object> refData = new HashMap<String, Object>();\n\n        Set<String>               names          = new TreeSet<String>();\n        Map<String,ModelImport>   groups         = new TreeMap<String,ModelImport>();\n        Map<String,ForeignSource> foreignSources = new TreeMap<String,ForeignSource>();\n\n        for (ModelImport mi : m_provisioningService.getAllGroups()) {\n            names.add(mi.getForeignSource());\n            groups.put(mi.getForeignSource(), mi);\n        }\n        for (ForeignSource fs : m_foreignSourceService.getAllForeignSources()) {\n            names.add(fs.getName());\n            foreignSources.put(fs.getName(), fs);\n        }\n\n        refData.put(\"foreignSourceNames\", names);\n        refData.put(\"groups\", groups);\n        refData.put(\"foreignSources\", foreignSources);\n        refData.put(\"dbNodeCounts\", m_provisioningService.getGroupDbNodeCounts());\n        \n        return refData;\n    }","commit_id":"4b999e1a6d335499dd5e68690357c5ef04cb7b12","url":"https://github.com/OpenNMS/opennms"},{"original_method":"static final CheckedListenableFuture<ServiceConfiguration> stopTransitionChain( final ServiceConfiguration config ) {\n    Component.State currState = config.lookupState( );\n    if ( State.ENABLED.equals( currState ) ) {\n      Callable<CheckedListenableFuture<ServiceConfiguration>> transition = Automata.sequenceTransitions( config,\n                                                                                                         Component.State.ENABLED,\n                                                                                                         Component.State.DISABLED,\n                                                                                                         Component.State.STOPPED );\n      try {\n        return transition.call( );\n      } catch ( Throwable ex ) {\n        LOG.error( ex, ex );\n        return Futures.predestinedFailedFuture( ex );\n      }\n    } else if ( State.DISABLED.equals( currState ) || State.NOTREADY.equals( currState ) ) {\n      Callable<CheckedListenableFuture<ServiceConfiguration>> transition = Automata.sequenceTransitions( config, currState, Component.State.STOPPED );\n      try {\n        return transition.call( );\n      } catch ( Throwable ex ) {\n        LOG.error( ex, ex );\n        return Futures.predestinedFailedFuture( ex );\n      }\n    } else {\n      return Futures.predestinedFuture( config );\n    }\n  }","id":20265,"modified_method":"static final CheckedListenableFuture<ServiceConfiguration> stopTransitionChain( final ServiceConfiguration config ) {\n    Callable<CheckedListenableFuture<ServiceConfiguration>> transition = null;\n    Component.State currState = config.lookupState( );\n    if ( State.ENABLED.equals( currState ) ) {\n      transition = Automata.sequenceTransitions( config,\n                                                 Component.State.ENABLED,\n                                                 Component.State.DISABLED,\n                                                 Component.State.STOPPED );\n    } else if ( State.DISABLED.equals( currState ) || State.NOTREADY.equals( currState ) ) {\n      transition = Automata.sequenceTransitions( config, currState, Component.State.STOPPED );\n    } else {\n      Exceptions.trace( \"Fauled to find transition to requested state STOPPED from \" + config.lookupState( ) + \" for: \" + config.toString( ) );\n    }\n    return executeTransition( config, transition );\n  }","commit_id":"b13d440262ce87aba11b0eb0ca47d9f812b83d46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"static final CheckedListenableFuture<ServiceConfiguration> disableTransitionChain( final ServiceConfiguration config ) {\n    if ( State.ENABLED.isIn( config ) ) {\n      Callable<CheckedListenableFuture<ServiceConfiguration>> transition = Automata.sequenceTransitions( config,\n                                                                                                         Component.State.ENABLED,\n                                                                                                         Component.State.DISABLED );\n      try {\n        return transition.call( );\n      } catch ( Throwable ex ) {\n        LOG.error( ex, ex );\n        return Futures.predestinedFailedFuture( ex );\n      }\n    } else if ( !State.DISABLED.isIn( config ) && !State.NOTREADY.isIn( config ) ) {\n      Callable<CheckedListenableFuture<ServiceConfiguration>> transition = Automata.sequenceTransitions( config,\n                                                                                                         Component.State.BROKEN,\n                                                                                                         Component.State.INITIALIZED,\n                                                                                                         Component.State.LOADED,\n                                                                                                         Component.State.NOTREADY,\n                                                                                                         Component.State.DISABLED,\n                                                                                                         Component.State.DISABLED );\n      try {\n        return transition.call( );\n      } catch ( Throwable ex ) {\n        LOG.error( ex, ex );\n        return Futures.predestinedFailedFuture( ex );\n      }\n    } else {\n      return Futures.predestinedFuture( config );\n    }\n  }","id":20266,"modified_method":"static final CheckedListenableFuture<ServiceConfiguration> disableTransitionChain( final ServiceConfiguration config ) {\n    Callable<CheckedListenableFuture<ServiceConfiguration>> transition = null;\n    if ( State.ENABLED.isIn( config ) ) {\n      transition = Automata.sequenceTransitions( config,\n                                                 Component.State.ENABLED,\n                                                 Component.State.DISABLED );\n    } else if ( !State.DISABLED.isIn( config ) && !State.NOTREADY.isIn( config ) ) {\n      transition = Automata.sequenceTransitions( config,\n                                                 Component.State.BROKEN,\n                                                 Component.State.INITIALIZED,\n                                                 Component.State.LOADED,\n                                                 Component.State.NOTREADY,\n                                                 Component.State.DISABLED,\n                                                 Component.State.DISABLED );\n    } else if ( State.DISABLED.isIn( config ) ) {\n      transition = Automata.sequenceTransitions( config,\n                                                 Component.State.DISABLED,\n                                                 Component.State.DISABLED );\n    } else {\n      Exceptions.trace( \"Fauled to find transition to requested state DISABLED from \" + config.lookupState( ) + \" for: \" + config.toString( ) );\n    }\n    return executeTransition( config, transition );\n  }","commit_id":"b13d440262ce87aba11b0eb0ca47d9f812b83d46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"static final CheckedListenableFuture<ServiceConfiguration> enableTransitionChain( final ServiceConfiguration config ) {\n    if ( !State.ENABLED.equals( config.lookupState( ) ) ) {\n      Callable<CheckedListenableFuture<ServiceConfiguration>> transition = Automata.sequenceTransitions( config,\n                                                                                                         Component.State.BROKEN,\n                                                                                                         Component.State.INITIALIZED,\n                                                                                                         Component.State.LOADED,\n                                                                                                         Component.State.NOTREADY,\n                                                                                                         Component.State.DISABLED,\n                                                                                                         Component.State.DISABLED,\n                                                                                                         Component.State.ENABLED );\n      try {\n        return transition.call( );\n      } catch ( Exception ex ) {\n        LOG.error( ex, ex );\n        return Futures.predestinedFailedFuture( ex );\n      }\n    } else {\n      return Futures.predestinedFuture( config );\n    }\n  }","id":20267,"modified_method":"static final CheckedListenableFuture<ServiceConfiguration> enableTransitionChain( final ServiceConfiguration config ) {\n    Callable<CheckedListenableFuture<ServiceConfiguration>> transition = null;\n    if ( !State.ENABLED.equals( config.lookupState( ) ) ) {\n      transition = Automata.sequenceTransitions( config,\n                                                 Component.State.BROKEN,\n                                                 Component.State.INITIALIZED,\n                                                 Component.State.LOADED,\n                                                 Component.State.NOTREADY,\n                                                 Component.State.DISABLED,\n                                                 Component.State.DISABLED,\n                                                 Component.State.ENABLED );\n    } else {\n      transition = Automata.sequenceTransitions( config,\n                                                 Component.State.ENABLED ,\n                                                 Component.State.ENABLED );\n    }\n    return executeTransition( config, transition );\n  }","commit_id":"b13d440262ce87aba11b0eb0ca47d9f812b83d46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"static final CheckedListenableFuture<ServiceConfiguration> startTransitionChain( final ServiceConfiguration config ) {\n    if ( !State.NOTREADY.equals( config.lookupState( ) ) && !State.DISABLED.equals( config.lookupState( ) ) && !State.ENABLED.equals( config.lookupState( ) ) ) {\n      Callable<CheckedListenableFuture<ServiceConfiguration>> transition = null;\n      if ( State.STOPPED.isIn( config ) ) {\n        transition = Automata.sequenceTransitions( config,\n                                                   Component.State.INITIALIZED,\n                                                   Component.State.LOADED,\n                                                   Component.State.NOTREADY,\n                                                   Component.State.DISABLED );\n      } else if ( State.INITIALIZED.isIn( config ) ) {\n        transition = Automata.sequenceTransitions( config,\n                                                   Component.State.LOADED,\n                                                   Component.State.NOTREADY,\n                                                   Component.State.DISABLED );\n      } else if ( State.BROKEN.isIn( config ) ) {\n        transition = Automata.sequenceTransitions( config,\n                                                     Component.State.BROKEN,\n                                                     Component.State.INITIALIZED,\n                                                     Component.State.LOADED,\n                                                     Component.State.NOTREADY,\n                                                     Component.State.DISABLED );\n      } else {\n        transition = Automata.sequenceTransitions( config, config.lookupState( ), Component.State.NOTREADY, Component.State.DISABLED );\n      }\n      try {\n        return transition.call( );\n      } catch ( Throwable ex ) {\n        LOG.error( ex, ex );\n        return Futures.predestinedFailedFuture( ex );\n      }\n    } else {\n      return Futures.predestinedFuture( config );\n    }\n  }","id":20268,"modified_method":"static final CheckedListenableFuture<ServiceConfiguration> startTransitionChain( final ServiceConfiguration config ) {\n    Callable<CheckedListenableFuture<ServiceConfiguration>> transition = null;\n    if ( !State.NOTREADY.equals( config.lookupState( ) ) && !State.DISABLED.equals( config.lookupState( ) ) && !State.ENABLED.equals( config.lookupState( ) ) ) {\n      if ( State.STOPPED.isIn( config ) ) {\n        transition = Automata.sequenceTransitions( config,\n                                                   Component.State.INITIALIZED,\n                                                   Component.State.LOADED,\n                                                   Component.State.NOTREADY,\n                                                   Component.State.DISABLED );\n      } else if ( State.INITIALIZED.isIn( config ) ) {\n        transition = Automata.sequenceTransitions( config,\n                                                   Component.State.LOADED,\n                                                   Component.State.NOTREADY,\n                                                   Component.State.DISABLED );\n      } else if ( State.BROKEN.isIn( config ) ) {\n        transition = Automata.sequenceTransitions( config,\n                                                     Component.State.BROKEN,\n                                                     Component.State.INITIALIZED,\n                                                     Component.State.LOADED,\n                                                     Component.State.NOTREADY,\n                                                     Component.State.DISABLED );\n      } else {\n        transition = Automata.sequenceTransitions( config, config.lookupState( ), Component.State.NOTREADY, Component.State.DISABLED );\n      }\n    }\n    return executeTransition( config, transition );\n  }","commit_id":"b13d440262ce87aba11b0eb0ca47d9f812b83d46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"static final CheckedListenableFuture<ServiceConfiguration> destroyTransitionChain( final ServiceConfiguration config ) {\n    if ( !State.INITIALIZED.isIn( config ) ) {\n      Callable<CheckedListenableFuture<ServiceConfiguration>> transition = Automata.sequenceTransitions( config,\n                                                                                                         Component.State.ENABLED,\n                                                                                                         Component.State.DISABLED,\n                                                                                                         Component.State.STOPPED );\n      try {\n        return transition.call( );\n      } catch ( Throwable ex ) {\n        LOG.error( ex, ex );\n        return Futures.predestinedFailedFuture( ex );\n      }\n    } else {\n      return Futures.predestinedFuture( config );\n    }\n  }","id":20269,"modified_method":"static final CheckedListenableFuture<ServiceConfiguration> destroyTransitionChain( final ServiceConfiguration config ) {\n    Callable<CheckedListenableFuture<ServiceConfiguration>> transition = null;\n    if ( !State.INITIALIZED.isIn( config ) ) {\n      transition = Automata.sequenceTransitions( config,\n                                                 Component.State.ENABLED,\n                                                 Component.State.DISABLED,\n                                                 Component.State.STOPPED );\n    } else {\n      Exceptions.trace( \"Fauled to find transition to requested state DESTROY from \" + config.lookupState( ) + \" for: \" + config.toString( ) );\n    }\n    return executeTransition( config, transition );\n  }","commit_id":"b13d440262ce87aba11b0eb0ca47d9f812b83d46","url":"https://github.com/eucalyptus/eucalyptus"},{"original_method":"private Pair<Map<String, String>, Boolean> findIndexConfig( Class<? extends PropertyContainer> cls,\n            String indexName, Map<String, String> suppliedConfig, Map<?, ?> dbConfig )\n    {\n        // 1. Check stored config (has this index been created previously?)\n        Map<String, String> storedConfig = indexStore.get( cls, indexName );\n//        userConfig = userConfig != null ? defaultsFiller.fill( userConfig ) : null;\n        Map<String, String> configToUse = null;\n        IndexProvider indexProvider = null;\n        \n        // 2. Check config supplied by the user for this method call\n        if ( configToUse == null )\n        {\n            configToUse = suppliedConfig;\n        }\n        \n        // 3. Check db config properties for provider\n        if ( configToUse == null )\n        {\n            String provider = null;\n            if ( dbConfig != null )\n            {\n                provider = (String) dbConfig.get( \"index.\" + indexName );\n                if ( provider == null )\n                {\n                    provider = (String) dbConfig.get( \"index\" );\n                }\n            }\n            \n            // 4. Default to lucene\n            if ( provider == null )\n            {\n                provider = \"lucene\";\n            }\n            indexProvider = getIndexProvider( provider );\n            configToUse = indexProvider.fillInDefaults( MapUtil.stringMap( KEY_INDEX_PROVIDER, provider ) );\n        }\n        else\n        {\n            indexProvider = getIndexProvider( configToUse.get( KEY_INDEX_PROVIDER ) );\n        }\n        \n        if ( storedConfig != null )\n        {\n            if ( suppliedConfig != null && !storedConfig.equals( suppliedConfig ) )\n            {\n                throw new IllegalArgumentException( \"Supplied index configuration:\\n\" +\n                        suppliedConfig + \"\\ndiffer from stored config:\\n\" + storedConfig +\n                        \"\\nfor '\" + indexName + \"'\" );\n            }\n            configToUse = storedConfig;\n        }\n        \n        boolean created = indexStore.setIfNecessary( cls, indexName, configToUse );\n        return new Pair<Map<String, String>, Boolean>( configToUse, created );\n    }","id":20270,"modified_method":"private Pair<Map<String, String>, Boolean> findIndexConfig( Class<? extends PropertyContainer> cls,\n            String indexName, Map<String, String> suppliedConfig, Map<?, ?> dbConfig )\n    {\n        // 1. Check stored config (has this index been created previously?)\n        Map<String, String> storedConfig = indexStore.get( cls, indexName );\n        if ( storedConfig != null && suppliedConfig == null )\n        {\n            return Pair.of( storedConfig, Boolean.FALSE );\n        }\n        \n        Map<String, String> configToUse = null;\n        \n        // 2. Check config supplied by the user for this method call\n        if ( configToUse == null )\n        {\n            configToUse = suppliedConfig;\n        }\n        \n        // 3. Check db config properties for provider\n        if ( configToUse == null )\n        {\n            String provider = null;\n            if ( dbConfig != null )\n            {\n                provider = (String) dbConfig.get( \"index.\" + indexName );\n                if ( provider == null )\n                {\n                    provider = (String) dbConfig.get( \"index\" );\n                }\n            }\n            \n            // 4. Default to lucene\n            if ( provider == null )\n            {\n                provider = \"lucene\";\n            }\n            IndexProvider indexProvider = getIndexProvider( provider );\n            configToUse = indexProvider.fillInDefaults( MapUtil.stringMap( KEY_INDEX_PROVIDER, provider ) );\n        }\n        \n        // Do they match (stored vs. supplied)?\n        if ( storedConfig != null )\n        {\n            if ( suppliedConfig != null && !storedConfig.equals( suppliedConfig ) )\n            {\n                throw new IllegalArgumentException( \"Supplied index configuration:\\n\" +\n                        suppliedConfig + \"\\ndiffer from stored config:\\n\" + storedConfig +\n                        \"\\nfor '\" + indexName + \"'\" );\n            }\n            configToUse = storedConfig;\n        }\n        \n        boolean created = indexStore.setIfNecessary( cls, indexName, configToUse );\n        return new Pair<Map<String, String>, Boolean>( Collections.unmodifiableMap( configToUse ), created );\n    }","commit_id":"71752ae99ed55f483f49e82b1f086a57a9c37a2f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Map<String, Map<String, String>> readMap( FileChannel channel,\n            Map<String, Map<String, String>> map, Integer sizeOrTillEof ) throws IOException\n    {\n        for ( int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++ )\n        {\n            String indexName = readNextString( channel );\n            if ( indexName == null )\n            {\n                break;\n            }\n            Integer propertyCount = readNextInt( channel );\n            if ( propertyCount == null )\n            {\n                break;\n            }\n            Map<String, String> properties = new HashMap<String, String>();\n            for ( int p = 0; p < propertyCount; p++ )\n            {\n                String key = readNextString( channel );\n                if ( key == null )\n                {\n                    break;\n                }\n                String value = readNextString( channel );\n                if ( value == null )\n                {\n                    break;\n                }\n                properties.put( key, value );\n            }\n            map.put( indexName, properties );\n        }\n        return map;\n    }","id":20271,"modified_method":"private Map<String, Map<String, String>> readMap( FileChannel channel,\n            Map<String, Map<String, String>> map, Integer sizeOrTillEof ) throws IOException\n    {\n        for ( int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++ )\n        {\n            String indexName = readNextString( channel );\n            if ( indexName == null )\n            {\n                break;\n            }\n            Integer propertyCount = readNextInt( channel );\n            if ( propertyCount == null )\n            {\n                break;\n            }\n            Map<String, String> properties = new HashMap<String, String>();\n            for ( int p = 0; p < propertyCount; p++ )\n            {\n                String key = readNextString( channel );\n                if ( key == null )\n                {\n                    break;\n                }\n                String value = readNextString( channel );\n                if ( value == null )\n                {\n                    break;\n                }\n                properties.put( key, value );\n            }\n            map.put( indexName, properties );\n        }\n        return Collections.unmodifiableMap( map );\n    }","commit_id":"71752ae99ed55f483f49e82b1f086a57a9c37a2f","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized boolean setIfNecessary( Class<? extends PropertyContainer> cls,\n            String name, Map<String, String> config )\n    {\n        Map<String, Map<String, String>> map = map( cls );\n        if ( map.containsKey( name ) )\n        {\n            return false;\n        }\n        map.put( name, config );\n        write();\n        return true;\n    }","id":20272,"modified_method":"public synchronized boolean setIfNecessary( Class<? extends PropertyContainer> cls,\n            String name, Map<String, String> config )\n    {\n        Map<String, Map<String, String>> map = map( cls );\n        if ( map.containsKey( name ) )\n        {\n            return false;\n        }\n        map.put( name, Collections.unmodifiableMap( config ) );\n        write();\n        return true;\n    }","commit_id":"71752ae99ed55f483f49e82b1f086a57a9c37a2f","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Pair<Map<String, String>, Boolean> findIndexConfig( Class<? extends PropertyContainer> cls,\n            String indexName, Map<String, String> suppliedConfig, Map<?, ?> dbConfig )\n    {\n        // 1. Check stored config (has this index been created previously?)\n        Map<String, String> storedConfig = indexStore.get( cls, indexName );\n//        userConfig = userConfig != null ? defaultsFiller.fill( userConfig ) : null;\n        Map<String, String> configToUse = null;\n        IndexProvider indexProvider = null;\n        \n        // 2. Check config supplied by the user for this method call\n        if ( configToUse == null )\n        {\n            configToUse = suppliedConfig;\n        }\n        \n        // 3. Check db config properties for provider\n        if ( configToUse == null )\n        {\n            String provider = null;\n            if ( dbConfig != null )\n            {\n                provider = (String) dbConfig.get( \"index.\" + indexName );\n                if ( provider == null )\n                {\n                    provider = (String) dbConfig.get( \"index\" );\n                }\n            }\n            \n            // 4. Default to lucene\n            if ( provider == null )\n            {\n                provider = \"lucene\";\n            }\n            indexProvider = getIndexProvider( provider );\n            configToUse = indexProvider.fillInDefaults( MapUtil.stringMap( KEY_INDEX_PROVIDER, provider ) );\n        }\n        else\n        {\n            indexProvider = getIndexProvider( configToUse.get( KEY_INDEX_PROVIDER ) );\n        }\n        \n        if ( storedConfig != null )\n        {\n            if ( suppliedConfig != null && !storedConfig.equals( suppliedConfig ) )\n            {\n                throw new IllegalArgumentException( \"Supplied index configuration:\\n\" +\n                        suppliedConfig + \"\\ndiffer from stored config:\\n\" + storedConfig +\n                        \"\\nfor '\" + indexName + \"'\" );\n            }\n            configToUse = storedConfig;\n        }\n        \n        boolean created = indexStore.setIfNecessary( cls, indexName, configToUse );\n        return new Pair<Map<String, String>, Boolean>( configToUse, created );\n    }","id":20273,"modified_method":"private Pair<Map<String, String>, Boolean> findIndexConfig( Class<? extends PropertyContainer> cls,\n            String indexName, Map<String, String> suppliedConfig, Map<?, ?> dbConfig )\n    {\n        // 1. Check stored config (has this index been created previously?)\n        Map<String, String> storedConfig = indexStore.get( cls, indexName );\n        if ( storedConfig != null && suppliedConfig == null )\n        {\n            return Pair.of( storedConfig, Boolean.FALSE );\n        }\n        \n        Map<String, String> configToUse = null;\n        \n        // 2. Check config supplied by the user for this method call\n        if ( configToUse == null )\n        {\n            configToUse = suppliedConfig;\n        }\n        \n        // 3. Check db config properties for provider\n        if ( configToUse == null )\n        {\n            String provider = null;\n            if ( dbConfig != null )\n            {\n                provider = (String) dbConfig.get( \"index.\" + indexName );\n                if ( provider == null )\n                {\n                    provider = (String) dbConfig.get( \"index\" );\n                }\n            }\n            \n            // 4. Default to lucene\n            if ( provider == null )\n            {\n                provider = \"lucene\";\n            }\n            IndexProvider indexProvider = getIndexProvider( provider );\n            configToUse = indexProvider.fillInDefaults( MapUtil.stringMap( KEY_INDEX_PROVIDER, provider ) );\n        }\n        \n        // Do they match (stored vs. supplied)?\n        if ( storedConfig != null )\n        {\n            if ( suppliedConfig != null && !storedConfig.equals( suppliedConfig ) )\n            {\n                throw new IllegalArgumentException( \"Supplied index configuration:\\n\" +\n                        suppliedConfig + \"\\ndiffer from stored config:\\n\" + storedConfig +\n                        \"\\nfor '\" + indexName + \"'\" );\n            }\n            configToUse = storedConfig;\n        }\n        \n        boolean created = indexStore.setIfNecessary( cls, indexName, configToUse );\n        return new Pair<Map<String, String>, Boolean>( Collections.unmodifiableMap( configToUse ), created );\n    }","commit_id":"6edc43a40504ee4e1fdea0a84ff450ea0a0789d4","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized boolean setIfNecessary( Class<? extends PropertyContainer> cls,\n            String name, Map<String, String> config )\n    {\n        Map<String, Map<String, String>> map = map( cls );\n        if ( map.containsKey( name ) )\n        {\n            return false;\n        }\n        map.put( name, config );\n        write();\n        return true;\n    }","id":20274,"modified_method":"public synchronized boolean setIfNecessary( Class<? extends PropertyContainer> cls,\n            String name, Map<String, String> config )\n    {\n        Map<String, Map<String, String>> map = map( cls );\n        if ( map.containsKey( name ) )\n        {\n            return false;\n        }\n        map.put( name, Collections.unmodifiableMap( config ) );\n        write();\n        return true;\n    }","commit_id":"6edc43a40504ee4e1fdea0a84ff450ea0a0789d4","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Map<String, Map<String, String>> readMap( FileChannel channel,\n            Map<String, Map<String, String>> map, Integer sizeOrTillEof ) throws IOException\n    {\n        for ( int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++ )\n        {\n            String indexName = readNextString( channel );\n            if ( indexName == null )\n            {\n                break;\n            }\n            Integer propertyCount = readNextInt( channel );\n            if ( propertyCount == null )\n            {\n                break;\n            }\n            Map<String, String> properties = new HashMap<String, String>();\n            for ( int p = 0; p < propertyCount; p++ )\n            {\n                String key = readNextString( channel );\n                if ( key == null )\n                {\n                    break;\n                }\n                String value = readNextString( channel );\n                if ( value == null )\n                {\n                    break;\n                }\n                properties.put( key, value );\n            }\n            map.put( indexName, properties );\n        }\n        return map;\n    }","id":20275,"modified_method":"private Map<String, Map<String, String>> readMap( FileChannel channel,\n            Map<String, Map<String, String>> map, Integer sizeOrTillEof ) throws IOException\n    {\n        for ( int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++ )\n        {\n            String indexName = readNextString( channel );\n            if ( indexName == null )\n            {\n                break;\n            }\n            Integer propertyCount = readNextInt( channel );\n            if ( propertyCount == null )\n            {\n                break;\n            }\n            Map<String, String> properties = new HashMap<String, String>();\n            for ( int p = 0; p < propertyCount; p++ )\n            {\n                String key = readNextString( channel );\n                if ( key == null )\n                {\n                    break;\n                }\n                String value = readNextString( channel );\n                if ( value == null )\n                {\n                    break;\n                }\n                properties.put( key, value );\n            }\n            map.put( indexName, properties );\n        }\n        return Collections.unmodifiableMap( map );\n    }","commit_id":"6edc43a40504ee4e1fdea0a84ff450ea0a0789d4","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Pair<Map<String, String>, Boolean> findIndexConfig( Class<? extends PropertyContainer> cls,\n            String indexName, Map<String, String> suppliedConfig, Map<?, ?> dbConfig )\n    {\n        // 1. Check stored config (has this index been created previously?)\n        Map<String, String> storedConfig = indexStore.get( cls, indexName );\n//        userConfig = userConfig != null ? defaultsFiller.fill( userConfig ) : null;\n        Map<String, String> configToUse = null;\n        IndexProvider indexProvider = null;\n        \n        // 2. Check config supplied by the user for this method call\n        if ( configToUse == null )\n        {\n            configToUse = suppliedConfig;\n        }\n        \n        // 3. Check db config properties for provider\n        if ( configToUse == null )\n        {\n            String provider = null;\n            if ( dbConfig != null )\n            {\n                provider = (String) dbConfig.get( \"index.\" + indexName );\n                if ( provider == null )\n                {\n                    provider = (String) dbConfig.get( \"index\" );\n                }\n            }\n            \n            // 4. Default to lucene\n            if ( provider == null )\n            {\n                provider = \"lucene\";\n            }\n            indexProvider = getIndexProvider( provider );\n            configToUse = indexProvider.fillInDefaults( MapUtil.stringMap( KEY_INDEX_PROVIDER, provider ) );\n        }\n        else\n        {\n            indexProvider = getIndexProvider( configToUse.get( KEY_INDEX_PROVIDER ) );\n        }\n        \n        if ( storedConfig != null )\n        {\n            if ( suppliedConfig != null && !storedConfig.equals( suppliedConfig ) )\n            {\n                throw new IllegalArgumentException( \"Supplied index configuration:\\n\" +\n                        suppliedConfig + \"\\ndiffer from stored config:\\n\" + storedConfig +\n                        \"\\nfor '\" + indexName + \"'\" );\n            }\n            configToUse = storedConfig;\n        }\n        \n        boolean created = indexStore.setIfNecessary( cls, indexName, configToUse );\n        return new Pair<Map<String, String>, Boolean>( configToUse, created );\n    }","id":20276,"modified_method":"private Pair<Map<String, String>, Boolean> findIndexConfig( Class<? extends PropertyContainer> cls,\n            String indexName, Map<String, String> suppliedConfig, Map<?, ?> dbConfig )\n    {\n        // 1. Check stored config (has this index been created previously?)\n        Map<String, String> storedConfig = indexStore.get( cls, indexName );\n        if ( storedConfig != null && suppliedConfig == null )\n        {\n            return Pair.of( storedConfig, Boolean.FALSE );\n        }\n        \n        Map<String, String> configToUse = null;\n        \n        // 2. Check config supplied by the user for this method call\n        if ( configToUse == null )\n        {\n            configToUse = suppliedConfig;\n        }\n        \n        // 3. Check db config properties for provider\n        if ( configToUse == null )\n        {\n            String provider = null;\n            if ( dbConfig != null )\n            {\n                provider = (String) dbConfig.get( \"index.\" + indexName );\n                if ( provider == null )\n                {\n                    provider = (String) dbConfig.get( \"index\" );\n                }\n            }\n            \n            // 4. Default to lucene\n            if ( provider == null )\n            {\n                provider = \"lucene\";\n            }\n            IndexProvider indexProvider = getIndexProvider( provider );\n            configToUse = indexProvider.fillInDefaults( MapUtil.stringMap( KEY_INDEX_PROVIDER, provider ) );\n        }\n        \n        // Do they match (stored vs. supplied)?\n        if ( storedConfig != null )\n        {\n            if ( suppliedConfig != null && !storedConfig.equals( suppliedConfig ) )\n            {\n                throw new IllegalArgumentException( \"Supplied index configuration:\\n\" +\n                        suppliedConfig + \"\\ndiffer from stored config:\\n\" + storedConfig +\n                        \"\\nfor '\" + indexName + \"'\" );\n            }\n            configToUse = storedConfig;\n        }\n        \n        boolean created = indexStore.setIfNecessary( cls, indexName, configToUse );\n        return new Pair<Map<String, String>, Boolean>( Collections.unmodifiableMap( configToUse ), created );\n    }","commit_id":"4b7728b86928ecf7418db4d963a6573357158f0b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public synchronized boolean setIfNecessary( Class<? extends PropertyContainer> cls,\n            String name, Map<String, String> config )\n    {\n        Map<String, Map<String, String>> map = map( cls );\n        if ( map.containsKey( name ) )\n        {\n            return false;\n        }\n        map.put( name, config );\n        write();\n        return true;\n    }","id":20277,"modified_method":"public synchronized boolean setIfNecessary( Class<? extends PropertyContainer> cls,\n            String name, Map<String, String> config )\n    {\n        Map<String, Map<String, String>> map = map( cls );\n        if ( map.containsKey( name ) )\n        {\n            return false;\n        }\n        map.put( name, Collections.unmodifiableMap( config ) );\n        write();\n        return true;\n    }","commit_id":"4b7728b86928ecf7418db4d963a6573357158f0b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Map<String, Map<String, String>> readMap( FileChannel channel,\n            Map<String, Map<String, String>> map, Integer sizeOrTillEof ) throws IOException\n    {\n        for ( int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++ )\n        {\n            String indexName = readNextString( channel );\n            if ( indexName == null )\n            {\n                break;\n            }\n            Integer propertyCount = readNextInt( channel );\n            if ( propertyCount == null )\n            {\n                break;\n            }\n            Map<String, String> properties = new HashMap<String, String>();\n            for ( int p = 0; p < propertyCount; p++ )\n            {\n                String key = readNextString( channel );\n                if ( key == null )\n                {\n                    break;\n                }\n                String value = readNextString( channel );\n                if ( value == null )\n                {\n                    break;\n                }\n                properties.put( key, value );\n            }\n            map.put( indexName, properties );\n        }\n        return map;\n    }","id":20278,"modified_method":"private Map<String, Map<String, String>> readMap( FileChannel channel,\n            Map<String, Map<String, String>> map, Integer sizeOrTillEof ) throws IOException\n    {\n        for ( int i = 0; sizeOrTillEof == null || i < sizeOrTillEof; i++ )\n        {\n            String indexName = readNextString( channel );\n            if ( indexName == null )\n            {\n                break;\n            }\n            Integer propertyCount = readNextInt( channel );\n            if ( propertyCount == null )\n            {\n                break;\n            }\n            Map<String, String> properties = new HashMap<String, String>();\n            for ( int p = 0; p < propertyCount; p++ )\n            {\n                String key = readNextString( channel );\n                if ( key == null )\n                {\n                    break;\n                }\n                String value = readNextString( channel );\n                if ( value == null )\n                {\n                    break;\n                }\n                properties.put( key, value );\n            }\n            map.put( indexName, properties );\n        }\n        return Collections.unmodifiableMap( map );\n    }","commit_id":"4b7728b86928ecf7418db4d963a6573357158f0b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void updateKBArticle(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tlong resourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"resourcePrimKey\");\n\n\t\tlong parentResourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentResourcePrimKey\");\n\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\tString urlTitle = ParamUtil.getString(actionRequest, \"urlTitle\");\n\t\tString content = ParamUtil.getString(actionRequest, \"content\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tString[] sections = actionRequest.getParameterValues(\"sections\");\n\t\tString dirName = ParamUtil.getString(actionRequest, \"dirName\");\n\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\tactionRequest, \"workflowAction\");\n\n\t\tKBArticle kbArticle = null;\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tKBArticle.class.getName(), actionRequest);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tkbArticle = KBArticleServiceUtil.addKBArticle(\n\t\t\t\tportletId, parentResourcePrimKey, title, urlTitle, content,\n\t\t\t\tdescription, sections, dirName, serviceContext);\n\t\t}\n\t\telse if (cmd.equals(Constants.UPDATE)) {\n\t\t\tkbArticle = KBArticleServiceUtil.updateKBArticle(\n\t\t\t\tresourcePrimKey, title, content, description, sections, dirName,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (!cmd.equals(Constants.ADD) && !cmd.equals(Constants.UPDATE)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\tString namespace = actionResponse.getNamespace();\n\t\t\tString redirect = getRedirect(actionRequest, actionResponse);\n\n\t\t\tString editURL = PortalUtil.getLayoutFullURL(themeDisplay);\n\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, \"p_p_id\", PortletKeys.KNOWLEDGE_BASE_ADMIN);\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"mvcPath\",\n\t\t\t\ttemplatePath + \"edit_article.jsp\");\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"redirect\", redirect);\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"resourcePrimKey\",\n\t\t\t\tkbArticle.getResourcePrimKey());\n\n\t\t\tactionRequest.setAttribute(WebKeys.REDIRECT, editURL);\n\t\t}\n\t}","id":20279,"modified_method":"public void updateKBArticle(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tlong resourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"resourcePrimKey\");\n\n\t\tlong parentResourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentResourcePrimKey\");\n\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\tString urlTitle = ParamUtil.getString(actionRequest, \"urlTitle\");\n\t\tString content = ParamUtil.getString(actionRequest, \"content\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tString[] sections = actionRequest.getParameterValues(\"sections\");\n\t\tString dirName = ParamUtil.getString(actionRequest, \"dirName\");\n\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\tactionRequest, \"workflowAction\");\n\n\t\tKBArticle kbArticle = null;\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tKBArticle.class.getName(), actionRequest);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tkbArticle = KBArticleServiceUtil.addKBArticle(\n\t\t\t\tportletId, parentResourcePrimKey, title, urlTitle, content,\n\t\t\t\tdescription, sections, dirName, serviceContext);\n\t\t}\n\t\telse if (cmd.equals(Constants.UPDATE)) {\n\t\t\tkbArticle = KBArticleServiceUtil.updateKBArticle(\n\t\t\t\tresourcePrimKey, title, content, description, sections, dirName,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (!cmd.equals(Constants.ADD) && !cmd.equals(Constants.UPDATE)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\tactionRequest, PortletKeys.KNOWLEDGE_BASE_ADMIN,\n\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"mvcPath\", templatePath + \"edit_article.jsp\");\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"redirect\", getRedirect(actionRequest, actionResponse));\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"resourcePrimKey\",\n\t\t\t\tString.valueOf(kbArticle.getResourcePrimKey()));\n\t\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\t\tactionRequest.setAttribute(WebKeys.REDIRECT, portletURL.toString());\n\t\t}\n\t}","commit_id":"30566de5266870f18b18f2f175812c7d4987dff7","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void updateKBArticle(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tlong resourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"resourcePrimKey\");\n\n\t\tlong parentResourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentResourcePrimKey\");\n\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\tString urlTitle = ParamUtil.getString(actionRequest, \"urlTitle\");\n\t\tString content = ParamUtil.getString(actionRequest, \"content\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tString[] sections = actionRequest.getParameterValues(\"sections\");\n\t\tString dirName = ParamUtil.getString(actionRequest, \"dirName\");\n\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\tactionRequest, \"workflowAction\");\n\n\t\tKBArticle kbArticle = null;\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tKBArticle.class.getName(), actionRequest);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tkbArticle = KBArticleServiceUtil.addKBArticle(\n\t\t\t\tportletId, parentResourcePrimKey, title, urlTitle, content,\n\t\t\t\tdescription, sections, dirName, serviceContext);\n\t\t}\n\t\telse if (cmd.equals(Constants.UPDATE)) {\n\t\t\tkbArticle = KBArticleServiceUtil.updateKBArticle(\n\t\t\t\tresourcePrimKey, title, content, description, sections, dirName,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (!cmd.equals(Constants.ADD) && !cmd.equals(Constants.UPDATE)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\tactionRequest, PortletKeys.KNOWLEDGE_BASE_ADMIN,\n\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"mvcPath\", templatePath + \"edit_article.jsp\");\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"redirect\", getRedirect(actionRequest, actionResponse));\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"resourcePrimKey\",\n\t\t\t\tString.valueOf(kbArticle.getResourcePrimKey()));\n\t\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\t\tactionRequest.setAttribute(WebKeys.REDIRECT, portletURL.toString());\n\t\t}\n\t}","id":20280,"modified_method":"public void updateKBArticle(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tlong resourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"resourcePrimKey\");\n\n\t\tlong parentResourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentResourcePrimKey\");\n\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\tString urlTitle = ParamUtil.getString(actionRequest, \"urlTitle\");\n\t\tString content = ParamUtil.getString(actionRequest, \"content\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tString[] sections = actionRequest.getParameterValues(\"sections\");\n\t\tString dirName = ParamUtil.getString(actionRequest, \"dirName\");\n\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\tactionRequest, \"workflowAction\");\n\n\t\tKBArticle kbArticle = null;\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tKBArticle.class.getName(), actionRequest);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tkbArticle = KBArticleServiceUtil.addKBArticle(\n\t\t\t\tportletId, parentResourcePrimKey, title, urlTitle, content,\n\t\t\t\tdescription, sections, dirName, serviceContext);\n\t\t}\n\t\telse if (cmd.equals(Constants.UPDATE)) {\n\t\t\tkbArticle = KBArticleServiceUtil.updateKBArticle(\n\t\t\t\tresourcePrimKey, title, content, description, sections, dirName,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (!cmd.equals(Constants.ADD) && !cmd.equals(Constants.UPDATE)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\tString namespace = actionResponse.getNamespace();\n\t\t\tString redirect = getRedirect(actionRequest, actionResponse);\n\n\t\t\tString editURL = PortalUtil.getLayoutFullURL(themeDisplay);\n\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, \"p_p_id\", PortletKeys.KNOWLEDGE_BASE_ADMIN);\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"mvcPath\",\n\t\t\t\ttemplatePath + \"edit_article.jsp\");\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"redirect\", redirect);\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"resourcePrimKey\",\n\t\t\t\tkbArticle.getResourcePrimKey());\n\n\t\t\tactionRequest.setAttribute(WebKeys.REDIRECT, editURL);\n\t\t}\n\t}","commit_id":"1e7ba7496bc8986d2c5c9c8f79277330f380fd53","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public void updateKBArticle(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tlong resourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"resourcePrimKey\");\n\n\t\tlong parentResourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentResourcePrimKey\");\n\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\tString urlTitle = ParamUtil.getString(actionRequest, \"urlTitle\");\n\t\tString content = ParamUtil.getString(actionRequest, \"content\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tString[] sections = actionRequest.getParameterValues(\"sections\");\n\t\tString dirName = ParamUtil.getString(actionRequest, \"dirName\");\n\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\tactionRequest, \"workflowAction\");\n\n\t\tKBArticle kbArticle = null;\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tKBArticle.class.getName(), actionRequest);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tkbArticle = KBArticleServiceUtil.addKBArticle(\n\t\t\t\tportletId, parentResourcePrimKey, title, urlTitle, content,\n\t\t\t\tdescription, sections, dirName, serviceContext);\n\t\t}\n\t\telse if (cmd.equals(Constants.UPDATE)) {\n\t\t\tkbArticle = KBArticleServiceUtil.updateKBArticle(\n\t\t\t\tresourcePrimKey, title, content, description, sections, dirName,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (!cmd.equals(Constants.ADD) && !cmd.equals(Constants.UPDATE)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\tString namespace = actionResponse.getNamespace();\n\n\t\t\tString editURL = PortalUtil.getLayoutFullURL(themeDisplay);\n\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, \"p_p_id\", PortletKeys.KNOWLEDGE_BASE_ADMIN);\n\n\t\t\tWindowState windowState = actionResponse.getWindowState();\n\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, \"p_p_state\", windowState.toString());\n\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"mvcPath\",\n\t\t\t\ttemplatePath + \"edit_article.jsp\");\n\n\t\t\tString redirect = getRedirect(actionRequest, actionResponse);\n\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"redirect\", redirect);\n\n\t\t\teditURL = HttpUtil.setParameter(\n\t\t\t\teditURL, namespace + \"resourcePrimKey\",\n\t\t\t\tkbArticle.getResourcePrimKey());\n\n\t\t\tactionRequest.setAttribute(WebKeys.REDIRECT, editURL);\n\t\t}\n\t}","id":20281,"modified_method":"public void updateKBArticle(\n\t\t\tActionRequest actionRequest, ActionResponse actionResponse)\n\t\tthrows Exception {\n\n\t\tThemeDisplay themeDisplay = (ThemeDisplay)actionRequest.getAttribute(\n\t\t\tWebKeys.THEME_DISPLAY);\n\n\t\tString portletId = PortalUtil.getPortletId(actionRequest);\n\n\t\tString cmd = ParamUtil.getString(actionRequest, Constants.CMD);\n\n\t\tlong resourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"resourcePrimKey\");\n\n\t\tlong parentResourcePrimKey = ParamUtil.getLong(\n\t\t\tactionRequest, \"parentResourcePrimKey\");\n\t\tString title = ParamUtil.getString(actionRequest, \"title\");\n\t\tString urlTitle = ParamUtil.getString(actionRequest, \"urlTitle\");\n\t\tString content = ParamUtil.getString(actionRequest, \"content\");\n\t\tString description = ParamUtil.getString(actionRequest, \"description\");\n\t\tString[] sections = actionRequest.getParameterValues(\"sections\");\n\t\tString dirName = ParamUtil.getString(actionRequest, \"dirName\");\n\t\tint workflowAction = ParamUtil.getInteger(\n\t\t\tactionRequest, \"workflowAction\");\n\n\t\tKBArticle kbArticle = null;\n\n\t\tServiceContext serviceContext = ServiceContextFactory.getInstance(\n\t\t\tKBArticle.class.getName(), actionRequest);\n\n\t\tif (cmd.equals(Constants.ADD)) {\n\t\t\tkbArticle = KBArticleServiceUtil.addKBArticle(\n\t\t\t\tportletId, parentResourcePrimKey, title, urlTitle, content,\n\t\t\t\tdescription, sections, dirName, serviceContext);\n\t\t}\n\t\telse if (cmd.equals(Constants.UPDATE)) {\n\t\t\tkbArticle = KBArticleServiceUtil.updateKBArticle(\n\t\t\t\tresourcePrimKey, title, content, description, sections, dirName,\n\t\t\t\tserviceContext);\n\t\t}\n\n\t\tif (!cmd.equals(Constants.ADD) && !cmd.equals(Constants.UPDATE)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (workflowAction == WorkflowConstants.ACTION_SAVE_DRAFT) {\n\t\t\tPortletURL portletURL = PortletURLFactoryUtil.create(\n\t\t\t\tactionRequest, PortletKeys.KNOWLEDGE_BASE_ADMIN,\n\t\t\t\tthemeDisplay.getPlid(), PortletRequest.RENDER_PHASE);\n\n\t\t\tportletURL.setParameter(\"mvcPath\", \"/admin/edit_article.jsp\");\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"redirect\", getRedirect(actionRequest, actionResponse));\n\t\t\tportletURL.setParameter(\n\t\t\t\t\"resourcePrimKey\",\n\t\t\t\tString.valueOf(kbArticle.getResourcePrimKey()));\n\t\t\tportletURL.setWindowState(actionRequest.getWindowState());\n\n\t\t\tactionRequest.setAttribute(WebKeys.REDIRECT, portletURL.toString());\n\t\t}\n\t}","commit_id":"b5c78610f8851b34b36783e3f11fa10a02a9f997","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri(nodes[ 1 ])\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( noHitsJson ).post( ClientResponse.class );\n        assertEquals( 404, response.getStatus() );\n    }","id":20282,"modified_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri( nodes[ 1 ] )\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n\n        ClientResponse response = postPathQuery( nodes, noHitsJson, \"/path\" );\n\n        assertEquals( 404, response.getStatus() );\n    }","commit_id":"2dd9be38b73a9afeb46976cc8aadfda72d779dd0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","id":20283,"modified_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/path\" );\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","commit_id":"2dd9be38b73a9afeb46976cc8aadfda72d779dd0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], true ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20284,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n\n        // Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], true ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"2dd9be38b73a9afeb46976cc8aadfda72d779dd0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], false ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20285,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n\n\n//        Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], false ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"2dd9be38b73a9afeb46976cc8aadfda72d779dd0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get all shortest paths\n\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/paths\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        assertEquals( MediaType.APPLICATION_JSON_TYPE, response.getType() );\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","id":20286,"modified_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get all shortest paths\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/paths\" );\n\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","commit_id":"2dd9be38b73a9afeb46976cc8aadfda72d779dd0","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], true ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20287,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n\n        // Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], true ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"14a7a5df78c7d25ef38236882a66ebeb412fda2d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get all shortest paths\n\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/paths\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        assertEquals( MediaType.APPLICATION_JSON_TYPE, response.getType() );\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","id":20288,"modified_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get all shortest paths\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/paths\" );\n\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","commit_id":"14a7a5df78c7d25ef38236882a66ebeb412fda2d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri(nodes[ 1 ])\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( noHitsJson ).post( ClientResponse.class );\n        assertEquals( 404, response.getStatus() );\n    }","id":20289,"modified_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri( nodes[ 1 ] )\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n\n        ClientResponse response = postPathQuery( nodes, noHitsJson, \"/path\" );\n\n        assertEquals( 404, response.getStatus() );\n    }","commit_id":"14a7a5df78c7d25ef38236882a66ebeb412fda2d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","id":20290,"modified_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/path\" );\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","commit_id":"14a7a5df78c7d25ef38236882a66ebeb412fda2d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], false ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20291,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n\n\n//        Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], false ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"14a7a5df78c7d25ef38236882a66ebeb412fda2d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get all shortest paths\n\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/paths\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        assertEquals( MediaType.APPLICATION_JSON_TYPE, response.getType() );\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","id":20292,"modified_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get all shortest paths\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/paths\" );\n\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","commit_id":"2b54e904585d8635979c050216712ca9ba2f0096","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri(nodes[ 1 ])\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( noHitsJson ).post( ClientResponse.class );\n        assertEquals( 404, response.getStatus() );\n    }","id":20293,"modified_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri( nodes[ 1 ] )\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n\n        ClientResponse response = postPathQuery( nodes, noHitsJson, \"/path\" );\n\n        assertEquals( 404, response.getStatus() );\n    }","commit_id":"2b54e904585d8635979c050216712ca9ba2f0096","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], true ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20294,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n\n        // Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], true ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"2b54e904585d8635979c050216712ca9ba2f0096","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], false ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20295,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n\n\n//        Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], false ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"2b54e904585d8635979c050216712ca9ba2f0096","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","id":20296,"modified_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/path\" );\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","commit_id":"2b54e904585d8635979c050216712ca9ba2f0096","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], true ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20297,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeightsWithDefaultCost() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( false );\n\n        // Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], true ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"bc0d85bd68acffca60a794b9357b352c4f80649d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n        Client client = Client.create();\n\n        // Get cheapest paths using Dijkstra\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept(\n                MediaType.APPLICATION_JSON ).entity( getAllPathsUsingDijkstraPayLoad( nodes[1], false ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","id":20298,"modified_method":"@Test\n    public void shouldGetCorrectDijkstraPathsWithWeights() throws Exception\n    {\n        long[] nodes = createDijkstraGraph( true );\n\n\n//        Get cheapest paths using Dijkstra\n        ClientResponse response = postPathQuery( nodes, getAllPathsUsingDijkstraPayLoad( nodes[ 1 ], false ), \"/path\" );\n\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 6, path.get( \"length\" ) );\n        assertEquals( 6.0, path.get( \"weight\" ) );\n    }","commit_id":"bc0d85bd68acffca60a794b9357b352c4f80649d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get all shortest paths\n\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/paths\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        assertEquals( MediaType.APPLICATION_JSON_TYPE, response.getType() );\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","id":20299,"modified_method":"@Test\n    public void shouldBeAbleToFindAllShortestPaths() throws PropertyValueException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get all shortest paths\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/paths\" );\n\n        String entity = response.getEntity( String.class );\n        Collection<?> result = (Collection<?>)JsonHelper.jsonToSingleValue( entity );\n        assertEquals( 2, result.size() );\n        for ( Object representation : result )\n        {\n            Map<?, ?> path = (Map<?, ?>)representation;\n            assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n            assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n            assertEquals( 2, path.get( \"length\" ) );\n        }\n    }","commit_id":"bc0d85bd68acffca60a794b9357b352c4f80649d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri(nodes[ 1 ])\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( noHitsJson ).post( ClientResponse.class );\n        assertEquals( 404, response.getStatus() );\n    }","id":20300,"modified_method":"@Test\n    public void shouldReturn404WhenFailingToFindASinglePath()\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path and expect no answer (404)\n        String noHitsJson = \"{\\\"to\\\":\\\"\" + functionalTestHelper.nodeUri( nodes[ 1 ] )\n                + \"\\\", \\\"max depth\\\":3, \\\"relationships\\\":{\\\"type\\\":\\\"to\\\", \\\"direction\\\":\\\"in\\\"}, \\\"algorithm\\\":\\\"shortestPath\\\"}\";\n\n        ClientResponse response = postPathQuery( nodes, noHitsJson, \"/path\" );\n\n        assertEquals( 404, response.getStatus() );\n    }","commit_id":"bc0d85bd68acffca60a794b9357b352c4f80649d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n        Client client = Client.create();\n\n        // Get single shortest path\n        WebResource resource = client.resource( functionalTestHelper.nodeUri(nodes[ 0 ]) + \"/path\" );\n        ClientResponse response = resource.type( MediaType.APPLICATION_JSON ).accept( MediaType.APPLICATION_JSON ).entity( getAllShortestPathPayLoad( nodes[1] ) ).post( ClientResponse.class );\n        assertEquals( 200, response.getStatus() );\n        Map<?, ?> path = (Map<?, ?>)JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","id":20301,"modified_method":"@Test\n    public void shouldBeAbleToFetchSingleShortestPath() throws JsonParseException\n    {\n        long[] nodes = createMoreComplexGraph();\n\n        // Get single shortest path\n        ClientResponse response = postPathQuery( nodes, getAllShortestPathPayLoad( nodes[ 1 ] ), \"/path\" );\n\n        Map<?, ?> path = JsonHelper.jsonToMap( response.getEntity( String.class ) );\n        assertTrue( path.get( \"start\" ).toString().endsWith( \"/node/\" + nodes[ 0 ] ) );\n        assertTrue( path.get( \"end\" ).toString().endsWith( \"/node/\" + nodes[ 1 ] ) );\n        assertEquals( 2, path.get( \"length\" ) );\n    }","commit_id":"bc0d85bd68acffca60a794b9357b352c4f80649d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static Batch create(ProjectReactor projectReactor, Configuration configuration, Object... bootstrapperComponents) {\n    return new Batch(projectReactor, bootstrapperComponents);\n  }","id":20302,"modified_method":"/**\n   * Used by Gradle 1.0\n   * @deprecated \n   */\n  @Deprecated\n  public static Batch create(ProjectReactor projectReactor, Configuration configuration, Object... bootstrapperComponents) {\n    projectReactor.getRoot().setProperties(convertToProperties(configuration));\n    return new Batch(projectReactor, bootstrapperComponents);\n  }","commit_id":"4e4b77a31e252db91cad0b1903d77e2ad689ce4d","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Batch(ProjectReactor reactor, Object... bootstrapperComponents) {\n    this.bootstrapModule = new BootstrapModule(reactor, bootstrapperComponents).init();\n  }","id":20303,"modified_method":"public Batch(ProjectReactor reactor, Object... bootstrapperComponents) {\n    this.bootstrapModule = new BootstrapModule(reactor, bootstrapperComponents).init();\n  }","commit_id":"4e4b77a31e252db91cad0b1903d77e2ad689ce4d","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = Batch.create(reactor, null,\n        session, getLog(), lifecycleExecutor, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven3PluginExecutor.class);\n    batch.execute();\n  }","id":20304,"modified_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = new Batch(reactor, session, getLog(), lifecycleExecutor, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven3PluginExecutor.class);\n    batch.execute();\n  }","commit_id":"4e4b77a31e252db91cad0b1903d77e2ad689ce4d","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = Batch.create(reactor, null,\n        session, getLog(), lifecycleExecutor, pluginManager, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven2PluginExecutor.class);\n    batch.execute();\n  }","id":20305,"modified_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = new Batch(reactor, session, getLog(), lifecycleExecutor, pluginManager, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven2PluginExecutor.class);\n    batch.execute();\n  }","commit_id":"4e4b77a31e252db91cad0b1903d77e2ad689ce4d","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"public static Batch create(ProjectReactor projectReactor, Configuration configuration, Object... bootstrapperComponents) {\n    return new Batch(projectReactor, bootstrapperComponents);\n  }","id":20306,"modified_method":"/**\n   * Used by Gradle 1.0\n   * @deprecated \n   */\n  @Deprecated\n  public static Batch create(ProjectReactor projectReactor, Configuration configuration, Object... bootstrapperComponents) {\n    projectReactor.getRoot().setProperties(convertToProperties(configuration));\n    return new Batch(projectReactor, bootstrapperComponents);\n  }","commit_id":"019453b021b2cbc3e4db393521e29aebf522f8ba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private Batch(ProjectReactor reactor, Object... bootstrapperComponents) {\n    this.bootstrapModule = new BootstrapModule(reactor, bootstrapperComponents).init();\n  }","id":20307,"modified_method":"public Batch(ProjectReactor reactor, Object... bootstrapperComponents) {\n    this.bootstrapModule = new BootstrapModule(reactor, bootstrapperComponents).init();\n  }","commit_id":"019453b021b2cbc3e4db393521e29aebf522f8ba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = Batch.create(reactor, null,\n        session, getLog(), lifecycleExecutor, pluginManager, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven2PluginExecutor.class);\n    batch.execute();\n  }","id":20308,"modified_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = new Batch(reactor, session, getLog(), lifecycleExecutor, pluginManager, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven2PluginExecutor.class);\n    batch.execute();\n  }","commit_id":"019453b021b2cbc3e4db393521e29aebf522f8ba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = Batch.create(reactor, null,\n        session, getLog(), lifecycleExecutor, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven3PluginExecutor.class);\n    batch.execute();\n  }","id":20309,"modified_method":"private void executeBatch() throws MojoExecutionException {\n    ProjectDefinition def = MavenProjectConverter.convert(session.getSortedProjects(), project);\n    ProjectReactor reactor = new ProjectReactor(def);\n\n    Batch batch = new Batch(reactor, session, getLog(), lifecycleExecutor, artifactFactory,\n        localRepository, artifactMetadataSource, artifactCollector, dependencyTreeBuilder,\n        projectBuilder, getEnvironmentInformation(), Maven3PluginExecutor.class);\n    batch.execute();\n  }","commit_id":"019453b021b2cbc3e4db393521e29aebf522f8ba","url":"https://github.com/SonarSource/sonarqube"},{"original_method":"private void addSorting(final ListDataProvider<DocumentNode> dataProvider)\n   {\n      ListHandler<DocumentNode> columnSortHandler = new ListHandler<DocumentNode>(dataProvider.getList());\n      columnSortHandler.setComparator(directoryColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getPath() == null || o2.getDocInfo().getPath() == null)\n            {\n               return (o1.getDocInfo().getPath() == null) ? -1 : 1;\n            }\n            else\n            {\n               return o1.getDocInfo().getPath().compareTo(o2.getDocInfo().getPath());\n            }\n         }\n      });\n      columnSortHandler.setComparator(documentColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            return o1.getDocInfo().getName().compareTo(o2.getDocInfo().getName());\n         }\n      });\n      columnSortHandler.setComparator(statisticColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            // StatsByWords is always true for TransUnitCountGraph used in this\n            // table\n            boolean statsByWords = true;\n            if (o1.getDocInfo().getStats().getApprovedPercent(statsByWords) == o2.getDocInfo().getStats().getApprovedPercent(statsByWords))\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getApprovedPercent(statsByWords) > o2.getDocInfo().getStats().getApprovedPercent(statsByWords) ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      columnSortHandler.setComparator(translatedColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getStats().getWordCount().getApproved() == o2.getDocInfo().getStats().getWordCount().getApproved())\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getWordCount().getApproved() > o2.getDocInfo().getStats().getWordCount().getApproved() ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      columnSortHandler.setComparator(untranslatedColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getStats().getWordCount().getUntranslated() == o2.getDocInfo().getStats().getWordCount().getUntranslated())\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getWordCount().getUntranslated() > o2.getDocInfo().getStats().getWordCount().getUntranslated() ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      columnSortHandler.setComparator(remainingColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getStats().getRemainingWordsHours() == o2.getDocInfo().getStats().getRemainingWordsHours())\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getRemainingWordsHours() > o2.getDocInfo().getStats().getRemainingWordsHours() ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      addColumnSortHandler(columnSortHandler);\n      getColumnSortList().push(directoryColumn);\n   }","id":20310,"modified_method":"private void addSorting(final ListDataProvider<DocumentNode> dataProvider)\n   {\n      ListHandler<DocumentNode> columnSortHandler = new ListHandler<DocumentNode>(dataProvider.getList());\n      columnSortHandler.setComparator(directoryColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getPath() == null || o2.getDocInfo().getPath() == null)\n            {\n               return (o1.getDocInfo().getPath() == null) ? -1 : 1;\n            }\n            else\n            {\n               return o1.getDocInfo().getPath().compareTo(o2.getDocInfo().getPath());\n            }\n         }\n      });\n      columnSortHandler.setComparator(documentColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            return o1.getDocInfo().getName().compareTo(o2.getDocInfo().getName());\n         }\n      });\n      columnSortHandler.setComparator(statisticColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            // StatsByWords is always true for TransUnitCountGraph used in this\n            // table\n            boolean statsByWords = true;\n            if (o1.getDocInfo().getStats().getApprovedPercent(statsByWords) == o2.getDocInfo().getStats().getApprovedPercent(statsByWords))\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getApprovedPercent(statsByWords) > o2.getDocInfo().getStats().getApprovedPercent(statsByWords) ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      columnSortHandler.setComparator(translatedColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getStats().getWordCount().getApproved() == o2.getDocInfo().getStats().getWordCount().getApproved())\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getWordCount().getApproved() > o2.getDocInfo().getStats().getWordCount().getApproved() ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      columnSortHandler.setComparator(untranslatedColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getStats().getWordCount().getUntranslated() == o2.getDocInfo().getStats().getWordCount().getUntranslated())\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getWordCount().getUntranslated() > o2.getDocInfo().getStats().getWordCount().getUntranslated() ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      columnSortHandler.setComparator(remainingColumn, new Comparator<DocumentNode>()\n      {\n         public int compare(DocumentNode o1, DocumentNode o2)\n         {\n            if (o1.getDocInfo().getStats().getRemainingHours() == o2.getDocInfo().getStats().getRemainingHours())\n            {\n               return 0;\n            }\n            if (o1 != null && o2 != null)\n            {\n               return o1.getDocInfo().getStats().getRemainingHours() > o2.getDocInfo().getStats().getRemainingHours() ? 1 : -1;\n            }\n            return -1;\n         }\n      });\n      addColumnSortHandler(columnSortHandler);\n      getColumnSortList().push(directoryColumn);\n   }","commit_id":"aed6918571a4f6f9bce2af87b104c613f6784671","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public String getValue(DocumentNode object)\n   {\n      if (statsOption.equals(STATS_OPTION_MESSAGE))\n      {\n         return messages.statusBarLabelHours(object.getDocInfo().getStats().getRemainingMsgHours());\n      }\n      else\n      {\n         return messages.statusBarLabelHours(object.getDocInfo().getStats().getRemainingWordsHours());\n      }\n   }","id":20311,"modified_method":"@Override\n   public String getValue(DocumentNode object)\n   {\n      return messages.statusBarLabelHours(object.getDocInfo().getStats().getRemainingHours());\n   }","commit_id":"aed6918571a4f6f9bce2af87b104c613f6784671","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public ContainerTranslationStatistics\n   getStatistics(String projectSlug, String iterationSlug, boolean includeDetails, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if( locales.length == 0 )\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[ iterationLocales.size() ];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[ locales.length ];\n         for( int i=0; i<locales.length; i++ )\n         {\n            localeIds[i] = new LocaleId( locales[i] );\n         }\n      }\n\n      HProjectIteration iteration = projectIterationDAO.getBySlug(projectSlug, iterationSlug);\n\n      if( iteration == null )\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug);\n      }\n\n      Map<String, TransUnitCount> transUnitIterationStats = projectIterationDAO.getAllStatisticsForContainer(iteration.getId());\n      Map<String, TransUnitWords> wordIterationStats = null;\n\n      if( includeWordStats )\n      {\n         wordIterationStats = projectIterationDAO.getAllWordStatsStatistics(iteration.getId());\n      }\n\n\n      ContainerTranslationStatistics iterationStats = new ContainerTranslationStatistics();\n      iterationStats.setId(iterationSlug);\n      iterationStats.addRef( new Link(URI.create(zPathService.generatePathForProjectIteration(iteration)), \"statSource\", \"PROJ_ITER\"));\n\n      long iterationTotalMssgs = projectIterationDAO.getTotalCountForIteration(iteration.getId());\n      long iterationTotalWords = projectIterationDAO.getTotalWordCountForIteration(iteration.getId());\n\n      for( LocaleId locId : localeIds )\n      {\n         TransUnitCount count = transUnitIterationStats.get( locId.getId() );\n\n         // trans unit level stats\n         TranslationStatistics transUnitStats = new TranslationStatistics();\n         transUnitStats.setLocale( locId.getId() );\n         transUnitStats.setUnit(TranslationStatistics.StatUnit.MESSAGE);\n         // Stats might not return anything if nothing is translated\n         if( count == null )\n         {\n            transUnitStats.setTranslated( 0 );\n            transUnitStats.setUntranslated( iterationTotalMssgs );\n            transUnitStats.setNeedReview( 0 );\n            transUnitStats.setTotal( iterationTotalMssgs );\n         }\n         else\n         {\n            transUnitStats.setTranslated( count.get(ContentState.Approved) );\n            transUnitStats.setUntranslated(count.get(ContentState.New));\n            transUnitStats.setNeedReview(count.get(ContentState.NeedReview));\n            transUnitStats.setTotal( count.getTotal() );\n         }\n         iterationStats.addStats(transUnitStats);\n\n         // word level stats\n         if( includeWordStats )\n         {\n            TransUnitWords wordCount = wordIterationStats.get(locId.getId());\n\n            TranslationStatistics wordStats = new TranslationStatistics();\n            wordStats.setLocale( locId.getId() );\n            wordStats.setUnit(TranslationStatistics.StatUnit.WORD);\n\n            if( wordCount == null )\n            {\n               wordStats.setTranslated( 0 );\n               wordStats.setUntranslated( iterationTotalWords );\n               wordStats.setNeedReview( 0 );\n               wordStats.setTotal( iterationTotalWords );\n            }\n            else\n            {\n               wordStats.setTranslated( wordCount.get(ContentState.Approved) );\n               wordStats.setUntranslated( wordCount.get(ContentState.New) );\n               wordStats.setNeedReview( wordCount.get(ContentState.NeedReview) );\n               wordStats.setTotal( wordCount.getTotal() );\n            }\n            iterationStats.addStats(wordStats);\n         }\n      }\n\n      // TODO Do in a single query\n      if( includeDetails )\n      {\n         for( String docId : iteration.getDocuments().keySet() )\n         {\n            iterationStats.addDetailedStats(\n                  this.getStatistics(projectSlug, iterationSlug, docId, includeWordStats, locales)\n            );\n         }\n      }\n\n      return iterationStats;\n   }","id":20312,"modified_method":"@Override\n   public ContainerTranslationStatistics getStatistics(String projectSlug, String iterationSlug, boolean includeDetails, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if (locales.length == 0)\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[iterationLocales.size()];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[locales.length];\n         for (int i = 0; i < locales.length; i++)\n         {\n            localeIds[i] = new LocaleId(locales[i]);\n         }\n      }\n\n      HProjectIteration iteration = projectIterationDAO.getBySlug(projectSlug, iterationSlug);\n\n      if (iteration == null)\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug);\n      }\n\n      Map<String, TransUnitWords> wordIterationStats = projectIterationDAO.getAllWordStatsStatistics(iteration.getId());\n      Map<String, TransUnitCount> transUnitIterationStats = projectIterationDAO.getAllStatisticsForContainer(iteration.getId());\n\n      ContainerTranslationStatistics iterationStats = new ContainerTranslationStatistics();\n      iterationStats.setId(iterationSlug);\n      iterationStats.addRef(new Link(URI.create(zPathService.generatePathForProjectIteration(iteration)), \"statSource\", \"PROJ_ITER\"));\n\n      long iterationTotalMssgs = projectIterationDAO.getTotalCountForIteration(iteration.getId());\n      long iterationTotalWords = projectIterationDAO.getTotalWordCountForIteration(iteration.getId());\n\n      for (LocaleId locId : localeIds)\n      {\n         // word level stats\n         TransUnitWords wordCount = wordIterationStats.get(locId.getId());\n         TranslationStatistics wordStats;\n\n         if (wordCount == null)\n         {\n            wordCount = new TransUnitWords(0, 0, (int) iterationTotalWords);\n         }\n         wordStats = getWordsStats(wordCount, locId);\n         wordStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         iterationStats.addStats(wordStats);\n\n         // trans unit level stats\n         TransUnitCount count = transUnitIterationStats.get(locId.getId());\n         TranslationStatistics transUnitStats;\n\n         if (count == null)\n         {\n            count = new TransUnitCount(0, 0, (int) iterationTotalMssgs);\n         }\n         transUnitStats = getMessageStats(count, locId);\n         transUnitStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         iterationStats.addStats(transUnitStats);\n      }\n\n      // TODO Do in a single query\n      if (includeDetails)\n      {\n         for (String docId : iteration.getDocuments().keySet())\n         {\n            iterationStats.addDetailedStats(this.getStatistics(projectSlug, iterationSlug, docId, includeWordStats, locales));\n         }\n      }\n\n      return iterationStats;\n   }","commit_id":"aed6918571a4f6f9bce2af87b104c613f6784671","url":"https://github.com/zanata/zanata-server"},{"original_method":"@Override\n   public ContainerTranslationStatistics\n   getStatistics(String projectSlug, String iterationSlug, String docId, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if( locales.length == 0 )\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[ iterationLocales.size() ];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[ locales.length ];\n         for( int i=0; i<locales.length; i++ )\n         {\n            localeIds[i] = new LocaleId( locales[i] );\n         }\n      }\n\n      HDocument document = documentDAO.getByProjectIterationAndDocId(projectSlug, iterationSlug, docId);\n\n      if( document == null )\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug + \"/\" + docId);\n      }\n\n      Map<LocaleId, TranslationStats> statsMap = documentDAO.getStatistics(document.getId(), localeIds);\n\n      ContainerTranslationStatistics docStats = new ContainerTranslationStatistics();\n      docStats.setId(docId);\n      docStats.addRef(new Link(URI.create(zPathService.generatePathForDocument(document)), \"statSource\", \"DOC\"));\n\n      long docTotalMssgs = documentDAO.getTotalCountForDocument( document );\n      long docTotalWords = documentDAO.getTotalWordCountForDocument( document );\n\n      for( LocaleId locale : localeIds )\n      {\n         TranslationStats stats = statsMap.get( locale );\n         TransUnitCount count;\n         TransUnitWords wordCount;\n\n         if( stats == null )\n         {\n            count = new TransUnitCount(0, 0, (int)docTotalMssgs);\n            wordCount = new TransUnitWords(0, 0, (int)docTotalWords);\n         }\n         else\n         {\n            count = stats.getUnitCount();\n            wordCount = stats.getWordCount();\n         }\n\n         // trans unit level stats\n         TranslationStatistics transUnitStats = new TranslationStatistics();\n         transUnitStats.setLocale( locale.getId() );\n         transUnitStats.setUnit(TranslationStatistics.StatUnit.MESSAGE);\n         transUnitStats.setTranslated( count.get(ContentState.Approved) );\n         transUnitStats.setUntranslated(count.get(ContentState.New));\n         transUnitStats.setNeedReview(count.get(ContentState.NeedReview));\n         transUnitStats.setTotal( count.getTotal() );\n         docStats.addStats(transUnitStats);\n\n         // word level stats\n         if( includeWordStats )\n         {\n            TranslationStatistics wordStats = new TranslationStatistics();\n            wordStats.setLocale( locale.getId() );\n            wordStats.setUnit(TranslationStatistics.StatUnit.WORD);\n            wordStats.setTranslated( wordCount.get(ContentState.Approved) );\n            wordStats.setUntranslated( wordCount.get(ContentState.New) );\n            wordStats.setNeedReview( wordCount.get(ContentState.NeedReview) );\n            wordStats.setTotal( wordCount.getTotal() );\n            docStats.addStats(wordStats);\n         }\n      }\n\n      return docStats;\n   }","id":20313,"modified_method":"@Override\n   public ContainerTranslationStatistics getStatistics(String projectSlug, String iterationSlug, String docId, boolean includeWordStats, String[] locales)\n   {\n      LocaleId[] localeIds;\n\n      // if no locales are specified, search in all locales\n      if (locales.length == 0)\n      {\n         List<HLocale> iterationLocales = localeServiceImpl.getSupportedLangugeByProjectIteration(projectSlug, iterationSlug);\n         localeIds = new LocaleId[iterationLocales.size()];\n         for (int i = 0, iterationLocalesSize = iterationLocales.size(); i < iterationLocalesSize; i++)\n         {\n            HLocale loc = iterationLocales.get(i);\n            localeIds[i] = loc.getLocaleId();\n         }\n      }\n      else\n      {\n         localeIds = new LocaleId[locales.length];\n         for (int i = 0; i < locales.length; i++)\n         {\n            localeIds[i] = new LocaleId(locales[i]);\n         }\n      }\n\n      HDocument document = documentDAO.getByProjectIterationAndDocId(projectSlug, iterationSlug, docId);\n\n      if (document == null)\n      {\n         throw new NoSuchEntityException(projectSlug + \"/\" + iterationSlug + \"/\" + docId);\n      }\n\n      Map<LocaleId, TranslationStats> statsMap = documentDAO.getStatistics(document.getId(), localeIds);\n\n      ContainerTranslationStatistics docStats = new ContainerTranslationStatistics();\n      docStats.setId(docId);\n      docStats.addRef(new Link(URI.create(zPathService.generatePathForDocument(document)), \"statSource\", \"DOC\"));\n\n      long docTotalMssgs = documentDAO.getTotalCountForDocument(document);\n      long docTotalWords = documentDAO.getTotalWordCountForDocument(document);\n\n      for (LocaleId locale : localeIds)\n      {\n         TranslationStats stats = statsMap.get(locale);\n         TransUnitCount count;\n         TransUnitWords wordCount;\n\n         if (stats == null)\n         {\n            count = new TransUnitCount(0, 0, (int) docTotalMssgs);\n            wordCount = new TransUnitWords(0, 0, (int) docTotalWords);\n         }\n         else\n         {\n            count = stats.getUnitCount();\n            wordCount = stats.getWordCount();\n         }\n\n         // word level stats\n         TranslationStatistics wordStats = getWordsStats(wordCount, locale);\n         wordStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         docStats.addStats(wordStats);\n\n         // trans unit level stats\n         TranslationStatistics transUnitStats = getMessageStats(count, locale);\n         transUnitStats.setRemainingHours(getRemainingHours(wordCount.get(ContentState.NeedReview), wordCount.get(ContentState.New)));\n         docStats.addStats(transUnitStats);\n      }\n\n      return docStats;\n   }","commit_id":"aed6918571a4f6f9bce2af87b104c613f6784671","url":"https://github.com/zanata/zanata-server"},{"original_method":"private void setLabelText()\n   {\n      switch (labelFormat)\n      {\n      case PERCENT_COMPLETE_HRS:\n         if (statsByWords)\n         {\n            label.setText(messages.statusBarPercentageHrs(stats.getApprovedPercent(statsByWords), stats.getRemainingWordsHours()));\n         }\n         else\n         {\n            label.setText(messages.statusBarPercentageHrs(stats.getApprovedPercent(statsByWords), stats.getRemainingMsgHours()));\n         }\n         break;\n      case PERCENT_COMPLETE:\n         label.setText(messages.statusBarLabelPercentage(stats.getApprovedPercent(statsByWords)));\n         break;\n      default:\n         label.setText(\"error: \" + labelFormat.name());\n      }\n   }","id":20314,"modified_method":"private void setLabelText()\n   {\n      switch (labelFormat)\n      {\n      case PERCENT_COMPLETE_HRS:\n         label.setText(messages.statusBarPercentageHrs(stats.getApprovedPercent(statsByWords), stats.getRemainingHours()));\n         break;\n      case PERCENT_COMPLETE:\n         label.setText(messages.statusBarLabelPercentage(stats.getApprovedPercent(statsByWords)));\n         break;\n      default:\n         label.setText(\"error: \" + labelFormat.name());\n      }\n   }","commit_id":"aed6918571a4f6f9bce2af87b104c613f6784671","url":"https://github.com/zanata/zanata-server"},{"original_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = ((HighlyAvailableGraphDatabase) slaveDb).getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( 0, txs );\n    }","id":20315,"modified_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = ((HighlyAvailableGraphDatabase) slaveDb).getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( slaveNumber, txs );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"FakeBroker( Master master )\n    {\n        this.master = master;\n    }","id":20316,"modified_method":"FakeBroker( Master master, int slaveNumber )\n    {\n        this.master = master;\n        this.slaveNumber = slaveNumber;\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist locally?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return new Response<Integer>( id, new TransactionStreams() );\n        }\n        \n        // No? Create it then\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","id":20317,"modified_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n        \n        // No? Create it then\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Relationship relationship : relationships )\n            {\n                lockManager.getReadLock( relationship );\n                lockReleaser.addLockToTransaction( relationship, LockType.READ );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20318,"modified_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        return acquireLock( context, eventIdentifier, READ_LOCK_GRABBER, relationships );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Node node : nodes )\n            {\n                lockManager.getWriteLock( node );\n                lockReleaser.addLockToTransaction( node, LockType.WRITE );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20319,"modified_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        return acquireLock( context, eventIdentifier, WRITE_LOCK_GRABBER, nodes );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Node node : nodes )\n            {\n                lockManager.getReadLock( node );\n                lockReleaser.addLockToTransaction( node, LockType.READ );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20320,"modified_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        return acquireLock( context, eventIdentifier, READ_LOCK_GRABBER, nodes );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            txManager.rollback();\n            return new Response<Void>( null, new TransactionStreams() );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20321,"modified_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            txManager.rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Relationship relationship : relationships )\n            {\n                lockManager.getWriteLock( relationship );\n                lockReleaser.addLockToTransaction( relationship, LockType.WRITE );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20322,"modified_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        return acquireLock( context, eventIdentifier, WRITE_LOCK_GRABBER, relationships );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> pullUpdates( SlaveContext context )\n    {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":20323,"modified_method":"public Response<Void> pullUpdates( SlaveContext context )\n    {\n        return packResponse( context, null, ALL );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<IdAllocation> allocateIds( SlaveContext context, IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        int size = 10;\n        long[] ids = new long[size];\n        for ( int i = 0; i < size; i++ )\n        {\n            ids[i] = generator.nextId();\n        }\n        return new Response<IdAllocation>( new IdAllocation( ids, generator.getHighId(),\n                generator.getDefragCount() ), new TransactionStreams() );\n    }","id":20324,"modified_method":"public Response<IdAllocation> allocateIds( SlaveContext context, IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        int size = 10;\n        long[] ids = new long[size];\n        for ( int i = 0; i < size; i++ )\n        {\n            ids[i] = generator.nextId();\n        }\n        \n        return packResponse( context, new IdAllocation( ids, generator.getHighId(),\n                generator.getDefragCount() ), ALL );\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void close()\n    {\n    }","id":20325,"modified_method":"public void close()\n    {\n        this.localIdGenerator.close();\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Long storeLocally( IdAllocation allocation )\n    {\n        this.highestIdInUse = allocation.getHighestIdInUse();\n        this.defragCount = allocation.getDefragCount();\n        for ( long id : allocation.getIds() )\n        {\n            idQueue.add( id );\n        }\n        return idQueue.poll();\n    }","id":20326,"modified_method":"private Long storeLocally( IdAllocation allocation )\n    {\n        this.highestIdInUse = allocation.getHighestIdInUse();\n        this.defragCount = allocation.getDefragCount();\n        for ( long id : allocation.getIds() )\n        {\n            idQueue.add( id );\n        }\n        updateLocalIdGenerator();\n        return idQueue.poll();\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void create( String fileName )\n        {\n        }","id":20327,"modified_method":"public void create( String fileName )\n        {\n            IdGeneratorFactory.DEFAULT.create( fileName );\n        }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveIdGenerator( IdType idType, long highestIdInUse, Broker broker,\n            ResponseReceiver receiver )\n    {\n        this.idType = idType;\n        this.highestIdInUse = highestIdInUse;\n        this.broker = broker;\n        this.receiver = receiver;\n    }","id":20328,"modified_method":"public SlaveIdGenerator( IdType idType, long highestIdInUse, Broker broker,\n            ResponseReceiver receiver, IdGenerator localIdGenerator )\n    {\n        this.idType = idType;\n        this.highestIdInUse = highestIdInUse;\n        this.broker = broker;\n        this.receiver = receiver;\n        this.localIdGenerator = localIdGenerator;\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdGenerator open( String fileName, int grabSize, IdType idType, long highestIdInUse )\n        {\n            return new SlaveIdGenerator( idType, highestIdInUse, broker, receiver );\n        }","id":20329,"modified_method":"public IdGenerator open( String fileName, int grabSize, IdType idType, long highestIdInUse )\n        {\n            IdGenerator localIdGenerator = IdGeneratorFactory.DEFAULT.open( fileName, grabSize,\n                    idType, highestIdInUse );\n            IdGenerator generator = new SlaveIdGenerator( idType, highestIdInUse, broker, receiver,\n                    localIdGenerator );\n            generators.put( idType, generator );\n            return generator;\n        }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdGenerator get( IdType idType )\n        {\n            // TODO Auto-generated method stub\n            return null;\n        }","id":20330,"modified_method":"public IdGenerator get( IdType idType )\n        {\n            return generators.get( idType );\n        }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verify( GraphDatabaseService refDb, GraphDatabaseService... dbs )\n    {\n        for ( Node node : refDb.getAllNodes() )\n        {\n            for ( GraphDatabaseService otherDb : dbs )\n            {\n                Node otherNode = otherDb.getNodeById( node.getId() );\n                verifyNode( node, otherNode, otherDb );\n            }\n        }\n    }","id":20331,"modified_method":"private void verify( GraphDatabaseService refDb, GraphDatabaseService... dbs )\n    {\n        for ( Node node : refDb.getAllNodes() )\n        {\n            int counter = 0;\n            for ( GraphDatabaseService otherDb : dbs )\n            {\n                if ( verificationFilter.accept( counter++ ) )\n                {\n                    Node otherNode = otherDb.getNodeById( node.getId() );\n                    verifyNode( node, otherNode, otherDb );\n                }\n            }\n        }\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void initializeDbs()\n    {\n        try\n        {\n            FileUtils.deleteDirectory( SLAVE_PATH );\n            FileUtils.deleteDirectory( MASTER_PATH );\n            GraphDatabaseService masterDb =\n                    new EmbeddedGraphDatabase( MASTER_PATH.getAbsolutePath() );\n            masterDb.shutdown();\n            FileUtils.copyDirectory( MASTER_PATH, SLAVE_PATH );\n            master = new FakeMaster( MASTER_PATH.getAbsolutePath() );\n            broker = new FakeBroker( master ); \n            haDb = new HighlyAvailableGraphDatabase( SLAVE_PATH.getAbsolutePath(),\n                    new HashMap<String, String>(), broker );\n            broker.setSlave( haDb );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":20332,"modified_method":"private void initializeDbs( int numSlaves )\n    {\n        try\n        {\n            FileUtils.deleteDirectory( PARENT_PATH );\n            GraphDatabaseService masterDb =\n                    new EmbeddedGraphDatabase( MASTER_PATH.getAbsolutePath() );\n            masterDb.shutdown();\n            for ( int i = 0; i < numSlaves; i++ )\n            {\n                FileUtils.copyDirectory( MASTER_PATH, slavePath( i ) );\n            }\n            haDbs = new ArrayList<GraphDatabaseService>();\n            master = new FakeMaster( MASTER_PATH.getAbsolutePath() );\n            for ( int i = 0; i < numSlaves; i++ )\n            {\n                File slavePath = slavePath( i );\n                FakeBroker broker = new FakeBroker( master, i ); \n                GraphDatabaseService db = new HighlyAvailableGraphDatabase(\n                        slavePath.getAbsolutePath(), new HashMap<String, String>(), broker );\n                haDbs.add( db );\n                broker.setSlave( db );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void slaveCreateNode()\n    {\n        initializeDbs();\n        Transaction tx = haDb.beginTx();\n        try\n        {\n            Node node = haDb.createNode();\n            haDb.getReferenceNode().createRelationshipTo( node, REL_TYPE );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        verify( master.getGraphDb(), haDb );\n    }","id":20333,"modified_method":"@Test\n    public void slaveCreateNode() throws Exception\n    {\n        initializeDbs( 1 );\n        GraphDatabaseService haDb = haDbs.get( 0 );\n        Transaction tx = haDb.beginTx();\n        try\n        {\n            Node node1 = haDb.createNode();\n            Relationship rel1 = haDb.getReferenceNode().createRelationshipTo( node1, REL_TYPE );\n            node1.setProperty( \"name\", \"Mattias\" );\n            rel1.setProperty( \"something else\", \"Somewhat different\" );\n            \n            Node node2 = haDb.createNode();\n            Relationship rel2 = node1.createRelationshipTo( node2, REL_TYPE );\n            node2.setProperty( \"why o why\", \"Stuff\" );\n            rel2.setProperty( \"random integer\", \"4\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verifyProperties( PropertyContainer entity, PropertyContainer otherEntity )\n    {\n        Set<String> otherKeys = IteratorUtil.addToCollection(\n                otherEntity.getPropertyKeys().iterator(), new HashSet<String>() );\n        for ( String key : entity.getPropertyKeys() )\n        {\n            Object value1 = entity.getProperty( key );\n            Object value2 = otherEntity.getProperty( key );\n            if ( !value1.equals( value2 ) )\n            {\n                throw new RuntimeException( entity + \" not equals property '\" + key + \"': \" +\n                        value1 + \", \" + value2 );\n            }\n            otherKeys.remove( key );\n        }\n        if ( !otherKeys.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherEntity + \" has more properties: \" +\n                    otherKeys );\n        }\n    }","id":20334,"modified_method":"private static void verifyProperties( PropertyContainer entity, PropertyContainer otherEntity )\n    {\n        Set<String> otherKeys = IteratorUtil.addToCollection(\n                otherEntity.getPropertyKeys().iterator(), new HashSet<String>() );\n        for ( String key : entity.getPropertyKeys() )\n        {\n            Object value1 = entity.getProperty( key );\n            Object value2 = otherEntity.getProperty( key );\n            System.out.println( tab( entity instanceof Relationship ? 2 : 1 ) +\n                    \"*\" + key + \"=\" + value1 );\n            if ( !value1.equals( value2 ) )\n            {\n                throw new RuntimeException( entity + \" not equals property '\" + key + \"': \" +\n                        value1 + \", \" + value2 );\n            }\n            otherKeys.remove( key );\n        }\n        if ( !otherKeys.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherEntity + \" has more properties: \" +\n                    otherKeys );\n        }\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verifyNode( Node node, Node otherNode, GraphDatabaseService otherDb )\n    {\n        verifyProperties( node, otherNode );\n        Set<Long> otherRelIds = new HashSet<Long>();\n        for ( Relationship otherRel : otherNode.getRelationships( Direction.OUTGOING ) )\n        {\n            otherRelIds.add( otherRel.getId() );\n        }\n        \n        for ( Relationship rel : node.getRelationships( Direction.OUTGOING ) )\n        {\n            Relationship otherRel = otherDb.getRelationshipById( rel.getId() );\n            verifyProperties( rel, otherRel );\n            if ( rel.getStartNode().getId() != otherRel.getStartNode().getId() )\n            {\n                throw new RuntimeException( \"Start node differs on \" + rel );\n            }\n            if ( rel.getEndNode().getId() != otherRel.getEndNode().getId() )\n            {\n                throw new RuntimeException( \"End node differs on \" + rel );\n            }\n            if ( !rel.getType().name().equals( otherRel.getType().name() ) )\n            {\n                throw new RuntimeException( \"Type differs on \" + rel );\n            }\n            otherRelIds.remove( rel.getId() );\n        }\n        \n        if ( !otherRelIds.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherNode + \" has more relationships \" +\n                    otherRelIds );\n        }\n    }","id":20335,"modified_method":"private static void verifyNode( Node node, Node otherNode, GraphDatabaseService otherDb )\n    {\n        System.out.println( \"[\" + node + \"]\" );\n        verifyProperties( node, otherNode );\n        Set<Long> otherRelIds = new HashSet<Long>();\n        for ( Relationship otherRel : otherNode.getRelationships( Direction.OUTGOING ) )\n        {\n            otherRelIds.add( otherRel.getId() );\n        }\n        \n        for ( Relationship rel : node.getRelationships( Direction.OUTGOING ) )\n        {\n            Relationship otherRel = otherDb.getRelationshipById( rel.getId() );\n            System.out.println( tab( 1 ) + rel.getStartNode() + \" --[\" +\n                    rel.getType().name() + \",\" + rel.getId() + \"]-> \" + rel.getEndNode() );\n            verifyProperties( rel, otherRel );\n            if ( rel.getStartNode().getId() != otherRel.getStartNode().getId() )\n            {\n                throw new RuntimeException( \"Start node differs on \" + rel );\n            }\n            if ( rel.getEndNode().getId() != otherRel.getEndNode().getId() )\n            {\n                throw new RuntimeException( \"End node differs on \" + rel );\n            }\n            if ( !rel.getType().name().equals( otherRel.getType().name() ) )\n            {\n                throw new RuntimeException( \"Type differs on \" + rel );\n            }\n            otherRelIds.remove( rel.getId() );\n        }\n        \n        if ( !otherRelIds.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherNode + \" has more relationships \" +\n                    otherRelIds );\n        }\n    }","commit_id":"898f1d9e280d31842aecd1dcf1c99ac7234bf2b9","url":"https://github.com/neo4j/neo4j"},{"original_method":"FakeBroker( Master master )\n    {\n        this.master = master;\n    }","id":20336,"modified_method":"FakeBroker( Master master, int slaveNumber )\n    {\n        this.master = master;\n        this.slaveNumber = slaveNumber;\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = ((HighlyAvailableGraphDatabase) slaveDb).getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( 0, txs );\n    }","id":20337,"modified_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = ((HighlyAvailableGraphDatabase) slaveDb).getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( slaveNumber, txs );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Node node : nodes )\n            {\n                lockManager.getWriteLock( node );\n                lockReleaser.addLockToTransaction( node, LockType.WRITE );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20338,"modified_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        return acquireLock( context, eventIdentifier, WRITE_LOCK_GRABBER, nodes );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Relationship relationship : relationships )\n            {\n                lockManager.getWriteLock( relationship );\n                lockReleaser.addLockToTransaction( relationship, LockType.WRITE );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20339,"modified_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        return acquireLock( context, eventIdentifier, WRITE_LOCK_GRABBER, relationships );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            txManager.rollback();\n            return new Response<Void>( null, new TransactionStreams() );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20340,"modified_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            txManager.rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Node node : nodes )\n            {\n                lockManager.getReadLock( node );\n                lockReleaser.addLockToTransaction( node, LockType.READ );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20341,"modified_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        return acquireLock( context, eventIdentifier, READ_LOCK_GRABBER, nodes );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> pullUpdates( SlaveContext context )\n    {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":20342,"modified_method":"public Response<Void> pullUpdates( SlaveContext context )\n    {\n        return packResponse( context, null, ALL );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Relationship relationship : relationships )\n            {\n                lockManager.getReadLock( relationship );\n                lockReleaser.addLockToTransaction( relationship, LockType.READ );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20343,"modified_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        return acquireLock( context, eventIdentifier, READ_LOCK_GRABBER, relationships );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<IdAllocation> allocateIds( SlaveContext context, IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        int size = 10;\n        long[] ids = new long[size];\n        for ( int i = 0; i < size; i++ )\n        {\n            ids[i] = generator.nextId();\n        }\n        return new Response<IdAllocation>( new IdAllocation( ids, generator.getHighId(),\n                generator.getDefragCount() ), new TransactionStreams() );\n    }","id":20344,"modified_method":"public Response<IdAllocation> allocateIds( SlaveContext context, IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        int size = 10;\n        long[] ids = new long[size];\n        for ( int i = 0; i < size; i++ )\n        {\n            ids[i] = generator.nextId();\n        }\n        \n        return packResponse( context, new IdAllocation( ids, generator.getHighId(),\n                generator.getDefragCount() ), ALL );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist locally?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return new Response<Integer>( id, new TransactionStreams() );\n        }\n        \n        // No? Create it then\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","id":20345,"modified_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n        \n        // No? Create it then\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdGenerator open( String fileName, int grabSize, IdType idType, long highestIdInUse )\n        {\n            return new SlaveIdGenerator( idType, highestIdInUse, broker, receiver );\n        }","id":20346,"modified_method":"public IdGenerator open( String fileName, int grabSize, IdType idType, long highestIdInUse )\n        {\n            IdGenerator localIdGenerator = IdGeneratorFactory.DEFAULT.open( fileName, grabSize,\n                    idType, highestIdInUse );\n            IdGenerator generator = new SlaveIdGenerator( idType, highestIdInUse, broker, receiver,\n                    localIdGenerator );\n            generators.put( idType, generator );\n            return generator;\n        }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdGenerator get( IdType idType )\n        {\n            // TODO Auto-generated method stub\n            return null;\n        }","id":20347,"modified_method":"public IdGenerator get( IdType idType )\n        {\n            return generators.get( idType );\n        }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void close()\n    {\n    }","id":20348,"modified_method":"public void close()\n    {\n        this.localIdGenerator.close();\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveIdGenerator( IdType idType, long highestIdInUse, Broker broker,\n            ResponseReceiver receiver )\n    {\n        this.idType = idType;\n        this.highestIdInUse = highestIdInUse;\n        this.broker = broker;\n        this.receiver = receiver;\n    }","id":20349,"modified_method":"public SlaveIdGenerator( IdType idType, long highestIdInUse, Broker broker,\n            ResponseReceiver receiver, IdGenerator localIdGenerator )\n    {\n        this.idType = idType;\n        this.highestIdInUse = highestIdInUse;\n        this.broker = broker;\n        this.receiver = receiver;\n        this.localIdGenerator = localIdGenerator;\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Long storeLocally( IdAllocation allocation )\n    {\n        this.highestIdInUse = allocation.getHighestIdInUse();\n        this.defragCount = allocation.getDefragCount();\n        for ( long id : allocation.getIds() )\n        {\n            idQueue.add( id );\n        }\n        return idQueue.poll();\n    }","id":20350,"modified_method":"private Long storeLocally( IdAllocation allocation )\n    {\n        this.highestIdInUse = allocation.getHighestIdInUse();\n        this.defragCount = allocation.getDefragCount();\n        for ( long id : allocation.getIds() )\n        {\n            idQueue.add( id );\n        }\n        updateLocalIdGenerator();\n        return idQueue.poll();\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void create( String fileName )\n        {\n        }","id":20351,"modified_method":"public void create( String fileName )\n        {\n            IdGeneratorFactory.DEFAULT.create( fileName );\n        }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verifyNode( Node node, Node otherNode, GraphDatabaseService otherDb )\n    {\n        verifyProperties( node, otherNode );\n        Set<Long> otherRelIds = new HashSet<Long>();\n        for ( Relationship otherRel : otherNode.getRelationships( Direction.OUTGOING ) )\n        {\n            otherRelIds.add( otherRel.getId() );\n        }\n        \n        for ( Relationship rel : node.getRelationships( Direction.OUTGOING ) )\n        {\n            Relationship otherRel = otherDb.getRelationshipById( rel.getId() );\n            verifyProperties( rel, otherRel );\n            if ( rel.getStartNode().getId() != otherRel.getStartNode().getId() )\n            {\n                throw new RuntimeException( \"Start node differs on \" + rel );\n            }\n            if ( rel.getEndNode().getId() != otherRel.getEndNode().getId() )\n            {\n                throw new RuntimeException( \"End node differs on \" + rel );\n            }\n            if ( !rel.getType().name().equals( otherRel.getType().name() ) )\n            {\n                throw new RuntimeException( \"Type differs on \" + rel );\n            }\n            otherRelIds.remove( rel.getId() );\n        }\n        \n        if ( !otherRelIds.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherNode + \" has more relationships \" +\n                    otherRelIds );\n        }\n    }","id":20352,"modified_method":"private static void verifyNode( Node node, Node otherNode, GraphDatabaseService otherDb )\n    {\n        System.out.println( \"[\" + node + \"]\" );\n        verifyProperties( node, otherNode );\n        Set<Long> otherRelIds = new HashSet<Long>();\n        for ( Relationship otherRel : otherNode.getRelationships( Direction.OUTGOING ) )\n        {\n            otherRelIds.add( otherRel.getId() );\n        }\n        \n        for ( Relationship rel : node.getRelationships( Direction.OUTGOING ) )\n        {\n            Relationship otherRel = otherDb.getRelationshipById( rel.getId() );\n            System.out.println( tab( 1 ) + rel.getStartNode() + \" --[\" +\n                    rel.getType().name() + \",\" + rel.getId() + \"]-> \" + rel.getEndNode() );\n            verifyProperties( rel, otherRel );\n            if ( rel.getStartNode().getId() != otherRel.getStartNode().getId() )\n            {\n                throw new RuntimeException( \"Start node differs on \" + rel );\n            }\n            if ( rel.getEndNode().getId() != otherRel.getEndNode().getId() )\n            {\n                throw new RuntimeException( \"End node differs on \" + rel );\n            }\n            if ( !rel.getType().name().equals( otherRel.getType().name() ) )\n            {\n                throw new RuntimeException( \"Type differs on \" + rel );\n            }\n            otherRelIds.remove( rel.getId() );\n        }\n        \n        if ( !otherRelIds.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherNode + \" has more relationships \" +\n                    otherRelIds );\n        }\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void initializeDbs()\n    {\n        try\n        {\n            FileUtils.deleteDirectory( SLAVE_PATH );\n            FileUtils.deleteDirectory( MASTER_PATH );\n            GraphDatabaseService masterDb =\n                    new EmbeddedGraphDatabase( MASTER_PATH.getAbsolutePath() );\n            masterDb.shutdown();\n            FileUtils.copyDirectory( MASTER_PATH, SLAVE_PATH );\n            master = new FakeMaster( MASTER_PATH.getAbsolutePath() );\n            broker = new FakeBroker( master ); \n            haDb = new HighlyAvailableGraphDatabase( SLAVE_PATH.getAbsolutePath(),\n                    new HashMap<String, String>(), broker );\n            broker.setSlave( haDb );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":20353,"modified_method":"private void initializeDbs( int numSlaves )\n    {\n        try\n        {\n            FileUtils.deleteDirectory( PARENT_PATH );\n            GraphDatabaseService masterDb =\n                    new EmbeddedGraphDatabase( MASTER_PATH.getAbsolutePath() );\n            masterDb.shutdown();\n            for ( int i = 0; i < numSlaves; i++ )\n            {\n                FileUtils.copyDirectory( MASTER_PATH, slavePath( i ) );\n            }\n            haDbs = new ArrayList<GraphDatabaseService>();\n            master = new FakeMaster( MASTER_PATH.getAbsolutePath() );\n            for ( int i = 0; i < numSlaves; i++ )\n            {\n                File slavePath = slavePath( i );\n                FakeBroker broker = new FakeBroker( master, i ); \n                GraphDatabaseService db = new HighlyAvailableGraphDatabase(\n                        slavePath.getAbsolutePath(), new HashMap<String, String>(), broker );\n                haDbs.add( db );\n                broker.setSlave( db );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verify( GraphDatabaseService refDb, GraphDatabaseService... dbs )\n    {\n        for ( Node node : refDb.getAllNodes() )\n        {\n            for ( GraphDatabaseService otherDb : dbs )\n            {\n                Node otherNode = otherDb.getNodeById( node.getId() );\n                verifyNode( node, otherNode, otherDb );\n            }\n        }\n    }","id":20354,"modified_method":"private void verify( GraphDatabaseService refDb, GraphDatabaseService... dbs )\n    {\n        for ( Node node : refDb.getAllNodes() )\n        {\n            int counter = 0;\n            for ( GraphDatabaseService otherDb : dbs )\n            {\n                if ( verificationFilter.accept( counter++ ) )\n                {\n                    Node otherNode = otherDb.getNodeById( node.getId() );\n                    verifyNode( node, otherNode, otherDb );\n                }\n            }\n        }\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void slaveCreateNode()\n    {\n        initializeDbs();\n        Transaction tx = haDb.beginTx();\n        try\n        {\n            Node node = haDb.createNode();\n            haDb.getReferenceNode().createRelationshipTo( node, REL_TYPE );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        verify( master.getGraphDb(), haDb );\n    }","id":20355,"modified_method":"@Test\n    public void slaveCreateNode() throws Exception\n    {\n        initializeDbs( 1 );\n        GraphDatabaseService haDb = haDbs.get( 0 );\n        Transaction tx = haDb.beginTx();\n        try\n        {\n            Node node1 = haDb.createNode();\n            Relationship rel1 = haDb.getReferenceNode().createRelationshipTo( node1, REL_TYPE );\n            node1.setProperty( \"name\", \"Mattias\" );\n            rel1.setProperty( \"something else\", \"Somewhat different\" );\n            \n            Node node2 = haDb.createNode();\n            Relationship rel2 = node1.createRelationshipTo( node2, REL_TYPE );\n            node2.setProperty( \"why o why\", \"Stuff\" );\n            rel2.setProperty( \"random integer\", \"4\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verifyProperties( PropertyContainer entity, PropertyContainer otherEntity )\n    {\n        Set<String> otherKeys = IteratorUtil.addToCollection(\n                otherEntity.getPropertyKeys().iterator(), new HashSet<String>() );\n        for ( String key : entity.getPropertyKeys() )\n        {\n            Object value1 = entity.getProperty( key );\n            Object value2 = otherEntity.getProperty( key );\n            if ( !value1.equals( value2 ) )\n            {\n                throw new RuntimeException( entity + \" not equals property '\" + key + \"': \" +\n                        value1 + \", \" + value2 );\n            }\n            otherKeys.remove( key );\n        }\n        if ( !otherKeys.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherEntity + \" has more properties: \" +\n                    otherKeys );\n        }\n    }","id":20356,"modified_method":"private static void verifyProperties( PropertyContainer entity, PropertyContainer otherEntity )\n    {\n        Set<String> otherKeys = IteratorUtil.addToCollection(\n                otherEntity.getPropertyKeys().iterator(), new HashSet<String>() );\n        for ( String key : entity.getPropertyKeys() )\n        {\n            Object value1 = entity.getProperty( key );\n            Object value2 = otherEntity.getProperty( key );\n            System.out.println( tab( entity instanceof Relationship ? 2 : 1 ) +\n                    \"*\" + key + \"=\" + value1 );\n            if ( !value1.equals( value2 ) )\n            {\n                throw new RuntimeException( entity + \" not equals property '\" + key + \"': \" +\n                        value1 + \", \" + value2 );\n            }\n            otherKeys.remove( key );\n        }\n        if ( !otherKeys.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherEntity + \" has more properties: \" +\n                    otherKeys );\n        }\n    }","commit_id":"e38af5a638dc678a74b0f04520d62d18c2722952","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = ((HighlyAvailableGraphDatabase) slaveDb).getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( 0, txs );\n    }","id":20357,"modified_method":"public SlaveContext getSlaveContext()\n    {\n        Config config = ((HighlyAvailableGraphDatabase) slaveDb).getConfig();\n        Map<String, Long> txs = new HashMap<String, Long>();\n        for ( XaDataSource dataSource :\n                config.getTxModule().getXaDataSourceManager().getAllRegisteredDataSources() )\n        {\n            txs.put( dataSource.getName(), dataSource.getLastCommittedTxId() );\n        }\n        return new SlaveContext( slaveNumber, txs );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"FakeBroker( Master master )\n    {\n        this.master = master;\n    }","id":20358,"modified_method":"FakeBroker( Master master, int slaveNumber )\n    {\n        this.master = master;\n        this.slaveNumber = slaveNumber;\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Relationship relationship : relationships )\n            {\n                lockManager.getReadLock( relationship );\n                lockReleaser.addLockToTransaction( relationship, LockType.READ );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20359,"modified_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        return acquireLock( context, eventIdentifier, READ_LOCK_GRABBER, relationships );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist locally?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return new Response<Integer>( id, new TransactionStreams() );\n        }\n        \n        // No? Create it then\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","id":20360,"modified_method":"public Response<Integer> createRelationshipType( SlaveContext context, String name )\n    {\n        // Does this type exist already?\n        Integer id = getConfig().getRelationshipTypeHolder().getIdFor( name );\n        if ( id != null )\n        {\n            // OK, return\n            return packResponse( context, id, ALL );\n        }\n        \n        // No? Create it then\n        Config config = getConfig();\n        id = config.getRelationshipTypeCreator().getOrCreate( txManager,\n                config.getIdGeneratorModule().getIdGenerator(),\n                config.getPersistenceModule().getPersistenceManager(),\n                config.getRelationshipTypeHolder(), name );\n        return packResponse( context, id, ALL );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> pullUpdates( SlaveContext context )\n    {\n        // TODO Auto-generated method stub\n        return null;\n    }","id":20361,"modified_method":"public Response<Void> pullUpdates( SlaveContext context )\n    {\n        return packResponse( context, null, ALL );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Relationship relationship : relationships )\n            {\n                lockManager.getWriteLock( relationship );\n                lockReleaser.addLockToTransaction( relationship, LockType.WRITE );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20362,"modified_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Relationship... relationships )\n    {\n        return acquireLock( context, eventIdentifier, WRITE_LOCK_GRABBER, relationships );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<IdAllocation> allocateIds( SlaveContext context, IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        int size = 10;\n        long[] ids = new long[size];\n        for ( int i = 0; i < size; i++ )\n        {\n            ids[i] = generator.nextId();\n        }\n        return new Response<IdAllocation>( new IdAllocation( ids, generator.getHighId(),\n                generator.getDefragCount() ), new TransactionStreams() );\n    }","id":20363,"modified_method":"public Response<IdAllocation> allocateIds( SlaveContext context, IdType idType )\n    {\n        IdGeneratorFactory factory = getConfig().getIdGeneratorFactory();\n        IdGenerator generator = factory.get( idType );\n        int size = 10;\n        long[] ids = new long[size];\n        for ( int i = 0; i < size; i++ )\n        {\n            ids[i] = generator.nextId();\n        }\n        \n        return packResponse( context, new IdAllocation( ids, generator.getHighId(),\n                generator.getDefragCount() ), ALL );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Node node : nodes )\n            {\n                lockManager.getWriteLock( node );\n                lockReleaser.addLockToTransaction( node, LockType.WRITE );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20364,"modified_method":"public Response<LockResult> acquireWriteLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        return acquireLock( context, eventIdentifier, WRITE_LOCK_GRABBER, nodes );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        TxIdElement tx = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( tx );\n        try\n        {\n            LockManager lockManager = getConfig().getLockManager();\n            LockReleaser lockReleaser = getConfig().getLockReleaser();\n            for ( Node node : nodes )\n            {\n                lockManager.getReadLock( node );\n                lockReleaser.addLockToTransaction( node, LockType.READ );\n            }\n            return new Response<LockResult>( new LockResult( LockStatus.OK_LOCKED ),\n                    new TransactionStreams() );\n        }\n        catch ( DeadlockDetectedException e )\n        {\n            return new Response<LockResult>( new LockResult( e.getMessage() ),\n                    new TransactionStreams() );\n        }\n        catch ( IllegalResourceException e )\n        {\n            return new Response<LockResult>( new LockResult( LockStatus.NOT_LOCKED ),\n                    new TransactionStreams() );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20365,"modified_method":"public Response<LockResult> acquireReadLock( SlaveContext context, int eventIdentifier,\n            Node... nodes )\n    {\n        return acquireLock( context, eventIdentifier, READ_LOCK_GRABBER, nodes );\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            txManager.rollback();\n            return new Response<Void>( null, new TransactionStreams() );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","id":20366,"modified_method":"public Response<Void> rollbackTransaction( SlaveContext context, int eventIdentifier )\n    {\n        TxIdElement txId = new TxIdElement( context.slaveId(), eventIdentifier );\n        Transaction otherTx = suspendOtherAndResumeThis( txId );\n        try\n        {\n            Transaction tx = transactions.get( txId );\n            if ( tx == null )\n            {\n                throw new RuntimeException( \"Shouldn't happen\" );\n            }\n            txManager.rollback();\n            return packResponse( context, null, ALL );\n        }\n        catch ( IllegalStateException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SecurityException e )\n        {\n            throw new RuntimeException( e );\n        }\n        catch ( SystemException e )\n        {\n            throw new RuntimeException( e );\n        }\n        finally\n        {\n            suspendThisAndResumeOther( otherTx );\n        }\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdGenerator get( IdType idType )\n        {\n            // TODO Auto-generated method stub\n            return null;\n        }","id":20367,"modified_method":"public IdGenerator get( IdType idType )\n        {\n            return generators.get( idType );\n        }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void close()\n    {\n    }","id":20368,"modified_method":"public void close()\n    {\n        this.localIdGenerator.close();\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void create( String fileName )\n        {\n        }","id":20369,"modified_method":"public void create( String fileName )\n        {\n            IdGeneratorFactory.DEFAULT.create( fileName );\n        }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public IdGenerator open( String fileName, int grabSize, IdType idType, long highestIdInUse )\n        {\n            return new SlaveIdGenerator( idType, highestIdInUse, broker, receiver );\n        }","id":20370,"modified_method":"public IdGenerator open( String fileName, int grabSize, IdType idType, long highestIdInUse )\n        {\n            IdGenerator localIdGenerator = IdGeneratorFactory.DEFAULT.open( fileName, grabSize,\n                    idType, highestIdInUse );\n            IdGenerator generator = new SlaveIdGenerator( idType, highestIdInUse, broker, receiver,\n                    localIdGenerator );\n            generators.put( idType, generator );\n            return generator;\n        }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public SlaveIdGenerator( IdType idType, long highestIdInUse, Broker broker,\n            ResponseReceiver receiver )\n    {\n        this.idType = idType;\n        this.highestIdInUse = highestIdInUse;\n        this.broker = broker;\n        this.receiver = receiver;\n    }","id":20371,"modified_method":"public SlaveIdGenerator( IdType idType, long highestIdInUse, Broker broker,\n            ResponseReceiver receiver, IdGenerator localIdGenerator )\n    {\n        this.idType = idType;\n        this.highestIdInUse = highestIdInUse;\n        this.broker = broker;\n        this.receiver = receiver;\n        this.localIdGenerator = localIdGenerator;\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Long storeLocally( IdAllocation allocation )\n    {\n        this.highestIdInUse = allocation.getHighestIdInUse();\n        this.defragCount = allocation.getDefragCount();\n        for ( long id : allocation.getIds() )\n        {\n            idQueue.add( id );\n        }\n        return idQueue.poll();\n    }","id":20372,"modified_method":"private Long storeLocally( IdAllocation allocation )\n    {\n        this.highestIdInUse = allocation.getHighestIdInUse();\n        this.defragCount = allocation.getDefragCount();\n        for ( long id : allocation.getIds() )\n        {\n            idQueue.add( id );\n        }\n        updateLocalIdGenerator();\n        return idQueue.poll();\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void slaveCreateNode()\n    {\n        initializeDbs();\n        Transaction tx = haDb.beginTx();\n        try\n        {\n            Node node = haDb.createNode();\n            haDb.getReferenceNode().createRelationshipTo( node, REL_TYPE );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n        verify( master.getGraphDb(), haDb );\n    }","id":20373,"modified_method":"@Test\n    public void slaveCreateNode() throws Exception\n    {\n        initializeDbs( 1 );\n        GraphDatabaseService haDb = haDbs.get( 0 );\n        Transaction tx = haDb.beginTx();\n        try\n        {\n            Node node1 = haDb.createNode();\n            Relationship rel1 = haDb.getReferenceNode().createRelationshipTo( node1, REL_TYPE );\n            node1.setProperty( \"name\", \"Mattias\" );\n            rel1.setProperty( \"something else\", \"Somewhat different\" );\n            \n            Node node2 = haDb.createNode();\n            Relationship rel2 = node1.createRelationshipTo( node2, REL_TYPE );\n            node2.setProperty( \"why o why\", \"Stuff\" );\n            rel2.setProperty( \"random integer\", \"4\" );\n            tx.success();\n        }\n        finally\n        {\n            tx.finish();\n        }\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void initializeDbs()\n    {\n        try\n        {\n            FileUtils.deleteDirectory( SLAVE_PATH );\n            FileUtils.deleteDirectory( MASTER_PATH );\n            GraphDatabaseService masterDb =\n                    new EmbeddedGraphDatabase( MASTER_PATH.getAbsolutePath() );\n            masterDb.shutdown();\n            FileUtils.copyDirectory( MASTER_PATH, SLAVE_PATH );\n            master = new FakeMaster( MASTER_PATH.getAbsolutePath() );\n            broker = new FakeBroker( master ); \n            haDb = new HighlyAvailableGraphDatabase( SLAVE_PATH.getAbsolutePath(),\n                    new HashMap<String, String>(), broker );\n            broker.setSlave( haDb );\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","id":20374,"modified_method":"private void initializeDbs( int numSlaves )\n    {\n        try\n        {\n            FileUtils.deleteDirectory( PARENT_PATH );\n            GraphDatabaseService masterDb =\n                    new EmbeddedGraphDatabase( MASTER_PATH.getAbsolutePath() );\n            masterDb.shutdown();\n            for ( int i = 0; i < numSlaves; i++ )\n            {\n                FileUtils.copyDirectory( MASTER_PATH, slavePath( i ) );\n            }\n            haDbs = new ArrayList<GraphDatabaseService>();\n            master = new FakeMaster( MASTER_PATH.getAbsolutePath() );\n            for ( int i = 0; i < numSlaves; i++ )\n            {\n                File slavePath = slavePath( i );\n                FakeBroker broker = new FakeBroker( master, i ); \n                GraphDatabaseService db = new HighlyAvailableGraphDatabase(\n                        slavePath.getAbsolutePath(), new HashMap<String, String>(), broker );\n                haDbs.add( db );\n                broker.setSlave( db );\n            }\n        }\n        catch ( IOException e )\n        {\n            throw new RuntimeException( e );\n        }\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verify( GraphDatabaseService refDb, GraphDatabaseService... dbs )\n    {\n        for ( Node node : refDb.getAllNodes() )\n        {\n            for ( GraphDatabaseService otherDb : dbs )\n            {\n                Node otherNode = otherDb.getNodeById( node.getId() );\n                verifyNode( node, otherNode, otherDb );\n            }\n        }\n    }","id":20375,"modified_method":"private void verify( GraphDatabaseService refDb, GraphDatabaseService... dbs )\n    {\n        for ( Node node : refDb.getAllNodes() )\n        {\n            int counter = 0;\n            for ( GraphDatabaseService otherDb : dbs )\n            {\n                if ( verificationFilter.accept( counter++ ) )\n                {\n                    Node otherNode = otherDb.getNodeById( node.getId() );\n                    verifyNode( node, otherNode, otherDb );\n                }\n            }\n        }\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verifyNode( Node node, Node otherNode, GraphDatabaseService otherDb )\n    {\n        verifyProperties( node, otherNode );\n        Set<Long> otherRelIds = new HashSet<Long>();\n        for ( Relationship otherRel : otherNode.getRelationships( Direction.OUTGOING ) )\n        {\n            otherRelIds.add( otherRel.getId() );\n        }\n        \n        for ( Relationship rel : node.getRelationships( Direction.OUTGOING ) )\n        {\n            Relationship otherRel = otherDb.getRelationshipById( rel.getId() );\n            verifyProperties( rel, otherRel );\n            if ( rel.getStartNode().getId() != otherRel.getStartNode().getId() )\n            {\n                throw new RuntimeException( \"Start node differs on \" + rel );\n            }\n            if ( rel.getEndNode().getId() != otherRel.getEndNode().getId() )\n            {\n                throw new RuntimeException( \"End node differs on \" + rel );\n            }\n            if ( !rel.getType().name().equals( otherRel.getType().name() ) )\n            {\n                throw new RuntimeException( \"Type differs on \" + rel );\n            }\n            otherRelIds.remove( rel.getId() );\n        }\n        \n        if ( !otherRelIds.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherNode + \" has more relationships \" +\n                    otherRelIds );\n        }\n    }","id":20376,"modified_method":"private static void verifyNode( Node node, Node otherNode, GraphDatabaseService otherDb )\n    {\n        System.out.println( \"[\" + node + \"]\" );\n        verifyProperties( node, otherNode );\n        Set<Long> otherRelIds = new HashSet<Long>();\n        for ( Relationship otherRel : otherNode.getRelationships( Direction.OUTGOING ) )\n        {\n            otherRelIds.add( otherRel.getId() );\n        }\n        \n        for ( Relationship rel : node.getRelationships( Direction.OUTGOING ) )\n        {\n            Relationship otherRel = otherDb.getRelationshipById( rel.getId() );\n            System.out.println( tab( 1 ) + rel.getStartNode() + \" --[\" +\n                    rel.getType().name() + \",\" + rel.getId() + \"]-> \" + rel.getEndNode() );\n            verifyProperties( rel, otherRel );\n            if ( rel.getStartNode().getId() != otherRel.getStartNode().getId() )\n            {\n                throw new RuntimeException( \"Start node differs on \" + rel );\n            }\n            if ( rel.getEndNode().getId() != otherRel.getEndNode().getId() )\n            {\n                throw new RuntimeException( \"End node differs on \" + rel );\n            }\n            if ( !rel.getType().name().equals( otherRel.getType().name() ) )\n            {\n                throw new RuntimeException( \"Type differs on \" + rel );\n            }\n            otherRelIds.remove( rel.getId() );\n        }\n        \n        if ( !otherRelIds.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherNode + \" has more relationships \" +\n                    otherRelIds );\n        }\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void verifyProperties( PropertyContainer entity, PropertyContainer otherEntity )\n    {\n        Set<String> otherKeys = IteratorUtil.addToCollection(\n                otherEntity.getPropertyKeys().iterator(), new HashSet<String>() );\n        for ( String key : entity.getPropertyKeys() )\n        {\n            Object value1 = entity.getProperty( key );\n            Object value2 = otherEntity.getProperty( key );\n            if ( !value1.equals( value2 ) )\n            {\n                throw new RuntimeException( entity + \" not equals property '\" + key + \"': \" +\n                        value1 + \", \" + value2 );\n            }\n            otherKeys.remove( key );\n        }\n        if ( !otherKeys.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherEntity + \" has more properties: \" +\n                    otherKeys );\n        }\n    }","id":20377,"modified_method":"private static void verifyProperties( PropertyContainer entity, PropertyContainer otherEntity )\n    {\n        Set<String> otherKeys = IteratorUtil.addToCollection(\n                otherEntity.getPropertyKeys().iterator(), new HashSet<String>() );\n        for ( String key : entity.getPropertyKeys() )\n        {\n            Object value1 = entity.getProperty( key );\n            Object value2 = otherEntity.getProperty( key );\n            System.out.println( tab( entity instanceof Relationship ? 2 : 1 ) +\n                    \"*\" + key + \"=\" + value1 );\n            if ( !value1.equals( value2 ) )\n            {\n                throw new RuntimeException( entity + \" not equals property '\" + key + \"': \" +\n                        value1 + \", \" + value2 );\n            }\n            otherKeys.remove( key );\n        }\n        if ( !otherKeys.isEmpty() )\n        {\n            throw new RuntimeException( \"Other node \" + otherEntity + \" has more properties: \" +\n                    otherKeys );\n        }\n    }","commit_id":"88d962cf10f8f92b54816ec387d32cefaa08d019","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static JSONObject toJSONObject(Account model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"accountId\", model.getAccountId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"parentAccountId\", model.getParentAccountId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"legalName\", model.getLegalName());\n\t\tjsonObj.put(\"legalId\", model.getLegalId());\n\t\tjsonObj.put(\"legalType\", model.getLegalType());\n\t\tjsonObj.put(\"sicCode\", model.getSicCode());\n\t\tjsonObj.put(\"tickerSymbol\", model.getTickerSymbol());\n\t\tjsonObj.put(\"industry\", model.getIndustry());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"size\", model.getSize());\n\n\t\treturn jsonObj;\n\t}","id":20378,"modified_method":"public static JSONObject toJSONObject(Account model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"accountId\", model.getAccountId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"parentAccountId\", model.getParentAccountId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"legalName\", model.getLegalName());\n\t\tjsonObj.put(\"legalId\", model.getLegalId());\n\t\tjsonObj.put(\"legalType\", model.getLegalType());\n\t\tjsonObj.put(\"sicCode\", model.getSicCode());\n\t\tjsonObj.put(\"tickerSymbol\", model.getTickerSymbol());\n\t\tjsonObj.put(\"industry\", model.getIndustry());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"size\", model.getSize());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(Address model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"addressId\", model.getAddressId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"street1\", model.getStreet1());\n\t\tjsonObj.put(\"street2\", model.getStreet2());\n\t\tjsonObj.put(\"street3\", model.getStreet3());\n\t\tjsonObj.put(\"city\", model.getCity());\n\t\tjsonObj.put(\"zip\", model.getZip());\n\t\tjsonObj.put(\"regionId\", model.getRegionId());\n\t\tjsonObj.put(\"countryId\", model.getCountryId());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"mailing\", model.getMailing());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","id":20379,"modified_method":"public static JSONObject toJSONObject(Address model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"addressId\", model.getAddressId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"street1\", model.getStreet1());\n\t\tjsonObj.put(\"street2\", model.getStreet2());\n\t\tjsonObj.put(\"street3\", model.getStreet3());\n\t\tjsonObj.put(\"city\", model.getCity());\n\t\tjsonObj.put(\"zip\", model.getZip());\n\t\tjsonObj.put(\"regionId\", model.getRegionId());\n\t\tjsonObj.put(\"countryId\", model.getCountryId());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"mailing\", model.getMailing());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(AnnouncementsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"content\", model.getContent());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"displayDate\", model.getDisplayDate().getTime());\n\t\tjsonObj.put(\"expirationDate\", model.getExpirationDate().getTime());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\t\tjsonObj.put(\"alert\", model.getAlert());\n\n\t\treturn jsonObj;\n\t}","id":20380,"modified_method":"public static JSONObject toJSONObject(AnnouncementsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"content\", model.getContent());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"type\", model.getType());\n\n\t\tDate displayDate = model.getDisplayDate();\n\n\t\tString displayDateJSON = StringPool.BLANK;\n\n\t\tif (displayDate != null) {\n\t\t\tdisplayDateJSON = String.valueOf(displayDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"displayDate\", displayDateJSON);\n\n\t\tDate expirationDate = model.getExpirationDate();\n\n\t\tString expirationDateJSON = StringPool.BLANK;\n\n\t\tif (expirationDate != null) {\n\t\t\texpirationDateJSON = String.valueOf(expirationDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"expirationDate\", expirationDateJSON);\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\t\tjsonObj.put(\"alert\", model.getAlert());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(AnnouncementsFlag model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"flagId\", model.getFlagId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"value\", model.getValue());\n\n\t\treturn jsonObj;\n\t}","id":20381,"modified_method":"public static JSONObject toJSONObject(AnnouncementsFlag model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"flagId\", model.getFlagId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"value\", model.getValue());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(BlogsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"urlTitle\", model.getUrlTitle());\n\t\tjsonObj.put(\"content\", model.getContent());\n\t\tjsonObj.put(\"displayDate\", model.getDisplayDate().getTime());\n\t\tjsonObj.put(\"draft\", model.getDraft());\n\t\tjsonObj.put(\"allowTrackbacks\", model.getAllowTrackbacks());\n\t\tjsonObj.put(\"trackbacks\", model.getTrackbacks());\n\n\t\treturn jsonObj;\n\t}","id":20382,"modified_method":"public static JSONObject toJSONObject(BlogsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"urlTitle\", model.getUrlTitle());\n\t\tjsonObj.put(\"content\", model.getContent());\n\n\t\tDate displayDate = model.getDisplayDate();\n\n\t\tString displayDateJSON = StringPool.BLANK;\n\n\t\tif (displayDate != null) {\n\t\t\tdisplayDateJSON = String.valueOf(displayDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"displayDate\", displayDateJSON);\n\t\tjsonObj.put(\"draft\", model.getDraft());\n\t\tjsonObj.put(\"allowTrackbacks\", model.getAllowTrackbacks());\n\t\tjsonObj.put(\"trackbacks\", model.getTrackbacks());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(BookmarksEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\t\tjsonObj.put(\"visits\", model.getVisits());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\n\t\treturn jsonObj;\n\t}","id":20383,"modified_method":"public static JSONObject toJSONObject(BookmarksEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\t\tjsonObj.put(\"visits\", model.getVisits());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(BookmarksFolder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"parentFolderId\", model.getParentFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\treturn jsonObj;\n\t}","id":20384,"modified_method":"public static JSONObject toJSONObject(BookmarksFolder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"parentFolderId\", model.getParentFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(CalEvent model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"eventId\", model.getEventId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"startDate\", model.getStartDate().getTime());\n\t\tjsonObj.put(\"endDate\", model.getEndDate().getTime());\n\t\tjsonObj.put(\"durationHour\", model.getDurationHour());\n\t\tjsonObj.put(\"durationMinute\", model.getDurationMinute());\n\t\tjsonObj.put(\"allDay\", model.getAllDay());\n\t\tjsonObj.put(\"timeZoneSensitive\", model.getTimeZoneSensitive());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"repeating\", model.getRepeating());\n\t\tjsonObj.put(\"recurrence\", model.getRecurrence());\n\t\tjsonObj.put(\"remindBy\", model.getRemindBy());\n\t\tjsonObj.put(\"firstReminder\", model.getFirstReminder());\n\t\tjsonObj.put(\"secondReminder\", model.getSecondReminder());\n\n\t\treturn jsonObj;\n\t}","id":20385,"modified_method":"public static JSONObject toJSONObject(CalEvent model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"eventId\", model.getEventId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\tDate startDate = model.getStartDate();\n\n\t\tString startDateJSON = StringPool.BLANK;\n\n\t\tif (startDate != null) {\n\t\t\tstartDateJSON = String.valueOf(startDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"startDate\", startDateJSON);\n\n\t\tDate endDate = model.getEndDate();\n\n\t\tString endDateJSON = StringPool.BLANK;\n\n\t\tif (endDate != null) {\n\t\t\tendDateJSON = String.valueOf(endDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"endDate\", endDateJSON);\n\t\tjsonObj.put(\"durationHour\", model.getDurationHour());\n\t\tjsonObj.put(\"durationMinute\", model.getDurationMinute());\n\t\tjsonObj.put(\"allDay\", model.getAllDay());\n\t\tjsonObj.put(\"timeZoneSensitive\", model.getTimeZoneSensitive());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"repeating\", model.getRepeating());\n\t\tjsonObj.put(\"recurrence\", model.getRecurrence());\n\t\tjsonObj.put(\"remindBy\", model.getRemindBy());\n\t\tjsonObj.put(\"firstReminder\", model.getFirstReminder());\n\t\tjsonObj.put(\"secondReminder\", model.getSecondReminder());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(Contact model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"contactId\", model.getContactId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"accountId\", model.getAccountId());\n\t\tjsonObj.put(\"parentContactId\", model.getParentContactId());\n\t\tjsonObj.put(\"firstName\", model.getFirstName());\n\t\tjsonObj.put(\"middleName\", model.getMiddleName());\n\t\tjsonObj.put(\"lastName\", model.getLastName());\n\t\tjsonObj.put(\"prefixId\", model.getPrefixId());\n\t\tjsonObj.put(\"suffixId\", model.getSuffixId());\n\t\tjsonObj.put(\"male\", model.getMale());\n\t\tjsonObj.put(\"birthday\", model.getBirthday().getTime());\n\t\tjsonObj.put(\"smsSn\", model.getSmsSn());\n\t\tjsonObj.put(\"aimSn\", model.getAimSn());\n\t\tjsonObj.put(\"facebookSn\", model.getFacebookSn());\n\t\tjsonObj.put(\"icqSn\", model.getIcqSn());\n\t\tjsonObj.put(\"jabberSn\", model.getJabberSn());\n\t\tjsonObj.put(\"msnSn\", model.getMsnSn());\n\t\tjsonObj.put(\"mySpaceSn\", model.getMySpaceSn());\n\t\tjsonObj.put(\"skypeSn\", model.getSkypeSn());\n\t\tjsonObj.put(\"twitterSn\", model.getTwitterSn());\n\t\tjsonObj.put(\"ymSn\", model.getYmSn());\n\t\tjsonObj.put(\"employeeStatusId\", model.getEmployeeStatusId());\n\t\tjsonObj.put(\"employeeNumber\", model.getEmployeeNumber());\n\t\tjsonObj.put(\"jobTitle\", model.getJobTitle());\n\t\tjsonObj.put(\"jobClass\", model.getJobClass());\n\t\tjsonObj.put(\"hoursOfOperation\", model.getHoursOfOperation());\n\n\t\treturn jsonObj;\n\t}","id":20386,"modified_method":"public static JSONObject toJSONObject(Contact model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"contactId\", model.getContactId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"accountId\", model.getAccountId());\n\t\tjsonObj.put(\"parentContactId\", model.getParentContactId());\n\t\tjsonObj.put(\"firstName\", model.getFirstName());\n\t\tjsonObj.put(\"middleName\", model.getMiddleName());\n\t\tjsonObj.put(\"lastName\", model.getLastName());\n\t\tjsonObj.put(\"prefixId\", model.getPrefixId());\n\t\tjsonObj.put(\"suffixId\", model.getSuffixId());\n\t\tjsonObj.put(\"male\", model.getMale());\n\n\t\tDate birthday = model.getBirthday();\n\n\t\tString birthdayJSON = StringPool.BLANK;\n\n\t\tif (birthday != null) {\n\t\t\tbirthdayJSON = String.valueOf(birthday.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"birthday\", birthdayJSON);\n\t\tjsonObj.put(\"smsSn\", model.getSmsSn());\n\t\tjsonObj.put(\"aimSn\", model.getAimSn());\n\t\tjsonObj.put(\"facebookSn\", model.getFacebookSn());\n\t\tjsonObj.put(\"icqSn\", model.getIcqSn());\n\t\tjsonObj.put(\"jabberSn\", model.getJabberSn());\n\t\tjsonObj.put(\"msnSn\", model.getMsnSn());\n\t\tjsonObj.put(\"mySpaceSn\", model.getMySpaceSn());\n\t\tjsonObj.put(\"skypeSn\", model.getSkypeSn());\n\t\tjsonObj.put(\"twitterSn\", model.getTwitterSn());\n\t\tjsonObj.put(\"ymSn\", model.getYmSn());\n\t\tjsonObj.put(\"employeeStatusId\", model.getEmployeeStatusId());\n\t\tjsonObj.put(\"employeeNumber\", model.getEmployeeNumber());\n\t\tjsonObj.put(\"jobTitle\", model.getJobTitle());\n\t\tjsonObj.put(\"jobClass\", model.getJobClass());\n\t\tjsonObj.put(\"hoursOfOperation\", model.getHoursOfOperation());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(DLFileEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"fileEntryId\", model.getFileEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"versionUserId\", model.getVersionUserId());\n\t\tjsonObj.put(\"versionUserName\", model.getVersionUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"size\", model.getSize());\n\t\tjsonObj.put(\"readCount\", model.getReadCount());\n\t\tjsonObj.put(\"extraSettings\", model.getExtraSettings());\n\n\t\treturn jsonObj;\n\t}","id":20387,"modified_method":"public static JSONObject toJSONObject(DLFileEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"fileEntryId\", model.getFileEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"versionUserId\", model.getVersionUserId());\n\t\tjsonObj.put(\"versionUserName\", model.getVersionUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"size\", model.getSize());\n\t\tjsonObj.put(\"readCount\", model.getReadCount());\n\t\tjsonObj.put(\"extraSettings\", model.getExtraSettings());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(DLFileShortcut model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"fileShortcutId\", model.getFileShortcutId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"toFolderId\", model.getToFolderId());\n\t\tjsonObj.put(\"toName\", model.getToName());\n\n\t\treturn jsonObj;\n\t}","id":20388,"modified_method":"public static JSONObject toJSONObject(DLFileShortcut model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"fileShortcutId\", model.getFileShortcutId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"toFolderId\", model.getToFolderId());\n\t\tjsonObj.put(\"toName\", model.getToName());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(DLFolder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"parentFolderId\", model.getParentFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"lastPostDate\", model.getLastPostDate().getTime());\n\n\t\treturn jsonObj;\n\t}","id":20389,"modified_method":"public static JSONObject toJSONObject(DLFolder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"parentFolderId\", model.getParentFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\tDate lastPostDate = model.getLastPostDate();\n\n\t\tString lastPostDateJSON = StringPool.BLANK;\n\n\t\tif (lastPostDate != null) {\n\t\t\tlastPostDateJSON = String.valueOf(lastPostDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lastPostDate\", lastPostDateJSON);\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(EmailAddress model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"emailAddressId\", model.getEmailAddressId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"address\", model.getAddress());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","id":20390,"modified_method":"public static JSONObject toJSONObject(EmailAddress model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"emailAddressId\", model.getEmailAddressId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"address\", model.getAddress());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(IGFolder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"parentFolderId\", model.getParentFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\treturn jsonObj;\n\t}","id":20391,"modified_method":"public static JSONObject toJSONObject(IGFolder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"parentFolderId\", model.getParentFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(IGImage model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"imageId\", model.getImageId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"largeImageId\", model.getLargeImageId());\n\t\tjsonObj.put(\"custom1ImageId\", model.getCustom1ImageId());\n\t\tjsonObj.put(\"custom2ImageId\", model.getCustom2ImageId());\n\n\t\treturn jsonObj;\n\t}","id":20392,"modified_method":"public static JSONObject toJSONObject(IGImage model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"imageId\", model.getImageId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"folderId\", model.getFolderId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"largeImageId\", model.getLargeImageId());\n\t\tjsonObj.put(\"custom1ImageId\", model.getCustom1ImageId());\n\t\tjsonObj.put(\"custom2ImageId\", model.getCustom2ImageId());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(JournalArticle model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"resourcePrimKey\", model.getResourcePrimKey());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"articleId\", model.getArticleId());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"content\", model.getContent());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"templateId\", model.getTemplateId());\n\t\tjsonObj.put(\"displayDate\", model.getDisplayDate().getTime());\n\t\tjsonObj.put(\"approved\", model.getApproved());\n\t\tjsonObj.put(\"approvedByUserId\", model.getApprovedByUserId());\n\t\tjsonObj.put(\"approvedByUserName\", model.getApprovedByUserName());\n\t\tjsonObj.put(\"approvedDate\", model.getApprovedDate().getTime());\n\t\tjsonObj.put(\"expired\", model.getExpired());\n\t\tjsonObj.put(\"expirationDate\", model.getExpirationDate().getTime());\n\t\tjsonObj.put(\"reviewDate\", model.getReviewDate().getTime());\n\t\tjsonObj.put(\"indexable\", model.getIndexable());\n\t\tjsonObj.put(\"smallImage\", model.getSmallImage());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"smallImageURL\", model.getSmallImageURL());\n\n\t\treturn jsonObj;\n\t}","id":20393,"modified_method":"public static JSONObject toJSONObject(JournalArticle model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"resourcePrimKey\", model.getResourcePrimKey());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"articleId\", model.getArticleId());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"content\", model.getContent());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"templateId\", model.getTemplateId());\n\n\t\tDate displayDate = model.getDisplayDate();\n\n\t\tString displayDateJSON = StringPool.BLANK;\n\n\t\tif (displayDate != null) {\n\t\t\tdisplayDateJSON = String.valueOf(displayDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"displayDate\", displayDateJSON);\n\t\tjsonObj.put(\"approved\", model.getApproved());\n\t\tjsonObj.put(\"approvedByUserId\", model.getApprovedByUserId());\n\t\tjsonObj.put(\"approvedByUserName\", model.getApprovedByUserName());\n\n\t\tDate approvedDate = model.getApprovedDate();\n\n\t\tString approvedDateJSON = StringPool.BLANK;\n\n\t\tif (approvedDate != null) {\n\t\t\tapprovedDateJSON = String.valueOf(approvedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"approvedDate\", approvedDateJSON);\n\t\tjsonObj.put(\"expired\", model.getExpired());\n\n\t\tDate expirationDate = model.getExpirationDate();\n\n\t\tString expirationDateJSON = StringPool.BLANK;\n\n\t\tif (expirationDate != null) {\n\t\t\texpirationDateJSON = String.valueOf(expirationDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"expirationDate\", expirationDateJSON);\n\n\t\tDate reviewDate = model.getReviewDate();\n\n\t\tString reviewDateJSON = StringPool.BLANK;\n\n\t\tif (reviewDate != null) {\n\t\t\treviewDateJSON = String.valueOf(reviewDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"reviewDate\", reviewDateJSON);\n\t\tjsonObj.put(\"indexable\", model.getIndexable());\n\t\tjsonObj.put(\"smallImage\", model.getSmallImage());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"smallImageURL\", model.getSmallImageURL());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(JournalFeed model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"feedId\", model.getFeedId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"templateId\", model.getTemplateId());\n\t\tjsonObj.put(\"rendererTemplateId\", model.getRendererTemplateId());\n\t\tjsonObj.put(\"delta\", model.getDelta());\n\t\tjsonObj.put(\"orderByCol\", model.getOrderByCol());\n\t\tjsonObj.put(\"orderByType\", model.getOrderByType());\n\t\tjsonObj.put(\"targetLayoutFriendlyUrl\",\n\t\t\tmodel.getTargetLayoutFriendlyUrl());\n\t\tjsonObj.put(\"targetPortletId\", model.getTargetPortletId());\n\t\tjsonObj.put(\"contentField\", model.getContentField());\n\t\tjsonObj.put(\"feedType\", model.getFeedType());\n\t\tjsonObj.put(\"feedVersion\", model.getFeedVersion());\n\n\t\treturn jsonObj;\n\t}","id":20394,"modified_method":"public static JSONObject toJSONObject(JournalFeed model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"feedId\", model.getFeedId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"templateId\", model.getTemplateId());\n\t\tjsonObj.put(\"rendererTemplateId\", model.getRendererTemplateId());\n\t\tjsonObj.put(\"delta\", model.getDelta());\n\t\tjsonObj.put(\"orderByCol\", model.getOrderByCol());\n\t\tjsonObj.put(\"orderByType\", model.getOrderByType());\n\t\tjsonObj.put(\"targetLayoutFriendlyUrl\",\n\t\t\tmodel.getTargetLayoutFriendlyUrl());\n\t\tjsonObj.put(\"targetPortletId\", model.getTargetPortletId());\n\t\tjsonObj.put(\"contentField\", model.getContentField());\n\t\tjsonObj.put(\"feedType\", model.getFeedType());\n\t\tjsonObj.put(\"feedVersion\", model.getFeedVersion());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(JournalStructure model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"xsd\", model.getXsd());\n\n\t\treturn jsonObj;\n\t}","id":20395,"modified_method":"public static JSONObject toJSONObject(JournalStructure model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"xsd\", model.getXsd());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(JournalTemplate model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"templateId\", model.getTemplateId());\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"xsl\", model.getXsl());\n\t\tjsonObj.put(\"langType\", model.getLangType());\n\t\tjsonObj.put(\"cacheable\", model.getCacheable());\n\t\tjsonObj.put(\"smallImage\", model.getSmallImage());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"smallImageURL\", model.getSmallImageURL());\n\n\t\treturn jsonObj;\n\t}","id":20396,"modified_method":"public static JSONObject toJSONObject(JournalTemplate model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"id\", model.getId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"templateId\", model.getTemplateId());\n\t\tjsonObj.put(\"structureId\", model.getStructureId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"xsl\", model.getXsl());\n\t\tjsonObj.put(\"langType\", model.getLangType());\n\t\tjsonObj.put(\"cacheable\", model.getCacheable());\n\t\tjsonObj.put(\"smallImage\", model.getSmallImage());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"smallImageURL\", model.getSmallImageURL());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(MBBan model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"banId\", model.getBanId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"banUserId\", model.getBanUserId());\n\n\t\treturn jsonObj;\n\t}","id":20397,"modified_method":"public static JSONObject toJSONObject(MBBan model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"banId\", model.getBanId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"banUserId\", model.getBanUserId());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(MBCategory model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"parentCategoryId\", model.getParentCategoryId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"lastPostDate\", model.getLastPostDate().getTime());\n\n\t\treturn jsonObj;\n\t}","id":20398,"modified_method":"public static JSONObject toJSONObject(MBCategory model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"parentCategoryId\", model.getParentCategoryId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\tDate lastPostDate = model.getLastPostDate();\n\n\t\tString lastPostDateJSON = StringPool.BLANK;\n\n\t\tif (lastPostDate != null) {\n\t\t\tlastPostDateJSON = String.valueOf(lastPostDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lastPostDate\", lastPostDateJSON);\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(MBMessage model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"messageId\", model.getMessageId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"threadId\", model.getThreadId());\n\t\tjsonObj.put(\"parentMessageId\", model.getParentMessageId());\n\t\tjsonObj.put(\"subject\", model.getSubject());\n\t\tjsonObj.put(\"body\", model.getBody());\n\t\tjsonObj.put(\"attachments\", model.getAttachments());\n\t\tjsonObj.put(\"anonymous\", model.getAnonymous());\n\n\t\treturn jsonObj;\n\t}","id":20399,"modified_method":"public static JSONObject toJSONObject(MBMessage model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"messageId\", model.getMessageId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"threadId\", model.getThreadId());\n\t\tjsonObj.put(\"parentMessageId\", model.getParentMessageId());\n\t\tjsonObj.put(\"subject\", model.getSubject());\n\t\tjsonObj.put(\"body\", model.getBody());\n\t\tjsonObj.put(\"attachments\", model.getAttachments());\n\t\tjsonObj.put(\"anonymous\", model.getAnonymous());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(MBThread model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"threadId\", model.getThreadId());\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"rootMessageId\", model.getRootMessageId());\n\t\tjsonObj.put(\"messageCount\", model.getMessageCount());\n\t\tjsonObj.put(\"viewCount\", model.getViewCount());\n\t\tjsonObj.put(\"lastPostByUserId\", model.getLastPostByUserId());\n\t\tjsonObj.put(\"lastPostDate\", model.getLastPostDate().getTime());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\n\t\treturn jsonObj;\n\t}","id":20400,"modified_method":"public static JSONObject toJSONObject(MBThread model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"threadId\", model.getThreadId());\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"rootMessageId\", model.getRootMessageId());\n\t\tjsonObj.put(\"messageCount\", model.getMessageCount());\n\t\tjsonObj.put(\"viewCount\", model.getViewCount());\n\t\tjsonObj.put(\"lastPostByUserId\", model.getLastPostByUserId());\n\n\t\tDate lastPostDate = model.getLastPostDate();\n\n\t\tString lastPostDateJSON = StringPool.BLANK;\n\n\t\tif (lastPostDate != null) {\n\t\t\tlastPostDateJSON = String.valueOf(lastPostDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lastPostDate\", lastPostDateJSON);\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(MembershipRequest model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"membershipRequestId\", model.getMembershipRequestId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\t\tjsonObj.put(\"replyComments\", model.getReplyComments());\n\t\tjsonObj.put(\"replyDate\", model.getReplyDate().getTime());\n\t\tjsonObj.put(\"replierUserId\", model.getReplierUserId());\n\t\tjsonObj.put(\"statusId\", model.getStatusId());\n\n\t\treturn jsonObj;\n\t}","id":20401,"modified_method":"public static JSONObject toJSONObject(MembershipRequest model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"membershipRequestId\", model.getMembershipRequestId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\t\tjsonObj.put(\"replyComments\", model.getReplyComments());\n\n\t\tDate replyDate = model.getReplyDate();\n\n\t\tString replyDateJSON = StringPool.BLANK;\n\n\t\tif (replyDate != null) {\n\t\t\treplyDateJSON = String.valueOf(replyDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"replyDate\", replyDateJSON);\n\t\tjsonObj.put(\"replierUserId\", model.getReplierUserId());\n\t\tjsonObj.put(\"statusId\", model.getStatusId());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(PasswordPolicy model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"passwordPolicyId\", model.getPasswordPolicyId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"defaultPolicy\", model.getDefaultPolicy());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"changeable\", model.getChangeable());\n\t\tjsonObj.put(\"changeRequired\", model.getChangeRequired());\n\t\tjsonObj.put(\"minAge\", model.getMinAge());\n\t\tjsonObj.put(\"checkSyntax\", model.getCheckSyntax());\n\t\tjsonObj.put(\"allowDictionaryWords\", model.getAllowDictionaryWords());\n\t\tjsonObj.put(\"minLength\", model.getMinLength());\n\t\tjsonObj.put(\"history\", model.getHistory());\n\t\tjsonObj.put(\"historyCount\", model.getHistoryCount());\n\t\tjsonObj.put(\"expireable\", model.getExpireable());\n\t\tjsonObj.put(\"maxAge\", model.getMaxAge());\n\t\tjsonObj.put(\"warningTime\", model.getWarningTime());\n\t\tjsonObj.put(\"graceLimit\", model.getGraceLimit());\n\t\tjsonObj.put(\"lockout\", model.getLockout());\n\t\tjsonObj.put(\"maxFailure\", model.getMaxFailure());\n\t\tjsonObj.put(\"lockoutDuration\", model.getLockoutDuration());\n\t\tjsonObj.put(\"requireUnlock\", model.getRequireUnlock());\n\t\tjsonObj.put(\"resetFailureCount\", model.getResetFailureCount());\n\n\t\treturn jsonObj;\n\t}","id":20402,"modified_method":"public static JSONObject toJSONObject(PasswordPolicy model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"passwordPolicyId\", model.getPasswordPolicyId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"defaultPolicy\", model.getDefaultPolicy());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"changeable\", model.getChangeable());\n\t\tjsonObj.put(\"changeRequired\", model.getChangeRequired());\n\t\tjsonObj.put(\"minAge\", model.getMinAge());\n\t\tjsonObj.put(\"checkSyntax\", model.getCheckSyntax());\n\t\tjsonObj.put(\"allowDictionaryWords\", model.getAllowDictionaryWords());\n\t\tjsonObj.put(\"minLength\", model.getMinLength());\n\t\tjsonObj.put(\"history\", model.getHistory());\n\t\tjsonObj.put(\"historyCount\", model.getHistoryCount());\n\t\tjsonObj.put(\"expireable\", model.getExpireable());\n\t\tjsonObj.put(\"maxAge\", model.getMaxAge());\n\t\tjsonObj.put(\"warningTime\", model.getWarningTime());\n\t\tjsonObj.put(\"graceLimit\", model.getGraceLimit());\n\t\tjsonObj.put(\"lockout\", model.getLockout());\n\t\tjsonObj.put(\"maxFailure\", model.getMaxFailure());\n\t\tjsonObj.put(\"lockoutDuration\", model.getLockoutDuration());\n\t\tjsonObj.put(\"requireUnlock\", model.getRequireUnlock());\n\t\tjsonObj.put(\"resetFailureCount\", model.getResetFailureCount());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(Phone model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"phoneId\", model.getPhoneId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"number\", model.getNumber());\n\t\tjsonObj.put(\"extension\", model.getExtension());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","id":20403,"modified_method":"public static JSONObject toJSONObject(Phone model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"phoneId\", model.getPhoneId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"number\", model.getNumber());\n\t\tjsonObj.put(\"extension\", model.getExtension());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(PollsQuestion model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"questionId\", model.getQuestionId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"expirationDate\", model.getExpirationDate().getTime());\n\t\tjsonObj.put(\"lastVoteDate\", model.getLastVoteDate().getTime());\n\n\t\treturn jsonObj;\n\t}","id":20404,"modified_method":"public static JSONObject toJSONObject(PollsQuestion model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"questionId\", model.getQuestionId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\tDate expirationDate = model.getExpirationDate();\n\n\t\tString expirationDateJSON = StringPool.BLANK;\n\n\t\tif (expirationDate != null) {\n\t\t\texpirationDateJSON = String.valueOf(expirationDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"expirationDate\", expirationDateJSON);\n\n\t\tDate lastVoteDate = model.getLastVoteDate();\n\n\t\tString lastVoteDateJSON = StringPool.BLANK;\n\n\t\tif (lastVoteDate != null) {\n\t\t\tlastVoteDateJSON = String.valueOf(lastVoteDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lastVoteDate\", lastVoteDateJSON);\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(PollsVote model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"voteId\", model.getVoteId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"questionId\", model.getQuestionId());\n\t\tjsonObj.put(\"choiceId\", model.getChoiceId());\n\t\tjsonObj.put(\"voteDate\", model.getVoteDate().getTime());\n\n\t\treturn jsonObj;\n\t}","id":20405,"modified_method":"public static JSONObject toJSONObject(PollsVote model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"voteId\", model.getVoteId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"questionId\", model.getQuestionId());\n\t\tjsonObj.put(\"choiceId\", model.getChoiceId());\n\n\t\tDate voteDate = model.getVoteDate();\n\n\t\tString voteDateJSON = StringPool.BLANK;\n\n\t\tif (voteDate != null) {\n\t\t\tvoteDateJSON = String.valueOf(voteDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"voteDate\", voteDateJSON);\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(RatingsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"score\", model.getScore());\n\n\t\treturn jsonObj;\n\t}","id":20406,"modified_method":"public static JSONObject toJSONObject(RatingsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"score\", model.getScore());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(SCFrameworkVersion model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"frameworkVersionId\", model.getFrameworkVersionId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"active\", model.getActive());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\n\t\treturn jsonObj;\n\t}","id":20407,"modified_method":"public static JSONObject toJSONObject(SCFrameworkVersion model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"frameworkVersionId\", model.getFrameworkVersionId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"active\", model.getActive());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(SCProductEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"productEntryId\", model.getProductEntryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"tags\", model.getTags());\n\t\tjsonObj.put(\"shortDescription\", model.getShortDescription());\n\t\tjsonObj.put(\"longDescription\", model.getLongDescription());\n\t\tjsonObj.put(\"pageURL\", model.getPageURL());\n\t\tjsonObj.put(\"author\", model.getAuthor());\n\t\tjsonObj.put(\"repoGroupId\", model.getRepoGroupId());\n\t\tjsonObj.put(\"repoArtifactId\", model.getRepoArtifactId());\n\n\t\treturn jsonObj;\n\t}","id":20408,"modified_method":"public static JSONObject toJSONObject(SCProductEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"productEntryId\", model.getProductEntryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"type\", model.getType());\n\t\tjsonObj.put(\"tags\", model.getTags());\n\t\tjsonObj.put(\"shortDescription\", model.getShortDescription());\n\t\tjsonObj.put(\"longDescription\", model.getLongDescription());\n\t\tjsonObj.put(\"pageURL\", model.getPageURL());\n\t\tjsonObj.put(\"author\", model.getAuthor());\n\t\tjsonObj.put(\"repoGroupId\", model.getRepoGroupId());\n\t\tjsonObj.put(\"repoArtifactId\", model.getRepoArtifactId());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(SCProductVersion model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"productVersionId\", model.getProductVersionId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"productEntryId\", model.getProductEntryId());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"changeLog\", model.getChangeLog());\n\t\tjsonObj.put(\"downloadPageURL\", model.getDownloadPageURL());\n\t\tjsonObj.put(\"directDownloadURL\", model.getDirectDownloadURL());\n\t\tjsonObj.put(\"repoStoreArtifact\", model.getRepoStoreArtifact());\n\n\t\treturn jsonObj;\n\t}","id":20409,"modified_method":"public static JSONObject toJSONObject(SCProductVersion model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"productVersionId\", model.getProductVersionId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"productEntryId\", model.getProductEntryId());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"changeLog\", model.getChangeLog());\n\t\tjsonObj.put(\"downloadPageURL\", model.getDownloadPageURL());\n\t\tjsonObj.put(\"directDownloadURL\", model.getDirectDownloadURL());\n\t\tjsonObj.put(\"repoStoreArtifact\", model.getRepoStoreArtifact());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(ShoppingCategory model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"parentCategoryId\", model.getParentCategoryId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\treturn jsonObj;\n\t}","id":20410,"modified_method":"public static JSONObject toJSONObject(ShoppingCategory model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"parentCategoryId\", model.getParentCategoryId());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(ShoppingCoupon model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"couponId\", model.getCouponId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"code\", model.getCode());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"startDate\", model.getStartDate().getTime());\n\t\tjsonObj.put(\"endDate\", model.getEndDate().getTime());\n\t\tjsonObj.put(\"active\", model.getActive());\n\t\tjsonObj.put(\"limitCategories\", model.getLimitCategories());\n\t\tjsonObj.put(\"limitSkus\", model.getLimitSkus());\n\t\tjsonObj.put(\"minOrder\", model.getMinOrder());\n\t\tjsonObj.put(\"discount\", model.getDiscount());\n\t\tjsonObj.put(\"discountType\", model.getDiscountType());\n\n\t\treturn jsonObj;\n\t}","id":20411,"modified_method":"public static JSONObject toJSONObject(ShoppingCoupon model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"couponId\", model.getCouponId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"code\", model.getCode());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\tDate startDate = model.getStartDate();\n\n\t\tString startDateJSON = StringPool.BLANK;\n\n\t\tif (startDate != null) {\n\t\t\tstartDateJSON = String.valueOf(startDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"startDate\", startDateJSON);\n\n\t\tDate endDate = model.getEndDate();\n\n\t\tString endDateJSON = StringPool.BLANK;\n\n\t\tif (endDate != null) {\n\t\t\tendDateJSON = String.valueOf(endDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"endDate\", endDateJSON);\n\t\tjsonObj.put(\"active\", model.getActive());\n\t\tjsonObj.put(\"limitCategories\", model.getLimitCategories());\n\t\tjsonObj.put(\"limitSkus\", model.getLimitSkus());\n\t\tjsonObj.put(\"minOrder\", model.getMinOrder());\n\t\tjsonObj.put(\"discount\", model.getDiscount());\n\t\tjsonObj.put(\"discountType\", model.getDiscountType());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(ShoppingItem model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"itemId\", model.getItemId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"sku\", model.getSku());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"properties\", model.getProperties());\n\t\tjsonObj.put(\"fields\", model.getFields());\n\t\tjsonObj.put(\"fieldsQuantities\", model.getFieldsQuantities());\n\t\tjsonObj.put(\"minQuantity\", model.getMinQuantity());\n\t\tjsonObj.put(\"maxQuantity\", model.getMaxQuantity());\n\t\tjsonObj.put(\"price\", model.getPrice());\n\t\tjsonObj.put(\"discount\", model.getDiscount());\n\t\tjsonObj.put(\"taxable\", model.getTaxable());\n\t\tjsonObj.put(\"shipping\", model.getShipping());\n\t\tjsonObj.put(\"useShippingFormula\", model.getUseShippingFormula());\n\t\tjsonObj.put(\"requiresShipping\", model.getRequiresShipping());\n\t\tjsonObj.put(\"stockQuantity\", model.getStockQuantity());\n\t\tjsonObj.put(\"featured\", model.getFeatured());\n\t\tjsonObj.put(\"sale\", model.getSale());\n\t\tjsonObj.put(\"smallImage\", model.getSmallImage());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"smallImageURL\", model.getSmallImageURL());\n\t\tjsonObj.put(\"mediumImage\", model.getMediumImage());\n\t\tjsonObj.put(\"mediumImageId\", model.getMediumImageId());\n\t\tjsonObj.put(\"mediumImageURL\", model.getMediumImageURL());\n\t\tjsonObj.put(\"largeImage\", model.getLargeImage());\n\t\tjsonObj.put(\"largeImageId\", model.getLargeImageId());\n\t\tjsonObj.put(\"largeImageURL\", model.getLargeImageURL());\n\n\t\treturn jsonObj;\n\t}","id":20412,"modified_method":"public static JSONObject toJSONObject(ShoppingItem model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"itemId\", model.getItemId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"categoryId\", model.getCategoryId());\n\t\tjsonObj.put(\"sku\", model.getSku());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"properties\", model.getProperties());\n\t\tjsonObj.put(\"fields\", model.getFields());\n\t\tjsonObj.put(\"fieldsQuantities\", model.getFieldsQuantities());\n\t\tjsonObj.put(\"minQuantity\", model.getMinQuantity());\n\t\tjsonObj.put(\"maxQuantity\", model.getMaxQuantity());\n\t\tjsonObj.put(\"price\", model.getPrice());\n\t\tjsonObj.put(\"discount\", model.getDiscount());\n\t\tjsonObj.put(\"taxable\", model.getTaxable());\n\t\tjsonObj.put(\"shipping\", model.getShipping());\n\t\tjsonObj.put(\"useShippingFormula\", model.getUseShippingFormula());\n\t\tjsonObj.put(\"requiresShipping\", model.getRequiresShipping());\n\t\tjsonObj.put(\"stockQuantity\", model.getStockQuantity());\n\t\tjsonObj.put(\"featured\", model.getFeatured());\n\t\tjsonObj.put(\"sale\", model.getSale());\n\t\tjsonObj.put(\"smallImage\", model.getSmallImage());\n\t\tjsonObj.put(\"smallImageId\", model.getSmallImageId());\n\t\tjsonObj.put(\"smallImageURL\", model.getSmallImageURL());\n\t\tjsonObj.put(\"mediumImage\", model.getMediumImage());\n\t\tjsonObj.put(\"mediumImageId\", model.getMediumImageId());\n\t\tjsonObj.put(\"mediumImageURL\", model.getMediumImageURL());\n\t\tjsonObj.put(\"largeImage\", model.getLargeImage());\n\t\tjsonObj.put(\"largeImageId\", model.getLargeImageId());\n\t\tjsonObj.put(\"largeImageURL\", model.getLargeImageURL());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(ShoppingOrder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"orderId\", model.getOrderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"number\", model.getNumber());\n\t\tjsonObj.put(\"tax\", model.getTax());\n\t\tjsonObj.put(\"shipping\", model.getShipping());\n\t\tjsonObj.put(\"altShipping\", model.getAltShipping());\n\t\tjsonObj.put(\"requiresShipping\", model.getRequiresShipping());\n\t\tjsonObj.put(\"insure\", model.getInsure());\n\t\tjsonObj.put(\"insurance\", model.getInsurance());\n\t\tjsonObj.put(\"couponCodes\", model.getCouponCodes());\n\t\tjsonObj.put(\"couponDiscount\", model.getCouponDiscount());\n\t\tjsonObj.put(\"billingFirstName\", model.getBillingFirstName());\n\t\tjsonObj.put(\"billingLastName\", model.getBillingLastName());\n\t\tjsonObj.put(\"billingEmailAddress\", model.getBillingEmailAddress());\n\t\tjsonObj.put(\"billingCompany\", model.getBillingCompany());\n\t\tjsonObj.put(\"billingStreet\", model.getBillingStreet());\n\t\tjsonObj.put(\"billingCity\", model.getBillingCity());\n\t\tjsonObj.put(\"billingState\", model.getBillingState());\n\t\tjsonObj.put(\"billingZip\", model.getBillingZip());\n\t\tjsonObj.put(\"billingCountry\", model.getBillingCountry());\n\t\tjsonObj.put(\"billingPhone\", model.getBillingPhone());\n\t\tjsonObj.put(\"shipToBilling\", model.getShipToBilling());\n\t\tjsonObj.put(\"shippingFirstName\", model.getShippingFirstName());\n\t\tjsonObj.put(\"shippingLastName\", model.getShippingLastName());\n\t\tjsonObj.put(\"shippingEmailAddress\", model.getShippingEmailAddress());\n\t\tjsonObj.put(\"shippingCompany\", model.getShippingCompany());\n\t\tjsonObj.put(\"shippingStreet\", model.getShippingStreet());\n\t\tjsonObj.put(\"shippingCity\", model.getShippingCity());\n\t\tjsonObj.put(\"shippingState\", model.getShippingState());\n\t\tjsonObj.put(\"shippingZip\", model.getShippingZip());\n\t\tjsonObj.put(\"shippingCountry\", model.getShippingCountry());\n\t\tjsonObj.put(\"shippingPhone\", model.getShippingPhone());\n\t\tjsonObj.put(\"ccName\", model.getCcName());\n\t\tjsonObj.put(\"ccType\", model.getCcType());\n\t\tjsonObj.put(\"ccNumber\", model.getCcNumber());\n\t\tjsonObj.put(\"ccExpMonth\", model.getCcExpMonth());\n\t\tjsonObj.put(\"ccExpYear\", model.getCcExpYear());\n\t\tjsonObj.put(\"ccVerNumber\", model.getCcVerNumber());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\t\tjsonObj.put(\"ppTxnId\", model.getPpTxnId());\n\t\tjsonObj.put(\"ppPaymentStatus\", model.getPpPaymentStatus());\n\t\tjsonObj.put(\"ppPaymentGross\", model.getPpPaymentGross());\n\t\tjsonObj.put(\"ppReceiverEmail\", model.getPpReceiverEmail());\n\t\tjsonObj.put(\"ppPayerEmail\", model.getPpPayerEmail());\n\t\tjsonObj.put(\"sendOrderEmail\", model.getSendOrderEmail());\n\t\tjsonObj.put(\"sendShippingEmail\", model.getSendShippingEmail());\n\n\t\treturn jsonObj;\n\t}","id":20413,"modified_method":"public static JSONObject toJSONObject(ShoppingOrder model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"orderId\", model.getOrderId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"number\", model.getNumber());\n\t\tjsonObj.put(\"tax\", model.getTax());\n\t\tjsonObj.put(\"shipping\", model.getShipping());\n\t\tjsonObj.put(\"altShipping\", model.getAltShipping());\n\t\tjsonObj.put(\"requiresShipping\", model.getRequiresShipping());\n\t\tjsonObj.put(\"insure\", model.getInsure());\n\t\tjsonObj.put(\"insurance\", model.getInsurance());\n\t\tjsonObj.put(\"couponCodes\", model.getCouponCodes());\n\t\tjsonObj.put(\"couponDiscount\", model.getCouponDiscount());\n\t\tjsonObj.put(\"billingFirstName\", model.getBillingFirstName());\n\t\tjsonObj.put(\"billingLastName\", model.getBillingLastName());\n\t\tjsonObj.put(\"billingEmailAddress\", model.getBillingEmailAddress());\n\t\tjsonObj.put(\"billingCompany\", model.getBillingCompany());\n\t\tjsonObj.put(\"billingStreet\", model.getBillingStreet());\n\t\tjsonObj.put(\"billingCity\", model.getBillingCity());\n\t\tjsonObj.put(\"billingState\", model.getBillingState());\n\t\tjsonObj.put(\"billingZip\", model.getBillingZip());\n\t\tjsonObj.put(\"billingCountry\", model.getBillingCountry());\n\t\tjsonObj.put(\"billingPhone\", model.getBillingPhone());\n\t\tjsonObj.put(\"shipToBilling\", model.getShipToBilling());\n\t\tjsonObj.put(\"shippingFirstName\", model.getShippingFirstName());\n\t\tjsonObj.put(\"shippingLastName\", model.getShippingLastName());\n\t\tjsonObj.put(\"shippingEmailAddress\", model.getShippingEmailAddress());\n\t\tjsonObj.put(\"shippingCompany\", model.getShippingCompany());\n\t\tjsonObj.put(\"shippingStreet\", model.getShippingStreet());\n\t\tjsonObj.put(\"shippingCity\", model.getShippingCity());\n\t\tjsonObj.put(\"shippingState\", model.getShippingState());\n\t\tjsonObj.put(\"shippingZip\", model.getShippingZip());\n\t\tjsonObj.put(\"shippingCountry\", model.getShippingCountry());\n\t\tjsonObj.put(\"shippingPhone\", model.getShippingPhone());\n\t\tjsonObj.put(\"ccName\", model.getCcName());\n\t\tjsonObj.put(\"ccType\", model.getCcType());\n\t\tjsonObj.put(\"ccNumber\", model.getCcNumber());\n\t\tjsonObj.put(\"ccExpMonth\", model.getCcExpMonth());\n\t\tjsonObj.put(\"ccExpYear\", model.getCcExpYear());\n\t\tjsonObj.put(\"ccVerNumber\", model.getCcVerNumber());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\t\tjsonObj.put(\"ppTxnId\", model.getPpTxnId());\n\t\tjsonObj.put(\"ppPaymentStatus\", model.getPpPaymentStatus());\n\t\tjsonObj.put(\"ppPaymentGross\", model.getPpPaymentGross());\n\t\tjsonObj.put(\"ppReceiverEmail\", model.getPpReceiverEmail());\n\t\tjsonObj.put(\"ppPayerEmail\", model.getPpPayerEmail());\n\t\tjsonObj.put(\"sendOrderEmail\", model.getSendOrderEmail());\n\t\tjsonObj.put(\"sendShippingEmail\", model.getSendShippingEmail());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(TagsAsset model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"assetId\", model.getAssetId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"startDate\", model.getStartDate().getTime());\n\t\tjsonObj.put(\"endDate\", model.getEndDate().getTime());\n\t\tjsonObj.put(\"publishDate\", model.getPublishDate().getTime());\n\t\tjsonObj.put(\"expirationDate\", model.getExpirationDate().getTime());\n\t\tjsonObj.put(\"mimeType\", model.getMimeType());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"summary\", model.getSummary());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"height\", model.getHeight());\n\t\tjsonObj.put(\"width\", model.getWidth());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\t\tjsonObj.put(\"viewCount\", model.getViewCount());\n\n\t\treturn jsonObj;\n\t}","id":20414,"modified_method":"public static JSONObject toJSONObject(TagsAsset model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"assetId\", model.getAssetId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\n\t\tDate startDate = model.getStartDate();\n\n\t\tString startDateJSON = StringPool.BLANK;\n\n\t\tif (startDate != null) {\n\t\t\tstartDateJSON = String.valueOf(startDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"startDate\", startDateJSON);\n\n\t\tDate endDate = model.getEndDate();\n\n\t\tString endDateJSON = StringPool.BLANK;\n\n\t\tif (endDate != null) {\n\t\t\tendDateJSON = String.valueOf(endDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"endDate\", endDateJSON);\n\n\t\tDate publishDate = model.getPublishDate();\n\n\t\tString publishDateJSON = StringPool.BLANK;\n\n\t\tif (publishDate != null) {\n\t\t\tpublishDateJSON = String.valueOf(publishDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"publishDate\", publishDateJSON);\n\n\t\tDate expirationDate = model.getExpirationDate();\n\n\t\tString expirationDateJSON = StringPool.BLANK;\n\n\t\tif (expirationDate != null) {\n\t\t\texpirationDateJSON = String.valueOf(expirationDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"expirationDate\", expirationDateJSON);\n\t\tjsonObj.put(\"mimeType\", model.getMimeType());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"summary\", model.getSummary());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"height\", model.getHeight());\n\t\tjsonObj.put(\"width\", model.getWidth());\n\t\tjsonObj.put(\"priority\", model.getPriority());\n\t\tjsonObj.put(\"viewCount\", model.getViewCount());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(TagsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"name\", model.getName());\n\n\t\treturn jsonObj;\n\t}","id":20415,"modified_method":"public static JSONObject toJSONObject(TagsEntry model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"name\", model.getName());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(TagsProperty model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"propertyId\", model.getPropertyId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"key\", model.getKey());\n\t\tjsonObj.put(\"value\", model.getValue());\n\n\t\treturn jsonObj;\n\t}","id":20416,"modified_method":"public static JSONObject toJSONObject(TagsProperty model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"propertyId\", model.getPropertyId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"entryId\", model.getEntryId());\n\t\tjsonObj.put(\"key\", model.getKey());\n\t\tjsonObj.put(\"value\", model.getValue());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(TasksProposal model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"proposalId\", model.getProposalId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"publishDate\", model.getPublishDate().getTime());\n\t\tjsonObj.put(\"dueDate\", model.getDueDate().getTime());\n\n\t\treturn jsonObj;\n\t}","id":20417,"modified_method":"public static JSONObject toJSONObject(TasksProposal model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"proposalId\", model.getProposalId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\tDate publishDate = model.getPublishDate();\n\n\t\tString publishDateJSON = StringPool.BLANK;\n\n\t\tif (publishDate != null) {\n\t\t\tpublishDateJSON = String.valueOf(publishDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"publishDate\", publishDateJSON);\n\n\t\tDate dueDate = model.getDueDate();\n\n\t\tString dueDateJSON = StringPool.BLANK;\n\n\t\tif (dueDate != null) {\n\t\t\tdueDateJSON = String.valueOf(dueDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"dueDate\", dueDateJSON);\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(TasksReview model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"reviewId\", model.getReviewId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"proposalId\", model.getProposalId());\n\t\tjsonObj.put(\"assignedByUserId\", model.getAssignedByUserId());\n\t\tjsonObj.put(\"assignedByUserName\", model.getAssignedByUserName());\n\t\tjsonObj.put(\"stage\", model.getStage());\n\t\tjsonObj.put(\"completed\", model.getCompleted());\n\t\tjsonObj.put(\"rejected\", model.getRejected());\n\n\t\treturn jsonObj;\n\t}","id":20418,"modified_method":"public static JSONObject toJSONObject(TasksReview model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"reviewId\", model.getReviewId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"proposalId\", model.getProposalId());\n\t\tjsonObj.put(\"assignedByUserId\", model.getAssignedByUserId());\n\t\tjsonObj.put(\"assignedByUserName\", model.getAssignedByUserName());\n\t\tjsonObj.put(\"stage\", model.getStage());\n\t\tjsonObj.put(\"completed\", model.getCompleted());\n\t\tjsonObj.put(\"rejected\", model.getRejected());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(User model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"defaultUser\", model.getDefaultUser());\n\t\tjsonObj.put(\"contactId\", model.getContactId());\n\t\tjsonObj.put(\"password\", model.getPassword());\n\t\tjsonObj.put(\"passwordEncrypted\", model.getPasswordEncrypted());\n\t\tjsonObj.put(\"passwordReset\", model.getPasswordReset());\n\t\tjsonObj.put(\"passwordModifiedDate\",\n\t\t\tmodel.getPasswordModifiedDate().getTime());\n\t\tjsonObj.put(\"graceLoginCount\", model.getGraceLoginCount());\n\t\tjsonObj.put(\"screenName\", model.getScreenName());\n\t\tjsonObj.put(\"emailAddress\", model.getEmailAddress());\n\t\tjsonObj.put(\"openId\", model.getOpenId());\n\t\tjsonObj.put(\"portraitId\", model.getPortraitId());\n\t\tjsonObj.put(\"languageId\", model.getLanguageId());\n\t\tjsonObj.put(\"timeZoneId\", model.getTimeZoneId());\n\t\tjsonObj.put(\"greeting\", model.getGreeting());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\t\tjsonObj.put(\"loginDate\", model.getLoginDate().getTime());\n\t\tjsonObj.put(\"loginIP\", model.getLoginIP());\n\t\tjsonObj.put(\"lastLoginDate\", model.getLastLoginDate().getTime());\n\t\tjsonObj.put(\"lastLoginIP\", model.getLastLoginIP());\n\t\tjsonObj.put(\"lastFailedLoginDate\",\n\t\t\tmodel.getLastFailedLoginDate().getTime());\n\t\tjsonObj.put(\"failedLoginAttempts\", model.getFailedLoginAttempts());\n\t\tjsonObj.put(\"lockout\", model.getLockout());\n\t\tjsonObj.put(\"lockoutDate\", model.getLockoutDate().getTime());\n\t\tjsonObj.put(\"agreedToTermsOfUse\", model.getAgreedToTermsOfUse());\n\t\tjsonObj.put(\"active\", model.getActive());\n\n\t\treturn jsonObj;\n\t}","id":20419,"modified_method":"public static JSONObject toJSONObject(User model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"defaultUser\", model.getDefaultUser());\n\t\tjsonObj.put(\"contactId\", model.getContactId());\n\t\tjsonObj.put(\"password\", model.getPassword());\n\t\tjsonObj.put(\"passwordEncrypted\", model.getPasswordEncrypted());\n\t\tjsonObj.put(\"passwordReset\", model.getPasswordReset());\n\n\t\tDate passwordModifiedDate = model.getPasswordModifiedDate();\n\n\t\tString passwordModifiedDateJSON = StringPool.BLANK;\n\n\t\tif (passwordModifiedDate != null) {\n\t\t\tpasswordModifiedDateJSON = String.valueOf(passwordModifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"passwordModifiedDate\", passwordModifiedDateJSON);\n\t\tjsonObj.put(\"graceLoginCount\", model.getGraceLoginCount());\n\t\tjsonObj.put(\"screenName\", model.getScreenName());\n\t\tjsonObj.put(\"emailAddress\", model.getEmailAddress());\n\t\tjsonObj.put(\"openId\", model.getOpenId());\n\t\tjsonObj.put(\"portraitId\", model.getPortraitId());\n\t\tjsonObj.put(\"languageId\", model.getLanguageId());\n\t\tjsonObj.put(\"timeZoneId\", model.getTimeZoneId());\n\t\tjsonObj.put(\"greeting\", model.getGreeting());\n\t\tjsonObj.put(\"comments\", model.getComments());\n\n\t\tDate loginDate = model.getLoginDate();\n\n\t\tString loginDateJSON = StringPool.BLANK;\n\n\t\tif (loginDate != null) {\n\t\t\tloginDateJSON = String.valueOf(loginDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"loginDate\", loginDateJSON);\n\t\tjsonObj.put(\"loginIP\", model.getLoginIP());\n\n\t\tDate lastLoginDate = model.getLastLoginDate();\n\n\t\tString lastLoginDateJSON = StringPool.BLANK;\n\n\t\tif (lastLoginDate != null) {\n\t\t\tlastLoginDateJSON = String.valueOf(lastLoginDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lastLoginDate\", lastLoginDateJSON);\n\t\tjsonObj.put(\"lastLoginIP\", model.getLastLoginIP());\n\n\t\tDate lastFailedLoginDate = model.getLastFailedLoginDate();\n\n\t\tString lastFailedLoginDateJSON = StringPool.BLANK;\n\n\t\tif (lastFailedLoginDate != null) {\n\t\t\tlastFailedLoginDateJSON = String.valueOf(lastFailedLoginDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lastFailedLoginDate\", lastFailedLoginDateJSON);\n\t\tjsonObj.put(\"failedLoginAttempts\", model.getFailedLoginAttempts());\n\t\tjsonObj.put(\"lockout\", model.getLockout());\n\n\t\tDate lockoutDate = model.getLockoutDate();\n\n\t\tString lockoutDateJSON = StringPool.BLANK;\n\n\t\tif (lockoutDate != null) {\n\t\t\tlockoutDateJSON = String.valueOf(lockoutDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lockoutDate\", lockoutDateJSON);\n\t\tjsonObj.put(\"agreedToTermsOfUse\", model.getAgreedToTermsOfUse());\n\t\tjsonObj.put(\"active\", model.getActive());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(Website model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"websiteId\", model.getWebsiteId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","id":20420,"modified_method":"public static JSONObject toJSONObject(Website model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"websiteId\", model.getWebsiteId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"classNameId\", model.getClassNameId());\n\t\tjsonObj.put(\"classPK\", model.getClassPK());\n\t\tjsonObj.put(\"url\", model.getUrl());\n\t\tjsonObj.put(\"typeId\", model.getTypeId());\n\t\tjsonObj.put(\"primary\", model.getPrimary());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(WikiNode model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"nodeId\", model.getNodeId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\t\tjsonObj.put(\"lastPostDate\", model.getLastPostDate().getTime());\n\n\t\treturn jsonObj;\n\t}","id":20421,"modified_method":"public static JSONObject toJSONObject(WikiNode model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"nodeId\", model.getNodeId());\n\t\tjsonObj.put(\"groupId\", model.getGroupId());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"name\", model.getName());\n\t\tjsonObj.put(\"description\", model.getDescription());\n\n\t\tDate lastPostDate = model.getLastPostDate();\n\n\t\tString lastPostDateJSON = StringPool.BLANK;\n\n\t\tif (lastPostDate != null) {\n\t\t\tlastPostDateJSON = String.valueOf(lastPostDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"lastPostDate\", lastPostDateJSON);\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(WikiPage model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"pageId\", model.getPageId());\n\t\tjsonObj.put(\"resourcePrimKey\", model.getResourcePrimKey());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\t\tjsonObj.put(\"createDate\", model.getCreateDate().getTime());\n\t\tjsonObj.put(\"modifiedDate\", model.getModifiedDate().getTime());\n\t\tjsonObj.put(\"nodeId\", model.getNodeId());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"content\", model.getContent());\n\t\tjsonObj.put(\"summary\", model.getSummary());\n\t\tjsonObj.put(\"format\", model.getFormat());\n\t\tjsonObj.put(\"head\", model.getHead());\n\t\tjsonObj.put(\"parentTitle\", model.getParentTitle());\n\t\tjsonObj.put(\"redirectTitle\", model.getRedirectTitle());\n\n\t\treturn jsonObj;\n\t}","id":20422,"modified_method":"public static JSONObject toJSONObject(WikiPage model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"uuid\", model.getUuid());\n\t\tjsonObj.put(\"pageId\", model.getPageId());\n\t\tjsonObj.put(\"resourcePrimKey\", model.getResourcePrimKey());\n\t\tjsonObj.put(\"companyId\", model.getCompanyId());\n\t\tjsonObj.put(\"userId\", model.getUserId());\n\t\tjsonObj.put(\"userName\", model.getUserName());\n\n\t\tDate createDate = model.getCreateDate();\n\n\t\tString createDateJSON = StringPool.BLANK;\n\n\t\tif (createDate != null) {\n\t\t\tcreateDateJSON = String.valueOf(createDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"createDate\", createDateJSON);\n\n\t\tDate modifiedDate = model.getModifiedDate();\n\n\t\tString modifiedDateJSON = StringPool.BLANK;\n\n\t\tif (modifiedDate != null) {\n\t\t\tmodifiedDateJSON = String.valueOf(modifiedDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"modifiedDate\", modifiedDateJSON);\n\t\tjsonObj.put(\"nodeId\", model.getNodeId());\n\t\tjsonObj.put(\"title\", model.getTitle());\n\t\tjsonObj.put(\"version\", model.getVersion());\n\t\tjsonObj.put(\"content\", model.getContent());\n\t\tjsonObj.put(\"summary\", model.getSummary());\n\t\tjsonObj.put(\"format\", model.getFormat());\n\t\tjsonObj.put(\"head\", model.getHead());\n\t\tjsonObj.put(\"parentTitle\", model.getParentTitle());\n\t\tjsonObj.put(\"redirectTitle\", model.getRedirectTitle());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static JSONObject toJSONObject(WorkflowInstance model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"instanceId\", model.getInstanceId());\n\t\tjsonObj.put(\"startDate\", model.getStartDate());\n\t\tjsonObj.put(\"endDate\", model.getEndDate());\n\t\tjsonObj.put(\"ended\", model.isEnded());\n\n\t\treturn jsonObj;\n\t}","id":20423,"modified_method":"public static JSONObject toJSONObject(WorkflowInstance model) {\n\t\tJSONObject jsonObj = JSONFactoryUtil.createJSONObject();\n\n\t\tjsonObj.put(\"instanceId\", model.getInstanceId());\n\n\t\tDate startDate = model.getStartDate();\n\n\t\tString startDateJSON = StringPool.BLANK;\n\n\t\tif (startDate != null) {\n\t\t\tstartDateJSON = String.valueOf(startDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"startDate\", startDateJSON);\n\n\t\tDate endDate = model.getEndDate();\n\n\t\tString endDateJSON = StringPool.BLANK;\n\n\t\tif (endDate != null) {\n\t\t\tendDateJSON = String.valueOf(endDate.getTime());\n\t\t}\n\n\t\tjsonObj.put(\"endDate\", endDateJSON);\n\n\t\tjsonObj.put(\"ended\", model.isEnded());\n\n\t\treturn jsonObj;\n\t}","commit_id":"0f868c9336512e6f940dc25284548919da6d2f59","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","id":20424,"modified_method":"NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Line createLine(Widget node1, Widget node2) {\n        Line line = new Line(getCenterX(node1), getCenterY(node1),\n                getCenterX(node2), getCenterY(node2));\n\n        canvas.add(line);\n        mapRelationship(node1, line, linesFrom);\n        mapRelationship(node2, line, linesTo);\n\n        return line;\n    }","id":20425,"modified_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"void updateLinesFor(Widget node) {\n        int centerX = getCenterX(node);\n        int centerY = getCenterY(node);\n        Set<Line> outgoing = linesFrom.get(node);\n        if (outgoing != null) {\n            for (Line line : outgoing) {\n                line.setX1(centerX);\n                line.setY1(centerY);\n            }\n        }\n        Set<Line> incoming = linesTo.get(node);\n        if (incoming != null) {\n            for (Line line : incoming) {\n                line.setX2(centerX);\n                line.setY2(centerY);\n            }\n        }\n    }","id":20426,"modified_method":"void updateRelationshipsFor(Widget node) {\n        update(edgesFrom.get(node));\n        update(edgesTo.get(node));\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            createLine(\n                    list[(int) Random.nextInt(list.length)],\n                    createNode(event.getRelativeX(canvas.getElement()),\n                            event.getRelativeY(canvas.getElement())));\n            event.preventDefault();\n        }\n    }","id":20427,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>node \"\n                + nodes.size() + \"<\/div>\");\n        Style nodeStyle = node.getElement().getStyle();\n        nodeStyle.setPosition(Position.ABSOLUTE);\n        nodeStyle.setLeft(x, Unit.PX);\n        nodeStyle.setTop(y, Unit.PX);\n        nodeStyle.setWidth(NODE_SIZE, Unit.PX);\n        nodeStyle.setHeight(NODE_SIZE, Unit.PX);\n        nodeStyle.setBackgroundColor(\"lightblue\");\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":20428,"modified_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createLine(node1, node2);\n    }","id":20429,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateLinesFor(node);\n    }","id":20430,"modified_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateRelationshipsFor(node);\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void mapRelationship(Widget node, Line line,\n            Map<Widget, Set<Line>> map) {\n        Set<Line> lines = map.get(node);\n        if (lines == null) {\n            lines = new HashSet<Line>();\n            map.put(node, lines);\n        }\n        lines.add(line);\n    }","id":20431,"modified_method":"private static void mapRelationship(Widget node, Relationship edge,\n            Map<Widget, Set<Relationship>> map) {\n        Set<Relationship> edges = map.get(node);\n        if (edges == null) {\n            edges = new HashSet<Relationship>();\n            map.put(node, edges);\n        }\n        edges.add(edge);\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void init() {\n        window = new Window(\"Widget Test\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","id":20432,"modified_method":"@Override\n    public void init() {\n        window = new Window(\"Graph Explorer\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","commit_id":"c07e1a59b5bd7285363a45048517f51116e7059d","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","id":20433,"modified_method":"NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Line createLine(Widget node1, Widget node2) {\n        Line line = new Line(getCenterX(node1), getCenterY(node1),\n                getCenterX(node2), getCenterY(node2));\n\n        canvas.add(line);\n        mapRelationship(node1, line, linesFrom);\n        mapRelationship(node2, line, linesTo);\n\n        return line;\n    }","id":20434,"modified_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateLinesFor(node);\n    }","id":20435,"modified_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateRelationshipsFor(node);\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createLine(node1, node2);\n    }","id":20436,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"void updateLinesFor(Widget node) {\n        int centerX = getCenterX(node);\n        int centerY = getCenterY(node);\n        Set<Line> outgoing = linesFrom.get(node);\n        if (outgoing != null) {\n            for (Line line : outgoing) {\n                line.setX1(centerX);\n                line.setY1(centerY);\n            }\n        }\n        Set<Line> incoming = linesTo.get(node);\n        if (incoming != null) {\n            for (Line line : incoming) {\n                line.setX2(centerX);\n                line.setY2(centerY);\n            }\n        }\n    }","id":20437,"modified_method":"void updateRelationshipsFor(Widget node) {\n        update(edgesFrom.get(node));\n        update(edgesTo.get(node));\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            createLine(\n                    list[(int) Random.nextInt(list.length)],\n                    createNode(event.getRelativeX(canvas.getElement()),\n                            event.getRelativeY(canvas.getElement())));\n            event.preventDefault();\n        }\n    }","id":20438,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>node \"\n                + nodes.size() + \"<\/div>\");\n        Style nodeStyle = node.getElement().getStyle();\n        nodeStyle.setPosition(Position.ABSOLUTE);\n        nodeStyle.setLeft(x, Unit.PX);\n        nodeStyle.setTop(y, Unit.PX);\n        nodeStyle.setWidth(NODE_SIZE, Unit.PX);\n        nodeStyle.setHeight(NODE_SIZE, Unit.PX);\n        nodeStyle.setBackgroundColor(\"lightblue\");\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":20439,"modified_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void mapRelationship(Widget node, Line line,\n            Map<Widget, Set<Line>> map) {\n        Set<Line> lines = map.get(node);\n        if (lines == null) {\n            lines = new HashSet<Line>();\n            map.put(node, lines);\n        }\n        lines.add(line);\n    }","id":20440,"modified_method":"private static void mapRelationship(Widget node, Relationship edge,\n            Map<Widget, Set<Relationship>> map) {\n        Set<Relationship> edges = map.get(node);\n        if (edges == null) {\n            edges = new HashSet<Relationship>();\n            map.put(node, edges);\n        }\n        edges.add(edge);\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void init() {\n        window = new Window(\"Widget Test\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","id":20441,"modified_method":"@Override\n    public void init() {\n        window = new Window(\"Graph Explorer\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","commit_id":"d3f38833b87ec3d7d0383656936c80852a3928fe","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","id":20442,"modified_method":"NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateLinesFor(node);\n    }","id":20443,"modified_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateRelationshipsFor(node);\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createLine(node1, node2);\n    }","id":20444,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"void updateLinesFor(Widget node) {\n        int centerX = getCenterX(node);\n        int centerY = getCenterY(node);\n        Set<Line> outgoing = linesFrom.get(node);\n        if (outgoing != null) {\n            for (Line line : outgoing) {\n                line.setX1(centerX);\n                line.setY1(centerY);\n            }\n        }\n        Set<Line> incoming = linesTo.get(node);\n        if (incoming != null) {\n            for (Line line : incoming) {\n                line.setX2(centerX);\n                line.setY2(centerY);\n            }\n        }\n    }","id":20445,"modified_method":"void updateRelationshipsFor(Widget node) {\n        update(edgesFrom.get(node));\n        update(edgesTo.get(node));\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            createLine(\n                    list[(int) Random.nextInt(list.length)],\n                    createNode(event.getRelativeX(canvas.getElement()),\n                            event.getRelativeY(canvas.getElement())));\n            event.preventDefault();\n        }\n    }","id":20446,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>node \"\n                + nodes.size() + \"<\/div>\");\n        Style nodeStyle = node.getElement().getStyle();\n        nodeStyle.setPosition(Position.ABSOLUTE);\n        nodeStyle.setLeft(x, Unit.PX);\n        nodeStyle.setTop(y, Unit.PX);\n        nodeStyle.setWidth(NODE_SIZE, Unit.PX);\n        nodeStyle.setHeight(NODE_SIZE, Unit.PX);\n        nodeStyle.setBackgroundColor(\"lightblue\");\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":20447,"modified_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void mapRelationship(Widget node, Line line,\n            Map<Widget, Set<Line>> map) {\n        Set<Line> lines = map.get(node);\n        if (lines == null) {\n            lines = new HashSet<Line>();\n            map.put(node, lines);\n        }\n        lines.add(line);\n    }","id":20448,"modified_method":"private static void mapRelationship(Widget node, Relationship edge,\n            Map<Widget, Set<Relationship>> map) {\n        Set<Relationship> edges = map.get(node);\n        if (edges == null) {\n            edges = new HashSet<Relationship>();\n            map.put(node, edges);\n        }\n        edges.add(edge);\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Line createLine(Widget node1, Widget node2) {\n        Line line = new Line(getCenterX(node1), getCenterY(node1),\n                getCenterX(node2), getCenterY(node2));\n\n        canvas.add(line);\n        mapRelationship(node1, line, linesFrom);\n        mapRelationship(node2, line, linesTo);\n\n        return line;\n    }","id":20449,"modified_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void init() {\n        window = new Window(\"Widget Test\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","id":20450,"modified_method":"@Override\n    public void init() {\n        window = new Window(\"Graph Explorer\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","commit_id":"bfbd54d7642614205f1bbb4c62c20c6d82966e4b","url":"https://github.com/neo4j/neo4j"},{"original_method":"public NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","id":20451,"modified_method":"NodeHandler(Widget node, VGraphComponent parent) {\r\n        this.node = node;\r\n        this.parent = parent;\r\n        node.addDomHandler(this, MouseDownEvent.getType());\r\n        node.addDomHandler(this, MouseMoveEvent.getType());\r\n        node.addDomHandler(this, MouseUpEvent.getType());\r\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>node \"\n                + nodes.size() + \"<\/div>\");\n        Style nodeStyle = node.getElement().getStyle();\n        nodeStyle.setPosition(Position.ABSOLUTE);\n        nodeStyle.setLeft(x, Unit.PX);\n        nodeStyle.setTop(y, Unit.PX);\n        nodeStyle.setWidth(NODE_SIZE, Unit.PX);\n        nodeStyle.setHeight(NODE_SIZE, Unit.PX);\n        nodeStyle.setBackgroundColor(\"lightblue\");\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","id":20452,"modified_method":"private Widget createNode(double x, double y) {\n        HTML node = new HTML(\"<div style='text-align:center'>Node \"\n                + nodes.size() + \"<\/div>\");\n        Style style = node.getElement().getStyle();\n        style.setPosition(Position.ABSOLUTE);\n        style.setLeft(x, Unit.PX);\n        style.setTop(y, Unit.PX);\n        style.setWidth(NODE_SIZE, Unit.PX);\n        style.setHeight(NODE_SIZE, Unit.PX);\n        style.setBackgroundColor(\"lightblue\");\n        style.setFontSize(12, Unit.PX);\n        root.add(node);\n        nodes.add(node);\n        new NodeHandler(node, this);\n        return node;\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"void updateLinesFor(Widget node) {\n        int centerX = getCenterX(node);\n        int centerY = getCenterY(node);\n        Set<Line> outgoing = linesFrom.get(node);\n        if (outgoing != null) {\n            for (Line line : outgoing) {\n                line.setX1(centerX);\n                line.setY1(centerY);\n            }\n        }\n        Set<Line> incoming = linesTo.get(node);\n        if (incoming != null) {\n            for (Line line : incoming) {\n                line.setX2(centerX);\n                line.setY2(centerY);\n            }\n        }\n    }","id":20453,"modified_method":"void updateRelationshipsFor(Widget node) {\n        update(edgesFrom.get(node));\n        update(edgesTo.get(node));\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"private Line createLine(Widget node1, Widget node2) {\n        Line line = new Line(getCenterX(node1), getCenterY(node1),\n                getCenterX(node2), getCenterY(node2));\n\n        canvas.add(line);\n        mapRelationship(node1, line, linesFrom);\n        mapRelationship(node2, line, linesTo);\n\n        return line;\n    }","id":20454,"modified_method":"private Relationship createRelationship(Widget node1, Widget node2) {\n        String type = new String[] { \"LIKES\", \"EATS\", \"FEARS\" }[Random\n                .nextInt(3)];\n        Relationship edge = new Relationship(this, node1, node2, type);\n\n        mapRelationship(node1, edge, edgesFrom);\n        mapRelationship(node2, edge, edgesTo);\n        return edge;\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            createLine(\n                    list[(int) Random.nextInt(list.length)],\n                    createNode(event.getRelativeX(canvas.getElement()),\n                            event.getRelativeY(canvas.getElement())));\n            event.preventDefault();\n        }\n    }","id":20455,"modified_method":"public void onClick(ClickEvent event) {\n        System.out.println(\"Click \" + event.getNativeButton());\n        if (event.isShiftKeyDown()) {\n            Widget[] list = nodes.toArray(new Widget[nodes.size()]);\n            Widget other = list[Random.nextInt(list.length)];\n            Widget node = createNode(event.getRelativeX(canvas.getElement()),\n                    event.getRelativeY(canvas.getElement()));\n            int choice = Random.nextInt(3);\n            if (choice == 0 || choice == 2) {\n                createRelationship(node, other);\n            } \n            if (choice == 1 || choice == 2) {\n                createRelationship(other, node);\n            }\n            event.preventDefault();\n        }\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createLine(node1, node2);\n    }","id":20456,"modified_method":"/**\n     * Called whenever an update is received from the server\n     */\n    public void updateFromUIDL(UIDL uidl, ApplicationConnection client) {\n        // This call should be made first.\n        // It handles sizes, captions, tooltips, etc. automatically.\n        if (client.updateComponent(this, uidl, true)) {\n            // If client.updateComponent returns true there has been no changes\n            // and we\n            // do not need to update anything.\n            return;\n        }\n\n        // Save reference to server connection object to be able to send\n        // user interaction later\n        this.client = client;\n\n        // Save the client side identifier (paintable id) for the widget\n        paintableId = uidl.getId();\n\n        Widget node1 = createRandomNode();\n        Widget node2 = createRandomNode();\n\n        createRelationship(node1, node2);\n        createRelationship(node2, node1);\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"private static void mapRelationship(Widget node, Line line,\n            Map<Widget, Set<Line>> map) {\n        Set<Line> lines = map.get(node);\n        if (lines == null) {\n            lines = new HashSet<Line>();\n            map.put(node, lines);\n        }\n        lines.add(line);\n    }","id":20457,"modified_method":"private static void mapRelationship(Widget node, Relationship edge,\n            Map<Widget, Set<Relationship>> map) {\n        Set<Relationship> edges = map.get(node);\n        if (edges == null) {\n            edges = new HashSet<Relationship>();\n            map.put(node, edges);\n        }\n        edges.add(edge);\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateLinesFor(node);\n    }","id":20458,"modified_method":"void reposition(Widget node, int newX, int newY) {\n        Style style = node.getElement().getStyle();\n        style.setLeft(limit(0, newX, getOffsetWidth() - node.getOffsetWidth()),\n                Unit.PX);\n        style.setTop(\n                limit(0, newY, getOffsetHeight() - node.getOffsetHeight()),\n                Unit.PX);\n        updateRelationshipsFor(node);\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Override\n    public void init() {\n        window = new Window(\"Widget Test\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","id":20459,"modified_method":"@Override\n    public void init() {\n        window = new Window(\"Graph Explorer\");\n        setMainWindow(window);\n        window.addComponent(new GraphComponent(graphDb));\n        window.getContent().setSizeFull();\n    }","commit_id":"745320580f4a81a741015b206d4d4bd518602b36","url":"https://github.com/neo4j/neo4j"},{"original_method":"public static <E extends Comparable<E>, T extends HasInterval<E>> boolean contains(IntervalTree<E,T> n, Interval<E> target) {\n    // Don't search nodes that don't exist\n    if (n == null || n.isEmpty())\n      return false;\n\n    // If target is to the right of the rightmost point of any interval\n    // in this node and all children, there won't be any matches.\n    if (target.first.compareTo(n.maxEnd) > 0)\n      return false;\n\n    // Check this node\n    if (n.value.getInterval().contains(target)) {\n      return true;\n    }\n\n    // If target is to the left of the start of this interval, then search left\n    if (target.second.compareTo(n.value.getInterval().first()) <= 0)  {\n      // Search left children\n      if (n.left != null) {\n        return contains(n.left, target);\n      }\n    } else {\n      if (n.right != null)  {\n        return contains(n.right, target);\n      }\n    }\n\n    return false;\n  }","id":20460,"modified_method":"public static <E extends Comparable<E>, T extends HasInterval<E>> boolean contains(IntervalTree<E,T> node, Interval<E> target) {\n    IntervalTree<E,T> n = node;\n\n    // Don't search nodes that don't exist\n    while (n != null && !n.isEmpty()) {\n      IntervalTree<E,T> next = null;\n\n      // If target is to the right of the rightmost point of any interval\n      // in this node and all children, there won't be any matches.\n      if (target.first.compareTo(n.maxEnd) > 0)\n        return false;\n\n      // Check this node\n      if (n.value.getInterval().contains(target)) {\n        return true;\n      }\n\n      // If target is to the left of the start of this interval, then search left\n      if (target.second.compareTo(n.value.getInterval().first()) <= 0)  {\n        // Search left children\n        if (n.left != null) {\n          next = n.left;\n        }\n      } else {\n        if (n.right != null)  {\n          next = n.right;\n        }\n      }\n      n = next;\n    }\n    return false;\n  }","commit_id":"b79d8f3261b442cd4ca4c80c5406fff7625764d9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public void add(T target) {\n    if (target == null) return;\n    if (value == null) {\n      this.value = target;\n      this.maxEnd = target.getInterval().getEnd();\n      this.size = 1;\n    } else {\n      this.maxEnd = Interval.max(maxEnd, target.getInterval().getEnd());\n      this.size++;\n      if (target.getInterval().getBegin().compareTo(value.getInterval().getBegin()) <= 0) {\n        // Should go on left\n        if (left == null) {\n          left = new IntervalTree<E,T>();\n        }\n        left.add(target);\n      } else {\n        // Should go on right\n        if (right == null) {\n          right = new IntervalTree<E,T>();\n        }\n        right.add(target);\n      }\n    }\n  }","id":20461,"modified_method":"public boolean add(T target) {\n    if (target == null) return false;\n    if (value == null) {\n      this.value = target;\n      this.maxEnd = target.getInterval().getEnd();\n      this.size = 1;\n      return true;\n    } else {\n      this.maxEnd = Interval.max(maxEnd, target.getInterval().getEnd());\n      this.size++;\n      if (target.getInterval().getBegin().compareTo(value.getInterval().getBegin()) <= 0) {\n        // Should go on left\n        if (left == null) {\n          left = new IntervalTree<E,T>();\n        }\n        return left.add(target);\n      } else {\n        // Should go on right\n        if (right == null) {\n          right = new IntervalTree<E,T>();\n        }\n        return right.add(target);\n      }\n    }\n  }","commit_id":"b79d8f3261b442cd4ca4c80c5406fff7625764d9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static <E extends Comparable<E>, T extends HasInterval<E>> void getOverlapping(IntervalTree<E,T> n, Interval<E> target, List<T> result) {\n    // Don't search nodes that don't exist\n    if (n == null || n.isEmpty())\n        return;\n\n    // If target is to the right of the rightmost point of any interval\n    // in this node and all children, there won't be any matches.\n    if (target.first.compareTo(n.maxEnd) > 0)\n        return;\n\n    // Search left children\n    if (n.left != null) {\n        getOverlapping(n.left, target, result);\n    }\n\n    // Check this node\n    if (n.value.getInterval().overlaps(target)) {\n        result.add(n.value);\n    }\n\n    // If target is to the left of the start of this interval,\n    // then it can't be in any child to the right.\n    if (target.second.compareTo(n.value.getInterval().first()) < 0)  {\n        return;\n    }\n\n    // Otherwise, search right children\n    if (n.right != null)  {\n        getOverlapping(n.right, target, result);\n    }\n  }","id":20462,"modified_method":"public static <E extends Comparable<E>, T extends HasInterval<E>> void getOverlapping(IntervalTree<E,T> node, Interval<E> target, List<T> result) {\n    Queue<IntervalTree<E,T>> todo = new LinkedList<IntervalTree<E, T>>();\n    todo.add(node);\n    while (!todo.isEmpty()) {\n      IntervalTree<E,T> n = todo.poll();\n      // Don't search nodes that don't exist\n      if (n == null || n.isEmpty())\n        continue;\n\n      // If target is to the right of the rightmost point of any interval\n      // in this node and all children, there won't be any matches.\n      if (target.first.compareTo(n.maxEnd) > 0)\n        continue;\n\n      // Search left children\n      if (n.left != null) {\n          todo.add(n.left);\n      }\n\n      // Check this node\n      if (n.value.getInterval().overlaps(target)) {\n          result.add(n.value);\n      }\n\n      // If target is to the left of the start of this interval,\n      // then it can't be in any child to the right.\n      if (target.second.compareTo(n.value.getInterval().first()) < 0)  {\n        continue;\n      }\n\n      // Otherwise, search right children\n      if (n.right != null)  {\n        todo.add(n.right);\n      }\n    }\n  }","commit_id":"b79d8f3261b442cd4ca4c80c5406fff7625764d9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public void addAll(Collection<T> c) {\n    for (T t:c) {\n      add(t);\n    }\n  }","id":20463,"modified_method":"public boolean addAll(Collection<? extends T> c) {\n    boolean added = false;\n    for (T t:c) {\n      if (add(t)) { added = true; }\n    }\n    return added;\n  }","commit_id":"b79d8f3261b442cd4ca4c80c5406fff7625764d9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static <E extends Comparable<E>, T extends HasInterval<E>> boolean overlaps(IntervalTree<E,T> n, Interval<E> target) {\n    // Don't search nodes that don't exist\n    if (n == null || n.isEmpty())\n        return false;\n\n    // If target is to the right of the rightmost point of any interval\n    // in this node and all children, there won't be any matches.\n    if (target.first.compareTo(n.maxEnd) > 0)\n        return false;\n\n    // Check this node\n    if (n.value.getInterval().overlaps(target)) {\n        return true;\n    }\n\n    // If target is to the left of the start of this interval, then search left\n    if (target.second.compareTo(n.value.getInterval().first()) <= 0)  {\n       // Search left children\n      if (n.left != null) {\n        return overlaps(n.left, target);\n      }\n    } else {\n       if (n.right != null)  {\n           return overlaps(n.right, target);\n       }\n    }\n\n    return false;\n  }","id":20464,"modified_method":"public static <E extends Comparable<E>, T extends HasInterval<E>> boolean overlaps(IntervalTree<E,T> node, Interval<E> target) {\n    IntervalTree<E,T> n = node;\n\n    // Don't search nodes that don't exist\n    while (n != null && !n.isEmpty()) {\n      IntervalTree<E,T> next = null;\n      // If target is to the right of the rightmost point of any interval\n      // in this node and all children, there won't be any matches.\n      if (target.first.compareTo(n.maxEnd) > 0)\n          return false;\n\n      // Check this node\n      if (n.value.getInterval().overlaps(target)) {\n          return true;\n      }\n\n      // If target is to the left of the start of this interval, then search left\n      if (target.second.compareTo(n.value.getInterval().first()) <= 0)  {\n         // Search left children\n        if (n.left != null) {\n          next = n.left;\n        }\n      } else {\n         if (n.right != null)  {\n             next = n.right;\n         }\n      }\n      n = next;\n    }\n    return false;\n  }","commit_id":"b79d8f3261b442cd4ca4c80c5406fff7625764d9","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public static Iterable<SNode> call_getRequiredData_8585153554445862713(SNode thisNode) {\n    return SLinkOperations.getChildren(Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\")), MetaAdapterFactory.getConcept(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x3d90e8d384845a8fL, \"jetbrains.mps.lang.migration.structure.RequiredDataDeclaration\"))).first(), MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x3d90e8d384845a8fL, 0x6dbdc0e8bf0bc82aL, \"dependencies\"));\n  }","id":20465,"modified_method":"public static Iterable<SNode> call_getRequiredData_8585153554445862713(SNode thisNode) {\n    return SLinkOperations.getChildren(SNodeOperations.cast(Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), SNodeOperations.getNode(\"90746344-04fd-4286-97d5-b46ae6a81709/r:52a3d974-bd4f-4651-ba6e-a2de5e336d95(jetbrains.mps.lang.migration/jetbrains.mps.lang.migration.methods)\", \"4144229974054260078\"), \"virtual_find_2603987804376013077\", new Object[]{thisNode})).first(), MetaAdapterFactory.getConcept(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x3d90e8d384845a8fL, \"jetbrains.mps.lang.migration.structure.RequiredDataDeclaration\")), MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x3d90e8d384845a8fL, 0x6dbdc0e8bf0bc82aL, \"dependencies\"));\n  }","commit_id":"f2107348ac19597db3cfdf51286030808464b330","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_getDescription_8585153554445641526(SNode thisNode) {\n    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\")), MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e84100d04L, \"jetbrains.mps.lang.classLike.structure.ClassLikeStringProperty\"))).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e840d9151L, 0x772497abf2e77969L, \"decl\")) == SNodeOperations.getNode(\"90746344-04fd-4286-97d5-b46ae6a81709/r:52a3d974-bd4f-4651-ba6e-a2de5e336d95(jetbrains.mps.lang.migration/jetbrains.mps.lang.migration.methods)\", \"1825613483880658538\");\n      }\n    });\n  }","id":20466,"modified_method":"public static SNode call_getDescription_8585153554445641526(SNode thisNode) {\n    return SNodeOperations.cast(Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), SNodeOperations.getNode(\"90746344-04fd-4286-97d5-b46ae6a81709/r:52a3d974-bd4f-4651-ba6e-a2de5e336d95(jetbrains.mps.lang.migration/jetbrains.mps.lang.migration.methods)\", \"1825613483880658538\"), \"virtual_find_2603987804376013077\", new Object[]{thisNode})).first(), MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x59e9926e84100d04L, \"jetbrains.mps.lang.classLike.structure.ClassLikeStringProperty\"));\n  }","commit_id":"f2107348ac19597db3cfdf51286030808464b330","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static Iterable<SNode> call_getExecuteAfter_2521103492728978905(SNode thisNode) {\n    return SLinkOperations.getChildren(Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\")), MetaAdapterFactory.getConcept(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x398343344f07b404L, \"jetbrains.mps.lang.migration.structure.ExecuteAfterDeclaration\"))).first(), MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x398343344f07b404L, 0x398343344f0998adL, \"dependencies\"));\n  }","id":20467,"modified_method":"public static Iterable<SNode> call_getExecuteAfter_2521103492728978905(SNode thisNode) {\n    return SLinkOperations.getChildren(SNodeOperations.cast(Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), SNodeOperations.getNode(\"90746344-04fd-4286-97d5-b46ae6a81709/r:52a3d974-bd4f-4651-ba6e-a2de5e336d95(jetbrains.mps.lang.migration/jetbrains.mps.lang.migration.methods)\", \"8260330507834347594\"), \"virtual_find_2603987804376013077\", new Object[]{thisNode})).first(), MetaAdapterFactory.getConcept(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x398343344f07b404L, \"jetbrains.mps.lang.migration.structure.ExecuteAfterDeclaration\")), MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x398343344f07b404L, 0x398343344f0998adL, \"dependencies\"));\n  }","commit_id":"f2107348ac19597db3cfdf51286030808464b330","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_getMethod_7153805464403784143(SNode thisNode, final SNode md) {\n    return Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\")), MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d154L, \"jetbrains.mps.lang.classLike.structure.ClassLikeMethod\"))).findFirst(new IWhereFilter<SNode>() {\n      public boolean accept(SNode it) {\n        return SLinkOperations.getTarget(it, MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d154L, 0x443e89bb321537L, \"decl\")) == md;\n      }\n    });\n  }","id":20468,"modified_method":"public static SNode call_getMethod_7153805464403784143(SNode thisNode, SNode md) {\n    return SNodeOperations.cast(Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), md, \"virtual_find_2603987804376013077\", new Object[]{thisNode})).first(), MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L, 0xbc73f2e16994cc67L, 0x340eb2bd2e03d154L, \"jetbrains.mps.lang.classLike.structure.ClassLikeMethod\"));\n  }","commit_id":"f2107348ac19597db3cfdf51286030808464b330","url":"https://github.com/JetBrains/MPS"},{"original_method":"public static SNode call_getProducedData_8585153554445933384(SNode thisNode) {\n    return SLinkOperations.getTarget(Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(thisNode, MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101d9d3ca30L, 0x4a9a46de59132803L, \"member\")), MetaAdapterFactory.getConcept(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x50c63f9f4a0dacfbL, \"jetbrains.mps.lang.migration.structure.ProducedDataDeclaration\"))).first(), MetaAdapterFactory.getReferenceLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x50c63f9f4a0dacfbL, 0x50c63f9f4a0dad15L, \"dataType\"));\n  }","id":20469,"modified_method":"public static SNode call_getProducedData_8585153554445933384(SNode thisNode) {\n    return SLinkOperations.getTarget(SNodeOperations.cast(Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>) ((Class) Object.class), SNodeOperations.getNode(\"90746344-04fd-4286-97d5-b46ae6a81709/r:52a3d974-bd4f-4651-ba6e-a2de5e336d95(jetbrains.mps.lang.migration/jetbrains.mps.lang.migration.methods)\", \"5820409521798105972\"), \"virtual_find_2603987804376013077\", new Object[]{thisNode})).first(), MetaAdapterFactory.getConcept(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x50c63f9f4a0dacfbL, \"jetbrains.mps.lang.migration.structure.ProducedDataDeclaration\")), MetaAdapterFactory.getReferenceLink(0x9074634404fd4286L, 0x97d5b46ae6a81709L, 0x50c63f9f4a0dacfbL, 0x50c63f9f4a0dad15L, \"dataType\"));\n  }","commit_id":"f2107348ac19597db3cfdf51286030808464b330","url":"https://github.com/JetBrains/MPS"},{"original_method":"protected List<Article> filterArticles(\n\t\t\tPortletDataContext portletDataContext)\n\t\tthrows SystemException {\n\n\t\t// Sort articles to simplify import code. Order articles by depth and\n\t\t// sort siblings by priority. See AdminPortletDataHandler#importArticle.\n\n\t\tList<Article> articles = new ArrayList<Article>();\n\n\t\tList<Article> siblingArticles = new ArrayList<Article>();\n\n\t\tlong[] parentResourcePrimKeys = {\n\t\t\tArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY\n\t\t};\n\n\t\twhile (parentResourcePrimKeys.length > 0) {\n\t\t\tlong[] curParentResourcePrimKeys = null;\n\n\t\t\tif (parentResourcePrimKeys.length > _SQL_DATA_MAX_PARAMETERS) {\n\t\t\t\tcurParentResourcePrimKeys = new long[_SQL_DATA_MAX_PARAMETERS];\n\n\t\t\t\tSystem.arraycopy(\n\t\t\t\t\tparentResourcePrimKeys, 0, curParentResourcePrimKeys, 0,\n\t\t\t\t\t_SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tlong[] array = new long[\n\t\t\t\t\tparentResourcePrimKeys.length - _SQL_DATA_MAX_PARAMETERS];\n\n\t\t\t\tSystem.arraycopy(\n\t\t\t\t\tparentResourcePrimKeys, _SQL_DATA_MAX_PARAMETERS, array, 0,\n\t\t\t\t\tparentResourcePrimKeys.length - _SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tparentResourcePrimKeys = array;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurParentResourcePrimKeys = parentResourcePrimKeys.clone();\n\n\t\t\t\tparentResourcePrimKeys = new long[0];\n\t\t\t}\n\n\t\t\tList<Article> curArticles = ArticleUtil.findByG_P_L_S(\n\t\t\t\tportletDataContext.getScopeGroupId(), curParentResourcePrimKeys,\n\t\t\t\tArticleConstants.LATEST_ANY, WorkflowConstants.STATUS_APPROVED);\n\n\t\t\tfor (Article curArticle : curArticles) {\n\t\t\t\tif (portletDataContext.isWithinDateRange(\n\t\t\t\t\t\tcurArticle.getModifiedDate())) {\n\n\t\t\t\t\tsiblingArticles.add(curArticle);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parentResourcePrimKeys.length == 0) {\n\t\t\t\tCollections.sort(\n\t\t\t\t\tsiblingArticles, new ArticlePriorityComparator(true));\n\n\t\t\t\tarticles.addAll(siblingArticles);\n\n\t\t\t\tparentResourcePrimKeys = StringUtil.split(\n\t\t\t\t\tListUtil.toString(siblingArticles, \"resourcePrimKey\"), 0L);\n\n\t\t\t\tsiblingArticles = new ArrayList<Article>();\n\t\t\t}\n\t\t}\n\n\t\treturn articles;\n\t}","id":20470,"modified_method":"protected List<Article> filterArticles(\n\t\t\tPortletDataContext portletDataContext)\n\t\tthrows SystemException {\n\n\t\t// Sort articles to simplify import code. Order articles by depth and\n\t\t// sort siblings by priority. See AdminPortletDataHandler#importArticle.\n\n\t\tList<Article> articles = new ArrayList<Article>();\n\n\t\tList<Article> siblingArticles = new ArrayList<Article>();\n\n\t\tlong[] parentResourcePrimKeys = {\n\t\t\tArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY\n\t\t};\n\n\t\twhile (parentResourcePrimKeys.length > 0) {\n\t\t\tlong[] curParentResourcePrimKeys = null;\n\n\t\t\tif (parentResourcePrimKeys.length > _SQL_DATA_MAX_PARAMETERS) {\n\t\t\t\tcurParentResourcePrimKeys = ArrayUtil.subArray(\n\t\t\t\t\tparentResourcePrimKeys, 0, _SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tparentResourcePrimKeys = ArrayUtil.subArray(\n\t\t\t\t\tparentResourcePrimKeys, _SQL_DATA_MAX_PARAMETERS,\n\t\t\t\t\tparentResourcePrimKeys.length);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurParentResourcePrimKeys = parentResourcePrimKeys.clone();\n\n\t\t\t\tparentResourcePrimKeys = new long[0];\n\t\t\t}\n\n\t\t\tList<Article> curArticles = ArticleUtil.findByG_P_L_S(\n\t\t\t\tportletDataContext.getScopeGroupId(), curParentResourcePrimKeys,\n\t\t\t\tArticleConstants.LATEST_ANY, WorkflowConstants.STATUS_APPROVED);\n\n\t\t\tfor (Article curArticle : curArticles) {\n\t\t\t\tif (portletDataContext.isWithinDateRange(\n\t\t\t\t\t\tcurArticle.getModifiedDate())) {\n\n\t\t\t\t\tsiblingArticles.add(curArticle);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parentResourcePrimKeys.length == 0) {\n\t\t\t\tCollections.sort(\n\t\t\t\t\tsiblingArticles, new ArticlePriorityComparator(true));\n\n\t\t\t\tarticles.addAll(siblingArticles);\n\n\t\t\t\tparentResourcePrimKeys = StringUtil.split(\n\t\t\t\t\tListUtil.toString(siblingArticles, \"resourcePrimKey\"), 0L);\n\n\t\t\t\tsiblingArticles = new ArrayList<Article>();\n\t\t\t}\n\t\t}\n\n\t\treturn articles;\n\t}","commit_id":"8e892f976e63a5e886b0af518b9da7c985848bb8","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public List<Article> getArticles(\n\t\t\tlong[] resourcePrimKeys, int status,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tif ((resourcePrimKeys == null) || (resourcePrimKeys.length == 0)) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\n\t\tList<Article> articles = new ArrayList<Article>();\n\n\t\tlong[] selResourcePrimKeys = resourcePrimKeys.clone();\n\n\t\twhile (selResourcePrimKeys.length > 0) {\n\t\t\tlong[] curResourcePrimKeys = null;\n\n\t\t\tif (selResourcePrimKeys.length > _SQL_DATA_MAX_PARAMETERS) {\n\t\t\t\tcurResourcePrimKeys = new long[_SQL_DATA_MAX_PARAMETERS];\n\n\t\t\t\tSystem.arraycopy(\n\t\t\t\t\tselResourcePrimKeys, 0, curResourcePrimKeys, 0,\n\t\t\t\t\t_SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tlong[] array = new long[\n\t\t\t\t\tselResourcePrimKeys.length - _SQL_DATA_MAX_PARAMETERS];\n\n\t\t\t\tSystem.arraycopy(\n\t\t\t\t\tselResourcePrimKeys, _SQL_DATA_MAX_PARAMETERS, array, 0,\n\t\t\t\t\tselResourcePrimKeys.length - _SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tselResourcePrimKeys = array;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurResourcePrimKeys = selResourcePrimKeys.clone();\n\n\t\t\t\tselResourcePrimKeys = new long[0];\n\t\t\t}\n\n\t\t\tList<Article> curArticles = null;\n\n\t\t\tif (status == WorkflowConstants.STATUS_ANY) {\n\t\t\t\tcurArticles = articlePersistence.findByR_L(\n\t\t\t\t\tcurResourcePrimKeys,\n\t\t\t\t\tnew int[] {ArticleConstants.LATEST_VERSION});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurArticles = articlePersistence.findByR_L_S(\n\t\t\t\t\tcurResourcePrimKeys, ArticleConstants.LATEST_ANY, status);\n\t\t\t}\n\n\t\t\tarticles.addAll(curArticles);\n\t\t}\n\n\t\tif (orderByComparator != null) {\n\t\t\treturn ListUtil.sort(articles, orderByComparator);\n\t\t}\n\n\t\tMap<Long, Article> map = new HashMap<Long, Article>();\n\n\t\tfor (Article article : articles) {\n\t\t\tmap.put(article.getResourcePrimKey(), article);\n\t\t}\n\n\t\tarticles = new ArrayList<Article>();\n\n\t\tfor (long resourcePrimKey : resourcePrimKeys) {\n\t\t\tif (map.containsKey(resourcePrimKey)) {\n\t\t\t\tarticles.add(map.get(resourcePrimKey));\n\t\t\t}\n\t\t}\n\n\t\treturn articles;\n\t}","id":20471,"modified_method":"public List<Article> getArticles(\n\t\t\tlong[] resourcePrimKeys, int status,\n\t\t\tOrderByComparator orderByComparator)\n\t\tthrows SystemException {\n\n\t\tif ((resourcePrimKeys == null) || (resourcePrimKeys.length == 0)) {\n\t\t\treturn Collections.emptyList();\n\t\t}\n\n\t\tList<Article> articles = new ArrayList<Article>();\n\n\t\tlong[] selResourcePrimKeys = resourcePrimKeys.clone();\n\n\t\twhile (selResourcePrimKeys.length > 0) {\n\t\t\tlong[] curResourcePrimKeys = null;\n\n\t\t\tif (selResourcePrimKeys.length > _SQL_DATA_MAX_PARAMETERS) {\n\t\t\t\tcurResourcePrimKeys = ArrayUtil.subArray(\n\t\t\t\t\tselResourcePrimKeys, 0, _SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tselResourcePrimKeys = ArrayUtil.subArray(\n\t\t\t\t\tselResourcePrimKeys, _SQL_DATA_MAX_PARAMETERS,\n\t\t\t\t\tselResourcePrimKeys.length);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurResourcePrimKeys = selResourcePrimKeys.clone();\n\n\t\t\t\tselResourcePrimKeys = new long[0];\n\t\t\t}\n\n\t\t\tList<Article> curArticles = null;\n\n\t\t\tif (status == WorkflowConstants.STATUS_ANY) {\n\t\t\t\tcurArticles = articlePersistence.findByR_L(\n\t\t\t\t\tcurResourcePrimKeys,\n\t\t\t\t\tnew int[] {ArticleConstants.LATEST_VERSION});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurArticles = articlePersistence.findByR_L_S(\n\t\t\t\t\tcurResourcePrimKeys, ArticleConstants.LATEST_ANY, status);\n\t\t\t}\n\n\t\t\tarticles.addAll(curArticles);\n\t\t}\n\n\t\tif (orderByComparator != null) {\n\t\t\treturn ListUtil.sort(articles, orderByComparator);\n\t\t}\n\n\t\tMap<Long, Article> map = new HashMap<Long, Article>();\n\n\t\tfor (Article article : articles) {\n\t\t\tmap.put(article.getResourcePrimKey(), article);\n\t\t}\n\n\t\tarticles = new ArrayList<Article>();\n\n\t\tfor (long resourcePrimKey : resourcePrimKeys) {\n\t\t\tif (map.containsKey(resourcePrimKey)) {\n\t\t\t\tarticles.add(map.get(resourcePrimKey));\n\t\t\t}\n\t\t}\n\n\t\treturn articles;\n\t}","commit_id":"8e892f976e63a5e886b0af518b9da7c985848bb8","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"protected List<Article> getRSSArticles(\n\t\t\tlong groupId, long parentResourcePrimKey, int status, int rssDelta)\n\t\tthrows PortalException, SystemException {\n\n\t\tList<Article> articles = new ArrayList<Article>();\n\n\t\tif (parentResourcePrimKey !=\n\t\t\t\tArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY) {\n\n\t\t\tArticle article = articleLocalService.getLatestArticle(\n\t\t\t\tparentResourcePrimKey, status);\n\n\t\t\tarticles.add(article);\n\t\t}\n\n\t\tlong[] parentResourcePrimKeys = {parentResourcePrimKey};\n\n\t\twhile (parentResourcePrimKeys.length > 0) {\n\t\t\tlong[] curParentResourcePrimKeys = null;\n\n\t\t\tif (parentResourcePrimKeys.length > _SQL_DATA_MAX_PARAMETERS) {\n\t\t\t\tcurParentResourcePrimKeys = new long[_SQL_DATA_MAX_PARAMETERS];\n\n\t\t\t\tSystem.arraycopy(\n\t\t\t\t\tparentResourcePrimKeys, 0, curParentResourcePrimKeys, 0,\n\t\t\t\t\t_SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tlong[] array = new long[\n\t\t\t\t\tparentResourcePrimKeys.length - _SQL_DATA_MAX_PARAMETERS];\n\n\t\t\t\tSystem.arraycopy(\n\t\t\t\t\tparentResourcePrimKeys, _SQL_DATA_MAX_PARAMETERS, array, 0,\n\t\t\t\t\tparentResourcePrimKeys.length - _SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tparentResourcePrimKeys = array;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurParentResourcePrimKeys = parentResourcePrimKeys.clone();\n\n\t\t\t\tparentResourcePrimKeys = new long[0];\n\t\t\t}\n\n\t\t\tList<Article> curArticles = null;\n\n\t\t\tif (status == WorkflowConstants.STATUS_ANY) {\n\t\t\t\tcurArticles = articlePersistence.filterFindByG_P_L(\n\t\t\t\t\tgroupId, curParentResourcePrimKeys,\n\t\t\t\t\tnew int[] {ArticleConstants.LATEST_VERSION});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurArticles = articlePersistence.filterFindByG_P_L_S(\n\t\t\t\t\tgroupId, curParentResourcePrimKeys,\n\t\t\t\t\tArticleConstants.LATEST_ANY, status);\n\t\t\t}\n\n\t\t\tarticles.addAll(curArticles);\n\n\t\t\tlong[] resourcePrimKeys = StringUtil.split(\n\t\t\t\tListUtil.toString(curArticles, \"resourcePrimKey\"), 0L);\n\n\t\t\tparentResourcePrimKeys = ArrayUtil.append(\n\t\t\t\tparentResourcePrimKeys, resourcePrimKeys);\n\t\t}\n\n\t\tCollections.sort(articles, new ArticleModifiedDateComparator());\n\n\t\treturn ListUtil.subList(articles, 0, rssDelta);\n\t}","id":20472,"modified_method":"protected List<Article> getRSSArticles(\n\t\t\tlong groupId, long parentResourcePrimKey, int status, int rssDelta)\n\t\tthrows PortalException, SystemException {\n\n\t\tList<Article> articles = new ArrayList<Article>();\n\n\t\tif (parentResourcePrimKey !=\n\t\t\t\tArticleConstants.DEFAULT_PARENT_RESOURCE_PRIM_KEY) {\n\n\t\t\tArticle article = articleLocalService.getLatestArticle(\n\t\t\t\tparentResourcePrimKey, status);\n\n\t\t\tarticles.add(article);\n\t\t}\n\n\t\tlong[] parentResourcePrimKeys = {parentResourcePrimKey};\n\n\t\twhile (parentResourcePrimKeys.length > 0) {\n\t\t\tlong[] curParentResourcePrimKeys = null;\n\n\t\t\tif (parentResourcePrimKeys.length > _SQL_DATA_MAX_PARAMETERS) {\n\t\t\t\tcurParentResourcePrimKeys = ArrayUtil.subArray(\n\t\t\t\t\tparentResourcePrimKeys, 0, _SQL_DATA_MAX_PARAMETERS);\n\n\t\t\t\tparentResourcePrimKeys = ArrayUtil.subArray(\n\t\t\t\t\tparentResourcePrimKeys, _SQL_DATA_MAX_PARAMETERS,\n\t\t\t\t\tparentResourcePrimKeys.length);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurParentResourcePrimKeys = parentResourcePrimKeys.clone();\n\n\t\t\t\tparentResourcePrimKeys = new long[0];\n\t\t\t}\n\n\t\t\tList<Article> curArticles = null;\n\n\t\t\tif (status == WorkflowConstants.STATUS_ANY) {\n\t\t\t\tcurArticles = articlePersistence.filterFindByG_P_L(\n\t\t\t\t\tgroupId, curParentResourcePrimKeys,\n\t\t\t\t\tnew int[] {ArticleConstants.LATEST_VERSION});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcurArticles = articlePersistence.filterFindByG_P_L_S(\n\t\t\t\t\tgroupId, curParentResourcePrimKeys,\n\t\t\t\t\tArticleConstants.LATEST_ANY, status);\n\t\t\t}\n\n\t\t\tarticles.addAll(curArticles);\n\n\t\t\tlong[] resourcePrimKeys = StringUtil.split(\n\t\t\t\tListUtil.toString(curArticles, \"resourcePrimKey\"), 0L);\n\n\t\t\tparentResourcePrimKeys = ArrayUtil.append(\n\t\t\t\tparentResourcePrimKeys, resourcePrimKeys);\n\t\t}\n\n\t\tCollections.sort(articles, new ArticleModifiedDateComparator());\n\n\t\treturn ListUtil.subList(articles, 0, rssDelta);\n\t}","commit_id":"8e892f976e63a5e886b0af518b9da7c985848bb8","url":"https://github.com/liferay/liferay-plugins"},{"original_method":"public String toString()\n        {\n            return project.getId();\n        }","id":20473,"modified_method":"/**\n         * @see java.lang.Object#toString()\n         */\n        public String toString()\n        {\n            return project.getId();\n        }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getOutputName()\n    {\n        return \"dependency-convergence\";\n    }","id":20474,"modified_method":"/**\n     * @see org.apache.maven.reporting.AbstractMavenReport#getOutputName()\n     */\n    public String getOutputName()\n    {\n        return \"dependency-convergence\";\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void generateStats( Locale locale, Sink sink, Map dependencyMap )\n    {\n        int depCount = dependencyMap.size();\n        int artifactCount = 0;\n        int snapshotCount = 0;\n\n        Iterator it = dependencyMap.values().iterator();\n        while ( it.hasNext() )\n        {\n            List depList = (List) it.next();\n            Map artifactMap = getSortedUniqueArtifactMap( depList );\n            snapshotCount += countSnapshots( artifactMap );\n            artifactCount += artifactMap.size();\n        }\n\n        int convergence = (int) ( ( (double) depCount / (double) artifactCount ) * PERCENTAGE );\n\n        sink.table();\n        sink.tableCaption();\n        sink.text( getI18nString( locale, \"stats.caption\" ) );\n        sink.tableCaption_();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( getI18nString( locale, \"stats.subprojects\" ) + \":\" );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( reactorProjects.size() ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( getI18nString( locale, \"stats.dependencies\" ) + \":\" );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( depCount ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( getI18nString( locale, \"stats.artifacts\" ) + \":\" );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( artifactCount ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( getI18nString( locale, \"stats.snapshots\" ) + \":\" );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( snapshotCount ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( getI18nString( locale, \"stats.convergence\" ) + \":\" );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n\n        if ( convergence < PERCENTAGE )\n        {\n            iconError( sink );\n        }\n        else\n        {\n            iconSuccess( sink );\n        }\n        sink.nonBreakingSpace();\n\n        sink.bold();\n        sink.text( String.valueOf( convergence ) + \"%\" );\n        sink.bold_();\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell();\n        sink.text( getI18nString( locale, \"stats.readyrelease\" ) + \":\" );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        if ( convergence >= PERCENTAGE && snapshotCount <= 0 )\n        {\n            iconSuccess( sink );\n            sink.nonBreakingSpace();\n            sink.bold();\n            sink.text( getI18nString( locale, \"stats.readyrelease.success\" ) );\n            sink.bold_();\n        }\n        else\n        {\n            iconError( sink );\n            sink.nonBreakingSpace();\n            sink.bold();\n            sink.text( getI18nString( locale, \"stats.readyrelease.error\" ) );\n            sink.bold_();\n            if ( convergence < PERCENTAGE )\n            {\n                sink.lineBreak();\n                sink.text( getI18nString( locale, \"stats.readyrelease.error.convergence\" ) );\n            }\n            if ( snapshotCount > 0 )\n            {\n                sink.lineBreak();\n                sink.text( getI18nString( locale, \"stats.readyrelease.error.snapshots\" ) );\n            }\n        }\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.table_();\n    }","id":20475,"modified_method":"/**\n     * Generate the statistic table\n     *\n     * @param locale\n     * @param sink\n     * @param dependencyMap\n     */\n    private void generateStats( Locale locale, Sink sink, Map dependencyMap )\n    {\n        int depCount = dependencyMap.size();\n        int artifactCount = 0;\n        int snapshotCount = 0;\n\n        Iterator it = dependencyMap.values().iterator();\n        while ( it.hasNext() )\n        {\n            List depList = (List) it.next();\n            Map artifactMap = getSortedUniqueArtifactMap( depList );\n            snapshotCount += countSnapshots( artifactMap );\n            artifactCount += artifactMap.size();\n        }\n\n        int convergence = (int) ( ( (double) depCount / (double) artifactCount ) * PERCENTAGE );\n\n        // To know the header cell width\n        List l = new ArrayList();\n        l.add( getI18nString( locale, \"stats.subprojects\" ) );\n        l.add( getI18nString( locale, \"stats.dependencies\" ) );\n        l.add( getI18nString( locale, \"stats.artifacts\" ) );\n        l.add( getI18nString( locale, \"stats.snapshots\" ) );\n        l.add( getI18nString( locale, \"stats.convergence\" ) );\n        l.add( getI18nString( locale, \"stats.readyrelease\" ) );\n\n        String biggest = getBiggestString( l );\n        String headerCellWidth = getMavenTableHeaderCell( biggest ) + \"px\";\n\n        // Create report\n        sink.table();\n        sink.tableCaption();\n        sink.bold();\n        sink.text( getI18nString( locale, \"stats.caption\" ) );\n        sink.bold_();\n        sink.tableCaption_();\n\n        sink.tableRow();\n        sink.tableHeaderCell( headerCellWidth );\n        sink.text( getI18nString( locale, \"stats.subprojects\" ) );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( reactorProjects.size() ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell( headerCellWidth );\n        sink.text( getI18nString( locale, \"stats.dependencies\" ) );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( depCount ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell( headerCellWidth );\n        sink.text( getI18nString( locale, \"stats.artifacts\" ) );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( artifactCount ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell( headerCellWidth );\n        sink.text( getI18nString( locale, \"stats.snapshots\" ) );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        sink.text( String.valueOf( snapshotCount ) );\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell( headerCellWidth );\n        sink.text( getI18nString( locale, \"stats.convergence\" ) );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        if ( convergence < PERCENTAGE )\n        {\n            iconError( sink );\n        }\n        else\n        {\n            iconSuccess( sink );\n        }\n        sink.nonBreakingSpace();\n        sink.bold();\n        sink.text( String.valueOf( convergence ) + \"%\" );\n        sink.bold_();\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.tableRow();\n        sink.tableHeaderCell( headerCellWidth );\n        sink.text( getI18nString( locale, \"stats.readyrelease\" ) );\n        sink.tableHeaderCell_();\n        sink.tableCell();\n        if ( convergence >= PERCENTAGE && snapshotCount <= 0 )\n        {\n            iconSuccess( sink );\n            sink.nonBreakingSpace();\n            sink.bold();\n            sink.text( getI18nString( locale, \"stats.readyrelease.success\" ) );\n            sink.bold_();\n        }\n        else\n        {\n            iconError( sink );\n            sink.nonBreakingSpace();\n            sink.bold();\n            sink.text( getI18nString( locale, \"stats.readyrelease.error\" ) );\n            sink.bold_();\n            if ( convergence < PERCENTAGE )\n            {\n                sink.lineBreak();\n                sink.text( getI18nString( locale, \"stats.readyrelease.error.convergence\" ) );\n            }\n            if ( snapshotCount > 0 )\n            {\n                sink.lineBreak();\n                sink.text( getI18nString( locale, \"stats.readyrelease.error.snapshots\" ) );\n            }\n        }\n        sink.tableCell_();\n        sink.tableRow_();\n\n        sink.table_();\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getDescription( Locale locale )\n    {\n        return getI18nString( locale, \"description\" );\n    }","id":20476,"modified_method":"/**\n     * @see org.apache.maven.reporting.AbstractMavenReport#getDescription(java.util.Locale)\n     */\n    public String getDescription( Locale locale )\n    {\n        return getI18nString( locale, \"description\" );\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void generateDependencyDetails( Sink sink, List depList )\n    {\n        sink.table();\n\n        Map artifactMap = getSortedUniqueArtifactMap( depList );\n\n        sink.tableRow();\n\n        sink.tableCell();\n        if ( artifactMap.size() > 1 )\n        {\n            iconError( sink );\n        }\n        else\n        {\n            iconSuccess( sink );\n        }\n        sink.tableCell_();\n\n        sink.tableCell();\n\n        sink.table();\n        Iterator it = artifactMap.keySet().iterator();\n        while ( it.hasNext() )\n        {\n            String version = (String) it.next();\n            sink.tableRow();\n            sink.tableCell();\n            sink.text( version );\n            sink.tableCell_();\n\n            sink.tableCell();\n            generateVersionDetails( sink, artifactMap, version );\n            sink.tableCell_();\n\n            sink.tableRow_();\n        }\n        sink.table_();\n        sink.tableCell_();\n\n        sink.tableRow_();\n\n        sink.table_();\n    }","id":20477,"modified_method":"/**\n     * Generate the detail table for a given dependency\n     *\n     * @param sink\n     * @param depList\n     * @param cellWidth\n     */\n    private void generateDependencyDetails( Sink sink, List depList, int cellWidth )\n    {\n        sink.table();\n\n        Map artifactMap = getSortedUniqueArtifactMap( depList );\n\n        sink.tableRow();\n\n        sink.tableCell( \"15px\" ); // according /images/icon_success_sml.gif and /images/icon_error_sml.gif\n        if ( artifactMap.size() > 1 )\n        {\n            iconError( sink );\n        }\n        else\n        {\n            iconSuccess( sink );\n        }\n        sink.tableCell_();\n\n        sink.tableCell();\n\n        sink.table();\n\n        Iterator it = artifactMap.keySet().iterator();\n        while ( it.hasNext() )\n        {\n            String version = (String) it.next();\n            sink.tableRow();\n            sink.tableCell( String.valueOf( cellWidth ) + \"px\" );\n            sink.text( version );\n            sink.tableCell_();\n\n            sink.tableCell();\n            generateVersionDetails( sink, artifactMap, version );\n            sink.tableCell_();\n\n            sink.tableRow_();\n        }\n        sink.table_();\n        sink.tableCell_();\n\n        sink.tableRow_();\n\n        sink.table_();\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void generateLegend( Locale locale, Sink sink )\n    {\n        sink.table();\n        sink.tableCaption();\n        sink.text( getI18nString( locale, \"legend\" ) + \":\" );\n        sink.tableCaption_();\n\n        sink.tableRow();\n\n        sink.tableCell();\n        iconSuccess( sink );\n        sink.tableCell_();\n        sink.tableCell();\n        sink.text( getI18nString( locale, \"legend.shared\" ) );\n        sink.tableCell_();\n\n        sink.tableRow_();\n\n        sink.tableRow();\n\n        sink.tableCell();\n        iconError( sink );\n        sink.tableCell_();\n        sink.tableCell();\n        sink.text( getI18nString( locale, \"legend.different\" ) );\n        sink.tableCell_();\n\n        sink.tableRow_();\n\n        sink.table_();\n    }","id":20478,"modified_method":"/**\n     * Generate the legend table\n     *\n     * @param locale\n     * @param sink\n     */\n    private void generateLegend( Locale locale, Sink sink )\n    {\n        sink.table();\n        sink.tableCaption();\n        sink.bold();\n        sink.text( getI18nString( locale, \"legend\" ) );\n        sink.bold_();\n        sink.tableCaption_();\n\n        sink.tableRow();\n\n        sink.tableCell( \"15px\" ); // according /images/icon_success_sml.gif\n        iconSuccess( sink );\n        sink.tableCell_();\n        sink.tableCell();\n        sink.text( getI18nString( locale, \"legend.shared\" ) );\n        sink.tableCell_();\n\n        sink.tableRow_();\n\n        sink.tableRow();\n\n        sink.tableCell( \"15px\" ); // according /images/icon_error_sml.gif\n        iconError( sink );\n        sink.tableCell_();\n        sink.tableCell();\n        sink.text( getI18nString( locale, \"legend.different\" ) );\n        sink.tableCell_();\n\n        sink.tableRow_();\n\n        sink.table_();\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"public int compare( Object o1, Object o2 )\n        {\n            if ( o1 instanceof ReverseDependencyLink && o2 instanceof ReverseDependencyLink )\n            {\n                ReverseDependencyLink p1 = (ReverseDependencyLink) o1;\n                ReverseDependencyLink p2 = (ReverseDependencyLink) o2;\n                return p1.getProject().getId().compareTo( p2.getProject().getId() );\n            }\n            else\n            {\n                return 0;\n            }\n        }","id":20479,"modified_method":"/**\n         * @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)\n         */\n        public int compare( Object o1, Object o2 )\n        {\n            if ( o1 instanceof ReverseDependencyLink && o2 instanceof ReverseDependencyLink )\n            {\n                ReverseDependencyLink p1 = (ReverseDependencyLink) o1;\n                ReverseDependencyLink p2 = (ReverseDependencyLink) o2;\n                return p1.getProject().getId().compareTo( p2.getProject().getId() );\n            }\n\n            return 0;\n        }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"public String getName( Locale locale )\n    {\n        return getI18nString( locale, \"name\" );\n    }","id":20480,"modified_method":"/**\n     * @see org.apache.maven.reporting.AbstractMavenReport#getName(java.util.Locale)\n     */\n    public String getName( Locale locale )\n    {\n        return getI18nString( locale, \"name\" );\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"protected void executeReport( Locale locale )\n        throws MavenReportException\n    {\n        Sink sink = getSink();\n\n        sink.head();\n        sink.title();\n        sink.text( getI18nString( locale, \"title\" ) );\n        sink.title_();\n        sink.head_();\n\n        sink.body();\n\n        sink.section1();\n\n        sink.sectionTitle1();\n        sink.text( getI18nString( locale, \"title\" ) );\n        sink.sectionTitle1_();\n\n        Map dependencyMap = getDependencyMap();\n\n        // legend\n        generateLegend( locale, sink );\n\n        // stats\n        generateStats( locale, sink, dependencyMap );\n\n        // convergence\n        generateConvergence( locale, sink, dependencyMap );\n\n        sink.section1_();\n\n        sink.body_();\n        sink.flush();\n    }","id":20481,"modified_method":"/**\n     * @see org.apache.maven.reporting.AbstractMavenReport#executeReport(java.util.Locale)\n     */\n    protected void executeReport( Locale locale )\n        throws MavenReportException\n    {\n        Sink sink = getSink();\n\n        sink.head();\n        sink.title();\n        sink.text( getI18nString( locale, \"title\" ) );\n        sink.title_();\n        sink.head_();\n\n        sink.body();\n\n        sink.section1();\n\n        sink.sectionTitle1();\n        sink.text( getI18nString( locale, \"title\" ) );\n        sink.sectionTitle1_();\n\n        Map dependencyMap = getDependencyMap();\n\n        // legend\n        generateLegend( locale, sink );\n\n        sink.lineBreak();\n\n        // stats\n        generateStats( locale, sink, dependencyMap );\n\n        sink.section1_();\n\n        // convergence\n        generateConvergence( locale, sink, dependencyMap );\n\n        sink.body_();\n        sink.flush();\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"private void generateConvergence( Locale locale, Sink sink, Map dependencyMap )\n    {\n        sink.text( getI18nString( locale, \"convergence.caption\" ) );\n\n        Iterator it = dependencyMap.keySet().iterator();\n        while ( it.hasNext() )\n        {\n            String key = (String) it.next();\n            List depList = (List) dependencyMap.get( key );\n\n            sink.section2();\n            sink.sectionTitle2();\n            sink.text( key );\n            sink.sectionTitle2_();\n\n            generateDependencyDetails( sink, depList );\n\n            sink.section2_();\n        }\n    }","id":20482,"modified_method":"/**\n     * Generate the convergenec table for all dependencies\n     *\n     * @param locale\n     * @param sink\n     * @param dependencyMap\n     */\n    private void generateConvergence( Locale locale, Sink sink, Map dependencyMap )\n    {\n        sink.section2();\n\n        sink.sectionTitle2();\n        sink.text( getI18nString( locale, \"convergence.caption\" ) );\n        sink.sectionTitle2_();\n\n        // To know the cell width for version\n        String biggestVersion = getBiggestStringVersion( dependencyMap );\n        int cellWidth = getMavenTableCell( biggestVersion );\n\n        Iterator it = dependencyMap.keySet().iterator();\n        while ( it.hasNext() )\n        {\n            String key = (String) it.next();\n            List depList = (List) dependencyMap.get( key );\n\n            sink.section3();\n            sink.sectionTitle3();\n            sink.text( key );\n            sink.sectionTitle3_();\n\n            generateDependencyDetails( sink, depList, cellWidth );\n\n            sink.section3_();\n        }\n\n        sink.section2_();\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @see org.apache.maven.plugin.testing.stubs.MavenProjectStub#getDependencies()\n     */\n    public List getDependencies()\n    {\n        return Collections.EMPTY_LIST;\n    }","id":20483,"modified_method":"/**\n     * @see org.apache.maven.plugin.testing.stubs.MavenProjectStub#getDependencies()\n     */\n    public List getDependencies()\n    {\n        Dependency d = new Dependency();\n        d.setGroupId( \"junit\" );\n        d.setArtifactId( \"junit\" );\n        d.setVersion( \"3.8.1\" );\n        d.setScope( Artifact.SCOPE_COMPILE );\n\n        return Collections.singletonList( d );\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"/**\n     * @see org.apache.maven.plugin.testing.stubs.MavenProjectStub#getDependencies()\n     */\n    public List getDependencies()\n    {\n        return Collections.EMPTY_LIST;\n    }","id":20484,"modified_method":"/**\n     * @see org.apache.maven.plugin.testing.stubs.MavenProjectStub#getDependencies()\n     */\n    public List getDependencies()\n    {\n        Dependency d = new Dependency();\n        d.setGroupId( \"junit\" );\n        d.setArtifactId( \"junit\" );\n        d.setVersion( \"3.8.1\" );\n        d.setScope( Artifact.SCOPE_COMPILE );\n\n        return Collections.singletonList( d );\n    }","commit_id":"365bc23c43745141ac73ea7f40b7460cf4b4167c","url":"https://github.com/apache/maven-plugins"},{"original_method":"public Builder renameType(String oldVal, String newVal) {\n            // xstream format for inner classes is like <brooklyn.entity.rebind.transformer.CompoundTransformerTest_-OrigType>\n            oldVal = toXstreamClassnameFormat(oldVal);\n            newVal = toXstreamClassnameFormat(newVal);\n            \n            String xsltTemplate = ResourceUtils.create(this).getResourceAsString(\"classpath://brooklyn/entity/rebind/transformer/renameType.xslt\");\n            String xslt = TemplateProcessor.processTemplateContents(xsltTemplate, ImmutableMap.of(\"old_val\", oldVal, \"new_val\", newVal));\n            return xsltTransformer(xslt);\n        }","id":20485,"modified_method":"/** Changes the contents inside a \"type\" tag:\n         * where the contents match the old value, they are changed to the new value.\n         * <p> \n         * In brooklyn/xstream, a \"type\" node typically gives the name of a java or catalog type to be used\n         * when creating an instance. */\n        public Builder renameType(String oldVal, String newVal) {\n            return xsltTransformerFromXsltFreemarkerTemplateUrl(\"classpath://brooklyn/entity/rebind/transformer/renameType.xslt\",\n                ImmutableMap.of(\"old_val\", toXstreamClassnameFormat(oldVal), \"new_val\", toXstreamClassnameFormat(newVal)));\n        }","commit_id":"25d8dc309d038437a50b4cbd64fdf66968235fd4","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public Builder renameField(String clazz, String oldVal, String newVal) {\n            // xstream format for inner classes is like <brooklyn.entity.rebind.transformer.CompoundTransformerTest_-OrigType>\n            clazz = toXstreamClassnameFormat(clazz);\n            oldVal = toXstreamClassnameFormat(oldVal);\n            newVal = toXstreamClassnameFormat(newVal);\n            \n            String xsltTemplate = ResourceUtils.create(this).getResourceAsString(\"classpath://brooklyn/entity/rebind/transformer/renameField.xslt\");\n            String xslt = TemplateProcessor.processTemplateContents(xsltTemplate, ImmutableMap.of(\"class_name\", clazz, \"old_val\", oldVal, \"new_val\", newVal));\n            return xsltTransformer(xslt);\n        }","id":20486,"modified_method":"/** Changes an XML tag inside another tag: \n         * where the outer tag and inner tag match the values given here,\n         * the inner tag is changed to the new value.\n         * <p>\n         * In stream tags corresponding to fields are contained in the tag corresponding to the class name,\n         * so this gives a way to change the name of a field which will be deserialized. */\n        public Builder renameField(String clazz, String oldVal, String newVal) {\n            return xsltTransformerFromXsltFreemarkerTemplateUrl(\"classpath://brooklyn/entity/rebind/transformer/renameField.xslt\",\n                ImmutableMap.of(\"class_name\", toXstreamClassnameFormat(clazz), \"old_val\", toXstreamClassnameFormat(oldVal), \"new_val\", toXstreamClassnameFormat(newVal)));\n        }","commit_id":"25d8dc309d038437a50b4cbd64fdf66968235fd4","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public Builder renameClass(String oldVal, String newVal) {\n            // xstream format for inner classes is like <brooklyn.entity.rebind.transformer.CompoundTransformerTest_-OrigType>\n            oldVal = toXstreamClassnameFormat(oldVal);\n            newVal = toXstreamClassnameFormat(newVal);\n            \n            String xsltTemplate = ResourceUtils.create(this).getResourceAsString(\"classpath://brooklyn/entity/rebind/transformer/renameClass.xslt\");\n            String xslt = TemplateProcessor.processTemplateContents(xsltTemplate, ImmutableMap.of(\"old_val\", oldVal, \"new_val\", newVal));\n            return xsltTransformer(xslt);\n        }","id":20487,"modified_method":"/** Changes an XML tag matching a given old value:\n         * the tag is changed to the new value.\n         * <p>\n         * In xstream many tags correspond to the java class of an object so this is a way to change \n         * the java class (or xstream alias) of a persisted instance (or instance inside them). */\n        public Builder renameClass(String oldVal, String newVal) {\n            return xsltTransformerFromXsltFreemarkerTemplateUrl(\"classpath://brooklyn/entity/rebind/transformer/renameClass.xslt\",\n                ImmutableMap.of(\"old_val\", toXstreamClassnameFormat(oldVal), \"new_val\", toXstreamClassnameFormat(newVal)));\n        }","commit_id":"25d8dc309d038437a50b4cbd64fdf66968235fd4","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public String transform(String input) throws IOException, URISyntaxException, TransformerException {\n        Transformer transformer = factory.newTransformer(xslt);\n        \n        Source text = new StreamSource(new ByteArrayInputStream(input.getBytes()));\n        ByteArrayOutputStream baos = new ByteArrayOutputStream(input.length());\n        transformer.transform(text, new StreamResult(baos));\n        \n        return new String(baos.toByteArray());\n    }","id":20488,"modified_method":"public String transform(String input) throws IOException, URISyntaxException, TransformerException {\n        // stream source is single-use\n        StreamSource xslt = new StreamSource(new ByteArrayInputStream(xsltContent.getBytes()));\n        Transformer transformer = factory.newTransformer(xslt);\n        \n        Source text = new StreamSource(new ByteArrayInputStream(input.getBytes()));\n        ByteArrayOutputStream baos = new ByteArrayOutputStream(input.length());\n        transformer.transform(text, new StreamResult(baos));\n        \n        return new String(baos.toByteArray());\n    }","commit_id":"25d8dc309d038437a50b4cbd64fdf66968235fd4","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public XsltTransformer(String xsltContent) {\n        factory = TransformerFactory.newInstance();\n        xslt = new StreamSource(new ByteArrayInputStream(xsltContent.getBytes()));\n    }","id":20489,"modified_method":"public XsltTransformer(String xsltContent) {\n        factory = TransformerFactory.newInstance();\n        this.xsltContent = xsltContent;\n    }","commit_id":"25d8dc309d038437a50b4cbd64fdf66968235fd4","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public Builder renameType(String oldVal, String newVal) {\n            // xstream format for inner classes is like <brooklyn.entity.rebind.transformer.CompoundTransformerTest_-OrigType>\n            oldVal = toXstreamClassnameFormat(oldVal);\n            newVal = toXstreamClassnameFormat(newVal);\n            \n            String xsltTemplate = ResourceUtils.create(this).getResourceAsString(\"classpath://brooklyn/entity/rebind/transformer/renameType.xslt\");\n            String xslt = TemplateProcessor.processTemplateContents(xsltTemplate, ImmutableMap.of(\"old_val\", oldVal, \"new_val\", newVal));\n            return xsltTransformer(xslt);\n        }","id":20490,"modified_method":"/** Changes the contents inside a \"type\" tag:\n         * where the contents match the old value, they are changed to the new value.\n         * <p> \n         * In brooklyn/xstream, a \"type\" node typically gives the name of a java or catalog type to be used\n         * when creating an instance. */\n        public Builder renameType(String oldVal, String newVal) {\n            return xsltTransformerFromXsltFreemarkerTemplateUrl(\"classpath://brooklyn/entity/rebind/transformer/renameType.xslt\",\n                ImmutableMap.of(\"old_val\", toXstreamClassnameFormat(oldVal), \"new_val\", toXstreamClassnameFormat(newVal)));\n        }","commit_id":"7cd66834d331e9f3e7bf908c207f7f0caf215755","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public Builder renameField(String clazz, String oldVal, String newVal) {\n            // xstream format for inner classes is like <brooklyn.entity.rebind.transformer.CompoundTransformerTest_-OrigType>\n            clazz = toXstreamClassnameFormat(clazz);\n            oldVal = toXstreamClassnameFormat(oldVal);\n            newVal = toXstreamClassnameFormat(newVal);\n            \n            String xsltTemplate = ResourceUtils.create(this).getResourceAsString(\"classpath://brooklyn/entity/rebind/transformer/renameField.xslt\");\n            String xslt = TemplateProcessor.processTemplateContents(xsltTemplate, ImmutableMap.of(\"class_name\", clazz, \"old_val\", oldVal, \"new_val\", newVal));\n            return xsltTransformer(xslt);\n        }","id":20491,"modified_method":"/** Changes an XML tag inside another tag: \n         * where the outer tag and inner tag match the values given here,\n         * the inner tag is changed to the new value.\n         * <p>\n         * In stream tags corresponding to fields are contained in the tag corresponding to the class name,\n         * so this gives a way to change the name of a field which will be deserialized. */\n        public Builder renameField(String clazz, String oldVal, String newVal) {\n            return xsltTransformerFromXsltFreemarkerTemplateUrl(\"classpath://brooklyn/entity/rebind/transformer/renameField.xslt\",\n                ImmutableMap.of(\"class_name\", toXstreamClassnameFormat(clazz), \"old_val\", toXstreamClassnameFormat(oldVal), \"new_val\", toXstreamClassnameFormat(newVal)));\n        }","commit_id":"7cd66834d331e9f3e7bf908c207f7f0caf215755","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public Builder renameClass(String oldVal, String newVal) {\n            // xstream format for inner classes is like <brooklyn.entity.rebind.transformer.CompoundTransformerTest_-OrigType>\n            oldVal = toXstreamClassnameFormat(oldVal);\n            newVal = toXstreamClassnameFormat(newVal);\n            \n            String xsltTemplate = ResourceUtils.create(this).getResourceAsString(\"classpath://brooklyn/entity/rebind/transformer/renameClass.xslt\");\n            String xslt = TemplateProcessor.processTemplateContents(xsltTemplate, ImmutableMap.of(\"old_val\", oldVal, \"new_val\", newVal));\n            return xsltTransformer(xslt);\n        }","id":20492,"modified_method":"/** Changes an XML tag matching a given old value:\n         * the tag is changed to the new value.\n         * <p>\n         * In xstream many tags correspond to the java class of an object so this is a way to change \n         * the java class (or xstream alias) of a persisted instance (or instance inside them). */\n        public Builder renameClass(String oldVal, String newVal) {\n            return xsltTransformerFromXsltFreemarkerTemplateUrl(\"classpath://brooklyn/entity/rebind/transformer/renameClass.xslt\",\n                ImmutableMap.of(\"old_val\", toXstreamClassnameFormat(oldVal), \"new_val\", toXstreamClassnameFormat(newVal)));\n        }","commit_id":"7cd66834d331e9f3e7bf908c207f7f0caf215755","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public String transform(String input) throws IOException, URISyntaxException, TransformerException {\n        Transformer transformer = factory.newTransformer(xslt);\n        \n        Source text = new StreamSource(new ByteArrayInputStream(input.getBytes()));\n        ByteArrayOutputStream baos = new ByteArrayOutputStream(input.length());\n        transformer.transform(text, new StreamResult(baos));\n        \n        return new String(baos.toByteArray());\n    }","id":20493,"modified_method":"public String transform(String input) throws IOException, URISyntaxException, TransformerException {\n        // stream source is single-use\n        StreamSource xslt = new StreamSource(new ByteArrayInputStream(xsltContent.getBytes()));\n        Transformer transformer = factory.newTransformer(xslt);\n        \n        Source text = new StreamSource(new ByteArrayInputStream(input.getBytes()));\n        ByteArrayOutputStream baos = new ByteArrayOutputStream(input.length());\n        transformer.transform(text, new StreamResult(baos));\n        \n        return new String(baos.toByteArray());\n    }","commit_id":"7cd66834d331e9f3e7bf908c207f7f0caf215755","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public XsltTransformer(String xsltContent) {\n        factory = TransformerFactory.newInstance();\n        xslt = new StreamSource(new ByteArrayInputStream(xsltContent.getBytes()));\n    }","id":20494,"modified_method":"public XsltTransformer(String xsltContent) {\n        factory = TransformerFactory.newInstance();\n        this.xsltContent = xsltContent;\n    }","commit_id":"7cd66834d331e9f3e7bf908c207f7f0caf215755","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"public M0(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"description\")) {\n          _description = readNullableString(reader);\n        }\n        else if (name.equals(\"enum\")) {\n          _enum = nextList(reader);\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M0(reader);\n        }\n        else if (name.equals(\"optional\")) {\n          _optional = readBoolean(reader, \"optional\");\n        }\n        else if (name.equals(\"properties\")) {\n          _properties = readObjectArray(reader, \"properties\", new M4F(), true);\n        }\n        else if (name.equals(\"$ref\")) {\n          _$ref = readNullableString(reader);\n        }\n        else if (name.equals(\"type\")) {\n          _type = readNullableString(reader);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20495,"modified_method":"M0(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"domains\")) {\n          _domains = readObjectArray(reader, new M2F());\n        }\n        else if (name.equals(\"version\")) {\n          _version = new M1(reader, null);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M4(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"description\")) {\n          _description = readNullableString(reader);\n        }\n        else if (name.equals(\"enum\")) {\n          _enum = nextList(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = readBoolean(reader, \"hidden\");\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M0(reader);\n        }\n        else if (name.equals(\"name\")) {\n          _name = readString(reader, \"name\");\n        }\n        else if (name.equals(\"optional\")) {\n          _optional = readBoolean(reader, \"optional\");\n        }\n        else if (name.equals(\"$ref\")) {\n          _$ref = readNullableString(reader);\n        }\n        else if (name.equals(\"shortName\")) {\n          _shortName = readNullableString(reader);\n        }\n        else if (name.equals(\"type\")) {\n          _type = readNullableString(reader);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20496,"modified_method":"M4(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"description\")) {\n          _description = reader.nextNullableString();\n        }\n        else if (name.equals(\"enum\")) {\n          _getEnum = nextList(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = reader.nextBoolean();\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M7(reader, null);\n        }\n        else if (name.equals(\"name\")) {\n          _name = reader.nextString();\n        }\n        else if (name.equals(\"optional\")) {\n          _optional = reader.nextBoolean();\n        }\n        else if (name.equals(\"$ref\")) {\n          _ref = reader.nextNullableString();\n        }\n        else if (name.equals(\"shortName\")) {\n          _shortName = reader.nextNullableString();\n        }\n        else if (name.equals(\"type\")) {\n          _type = reader.nextNullableString();\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.ObjectProperty read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M4(reader);\n    }","id":20497,"modified_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.Parameter read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M4(reader, null);\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M1(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"async\")) {\n          _async = readBoolean(reader, \"async\");\n        }\n        else if (name.equals(\"description\")) {\n          _description = readNullableString(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = readBoolean(reader, \"hidden\");\n        }\n        else if (name.equals(\"name\")) {\n          _name = readString(reader, \"name\");\n        }\n        else if (name.equals(\"parameters\")) {\n          _parameters = readObjectArray(reader, \"parameters\", new M5F(), true);\n        }\n        else if (name.equals(\"returns\")) {\n          _returns = readObjectArray(reader, \"returns\", new M5F(), true);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20498,"modified_method":"M1(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"major\")) {\n          _major = reader.nextString();\n        }\n        else if (name.equals(\"minor\")) {\n          _minor = reader.nextString();\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public java.util.List<java.lang.String> getEnum() {\n      return _enum;\n    }","id":20499,"modified_method":"@NotNull\n    @Override\n    public java.util.List<java.lang.String> getEnum() {\n      return _getEnum;\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public java.util.List<java.lang.String> getEnum() {\n      return _enum;\n    }","id":20500,"modified_method":"@NotNull\n    @Override\n    public java.util.List<java.lang.String> getEnum() {\n      return _getEnum;\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.Event read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M3(reader);\n    }","id":20501,"modified_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.Command read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M3(reader, null);\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.Domain read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M2(reader);\n    }","id":20502,"modified_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.Domain read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M2(reader, null);\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M3(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"description\")) {\n          _description = readNullableString(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = readBoolean(reader, \"hidden\");\n        }\n        else if (name.equals(\"name\")) {\n          _name = readString(reader, \"name\");\n        }\n        else if (name.equals(\"parameters\")) {\n          _parameters = readObjectArray(reader, \"parameters\", new M5F(), true);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20503,"modified_method":"M3(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"async\")) {\n          _async = reader.nextBoolean();\n        }\n        else if (name.equals(\"description\")) {\n          _description = reader.nextNullableString();\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = reader.nextBoolean();\n        }\n        else if (name.equals(\"name\")) {\n          _name = reader.nextString();\n        }\n        else if (name.equals(\"parameters\")) {\n          _parameters = readObjectArray(reader, new M4F());\n        }\n        else if (name.equals(\"returns\")) {\n          _returns = readObjectArray(reader, new M4F());\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M8(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"major\")) {\n          _major = readString(reader, \"major\");\n        }\n        else if (name.equals(\"minor\")) {\n          _minor = readString(reader, \"minor\");\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20504,"modified_method":"M8(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"description\")) {\n          _description = reader.nextNullableString();\n        }\n        else if (name.equals(\"enum\")) {\n          _getEnum = nextList(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = reader.nextBoolean();\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M7(reader, null);\n        }\n        else if (name.equals(\"name\")) {\n          _name = reader.nextString();\n        }\n        else if (name.equals(\"optional\")) {\n          _optional = reader.nextBoolean();\n        }\n        else if (name.equals(\"$ref\")) {\n          _ref = reader.nextNullableString();\n        }\n        else if (name.equals(\"shortName\")) {\n          _shortName = reader.nextNullableString();\n        }\n        else if (name.equals(\"type\")) {\n          _type = reader.nextNullableString();\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public java.lang.String ref() {\n      return _$ref;\n    }","id":20505,"modified_method":"@NotNull\n    @Override\n    public java.lang.String ref() {\n      return _ref;\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M7(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"description\")) {\n          _description = readNullableString(reader);\n        }\n        else if (name.equals(\"enum\")) {\n          _enum = nextList(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = readBoolean(reader, \"hidden\");\n        }\n        else if (name.equals(\"id\")) {\n          _id = readString(reader, \"id\");\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M0(reader);\n        }\n        else if (name.equals(\"properties\")) {\n          _properties = readObjectArray(reader, \"properties\", new M4F(), true);\n        }\n        else if (name.equals(\"type\")) {\n          _type = readString(reader, \"type\");\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20506,"modified_method":"M7(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"description\")) {\n          _description = reader.nextNullableString();\n        }\n        else if (name.equals(\"enum\")) {\n          _getEnum = nextList(reader);\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M7(reader, null);\n        }\n        else if (name.equals(\"optional\")) {\n          _optional = reader.nextBoolean();\n        }\n        else if (name.equals(\"properties\")) {\n          _properties = readObjectArray(reader, new M8F());\n        }\n        else if (name.equals(\"$ref\")) {\n          _ref = reader.nextNullableString();\n        }\n        else if (name.equals(\"type\")) {\n          _type = reader.nextNullableString();\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.Parameter read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M5(reader);\n    }","id":20507,"modified_method":"@Override\n    public org.jetbrains.jsonProtocol.ProtocolMetaModel.Event read(org.jetbrains.io.JsonReaderEx reader) {\n      return new M5(reader, null);\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  public org.jetbrains.jsonProtocol.ProtocolMetaModel.Root parseRoot(org.jetbrains.io.JsonReaderEx reader) {\n    return new M6(reader);\n  }","id":20508,"modified_method":"@Override\n  public org.jetbrains.jsonProtocol.ProtocolMetaModel.Root parseRoot(org.jetbrains.io.JsonReaderEx reader) {\n    return new M0(reader,  null);\n  }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M6(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"domains\")) {\n          _domains = readObjectArray(reader, \"domains\", new M2F(), false);\n        }\n        else if (name.equals(\"version\")) {\n          _version = new M8(reader);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20509,"modified_method":"M6(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"description\")) {\n          _description = reader.nextNullableString();\n        }\n        else if (name.equals(\"enum\")) {\n          _getEnum = nextList(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = reader.nextBoolean();\n        }\n        else if (name.equals(\"id\")) {\n          _id = reader.nextString();\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M7(reader, null);\n        }\n        else if (name.equals(\"properties\")) {\n          _properties = readObjectArray(reader, new M8F());\n        }\n        else if (name.equals(\"type\")) {\n          _type = reader.nextString();\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M2(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"commands\")) {\n          _commands = readObjectArray(reader, \"commands\", new M1F(), false);\n        }\n        else if (name.equals(\"description\")) {\n          _description = readNullableString(reader);\n        }\n        else if (name.equals(\"domain\")) {\n          _domain = readString(reader, \"domain\");\n        }\n        else if (name.equals(\"events\")) {\n          _events = readObjectArray(reader, \"events\", new M3F(), true);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = readBoolean(reader, \"hidden\");\n        }\n        else if (name.equals(\"types\")) {\n          _types = readObjectArray(reader, \"types\", new M7F(), true);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20510,"modified_method":"M2(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"commands\")) {\n          _commands = readObjectArray(reader, new M3F());\n        }\n        else if (name.equals(\"description\")) {\n          _description = reader.nextNullableString();\n        }\n        else if (name.equals(\"domain\")) {\n          _domain = reader.nextString();\n        }\n        else if (name.equals(\"events\")) {\n          _events = readObjectArray(reader, new M5F());\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = reader.nextBoolean();\n        }\n        else if (name.equals(\"types\")) {\n          _types = readObjectArray(reader, new M6F());\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public M5(org.jetbrains.io.JsonReaderEx reader) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        CharSequence name = reader.nextNameAsCharSequence();\n        if (name.equals(\"description\")) {\n          _description = readNullableString(reader);\n        }\n        else if (name.equals(\"enum\")) {\n          _enum = nextList(reader);\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = readBoolean(reader, \"hidden\");\n        }\n        else if (name.equals(\"items\")) {\n          _items = new M0(reader);\n        }\n        else if (name.equals(\"name\")) {\n          _name = readString(reader, \"name\");\n        }\n        else if (name.equals(\"optional\")) {\n          _optional = readBoolean(reader, \"optional\");\n        }\n        else if (name.equals(\"$ref\")) {\n          _$ref = readNullableString(reader);\n        }\n        else if (name.equals(\"shortName\")) {\n          _shortName = readNullableString(reader);\n        }\n        else if (name.equals(\"type\")) {\n          _type = readNullableString(reader);\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      reader.endObject();\n    }","id":20511,"modified_method":"M5(org.jetbrains.io.JsonReaderEx reader, String name) {\n      if (name == null) {\n        if (reader.hasNext() && reader.beginObject().hasNext()) {\n          name = reader.nextName();\n        }\n        else {\n          return;\n        }\n      }\n\n      do {\n        if (name.equals(\"description\")) {\n          _description = reader.nextNullableString();\n        }\n        else if (name.equals(\"hidden\")) {\n          _hidden = reader.nextBoolean();\n        }\n        else if (name.equals(\"name\")) {\n          _name = reader.nextString();\n        }\n        else if (name.equals(\"parameters\")) {\n          _parameters = readObjectArray(reader, new M4F());\n        }\n        else {\n          reader.skipValue();\n        }\n      }\n      while ((name = reader.nextNameOrNull()) != null);\n\n      reader.endObject();\n    }","commit_id":"4a161c35c5bf83a6854cbbbf0335d4941bcce163","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Sequence eval(\n\t\tSequence contextSequence,\n\t\tItem contextItem)\n\t\tthrows XPathException {\n\t\tif (contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n\n\t\tString s1 = getArgument(0).eval(contextSequence).getStringValue();\n\t\tString s2 = getArgument(1).eval(contextSequence).getStringValue();\n\t\tif (s1.length() == 0 || s2.length() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tCollator collator = getCollator(contextSequence, contextItem, 3);\n\t\tif (Collations.endsWith(collator, s1, s2))\n\t\t\treturn BooleanValue.TRUE;\n\t\telse\n\t\t\treturn BooleanValue.FALSE;\n\t}","id":20512,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tif (contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n\n\t\tString s1 = getArgument(0).eval(contextSequence).getStringValue();\n\t\tString s2 = getArgument(1).eval(contextSequence).getStringValue();\n\t\t\n        Sequence result;\n        if (s1.length() == 0) \n            result = Sequence.EMPTY_SEQUENCE;\n        else if (s2.length() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tCollator collator = getCollator(contextSequence, contextItem, 3);\n    \t\tif (Collations.endsWith(collator, s1, s2))\n                result = BooleanValue.TRUE;\n    \t\telse\n                result = BooleanValue.FALSE;\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;        \n\t}","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem)\n\t\tthrows XPathException {\n\t\tif(contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n\t\tSequence seq = getArgument(0).eval(contextSequence);\n\t\tif(seq.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tString value; \n\t\ttry {\n\t\t\tvalue = URIUtils.escapeHtmlURI(seq.getStringValue());\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\tthrow new XPathException(e.getMessage());\n\t\t}\n\t\treturn new StringValue(value);\n\t}","id":20513,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tif(contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n        \n        Sequence result;\n\t\tSequence seq = getArgument(0).eval(contextSequence);\n\t\tif(seq.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tString value; \n    \t\ttry {\n    \t\t\tvalue = URIUtils.escapeHtmlURI(seq.getStringValue());\n    \t\t} catch (UnsupportedEncodingException e) {\n    \t\t\tthrow new XPathException(e.getMessage());\n    \t\t}\n            result =  new StringValue(value);\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;          \n\t}","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException {\n        if (args[0].getLength() == 0)\n            return StringValue.EMPTY_STRING;\n        String uri = args[0].getStringValue();\n        boolean escapeReserved = args[1].effectiveBooleanValue();\n        return new StringValue(escape(uri, escapeReserved));\n    }","id":20514,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n        }\n        \n        Sequence result;\n        if (args[0].getLength() == 0)\n            result = StringValue.EMPTY_STRING;\n        else {\n            String uri = args[0].getStringValue();\n            boolean escapeReserved = args[1].effectiveBooleanValue();\n            return new StringValue(escape(uri, escapeReserved));\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;            \n    }","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tSequence seq = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (seq.getLength() != 1)\n\t\t\tthrow new XPathException(\"fn:exactly-one called with a sequence containing \" + seq.getLength() + \" items\");\n\t\treturn seq;\n\t}","id":20515,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tSequence result = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (result.getLength() != 1)\n\t\t\tthrow new XPathException(\"fn:exactly-one called with a sequence containing \" + result.getLength() + \" items\");\n\n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;      \n\t}","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(\n\t\tSequence contextSequence,\n\t\tItem contextItem)\n\t\tthrows XPathException {\n\t\t\tif(contextItem != null)\n\t\t\t\tcontextSequence = contextItem.toSequence();\n\t\t\tSequence seq = getArgument(0).eval(contextSequence);\n\t\t\treturn seq.getLength() == 0 ? BooleanValue.FALSE : BooleanValue.TRUE;\n\t}","id":20516,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        if(contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n        \n\t\tSequence seq = getArgument(0).eval(contextSequence);\n\t\tSequence result = seq.getLength() == 0 ? BooleanValue.FALSE : BooleanValue.TRUE;\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;            \n\t}","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(\n\t\tSequence contextSequence,\n\t\tItem contextItem)\n\t\tthrows XPathException {\n\t\tif (contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n\t\tSequence seq =\n\t\t\tgetArgument(0).eval(contextSequence, contextItem);\n\t\tif (seq.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tNumericValue value =\n\t\t\t(NumericValue) seq.itemAt(0).convertTo(Type.NUMBER);\n\t\treturn value.floor();\n\t}","id":20517,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tif (contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n        \n\t\tSequence result;\n        Sequence seq = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (seq.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tNumericValue value = (NumericValue) seq.itemAt(0).convertTo(Type.NUMBER);\n    \t\tresult = value.floor();\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;    \n        \n\t}","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tDateValue date = (DateValue) arg.itemAt(0);\n\t\tif (isCalledAs(\"day-from-date\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.DAY), Type.INTEGER);\n\t\telse if (isCalledAs(\"month-from-date\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.MONTH), Type.INTEGER);\n\t\telse if (isCalledAs(\"timezone-from-date\"))\n\t\t\treturn date.getTimezone();\n\t\telse if (isCalledAs(\"year-from-date\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.YEAR), Type.INTEGER);\n\t\telse throw new Error(\"Can't handle function \" + mySignature.getName().getLocalName());\n\t}","id":20518,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tDateValue date = (DateValue) arg.itemAt(0);\n    \t\tif (isCalledAs(\"day-from-date\"))\n                result = new IntegerValue(date.getPart(DateValue.DAY), Type.INTEGER);\n    \t\telse if (isCalledAs(\"month-from-date\"))\n                result = new IntegerValue(date.getPart(DateValue.MONTH), Type.INTEGER);\n    \t\telse if (isCalledAs(\"timezone-from-date\"))\n                result = date.getTimezone();\n    \t\telse if (isCalledAs(\"year-from-date\"))\n                result = new IntegerValue(date.getPart(DateValue.YEAR), Type.INTEGER);\n    \t\telse throw new Error(\"Can't handle function \" + mySignature.getName().getLocalName());\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;            \n\t}","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\t\tthrows XPathException {\n\t\tSequence arg = args[0];\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tDateTimeValue date = (DateTimeValue) arg.itemAt(0);\n\t\tif(isCalledAs(\"day-from-dateTime\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.DAY), Type.INTEGER);\n\t\telse if(isCalledAs(\"month-from-dateTime\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.MONTH), Type.INTEGER);\n\t\telse if(isCalledAs(\"year-from-dateTime\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.YEAR), Type.INTEGER);\n\t\telse if(isCalledAs(\"hours-from-dateTime\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.HOUR), Type.INTEGER);\n\t\telse if(isCalledAs(\"minutes-from-dateTime\"))\n\t\t\treturn new IntegerValue(date.getPart(DateValue.MINUTE), Type.INTEGER);\n\t\telse if(isCalledAs(\"seconds-from-dateTime\")) {\n\t\t\tlong millis = date.getPart(DateValue.SECOND) * 1000 + date.getPart(DateValue.MILLISECOND);\n\t\t\treturn new DecimalValue(millis / 1000);\n\t\t} else if(isCalledAs(\"timezone-from-dateTime\"))\n\t\t\treturn date.getTimezone();\n\t\telse throw new Error(\"can't handle function \" + mySignature.getName().getLocalName());\n\t}","id":20519,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\tthrows XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n        }\n        \n        Sequence result;\n\t\tSequence arg = args[0];\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tDateTimeValue date = (DateTimeValue) arg.itemAt(0);\n    \t\tif (isCalledAs(\"day-from-dateTime\"))\n                result = new IntegerValue(date.getPart(DateValue.DAY), Type.INTEGER);\n    \t\telse if (isCalledAs(\"month-from-dateTime\"))\n                result = new IntegerValue(date.getPart(DateValue.MONTH), Type.INTEGER);\n    \t\telse if  (isCalledAs(\"year-from-dateTime\"))\n                result = new IntegerValue(date.getPart(DateValue.YEAR), Type.INTEGER);\n    \t\telse if(isCalledAs(\"hours-from-dateTime\"))\n                result = new IntegerValue(date.getPart(DateValue.HOUR), Type.INTEGER);\n    \t\telse if (isCalledAs(\"minutes-from-dateTime\"))\n                result = new IntegerValue(date.getPart(DateValue.MINUTE), Type.INTEGER);\n    \t\telse if (isCalledAs(\"seconds-from-dateTime\")) {\n    \t\t\tlong millis = date.getPart(DateValue.SECOND) * 1000 + date.getPart(DateValue.MILLISECOND);\n                result = new DecimalValue(millis / 1000);\n    \t\t} else if(isCalledAs(\"timezone-from-dateTime\"))\n                result = date.getTimezone();\n    \t\telse throw new Error(\"can't handle function \" + mySignature.getName().getLocalName());\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;         \n        \n\t}","commit_id":"a2c352838afccd6bde2ff8e47dc6364c8d940551","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem)\n\t\tthrows XPathException {\n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n\t\treturn new IntegerValue(duration.getPart(DurationValue.DAY));\n\t}","id":20520,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n            result = new IntegerValue(duration.getPart(DurationValue.DAY));\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;           \n\t}","commit_id":"1a33e7be024c25c962850bf7500c4b0f53f162ec","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n        \n\t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n\t\treturn new IntegerValue(duration.getPart(DurationValue.HOUR));\n\t}","id":20521,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {            \n    \t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n            result = new IntegerValue(duration.getPart(DurationValue.HOUR));\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;         \n\t}","commit_id":"1a33e7be024c25c962850bf7500c4b0f53f162ec","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem)\n\t\tthrows XPathException {\n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n\t\treturn new IntegerValue(duration.getPart(DurationValue.MINUTE));\n\t}","id":20522,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n        Sequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n            result = new IntegerValue(duration.getPart(DurationValue.MINUTE));\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;          \n\t}","commit_id":"1a33e7be024c25c962850bf7500c4b0f53f162ec","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem)\n\t\tthrows XPathException {\n\t\tSequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n\t\treturn new DecimalValue(Double.toString(duration.getSeconds()));\n\t}","id":20523,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        Sequence result;\n        Sequence arg = getArgument(0).eval(contextSequence, contextItem);\n\t\tif (arg.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tDurationValue duration = (DurationValue) arg.itemAt(0);\n    \t\treturn new DecimalValue(Double.toString(duration.getSeconds()));\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;         \n\t}","commit_id":"1a33e7be024c25c962850bf7500c4b0f53f162ec","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence[] args, Sequence contextSequence)\n\t\t\tthrows XPathException {\n\t\tSequence arg = args[0];\n\t\tif (arg.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tTimeValue time = (TimeValue) arg.itemAt(0);\n\t\tif(isCalledAs(\"hours-from-time\"))\n\t\t\treturn new IntegerValue(time.getPart(DateValue.HOUR), Type.INTEGER);\n\t\telse if(isCalledAs(\"minutes-from-time\"))\n\t\t\treturn new IntegerValue(time.getPart(DateValue.MINUTE), Type.INTEGER);\n\t\telse if(isCalledAs(\"seconds-from-time\")) {\n\t\t\tlong millis = time.getPart(DateValue.SECOND) * 1000 + time.getPart(DateValue.MILLISECOND);\n\t\t\treturn new DecimalValue(millis / 1000);\n\t\t} else if(isCalledAs(\"timezone-from-time\"))\n\t\t\treturn time.getTimezone();\n\t\telse throw new Error(\"can't handle function \" + mySignature.getName().getLocalName());\n\n\t}","id":20524,"modified_method":"public Sequence eval(Sequence[] args, Sequence contextSequence) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n        }\n        \n        Sequence result;\n        Sequence arg = args[0];\n\t\tif (arg.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tTimeValue time = (TimeValue) arg.itemAt(0);\n    \t\tif (isCalledAs(\"hours-from-time\"))\n                result = new IntegerValue(time.getPart(DateValue.HOUR), Type.INTEGER);\n    \t\telse if (isCalledAs(\"minutes-from-time\"))\n                result = new IntegerValue(time.getPart(DateValue.MINUTE), Type.INTEGER);\n    \t\telse if (isCalledAs(\"seconds-from-time\")) {\n    \t\t\tlong millis = time.getPart(DateValue.SECOND) * 1000 + time.getPart(DateValue.MILLISECOND);\n                result = new DecimalValue(millis / 1000);\n    \t\t} else if (isCalledAs(\"timezone-from-time\"))\n                result = time.getTimezone();\n    \t\telse throw new Error(\"can't handle function \" + mySignature.getName().getLocalName());\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;         \n\n\t}","commit_id":"1a33e7be024c25c962850bf7500c4b0f53f162ec","url":"https://github.com/eXist-db/exist"},{"original_method":"/**\n\t * @see org.exist.xquery.Expression#eval(org.exist.dom.DocumentSet, org.exist.dom.NodeSet, org.exist.dom.NodeProxy)\n\t */\n\tpublic Sequence eval(\n\t\tSequence contextSequence,\n\t\tItem contextItem)\n\t\tthrows XPathException {\n\t\tif (getArgumentCount() < 1)\n\t\t\tthrow new XPathException(\"function id requires one argument\");\n\t\tif(contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n\t\tExpression arg = getArgument(0);\n\t\tSequence idval = arg.eval(contextSequence);\n\t\tif(idval.getLength() == 0)\n\t\t\treturn Sequence.EMPTY_SEQUENCE;\n\t\tNodeSet result = new ExtArrayNodeSet();\n\t\tString nextId;\n\t\tDocumentSet docs;\n\t\tif(contextSequence == null || !(contextSequence instanceof NodeSet))\n\t\t\tdocs = context.getStaticallyKnownDocuments();\n\t\telse\n\t\t\tdocs = contextSequence.toNodeSet().getDocumentSet(); \n\t\tfor(SequenceIterator i = idval.iterate(); i.hasNext(); ) {\n\t\t\tnextId = i.nextItem().getStringValue();\n\t\t\tif(nextId.indexOf(\" \") != Constants.STRING_NOT_FOUND) {\n\t\t\t\t// parse idrefs\n\t\t\t\tStringTokenizer tok = new StringTokenizer(nextId, \" \");\n\t\t\t\twhile(tok.hasMoreTokens()) {\n\t\t\t\t\tnextId = tok.nextToken();\n\t\t\t\t\tif(!XMLChar.isValidNCName(nextId))\n\t\t\t\t\t\tthrow new XPathException(nextId + \" is not a valid NCName\");\n\t\t\t\t\tQName id = new QName(nextId, \"\", null);\n\t\t\t\t\tgetId(result, docs, id);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(!XMLChar.isValidNCName(nextId))\n\t\t\t\t\tthrow new XPathException(nextId + \" is not a valid NCName\");\n\t\t\t\tQName id = new QName(nextId, \"\", null);\n\t\t\t\tgetId(result, docs, id);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}","id":20525,"modified_method":"/**\n\t * @see org.exist.xquery.Expression#eval(org.exist.dom.DocumentSet, org.exist.dom.NodeSet, org.exist.dom.NodeProxy)\n\t */\n\tpublic Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n        if (getArgumentCount() < 1)\n\t\t\tthrow new XPathException(\"function id requires one argument\");\n\t\t\n        if(contextItem != null)\n\t\t\tcontextSequence = contextItem.toSequence();\n\t\t\n        Sequence result;\n        Expression arg = getArgument(0);        \n\t\tSequence idval = arg.eval(contextSequence);\n\t\tif(idval.getLength() == 0)\n            result = Sequence.EMPTY_SEQUENCE;\n        else {\n    \t\tresult = new ExtArrayNodeSet();\n    \t\tString nextId;\n    \t\tDocumentSet docs;\n    \t\tif(contextSequence == null || !(contextSequence instanceof NodeSet))\n    \t\t\tdocs = context.getStaticallyKnownDocuments();\n    \t\telse\n    \t\t\tdocs = contextSequence.toNodeSet().getDocumentSet(); \n    \t\tfor(SequenceIterator i = idval.iterate(); i.hasNext(); ) {\n    \t\t\tnextId = i.nextItem().getStringValue();\n    \t\t\tif(nextId.indexOf(\" \") != Constants.STRING_NOT_FOUND) {\n    \t\t\t\t// parse idrefs\n    \t\t\t\tStringTokenizer tok = new StringTokenizer(nextId, \" \");\n    \t\t\t\twhile(tok.hasMoreTokens()) {\n    \t\t\t\t\tnextId = tok.nextToken();\n    \t\t\t\t\tif(!XMLChar.isValidNCName(nextId))\n    \t\t\t\t\t\tthrow new XPathException(nextId + \" is not a valid NCName\");\n    \t\t\t\t\tQName id = new QName(nextId, \"\", null);\n    \t\t\t\t\tgetId((NodeSet)result, docs, id);\n    \t\t\t\t}\n    \t\t\t} else {\n    \t\t\t\tif(!XMLChar.isValidNCName(nextId))\n    \t\t\t\t\tthrow new XPathException(nextId + \" is not a valid NCName\");\n    \t\t\t\tQName id = new QName(nextId, \"\", null);\n    \t\t\t\tgetId((NodeSet)result, docs, id);\n    \t\t\t}\n    \t\t}\n        }\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;   \n        \n\t}","commit_id":"1a33e7be024c25c962850bf7500c4b0f53f162ec","url":"https://github.com/eXist-db/exist"},{"original_method":"public Sequence eval(Sequence contextSequence, Item contextItem)\n\t\tthrows XPathException {\n\t\treturn new DayTimeDurationValue(TimeUtils.getInstance().getLocalTimezoneOffsetMillis());\n\t}","id":20526,"modified_method":"public Sequence eval(Sequence contextSequence, Item contextItem) throws XPathException {\n        if (context.getProfiler().isEnabled()) {\n            context.getProfiler().start(this);       \n            context.getProfiler().message(this, Profiler.DEPENDENCIES, \"DEPENDENCIES\", Dependency.getDependenciesName(this.getDependencies()));\n            if (contextSequence != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT SEQUENCE\", contextSequence);\n            if (contextItem != null)\n                context.getProfiler().message(this, Profiler.START_SEQUENCES, \"CONTEXT ITEM\", contextItem.toSequence());\n        }\n        \n\t\tSequence result = new DayTimeDurationValue(TimeUtils.getInstance().getLocalTimezoneOffsetMillis());\n        \n        if (context.getProfiler().isEnabled()) \n            context.getProfiler().end(this, \"\", result); \n        \n        return result;         \n\t}","commit_id":"1a33e7be024c25c962850bf7500c4b0f53f162ec","url":"https://github.com/eXist-db/exist"},{"original_method":"public TraceablePositionInfo getPositionForNode(String nodeId) {\n    for (TraceablePositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).<TraceablePositionInfo>translate(new ITranslator2<DebugInfoRoot, TraceablePositionInfo>() {\n      public Iterable<TraceablePositionInfo> translate(DebugInfoRoot it) {\n        return it.getPositions();\n      }\n    })) {\n      if (eq_exfyrk_a0a0a0k(element.getNodeId(), nodeId)) {\n        return element;\n      }\n    }\n    return null;\n  }","id":20527,"modified_method":"@Nullable\n  public TraceablePositionInfo getPositionForNode(String nodeId) {\n    for (TraceablePositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).<TraceablePositionInfo>translate(new ITranslator2<DebugInfoRoot, TraceablePositionInfo>() {\n      public Iterable<TraceablePositionInfo> translate(DebugInfoRoot it) {\n        return it.getPositions();\n      }\n    })) {\n      if (eq_exfyrk_a0a0a0j(element.getNodeId(), nodeId)) {\n        return element;\n      }\n    }\n    return null;\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_exfyrk_a0a0a0b0j(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":20528,"modified_method":"private static boolean eq_exfyrk_a0a0a0j(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getUnitNodeForLine(String file, int line, SModel model) {\n    // TODO second duplication! \n    List<UnitPositionInfo> resultList = ListSequence.fromList(new ArrayList<UnitPositionInfo>());\n    for (UnitPositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).<UnitPositionInfo>translate(new ITranslator2<DebugInfoRoot, UnitPositionInfo>() {\n      public Iterable<UnitPositionInfo> translate(DebugInfoRoot it) {\n        return it.getUnitPositions();\n      }\n    })) {\n      if (eq_exfyrk_a0a0a0c0m(element.getFileName(), file) && element.getStartLine() <= line && line <= element.getEndLine()) {\n        ListSequence.fromList(resultList).addElement(element);\n      }\n    }\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<UnitPositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<UnitPositionInfo, Comparable<?>>() {\n      public Comparable<?> select(UnitPositionInfo it) {\n        return it;\n      }\n    }, false);\n    UnitPositionInfo firstPositionInfo = Sequence.fromIterable(sorted).first();\n    String id = firstPositionInfo.getNodeId();\n    if (id == null) {\n      return null;\n    }\n    return model.getNodeById(id);\n  }","id":20529,"modified_method":"@Nullable\n  public SNode getUnitNodeForLine(String file, int line, SModel model) {\n    // TODO second duplication! \n    List<UnitPositionInfo> resultList = getInfoForPosition(file, line, new _FunctionTypes._return_P1_E0<Set<UnitPositionInfo>, DebugInfoRoot>() {\n      public Set<UnitPositionInfo> invoke(DebugInfoRoot root) {\n        return root.getUnitPositions();\n      }\n    });\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<UnitPositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<UnitPositionInfo, Comparable<?>>() {\n      public Comparable<?> select(UnitPositionInfo it) {\n        return it;\n      }\n    }, false);\n    UnitPositionInfo firstPositionInfo = Sequence.fromIterable(sorted).first();\n    String id = firstPositionInfo.getNodeId();\n    if (id == null) {\n      return null;\n    }\n    return model.getNodeById(id);\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public String getUnitNameForLine(String file, int line) {\n    // TODO duplication! \n    List<UnitPositionInfo> resultList = ListSequence.fromList(new ArrayList<UnitPositionInfo>());\n    for (UnitPositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).<UnitPositionInfo>translate(new ITranslator2<DebugInfoRoot, UnitPositionInfo>() {\n      public Iterable<UnitPositionInfo> translate(DebugInfoRoot it) {\n        return it.getUnitPositions();\n      }\n    })) {\n      if (eq_exfyrk_a0a0a0c0l(element.getFileName(), file) && element.getStartLine() <= line && line <= element.getEndLine()) {\n        ListSequence.fromList(resultList).addElement(element);\n      }\n    }\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<UnitPositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<UnitPositionInfo, Comparable<?>>() {\n      public Comparable<?> select(UnitPositionInfo it) {\n        return it;\n      }\n    }, true);\n    UnitPositionInfo firstPositionInfo = Sequence.fromIterable(sorted).first();\n    return firstPositionInfo.getUnitName();\n  }","id":20530,"modified_method":"@Nullable\n  public String getUnitNameForLine(String file, int line) {\n    // TODO duplication! \n    List<UnitPositionInfo> resultList = getInfoForPosition(file, line, new _FunctionTypes._return_P1_E0<Set<UnitPositionInfo>, DebugInfoRoot>() {\n      public Set<UnitPositionInfo> invoke(DebugInfoRoot root) {\n        return root.getUnitPositions();\n      }\n    });\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<UnitPositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<UnitPositionInfo, Comparable<?>>() {\n      public Comparable<?> select(UnitPositionInfo it) {\n        return it;\n      }\n    }, true);\n    UnitPositionInfo firstPositionInfo = Sequence.fromIterable(sorted).first();\n    return firstPositionInfo.getUnitName();\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getVarForLine(String file, int line, SModel model, String varName) {\n    List<ScopePositionInfo> resultList = ListSequence.fromList(new ArrayList<ScopePositionInfo>());\n    for (ScopePositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).<ScopePositionInfo>translate(new ITranslator2<DebugInfoRoot, ScopePositionInfo>() {\n      public Iterable<ScopePositionInfo> translate(DebugInfoRoot it) {\n        return it.getScopePositions();\n      }\n    })) {\n      if (eq_exfyrk_a0a0a0b0j(element.getFileName(), file) && element.getStartLine() <= line && line <= element.getEndLine()) {\n        ListSequence.fromList(resultList).addElement(element);\n      }\n    }\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<ScopePositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<ScopePositionInfo, Comparable<?>>() {\n      public Comparable<?> select(ScopePositionInfo it) {\n        return it;\n      }\n    }, true);\n    for (ScopePositionInfo info : sorted) {\n      SNode var = info.getVarNode(varName, model);\n      if (var != null) {\n        return var;\n      }\n    }\n    return null;\n  }","id":20531,"modified_method":"@Nullable\n  public SNode getVarForLine(String file, int line, SModel model, String varName) {\n    List<ScopePositionInfo> resultList = getInfoForPosition(file, line, new _FunctionTypes._return_P1_E0<Set<ScopePositionInfo>, DebugInfoRoot>() {\n      public Set<ScopePositionInfo> invoke(DebugInfoRoot root) {\n        return root.getScopePositions();\n      }\n    });\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<ScopePositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<ScopePositionInfo, Comparable<?>>() {\n      public Comparable<?> select(ScopePositionInfo it) {\n        return it;\n      }\n    }, true);\n    for (ScopePositionInfo info : sorted) {\n      SNode var = info.getVarNode(varName, model);\n      if (var != null) {\n        return var;\n      }\n    }\n    return null;\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public SNode getNodeForLine(String file, int line, SModel model) {\n    List<TraceablePositionInfo> resultList = ListSequence.fromList(new ArrayList<TraceablePositionInfo>());\n    for (TraceablePositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).<TraceablePositionInfo>translate(new ITranslator2<DebugInfoRoot, TraceablePositionInfo>() {\n      public Iterable<TraceablePositionInfo> translate(DebugInfoRoot it) {\n        return it.getPositions();\n      }\n    })) {\n      if (eq_exfyrk_a0a0a0b0i(element.getFileName(), file) && element.getStartLine() <= line && line <= element.getEndLine()) {\n        ListSequence.fromList(resultList).addElement(element);\n      }\n    }\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<TraceablePositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<TraceablePositionInfo, Comparable<?>>() {\n      public Comparable<?> select(TraceablePositionInfo it) {\n        return it;\n      }\n    }, true);\n    final TraceablePositionInfo firstPositionInfo = Sequence.fromIterable(sorted).first();\n    String nodeId = firstPositionInfo.getNodeId();\n    // here we do some magic to fix the following bug: \n    // each node in base language owns a '\\n' symbol in a previous line \n    // in the following code we will never get 'for' node quering line 1: \n    // 1.  for (...) { \n    // 2.    some statement \n    // 3.  } \n    // since 'some statement' takes lines 1-2 instead of just line 2 \n    // TODO actually, this mega-hack might not work for other languages \n    // we should seriously consider fixing debug info generation instead \n    if (Sequence.fromIterable(sorted).count() > 1 && firstPositionInfo.getStartLine() == line && firstPositionInfo.getLineDistance() > 0) {\n      nodeId = ListSequence.fromList(Sequence.fromIterable(sorted).toListSequence()).getElement(1).getNodeId();\n    }\n    // here we have another example of how not to write code \n    // this is a hack fixing MPS-8644 \n    // the problem is with the BlockStatement which sometimes generates to nothing, but is still present in .debug \n    // so in the code like this: \n    // 1. { \n    // 2. statement \n    // 3. } \n    // block statement occupy the same place as \"statement\" because this code generates into: \n    // 1. statement \n    // the solution is simple: \n    // among all node with same position we select the deepest \n    if (Sequence.fromIterable(sorted).count() > 1) {\n      Iterable<TraceablePositionInfo> sameSpacePositions = Sequence.fromIterable(sorted).where(new IWhereFilter<TraceablePositionInfo>() {\n        public boolean accept(TraceablePositionInfo it) {\n          return firstPositionInfo.isOccupyTheSameSpace(it);\n        }\n      });\n      if (Sequence.fromIterable(sameSpacePositions).count() > 1) {\n        SNode currentNode = model.getNodeById(firstPositionInfo.getNodeId());\n        boolean finished = false;\n        while (!(finished)) {\n          finished = true;\n          for (TraceablePositionInfo otherPos : Sequence.fromIterable(sameSpacePositions)) {\n            SNode otherNode = model.getNodeById(otherPos.getNodeId());\n            if ((otherNode != null) && otherNode.isDescendantOf(currentNode, false)) {\n              currentNode = otherNode;\n              finished = false;\n              break;\n            }\n          }\n        }\n        return currentNode;\n      }\n    }\n    // TODO seriously, instead of adding another hack do something with textgen \n    return model.getNodeById(nodeId);\n  }","id":20532,"modified_method":"@Nullable\n  public SNode getNodeForLine(String file, int line, SModel model) {\n    List<TraceablePositionInfo> resultList = getInfoForPosition(file, line, new _FunctionTypes._return_P1_E0<Set<TraceablePositionInfo>, DebugInfoRoot>() {\n      public Set<TraceablePositionInfo> invoke(DebugInfoRoot root) {\n        return root.getPositions();\n      }\n    });\n    if (ListSequence.fromList(resultList).isEmpty()) {\n      return null;\n    }\n    Iterable<TraceablePositionInfo> sorted = ListSequence.fromList(resultList).sort(new ISelector<TraceablePositionInfo, Comparable<?>>() {\n      public Comparable<?> select(TraceablePositionInfo it) {\n        return it;\n      }\n    }, true);\n    final TraceablePositionInfo firstPositionInfo = Sequence.fromIterable(sorted).first();\n    String nodeId = firstPositionInfo.getNodeId();\n    // here we do some magic to fix the following bug: \n    // each node in base language owns a '\\n' symbol in a previous line \n    // in the following code we will never get 'for' node quering line 1: \n    // 1.  for (...) { \n    // 2.    some statement \n    // 3.  } \n    // since 'some statement' takes lines 1-2 instead of just line 2 \n    // TODO actually, this mega-hack might not work for other languages \n    // we should seriously consider fixing debug info generation instead \n    if (Sequence.fromIterable(sorted).count() > 1 && firstPositionInfo.getStartLine() == line && firstPositionInfo.getLineDistance() > 0) {\n      nodeId = ListSequence.fromList(Sequence.fromIterable(sorted).toListSequence()).getElement(1).getNodeId();\n    }\n    // here we have another example of how not to write code \n    // this is a hack fixing MPS-8644 \n    // the problem is with the BlockStatement which sometimes generates to nothing, but is still present in .debug \n    // so in the code like this: \n    // 1. { \n    // 2. statement \n    // 3. } \n    // block statement occupy the same place as \"statement\" because this code generates into: \n    // 1. statement \n    // the solution is simple: \n    // among all node with same position we select the deepest \n    if (Sequence.fromIterable(sorted).count() > 1) {\n      Iterable<TraceablePositionInfo> sameSpacePositions = Sequence.fromIterable(sorted).where(new IWhereFilter<TraceablePositionInfo>() {\n        public boolean accept(TraceablePositionInfo it) {\n          return firstPositionInfo.isOccupyTheSameSpace(it);\n        }\n      });\n      if (Sequence.fromIterable(sameSpacePositions).count() > 1) {\n        SNode currentNode = model.getNodeById(firstPositionInfo.getNodeId());\n        boolean finished = false;\n        while (!(finished)) {\n          finished = true;\n          for (TraceablePositionInfo otherPos : Sequence.fromIterable(sameSpacePositions)) {\n            SNode otherNode = model.getNodeById(otherPos.getNodeId());\n            if ((otherNode != null) && otherNode.isDescendantOf(currentNode, false)) {\n              currentNode = otherNode;\n              finished = false;\n              break;\n            }\n          }\n        }\n        return currentNode;\n      }\n    }\n    // TODO seriously, instead of adding another hack do something with textgen \n    return model.getNodeById(nodeId);\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_1myh1n_a0a0a0a0r(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":20533,"modified_method":"private static boolean eq_1myh1n_a0a0p(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_1myh1n_a0a0a0a0r_0(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":20534,"modified_method":"private static boolean eq_1myh1n_a0a0a0a0q_0(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_1myh1n_a0a0q(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":20535,"modified_method":"private static boolean eq_1myh1n_a0a0a0a0p(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"private static boolean eq_1myh1n_a0a0a0a71(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","id":20536,"modified_method":"private static boolean eq_1myh1n_a0a0a0a61(Object a, Object b) {\n    return (a != null ?\n      a.equals(b) :\n      a == b\n    );\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public int compareTo(PositionInfo p) {\n    if (eq_1myh1n_a0a0q(this.getLineDistance(), p.getLineDistance())) {\n      if (eq_1myh1n_a0a0a0q(this.myStartLine, p.myStartLine)) {\n        if (eq_1myh1n_a0a0a0a0q(this.myStartPosition, p.myStartPosition)) {\n          if (myNodeId == null) {\n            return -1;\n          }\n          if (p.myNodeId == null) {\n            return 1;\n          }\n          return this.myNodeId.compareTo(p.myNodeId);\n        } else {\n          return this.myStartPosition - p.myStartPosition;\n        }\n      } else {\n        return this.myStartLine - p.myStartLine;\n      }\n    } else {\n      return this.getLineDistance() - p.getLineDistance();\n    }\n  }","id":20537,"modified_method":"public int compareTo(PositionInfo p) {\n    if (eq_1myh1n_a0a0p(this.getLineDistance(), p.getLineDistance())) {\n      if (eq_1myh1n_a0a0a0p(this.myStartLine, p.myStartLine)) {\n        if (eq_1myh1n_a0a0a0a0p(this.myStartPosition, p.myStartPosition)) {\n          if (myNodeId == null) {\n            return -1;\n          }\n          if (p.myNodeId == null) {\n            return 1;\n          }\n          return this.myNodeId.compareTo(p.myNodeId);\n        } else {\n          return this.myStartPosition - p.myStartPosition;\n        }\n      } else {\n        return this.myStartLine - p.myStartLine;\n      }\n    } else {\n      return this.getLineDistance() - p.getLineDistance();\n    }\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public boolean isOccupyTheSameSpace(PositionInfo p) {\n    return (eq_1myh1n_a0a0a0a0r(myStartLine, p.myStartLine)) && (eq_1myh1n_a0a0a0a0r_0(myEndLine, p.myEndLine)) && (eq_1myh1n_a0a0a0a71(myStartPosition, p.myStartPosition)) && (eq_1myh1n_a0a0a0r(myEndPosition, p.myEndPosition));\n  }","id":20538,"modified_method":"public boolean isOccupyTheSameSpace(PositionInfo p) {\n    return (eq_1myh1n_a0a0a0a0q(myStartLine, p.myStartLine)) && (eq_1myh1n_a0a0a0a0q_0(myEndLine, p.myEndLine)) && (eq_1myh1n_a0a0a0a61(myStartPosition, p.myStartPosition)) && (eq_1myh1n_a0a0a0q(myEndPosition, p.myEndPosition));\n  }","commit_id":"8d28a6a02cca57943f1c99e7db362dad2f821cbb","url":"https://github.com/JetBrains/MPS"},{"original_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases) throws KettleException {\n    try {\n      super.loadRep(rep, id_jobentry, databases);\n      serverName = rep.getJobEntryAttributeString(id_jobentry, \"servername\");\n      userName = rep.getJobEntryAttributeString(id_jobentry, \"username\");\n      password = rep.getJobEntryAttributeString(id_jobentry, \"password\");\n      ftpDirectory = rep.getJobEntryAttributeString(id_jobentry, \"ftpdirectory\");\n      targetDirectory = rep.getJobEntryAttributeString(id_jobentry, \"targetdirectory\");\n      wildcard = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\");\n      binaryMode = rep.getJobEntryAttributeBoolean(id_jobentry, \"binary\");\n      timeout = (int) rep.getJobEntryAttributeInteger(id_jobentry, \"timeout\");\n      remove = rep.getJobEntryAttributeBoolean(id_jobentry, \"remove\");\n      onlyGettingNewFiles = rep.getJobEntryAttributeBoolean(id_jobentry, \"only_new\");\n      activeConnection = rep.getJobEntryAttributeBoolean(id_jobentry, \"active\");\n      controlEncoding = rep.getJobEntryAttributeString(id_jobentry, \"control_encoding\");\n      if (controlEncoding == null) {\n        // if we couldn't retrieve an encoding, assume it's an old instance and\n        // put in the the encoding used before v 2.4.0\n        controlEncoding = LEGACY_CONTROL_ENCODING;\n      }\n    } catch (KettleException dbe) {\n      throw new KettleException(\"Unable to load job entry of type 'ftp' from the repository for id_jobentry=\"\n          + id_jobentry, dbe);\n    }\n  }","id":20539,"modified_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases) throws KettleException {\n    try {\n      super.loadRep(rep, id_jobentry, databases);\n      serverName = rep.getJobEntryAttributeString(id_jobentry, \"servername\"); //$NON-NLS-1$\n      userName = rep.getJobEntryAttributeString(id_jobentry, \"username\"); //$NON-NLS-1$\n      password = rep.getJobEntryAttributeString(id_jobentry, \"password\"); //$NON-NLS-1$\n      ftpDirectory = rep.getJobEntryAttributeString(id_jobentry, \"ftpdirectory\"); //$NON-NLS-1$\n      targetDirectory = rep.getJobEntryAttributeString(id_jobentry, \"targetdirectory\"); //$NON-NLS-1$\n      wildcard = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\"); //$NON-NLS-1$\n      binaryMode = rep.getJobEntryAttributeBoolean(id_jobentry, \"binary\"); //$NON-NLS-1$\n      timeout = (int) rep.getJobEntryAttributeInteger(id_jobentry, \"timeout\"); //$NON-NLS-1$\n      remove = rep.getJobEntryAttributeBoolean(id_jobentry, \"remove\"); //$NON-NLS-1$\n      onlyGettingNewFiles = rep.getJobEntryAttributeBoolean(id_jobentry, \"only_new\"); //$NON-NLS-1$\n      activeConnection = rep.getJobEntryAttributeBoolean(id_jobentry, \"active\"); //$NON-NLS-1$\n      controlEncoding = rep.getJobEntryAttributeString(id_jobentry, \"control_encoding\"); //$NON-NLS-1$\n      if (controlEncoding == null) {\n        // if we couldn't retrieve an encoding, assume it's an old instance and\n        // put in the the encoding used before v 2.4.0\n        controlEncoding = LEGACY_CONTROL_ENCODING;\n      }\n    } catch (KettleException dbe) {\n      throw new KettleException(\n          Messages.getString(\"JobEntryFTP.UnableToLoadFromRepo\", String.valueOf(id_jobentry)), dbe); //$NON-NLS-1$\n    }\n  }","commit_id":"58bb944654d4b94ef2e88fd2843f45cae904131f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, Repository rep) throws KettleXMLException {\n    try {\n      super.loadXML(entrynode, databases);\n      serverName = XMLHandler.getTagValue(entrynode, \"servername\");\n      userName = XMLHandler.getTagValue(entrynode, \"username\");\n      password = Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(entrynode, \"password\"));\n      ftpDirectory = XMLHandler.getTagValue(entrynode, \"ftpdirectory\");\n      targetDirectory = XMLHandler.getTagValue(entrynode, \"targetdirectory\");\n      wildcard = XMLHandler.getTagValue(entrynode, \"wildcard\");\n      binaryMode = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"binary\"));\n      timeout = Const.toInt(XMLHandler.getTagValue(entrynode, \"timeout\"), 10000);\n      remove = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"remove\"));\n      onlyGettingNewFiles = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"only_new\"));\n      activeConnection = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"active\"));\n      controlEncoding = XMLHandler.getTagValue(entrynode, \"control_encoding\");\n      if (controlEncoding == null) {\n        // if we couldn't retrieve an encoding, assume it's an old instance and\n        // put in the the encoding used before v 2.4.0\n        controlEncoding = LEGACY_CONTROL_ENCODING;\n      }\n    } catch (KettleXMLException xe) {\n      throw new KettleXMLException(\"Unable to load job entry of type 'ftp' from XML node\", xe);\n    }\n  }","id":20540,"modified_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, Repository rep) throws KettleXMLException {\n    try {\n      super.loadXML(entrynode, databases);\n      serverName = XMLHandler.getTagValue(entrynode, \"servername\"); //$NON-NLS-1$\n      userName = XMLHandler.getTagValue(entrynode, \"username\"); //$NON-NLS-1$\n      password = Encr.decryptPasswordOptionallyEncrypted(XMLHandler.getTagValue(entrynode, \"password\")); //$NON-NLS-1$\n      ftpDirectory = XMLHandler.getTagValue(entrynode, \"ftpdirectory\"); //$NON-NLS-1$\n      targetDirectory = XMLHandler.getTagValue(entrynode, \"targetdirectory\"); //$NON-NLS-1$\n      wildcard = XMLHandler.getTagValue(entrynode, \"wildcard\"); //$NON-NLS-1$\n      binaryMode = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"binary\")); //$NON-NLS-1$ //$NON-NLS-2$\n      timeout = Const.toInt(XMLHandler.getTagValue(entrynode, \"timeout\"), 10000); //$NON-NLS-1$\n      remove = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"remove\")); //$NON-NLS-1$ //$NON-NLS-2$\n      onlyGettingNewFiles = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"only_new\")); //$NON-NLS-1$ //$NON-NLS-2$\n      activeConnection = \"Y\".equalsIgnoreCase(XMLHandler.getTagValue(entrynode, \"active\")); //$NON-NLS-1$ //$NON-NLS-2$\n      controlEncoding = XMLHandler.getTagValue(entrynode, \"control_encoding\"); //$NON-NLS-1$\n      if (controlEncoding == null) {\n        // if we couldn't retrieve an encoding, assume it's an old instance and\n        // put in the the encoding used before v 2.4.0\n        controlEncoding = LEGACY_CONTROL_ENCODING;\n      }\n    } catch (KettleXMLException xe) {\n      throw new KettleXMLException(Messages.getString(\"JobEntryFTP.UnableToLoadFromXml\"), xe); //$NON-NLS-1$\n    }\n  }","commit_id":"58bb944654d4b94ef2e88fd2843f45cae904131f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_job) throws KettleException {\n    try {\n      super.saveRep(rep, id_job);\n\n      rep.saveJobEntryAttribute(id_job, getID(), \"servername\", serverName);\n      rep.saveJobEntryAttribute(id_job, getID(), \"username\", userName);\n      rep.saveJobEntryAttribute(id_job, getID(), \"password\", password);\n      rep.saveJobEntryAttribute(id_job, getID(), \"ftpdirectory\", ftpDirectory);\n      rep.saveJobEntryAttribute(id_job, getID(), \"targetdirectory\", targetDirectory);\n      rep.saveJobEntryAttribute(id_job, getID(), \"wildcard\", wildcard);\n      rep.saveJobEntryAttribute(id_job, getID(), \"binary\", binaryMode);\n      rep.saveJobEntryAttribute(id_job, getID(), \"timeout\", timeout);\n      rep.saveJobEntryAttribute(id_job, getID(), \"remove\", remove);\n      rep.saveJobEntryAttribute(id_job, getID(), \"only_new\", onlyGettingNewFiles);\n      rep.saveJobEntryAttribute(id_job, getID(), \"active\", activeConnection);\n      rep.saveJobEntryAttribute(id_job, getID(), \"control_encoding\", controlEncoding);\n    } catch (KettleDatabaseException dbe) {\n      throw new KettleException(\"Unable to save job entry of type 'ftp' to the repository for id_job=\" + id_job, dbe);\n    }\n  }","id":20541,"modified_method":"public void saveRep(Repository rep, long id_job) throws KettleException {\n    try {\n      super.saveRep(rep, id_job);\n\n      rep.saveJobEntryAttribute(id_job, getID(), \"servername\", serverName); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"username\", userName); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"password\", password); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"ftpdirectory\", ftpDirectory); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"targetdirectory\", targetDirectory); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"wildcard\", wildcard); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"binary\", binaryMode); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"timeout\", timeout); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"remove\", remove); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"only_new\", onlyGettingNewFiles); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"active\", activeConnection); //$NON-NLS-1$\n      rep.saveJobEntryAttribute(id_job, getID(), \"control_encoding\", controlEncoding); //$NON-NLS-1$\n    } catch (KettleDatabaseException dbe) {\n      throw new KettleException(Messages.getString(\"JobEntryFTP.UnableToSaveToRepo\", String.valueOf(id_job)), dbe); //$NON-NLS-1$\n    }\n  }","commit_id":"58bb944654d4b94ef2e88fd2843f45cae904131f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob) {\n    LogWriter log = LogWriter.getInstance();\n\n    log4j.info(\"Started FTP job to \" + serverName);\n\n    Result result = previousResult;\n    result.setResult(false);\n    long filesRetrieved = 0;\n\n    log.logDetailed(toString(), \"Start of FTP job entry\");\n\n    FTPClient ftpclient = null;\n\n    try {\n      // Create ftp client to host:port ...\n      ftpclient = new FTPClient();\n      String realServername = environmentSubstitute(serverName);\n      ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\n\n      log.logDetailed(toString(), \"Opened FTP connection to server [\" + realServername + \"]\");\n\n      // set activeConnection connectmode ...\n      if (activeConnection) {\n        ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\n        log.logDetailed(toString(), \"set active ftp connection mode\");\n      } else {\n        ftpclient.setConnectMode(FTPConnectMode.PASV);\n        log.logDetailed(toString(), \"set passive ftp connection mode\");\n      }\n\n      // Set the timeout\n      ftpclient.setTimeout(timeout);\n      log.logDetailed(toString(), \"set timeout to \" + timeout);\n\n      ftpclient.setControlEncoding(controlEncoding);\n      log.logDetailed(toString(), \"set control encoding to \" + controlEncoding);\n\n      // login to ftp host ...\n      ftpclient.connect();\n      String realUsername = environmentSubstitute(userName);\n      String realPassword = environmentSubstitute(password);\n      ftpclient.login(realUsername, realPassword);\n      //  Remove password from logging, you don't know where it ends up.\n      log.logDetailed(toString(), \"logged in with user \" + realUsername);\n\n      // move to spool dir ...\n      if (!Const.isEmpty(ftpDirectory)) {\n        String realFtpDirectory = environmentSubstitute(ftpDirectory);\n        ftpclient.chdir(realFtpDirectory);\n        log.logDetailed(toString(), \"Changed to directory [\" + realFtpDirectory + \"]\");\n      }\n\n      // Get all the files in the current directory...\n      String[] filelist = ftpclient.dir();\n      log.logDetailed(toString(), \"Found \" + filelist.length + \" files in the remote ftp directory\");\n\n      // set transfertype ...\n      if (binaryMode) {\n        ftpclient.setType(FTPTransferType.BINARY);\n        log.logDetailed(toString(), \"set binary transfer mode\");\n      } else {\n        ftpclient.setType(FTPTransferType.ASCII);\n        log.logDetailed(toString(), \"set ASCII transfer mode\");\n      }\n\n      // Some FTP servers return a message saying no files found as a string in the filenlist\n      // e.g. Solaris 8\n      // CHECK THIS !!!\n      if (filelist.length == 1) {\n        String translatedWildcard = environmentSubstitute(wildcard);\n        if (filelist[0].startsWith(translatedWildcard)) {\n          throw new FTPException(filelist[0]);\n        }\n      }\n\n      Pattern pattern = null;\n      if (!Const.isEmpty(wildcard)) {\n        String realWildcard = environmentSubstitute(wildcard);\n        pattern = Pattern.compile(realWildcard);\n      }\n\n      // Get the files in the list...\n      for (int i = 0; i < filelist.length && !parentJob.isStopped(); i++) {\n        boolean getIt = true;\n\n        // First see if the file matches the regular expression!\n        if (pattern != null) {\n          Matcher matcher = pattern.matcher(filelist[i]);\n          getIt = matcher.matches();\n        }\n\n        if (getIt) {\n          log.logDebug(toString(), \"Getting file [\" + filelist[i] + \"] to directory [\"\n              + environmentSubstitute(targetDirectory) + \"]\");\n          String targetFilename = getTargetFilename(filelist[i]);\n          FileObject targetFile = KettleVFS.getFileObject(targetFilename);\n\n          if ((onlyGettingNewFiles == false) || (onlyGettingNewFiles == true) && needsDownload(filelist[i])) {\n            ftpclient.get(targetFilename, filelist[i]);\n            filesRetrieved++;\n\n            // Add to the result files...\n            ResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, targetFile, parentJob.getJobname(),\n                toString());\n            resultFile.setComment(\"Downloaded from ftp server \" + serverName);\n            result.getResultFiles().put(resultFile.getFile().toString(), resultFile);\n\n            log.logDetailed(toString(), \"Got file [\" + filelist[i] + \"]\");\n          }\n\n          // Delete the file if this is needed!\n          if (remove) {\n            ftpclient.delete(filelist[i]);\n            log.logDetailed(toString(), \"deleted file [\" + filelist[i] + \"]\");\n          }\n        }\n      }\n\n      result.setResult(true);\n      result.setNrFilesRetrieved(filesRetrieved);\n    } catch (Exception e) {\n      result.setNrErrors(1);\n      log.logError(toString(), \"Error getting files from FTP : \" + e.getMessage());\n      log.logError(toString(), Const.getStackTracker(e));\n    } finally {\n      if (ftpclient != null && ftpclient.connected()) {\n        try {\n          ftpclient.quit();\n        } catch (Exception e) {\n          log.logError(toString(), \"Error quiting FTP connection: \" + e.getMessage());\n        }\n      }\n    }\n\n    return result;\n  }","id":20542,"modified_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob) {\n    LogWriter log = LogWriter.getInstance();\n\n    log4j.info(Messages.getString(\"JobEntryFTP.Started\", serverName)); //$NON-NLS-1$\n\n    Result result = previousResult;\n    result.setResult(false);\n    long filesRetrieved = 0;\n\n    log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.Start\")); //$NON-NLS-1$\n\n    FTPClient ftpclient = null;\n\n    try {\n      // Create ftp client to host:port ...\n      ftpclient = new FTPClient();\n      String realServername = environmentSubstitute(serverName);\n      ftpclient.setRemoteAddr(InetAddress.getByName(realServername));\n\n      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.OpenedConnection\", realServername)); //$NON-NLS-1$\n\n      // set activeConnection connectmode ...\n      if (activeConnection) {\n        ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\n        log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetActive\")); //$NON-NLS-1$\n      } else {\n        ftpclient.setConnectMode(FTPConnectMode.PASV);\n        log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetPassive\")); //$NON-NLS-1$\n      }\n\n      // Set the timeout\n      ftpclient.setTimeout(timeout);\n      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetTimeout\", String.valueOf(timeout))); //$NON-NLS-1$\n\n      ftpclient.setControlEncoding(controlEncoding);\n      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetEncoding\", controlEncoding)); //$NON-NLS-1$\n\n      // login to ftp host ...\n      ftpclient.connect();\n      String realUsername = environmentSubstitute(userName);\n      String realPassword = environmentSubstitute(password);\n      ftpclient.login(realUsername, realPassword);\n      //  Remove password from logging, you don't know where it ends up.\n      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.LoggedIn\", realUsername)); //$NON-NLS-1$\n\n      // move to spool dir ...\n      if (!Const.isEmpty(ftpDirectory)) {\n        String realFtpDirectory = environmentSubstitute(ftpDirectory);\n        ftpclient.chdir(realFtpDirectory);\n        log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.ChangedDir\", realFtpDirectory)); //$NON-NLS-1$\n      }\n\n      // Get all the files in the current directory...\n      String[] filelist = ftpclient.dir();\n      log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.FoundNFiles\", String.valueOf(filelist.length))); //$NON-NLS-1$\n\n      // set transfertype ...\n      if (binaryMode) {\n        ftpclient.setType(FTPTransferType.BINARY);\n        log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetBinary\")); //$NON-NLS-1$\n      } else {\n        ftpclient.setType(FTPTransferType.ASCII);\n        log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.SetAscii\")); //$NON-NLS-1$\n      }\n\n      // Some FTP servers return a message saying no files found as a string in the filenlist\n      // e.g. Solaris 8\n      // CHECK THIS !!!\n      if (filelist.length == 1) {\n        String translatedWildcard = environmentSubstitute(wildcard);\n        if (filelist[0].startsWith(translatedWildcard)) {\n          throw new FTPException(filelist[0]);\n        }\n      }\n\n      Pattern pattern = null;\n      if (!Const.isEmpty(wildcard)) {\n        String realWildcard = environmentSubstitute(wildcard);\n        pattern = Pattern.compile(realWildcard);\n      }\n\n      // Get the files in the list...\n      for (int i = 0; i < filelist.length && !parentJob.isStopped(); i++) {\n        boolean getIt = true;\n\n        // First see if the file matches the regular expression!\n        if (pattern != null) {\n          Matcher matcher = pattern.matcher(filelist[i]);\n          getIt = matcher.matches();\n        }\n\n        if (getIt) {\n          log.logDebug(toString(), Messages.getString(\n              \"JobEntryFTP.GettingFile\", filelist[i], environmentSubstitute(targetDirectory))); //$NON-NLS-1$\n          String targetFilename = getTargetFilename(filelist[i]);\n          FileObject targetFile = KettleVFS.getFileObject(targetFilename);\n\n          if ((onlyGettingNewFiles == false) || (onlyGettingNewFiles == true) && needsDownload(filelist[i])) {\n            ftpclient.get(targetFilename, filelist[i]);\n            filesRetrieved++;\n\n            // Add to the result files...\n            ResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, targetFile, parentJob.getJobname(),\n                toString());\n            resultFile.setComment(Messages.getString(\"JobEntryFTP.Downloaded\", serverName)); //$NON-NLS-1$\n            result.getResultFiles().put(resultFile.getFile().toString(), resultFile);\n\n            log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.GotFile\", filelist[i])); //$NON-NLS-1$\n          }\n\n          // Delete the file if this is needed!\n          if (remove) {\n            ftpclient.delete(filelist[i]);\n            log.logDetailed(toString(), Messages.getString(\"JobEntryFTP.DeletedFile\", filelist[i])); //$NON-NLS-1$\n          }\n        }\n      }\n\n      result.setResult(true);\n      result.setNrFilesRetrieved(filesRetrieved);\n    } catch (Exception e) {\n      result.setNrErrors(1);\n      log.logError(toString(), Messages.getString(\"JobEntryFTP.ErrorGetting\", e.getMessage())); //$NON-NLS-1$\n      log.logError(toString(), Const.getStackTracker(e));\n    } finally {\n      if (ftpclient != null && ftpclient.connected()) {\n        try {\n          ftpclient.quit();\n        } catch (Exception e) {\n          log.logError(toString(), Messages.getString(\"JobEntryFTP.ErrorQuitting\", e.getMessage())); //$NON-NLS-1$\n        }\n      }\n    }\n\n    return result;\n  }","commit_id":"58bb944654d4b94ef2e88fd2843f45cae904131f","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n        Result result = previousResult;\r\n\t\tList<RowMetaAndData> rows = result.getRows();\n\t\tresult.setResult( false );\n\n\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.Log.StartJobEntry\"));\n\t\tArrayList<String> myFileList = new ArrayList<String>();\r\n\t\t\r\n\t\tif(copyprevious)\r\n\t\t{\r\n\t\t\tif(rows.size()==0)\r\n\t\t\t{\r\n\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.ArgsFromPreviousNothing\"));\r\n\t\t\t\tresult.setResult(true);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry{\r\n\t\t\t\tRowMetaAndData resultRow = null;\r\n\t\t\t\t// Copy the input row to the (command line) arguments\r\n\t\t\t\tfor (int iteration=0;iteration<rows.size();iteration++) \r\n\t\t\t\t{\t\t\t\r\n\t\t\t\t\tresultRow = rows.get(iteration);\r\n\t\t\t\t\r\n\t\t\t\t\t// Get file names\r\n\t\t\t\t\tString file_previous = resultRow.getString(0,null);\r\n\t\t\t\t\tif(!Const.isEmpty(file_previous))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tFile file=new File(file_previous);\r\n\t\t\t\t\t\tif(!file.exists())\r\n\t\t\t\t\t\t\tlog.logError(toString(),Messages.getString(\"JobSFTPPUT.Log.FilefromPreviousNotFound\",file_previous));\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmyFileList.add(file_previous);\r\n\t\t\t\t\t\t\tif(log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobSFTPPUT.Log.FilenameFromResult\",file_previous));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}catch(Exception e)\t{\r\n\t\t\t\tlog.logError(toString(), Messages.getString(\"JobSFTPPUT.Error.ArgFromPrevious\"));\r\n\t\t\t\tresult.setNrErrors(1);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\n\t\tSFTPClient sftpclient = null;\n\n        // String substitution..\n        String realServerName      = environmentSubstitute(serverName);\n        String realServerPort      = environmentSubstitute(serverPort);\n        String realUsername        = environmentSubstitute(userName);\n        String realPassword        = environmentSubstitute(password);\n        String realSftpDirString   = environmentSubstitute(sftpDirectory);\n        String realWildcard        = environmentSubstitute(wildcard);\n        String realLocalDirectory  = environmentSubstitute(localDirectory);\n\n\t\ttry\n\t\t{\n\t\t\t// Create sftp client to host ...\n\t\t\tsftpclient = new SFTPClient(InetAddress.getByName(realServerName), Const.toInt(realServerPort, 22), realUsername);\n\t\t\tif(log.isDetailed()) log.logDetailed(toString(), \"Opened SFTP connection to server [\"+realServerName+\"] on port [\"+realServerPort+\"] with username [\"+realUsername+\"]\");\n\n\t\t\t// login to ftp host ...\n\t\t\tsftpclient.login(realPassword);\n\t\t\t// Don't show the password in the logs, it's not good for security audits\n\t\t\t//log.logDetailed(toString(), \"logged in using password \"+realPassword); // Logging this seems a bad idea! Oh well.\n\n\t\t\t// move to spool dir ...\n\t\t\tif (!Const.isEmpty(realSftpDirString))\n\t\t\t{\n\t\t\t\tsftpclient.chdir(realSftpDirString);\n\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), \"Changed to directory [\"+realSftpDirString+\"]\");\n\t\t\t} // end if\n\r\n\t\t\tif(!copyprevious)\r\n\t\t\t{\n\t\t\t\t// Get all the files in the local directory...\n\t\t\t\tmyFileList = new ArrayList<String>();\n\t\n\t\t\t\tFile localFiles = new File(realLocalDirectory);\n\t\t\t\tFile[] children = localFiles.listFiles();\n\t\t\t\tfor (int i=0; i<children.length; i++) {\n\t\t            // Get filename of file or directory\n\t\t\t\t\tif (!children[i].isDirectory()) {\n\t\t\t\t\t\t// myFileList.add(children[i].getAbsolutePath());\n\t\t\t\t\t\tmyFileList.add(children[i].getName());\n\t\t\t\t\t}\n\t\t        } // end for\n\t\n\t\t\t\t// Joerg:  ..that's for Java5\n\t\t\t\t// String[] filelist = myFileList.toArray(new String[myFileList.size()]);\n\t\t\t}\r\n\t\t\tif(myFileList==null)\r\n\t\t\t{\r\n\t\t\t\tlog.logError(toString(), Messages.getString(\"SFTPPUT.Error.NoFileToSend\"));\r\n\t\t\t\tresult.setNrErrors(1);\r\n\t\t\t\treturn result;\r\n\t\t\t}\n\t\t\tString[] filelist = new String[myFileList.size()];\n\t\t\tmyFileList.toArray(filelist);\n\n\t\t\tif(log.isDetailed()) log.logDetailed(toString(), \"Found \"+filelist.length+\" files in the local directory\");\n\r\n\t\t\tPattern pattern = null;\n\t\t\tif(!copyprevious)\r\n\t\t\t{\n\t\t\t\tif (!Const.isEmpty(realWildcard))\tpattern = Pattern.compile(realWildcard);\r\n\t\t\t}\n\n\t\t\t// Get the files in the list and execute sftp.put() for each file\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\n\t\t\t{\n\t\t\t\tboolean getIt = true;\n\n\t\t\t\t// First see if the file matches the regular expression!\n\t\t\t\tif (pattern!=null)\n\t\t\t\t{\n\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\n\t\t\t\t\tgetIt = matcher.matches();\n\t\t\t\t}\n\n\t\t\t\tif (getIt)\n\t\t\t\t{\n\t\t\t\t\tString localFilename = realLocalDirectory+Const.FILE_SEPARATOR+filelist[i];\r\n\t\t\t\t\tString destinationFilename=filelist[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(copyprevious) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalFilename=filelist[i];\r\n\t\t\t\t\t\tFile file = new File(localFilename);\r\n\t\t\t\t\t\tdestinationFilename=file.getName();\r\n\t\t\t\t\t}\n\t\t\t\t\t\r\n\t\t\t\t\tif(log.isDebug()) log.logDebug(toString(), \"putting file [\"+localFilename+\"] to directory [\"+realSftpDirString+\"]\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tsftpclient.put(localFilename, destinationFilename);\n\n\t\t\t\t\t// Add to the result files...JKU:  no idea if this is needed!!!\n\t\t\t\t\t// ResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, new File(localFilename), parentJob.getJobname(), toString());\n                    // result.getResultFiles().put(resultFile.getFile().toString(), resultFile);\n\n\t\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), \"Transfered file [\"+localFilename+\"]\");\n\n\t\t\t\t\t// Delete the file if this is needed!\n\t\t\t\t\tif (remove)\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnew File(localFilename).delete();\n\t\t\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), \"deleted local file [\"+localFilename+\"]\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // end for\n\n\t\t\tresult.setResult( true );\n\t\t\t// JKU: no idea if this is needed...!\n\t\t\t// result.setNrFilesRetrieved(filesRetrieved);\n\t\t} // end try\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tresult.setNrErrors(1);\n\t\t\tlog.logError(toString(), \"Error putting to remote host : \"+e.getMessage());\n            log.logError(toString(), Const.getStackTracker(e));\n\t\t} finally {\n\t\t\t// close connection, if possible\n\t\t\ttry {\n\t\t\t\tif(sftpclient != null) sftpclient.disconnect();\n\t\t\t} catch (Exception e) {\n\t\t\t\t// just ignore this, makes no big difference\n\t\t\t} // end catch\n\t\t} // end finallly\n\n        return result;\n\t}","id":20543,"modified_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n        Result result = previousResult;\r\n\t\tList<RowMetaAndData> rows = result.getRows();\n\t\tresult.setResult( false );\n\n\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.Log.StartJobEntry\"));\n\t\tArrayList<String> myFileList = new ArrayList<String>();\r\n\t\t\r\n\t\tif(copyprevious)\r\n\t\t{\r\n\t\t\tif(rows.size()==0)\r\n\t\t\t{\r\n\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.ArgsFromPreviousNothing\"));\r\n\t\t\t\tresult.setResult(true);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttry{\r\n\t\t\t\tRowMetaAndData resultRow = null;\r\n\t\t\t\t// Copy the input row to the (command line) arguments\r\n\t\t\t\tfor (int iteration=0;iteration<rows.size();iteration++) \r\n\t\t\t\t{\t\t\t\r\n\t\t\t\t\tresultRow = rows.get(iteration);\r\n\t\t\t\t\r\n\t\t\t\t\t// Get file names\r\n\t\t\t\t\tString file_previous = resultRow.getString(0,null);\r\n\t\t\t\t\tif(!Const.isEmpty(file_previous))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tFile file=new File(file_previous);\r\n\t\t\t\t\t\tif(!file.exists())\r\n\t\t\t\t\t\t\tlog.logError(toString(),Messages.getString(\"JobSFTPPUT.Log.FilefromPreviousNotFound\",file_previous));\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tmyFileList.add(file_previous);\r\n\t\t\t\t\t\t\tif(log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobSFTPPUT.Log.FilenameFromResult\",file_previous));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}catch(Exception e)\t{\r\n\t\t\t\tlog.logError(toString(), Messages.getString(\"JobSFTPPUT.Error.ArgFromPrevious\"));\r\n\t\t\t\tresult.setNrErrors(1);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\n\t\tSFTPClient sftpclient = null;\n\n        // String substitution..\n        String realServerName      = environmentSubstitute(serverName);\n        String realServerPort      = environmentSubstitute(serverPort);\n        String realUsername        = environmentSubstitute(userName);\n        String realPassword        = environmentSubstitute(password);\n        String realSftpDirString   = environmentSubstitute(sftpDirectory);\n        String realWildcard        = environmentSubstitute(wildcard);\n        String realLocalDirectory  = environmentSubstitute(localDirectory);\n\n\t\ttry\n\t\t{\n\t\t\t// Create sftp client to host ...\n\t\t\tsftpclient = new SFTPClient(InetAddress.getByName(realServerName), Const.toInt(realServerPort, 22), realUsername);\n\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.Log.OpenedConnection\",realServerName,\"\"+realServerPort,realUsername));\n\t\t\t\n\t\t\t// login to ftp host ...\n\t\t\tsftpclient.login(realPassword);\n\t\t\t// Don't show the password in the logs, it's not good for security audits\n\t\t\t//log.logDetailed(toString(), \"logged in using password \"+realPassword); // Logging this seems a bad idea! Oh well.\n\n\t\t\t// move to spool dir ...\n\t\t\tif (!Const.isEmpty(realSftpDirString))\n\t\t\t{\n\t\t\t\tsftpclient.chdir(realSftpDirString);\n\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.Log.ChangedDirectory\",realSftpDirString));\n\t\t\t} // end if\n\r\n\t\t\tif(!copyprevious)\r\n\t\t\t{\n\t\t\t\t// Get all the files in the local directory...\n\t\t\t\tmyFileList = new ArrayList<String>();\n\t\n\t\t\t\tFile localFiles = new File(realLocalDirectory);\n\t\t\t\tFile[] children = localFiles.listFiles();\n\t\t\t\tfor (int i=0; i<children.length; i++) {\n\t\t            // Get filename of file or directory\n\t\t\t\t\tif (!children[i].isDirectory()) {\n\t\t\t\t\t\t// myFileList.add(children[i].getAbsolutePath());\n\t\t\t\t\t\tmyFileList.add(children[i].getName());\n\t\t\t\t\t}\n\t\t        } // end for\n\t\n\t\t\t\t// Joerg:  ..that's for Java5\n\t\t\t\t// String[] filelist = myFileList.toArray(new String[myFileList.size()]);\n\t\t\t}\r\n\t\t\tif(myFileList==null)\r\n\t\t\t{\r\n\t\t\t\tlog.logError(toString(), Messages.getString(\"JobSFTPPUT.Error.NoFileToSend\"));\r\n\t\t\t\tresult.setNrErrors(1);\r\n\t\t\t\treturn result;\r\n\t\t\t}\n\t\t\tString[] filelist = new String[myFileList.size()];\n\t\t\tmyFileList.toArray(filelist);\n\n\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.Log.RowsFromPreviousResult\",\"\"+filelist.length));\n\r\n\t\t\tPattern pattern = null;\n\t\t\tif(!copyprevious)\r\n\t\t\t{\n\t\t\t\tif (!Const.isEmpty(realWildcard))\tpattern = Pattern.compile(realWildcard);\r\n\t\t\t}\n\n\t\t\t// Get the files in the list and execute sftp.put() for each file\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\n\t\t\t{\n\t\t\t\tboolean getIt = true;\n\n\t\t\t\t// First see if the file matches the regular expression!\n\t\t\t\tif (pattern!=null)\n\t\t\t\t{\n\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\n\t\t\t\t\tgetIt = matcher.matches();\n\t\t\t\t}\n\n\t\t\t\tif (getIt)\n\t\t\t\t{\n\t\t\t\t\tString localFilename = realLocalDirectory+Const.FILE_SEPARATOR+filelist[i];\r\n\t\t\t\t\tString destinationFilename=filelist[i];\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(copyprevious) \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlocalFilename=filelist[i];\r\n\t\t\t\t\t\tFile file = new File(localFilename);\r\n\t\t\t\t\t\tdestinationFilename=file.getName();\r\n\t\t\t\t\t}\n\t\t\t\t\t\r\n\t\t\t\t\tif(log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobSFTPPUT.Log.PuttingFile\",localFilename,realSftpDirString));\r\n\r\n\t\t\t\t\tsftpclient.put(localFilename, destinationFilename);\n\n\t\t\t\t\t// Add to the result files...JKU:  no idea if this is needed!!!\n\t\t\t\t\t// ResultFile resultFile = new ResultFile(ResultFile.FILE_TYPE_GENERAL, new File(localFilename), parentJob.getJobname(), toString());\n                    // result.getResultFiles().put(resultFile.getFile().toString(), resultFile);\n\n\t\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.Log.TransferedFile\",localFilename));\r\n\t\t\t\t\t\n\t\t\t\t\t// Delete the file if this is needed!\n\t\t\t\t\tif (remove)\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnew File(localFilename).delete();\n\t\t\t\t\t\tif(log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobSFTPPUT.Log.DeletedFile\",localFilename));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // end for\n\n\t\t\tresult.setResult( true );\n\t\t\t// JKU: no idea if this is needed...!\n\t\t\t// result.setNrFilesRetrieved(filesRetrieved);\n\t\t} // end try\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tresult.setNrErrors(1);\n\t\t\tlog.logError(toString(), Messages.getString(\"JobSFTPPUT.Exception\",e.getMessage()));\n            log.logError(toString(), Const.getStackTracker(e));\n\t\t} finally {\n\t\t\t// close connection, if possible\n\t\t\ttry {\n\t\t\t\tif(sftpclient != null) sftpclient.disconnect();\n\t\t\t} catch (Exception e) {\n\t\t\t\t// just ignore this, makes no big difference\n\t\t\t} // end catch\n\t\t} // end finallly\n\n        return result;\n\t}","commit_id":"a0b8f211a6f616401c97daf101b42d4e0a2f9b88","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, Repository rep) throws KettleXMLException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadXML(entrynode, databases);\n\t\t\tserverName      = XMLHandler.getTagValue(entrynode, \"servername\");\n\t\t\tserverPort      = XMLHandler.getTagValue(entrynode, \"serverport\");\n\t\t\tuserName        = XMLHandler.getTagValue(entrynode, \"username\");\n\t\t\tpassword        = XMLHandler.getTagValue(entrynode, \"password\");\n\t\t\tsftpDirectory   = XMLHandler.getTagValue(entrynode, \"sftpdirectory\");\n\t\t\ttargetDirectory = XMLHandler.getTagValue(entrynode, \"targetdirectory\");\n\t\t\twildcard        = XMLHandler.getTagValue(entrynode, \"wildcard\");\n\t\t\tbinaryMode          = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"binary\") );\n\t\t\ttimeout             = Const.toInt(XMLHandler.getTagValue(entrynode, \"timeout\"), 10000);\n\t\t\tremove              = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"remove\") );\n\t\t\tonlyPuttingNewFiles = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"only_new\") );\n            activeConnection    = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"active\") );\n            controlEncoding     = XMLHandler.getTagValue(entrynode, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }       ;\n\t\t}\n\t\tcatch(KettleXMLException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(\"Unable to load job entry of type 'SFTP' from XML node\", xe);\t\t\t\n\t\t}\n\t}","id":20544,"modified_method":"public void loadXML(Node entrynode, List<DatabaseMeta> databases, Repository rep) throws KettleXMLException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadXML(entrynode, databases);\n\t\t\tserverName      = XMLHandler.getTagValue(entrynode, \"servername\");\n\t\t\tserverPort      = XMLHandler.getTagValue(entrynode, \"serverport\");\n\t\t\tuserName        = XMLHandler.getTagValue(entrynode, \"username\");\n\t\t\tpassword        = XMLHandler.getTagValue(entrynode, \"password\");\n\t\t\tsftpDirectory   = XMLHandler.getTagValue(entrynode, \"sftpdirectory\");\n\t\t\ttargetDirectory = XMLHandler.getTagValue(entrynode, \"targetdirectory\");\n\t\t\twildcard        = XMLHandler.getTagValue(entrynode, \"wildcard\");\n\t\t\tbinaryMode          = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"binary\") );\n\t\t\ttimeout             = Const.toInt(XMLHandler.getTagValue(entrynode, \"timeout\"), 10000);\n\t\t\tremove              = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"remove\") );\n\t\t\tonlyPuttingNewFiles = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"only_new\") );\n            activeConnection    = \"Y\".equalsIgnoreCase( XMLHandler.getTagValue(entrynode, \"active\") );\n            controlEncoding     = XMLHandler.getTagValue(entrynode, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }       ;\n\t\t}\n\t\tcatch(KettleXMLException xe)\n\t\t{\n\t\t\tthrow new KettleXMLException(Messages.getString(\"JobFTPPUT.Log.UnableToLoadFromXml\"), xe);\t\t\t\n\t\t}\n\t}","commit_id":"d1667dabbf06445dad2be6640a41e6f37ddda3ab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases) throws KettleException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\t\t\tserverName      = rep.getJobEntryAttributeString(id_jobentry, \"servername\");\n\t\t\tint intServerPort = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"serverport\");\n            serverPort = rep.getJobEntryAttributeString(id_jobentry, \"serverport\"); // backward compatible.\n            if (intServerPort>0 && Const.isEmpty(serverPort)) serverPort = Integer.toString(intServerPort);\n\n\t\t\tuserName        = rep.getJobEntryAttributeString(id_jobentry, \"username\");\n\t\t\tpassword        = rep.getJobEntryAttributeString(id_jobentry, \"password\");\n\t\t\tsftpDirectory   = rep.getJobEntryAttributeString(id_jobentry, \"sftpdirectory\");\n\t\t\ttargetDirectory = rep.getJobEntryAttributeString(id_jobentry, \"targetdirectory\");\n\t\t\twildcard        = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\");\n\t\t\tbinaryMode          = rep.getJobEntryAttributeBoolean(id_jobentry, \"binary\");\n\t\t\ttimeout             = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"timeout\");\n            remove              = rep.getJobEntryAttributeBoolean(id_jobentry, \"remove\");\n            onlyPuttingNewFiles = rep.getJobEntryAttributeBoolean(id_jobentry, \"only_new\");\n            activeConnection    = rep.getJobEntryAttributeBoolean(id_jobentry, \"active\");\n            controlEncoding     = rep.getJobEntryAttributeString(id_jobentry, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }\n\t\t}\n\t\tcatch(KettleException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to load job entry of type 'SFTP' from the repository for id_jobentry=\"+id_jobentry, dbe);\n\t\t}\n\t}","id":20545,"modified_method":"public void loadRep(Repository rep, long id_jobentry, List<DatabaseMeta> databases) throws KettleException\n\t  {\n\t\ttry\n\t\t{\n\t\t\tsuper.loadRep(rep, id_jobentry, databases);\n\t\t\tserverName      = rep.getJobEntryAttributeString(id_jobentry, \"servername\");\n\t\t\tint intServerPort = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"serverport\");\n            serverPort = rep.getJobEntryAttributeString(id_jobentry, \"serverport\"); // backward compatible.\n            if (intServerPort>0 && Const.isEmpty(serverPort)) serverPort = Integer.toString(intServerPort);\n\n\t\t\tuserName        = rep.getJobEntryAttributeString(id_jobentry, \"username\");\n\t\t\tpassword        = rep.getJobEntryAttributeString(id_jobentry, \"password\");\n\t\t\tsftpDirectory   = rep.getJobEntryAttributeString(id_jobentry, \"sftpdirectory\");\n\t\t\ttargetDirectory = rep.getJobEntryAttributeString(id_jobentry, \"targetdirectory\");\n\t\t\twildcard        = rep.getJobEntryAttributeString(id_jobentry, \"wildcard\");\n\t\t\tbinaryMode          = rep.getJobEntryAttributeBoolean(id_jobentry, \"binary\");\n\t\t\ttimeout             = (int)rep.getJobEntryAttributeInteger(id_jobentry, \"timeout\");\n            remove              = rep.getJobEntryAttributeBoolean(id_jobentry, \"remove\");\n            onlyPuttingNewFiles = rep.getJobEntryAttributeBoolean(id_jobentry, \"only_new\");\n            activeConnection    = rep.getJobEntryAttributeBoolean(id_jobentry, \"active\");\n            controlEncoding     = rep.getJobEntryAttributeString(id_jobentry, \"control_encoding\");\n            if ( controlEncoding == null )\n            {\n            \t// if we couldn't retrieve an encoding, assume it's an old instance and\n            \t// put in the the encoding used before v 2.4.0\n            \tcontrolEncoding = LEGACY_CONTROL_ENCODING;\n            }\n\t\t}\n\t\tcatch(KettleException dbe)\n\t\t{\n\t\t\tthrow new KettleException(Messages.getString(\"JobFTPPUT.UnableToLoadFromRepo\", String.valueOf(id_jobentry)), dbe);\n\t\t}\n\t}","commit_id":"d1667dabbf06445dad2be6640a41e6f37ddda3ab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n        Result result = previousResult;\n\t\tresult.setResult( false );\n\t\tlong filesput = 0;\n\n\n\t\tlog.logDetailed(toString(), \"Start of SFTP job entry\");\n        \n        // String substitution..\n        String realServerName      = environmentSubstitute(serverName);\n        String realServerPort      = environmentSubstitute(serverPort);\n        String realUsername        = environmentSubstitute(userName);\n        String realPassword        = environmentSubstitute(password);\n        String realRemoteDirectoty = environmentSubstitute(sftpDirectory);\n        String realWildcard        = environmentSubstitute(wildcard);\n        String realLocalDirectory  = environmentSubstitute(targetDirectory);\n        \n        \n        FTPClient ftpclient=null;\n        \n\t\ttry\n\t\t{\n\t\t\t// Create ftp client to host:port ...\n\t\t\tftpclient = new FTPClient();\n            ftpclient.setRemoteAddr(InetAddress.getByName(realServerName));\n            ftpclient.setRemotePort(Const.toInt(realServerPort, 21));\n            \n            if (log.isDetailed()) log.logDetailed(toString(), \"Opened FTP connection to server [\"+realServerName+\"]\");\n\n\t\t\t// set activeConnection connectmode ...\n            if (activeConnection)\n            {\n                ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\n                if (log.isDetailed()) log.logDetailed(toString(), \"set active ftp connection mode\");\n            }\n            else\n            {\n                ftpclient.setConnectMode(FTPConnectMode.PASV);\n                if (log.isDetailed()) log.logDetailed(toString(), \"set passive ftp connection mode\");\n            }\n\t\t\t\n        \t// Set the timeout\n\t\t\tftpclient.setTimeout(timeout);\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), \"set timeout to \"+timeout);\n\t\t\t\n\t\t\tftpclient.setControlEncoding(controlEncoding);\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), \"set control encoding to \"+controlEncoding);\n\n\t\t\t// login to ftp host ...\n            ftpclient.connect();\n\t\t\tftpclient.login(realUsername, realPassword);\n\t\t\t\t\n\t\t\t\n\t\t\t//  Remove password from logging, you don't know where it ends up.\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), \"logged in with user \"+realUsername);\n\n\t\t\t// move to spool dir ...\n\t\t\tif (!Const.isEmpty(realRemoteDirectoty))\n\t\t\t{\n\t\t\t\tftpclient.chdir(realRemoteDirectoty);\n\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), \"Changed to directory [\"+realRemoteDirectoty+\"]\");\n\t\t\t}\n\t\t\t\n\t\t\t// Get all the files in the local directory...\n\t\t\tint x = 0;\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5 \n\t\t\t// ArrayList<String> myFileList = new ArrayList<String>();\n\t\t\tArrayList<String> myFileList = new ArrayList<String>();\n\t\t\t\n\t\t\t\n\t\t\tFile localFiles = new File(realLocalDirectory);\n\t\t\tFile[] children = localFiles.listFiles();\n\t\t\tfor (int i=0; i<children.length; i++) {\n\t            // Get filename of file or directory\n\t\t\t\tif (!children[i].isDirectory()) {\n\t\t\t\t\t// myFileList.add(children[i].getAbsolutePath());\n\t\t\t\t\tmyFileList.add(children[i].getName());\n\t\t\t\t\tx = x+1;\n\t\t\t\t\t\n\t\t\t\t}\n\t        } // end for\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5\n\t\t\t// String[] filelist = myFileList.toArray(new String[myFileList.size()]);\n\t\t\t\n\t\t\tString[] filelist = new String[myFileList.size()];\n\t\t\tmyFileList.toArray(filelist);\n\t\t\t\n\t\t\t\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), \"Found \"+filelist.length+\" files in the local directory\");\n\t\t\t\n\t\t\tPattern pattern = null;\n\t\t\tif (!Const.isEmpty(realWildcard)) \n\t\t\t{\n\t\t\t\tpattern = Pattern.compile(realWildcard);\n\t\t\t\t\n\t\t\t} // end if\n\t\t\t\n\t\t\t\n\t\t\t// Get the files in the list and execute ftp.put() for each file\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\n\t\t\t{\n\t\t\t\tboolean getIt = true;\n\t\t\t\t\n\t\t\t\t// First see if the file matches the regular expression!\n\t\t\t\tif (pattern!=null)\n\t\t\t\t{\n\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\n\t\t\t\t\tgetIt = matcher.matches();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (getIt)\n\t\t\t\t{\n\t\t\t\t\tif (!ftpclient.exists(filelist[i]) || (ftpclient.exists(filelist[i]) && !onlyPuttingNewFiles))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (log.isDebug()) log.logDebug(toString(), \"putting file [\"+filelist[i]+\"] to directory [\"+realRemoteDirectoty+\"]\");\n\t\t\t\t\t\t\n\t\t\t\t\t\tString localFilename = realLocalDirectory+Const.FILE_SEPARATOR+filelist[i]; \n\t\t\t\t\t\tftpclient.put(localFilename, filelist[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilesput++;\n\t\t\t\t\t\n\t\t\t\t\t\t// Delete the file if this is needed!\n\t\t\t\t\t\tif (remove) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildren[i].delete();\n\t\t\t\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), \"deleted local file [\"+filelist[i]+\"]\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tresult.setResult( true );\n\t\t\tif (log.isDetailed()) log.logDebug(toString(), \"We have put \" + filesput);\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tresult.setNrErrors(1);\n\t\t\tlog.logError(toString(), \"Error getting files from SFTP : \"+e.getMessage());\n            log.logError(toString(), Const.getStackTracker(e));\n\t\t} finally \n\t\t{\n\t\t\t if (ftpclient!=null && ftpclient.connected())\n\t            {\n\t                try\n\t                {\n\t                    ftpclient.quit();\n\t                }\n\t                catch(Exception e)\n\t                {\n\t                    log.logError(toString(), \"Error quiting FTP connection: \"+e.getMessage());\n\t                }\n\t            }\n\t\t}\n\t\t\n\t\treturn result;\n\t}","id":20546,"modified_method":"public Result execute(Result previousResult, int nr, Repository rep, Job parentJob)\n\t{\n\t\tLogWriter log = LogWriter.getInstance();\n\n        Result result = previousResult;\n\t\tresult.setResult( false );\n\t\tlong filesput = 0;\n\n\n\t\tlog.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.Starting\"));\n        \n        // String substitution..\n        String realServerName      = environmentSubstitute(serverName);\n        String realServerPort      = environmentSubstitute(serverPort);\n        String realUsername        = environmentSubstitute(userName);\n        String realPassword        = environmentSubstitute(password);\n        String realRemoteDirectory = environmentSubstitute(sftpDirectory);\n        String realWildcard        = environmentSubstitute(wildcard);\n        String realLocalDirectory  = environmentSubstitute(targetDirectory);\n        \n        \n        FTPClient ftpclient=null;\n        \n\t\ttry\n\t\t{\n\t\t\t// Create ftp client to host:port ...\n\t\t\tftpclient = new FTPClient();\n            ftpclient.setRemoteAddr(InetAddress.getByName(realServerName));\n            ftpclient.setRemotePort(Const.toInt(realServerPort, 21));\n            \n            if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.OpenConnection\",realServerName));\n\n\t\t\t// set activeConnection connectmode ...\n            if (activeConnection)\n            {\n                ftpclient.setConnectMode(FTPConnectMode.ACTIVE);\n                if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetActiveConnection\"));\n            }\n            else\n            {\n                ftpclient.setConnectMode(FTPConnectMode.PASV);\n                if (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetPassiveConnection\"));\n            }\n\t\t\t\n        \t// Set the timeout\n\t\t\tftpclient.setTimeout(timeout);\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetTimeout\",\"\"+timeout));\n\t\t\t\n\t\t\tftpclient.setControlEncoding(controlEncoding);\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.SetEncoding\",controlEncoding));\n\n\t\t\t// login to ftp host ...\n            ftpclient.connect();\n\t\t\tftpclient.login(realUsername, realPassword);\n\t\t\t\t\n\t\t\t\n\t\t\t//  Remove password from logging, you don't know where it ends up.\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.Logged\",realUsername));\n\n\t\t\t// move to spool dir ...\n\t\t\tif (!Const.isEmpty(realRemoteDirectory))\n\t\t\t{\n\t\t\t\tftpclient.chdir(realRemoteDirectory);\n\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.ChangedDirectory\",realRemoteDirectory));\n\t\t\t}\n\t\t\t\n\t\t\t// Get all the files in the local directory...\n\t\t\tint x = 0;\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5 \n\t\t\t// ArrayList<String> myFileList = new ArrayList<String>();\n\t\t\tArrayList<String> myFileList = new ArrayList<String>();\n\t\t\t\n\t\t\t\n\t\t\tFile localFiles = new File(realLocalDirectory);\n\t\t\tFile[] children = localFiles.listFiles();\n\t\t\tfor (int i=0; i<children.length; i++) {\n\t            // Get filename of file or directory\n\t\t\t\tif (!children[i].isDirectory()) {\n\t\t\t\t\t// myFileList.add(children[i].getAbsolutePath());\n\t\t\t\t\tmyFileList.add(children[i].getName());\n\t\t\t\t\tx = x+1;\n\t\t\t\t\t\n\t\t\t\t}\n\t        } // end for\n\t\t\t\n\t\t\t// Joerg:  ..that's for Java5\n\t\t\t// String[] filelist = myFileList.toArray(new String[myFileList.size()]);\n\t\t\t\n\t\t\tString[] filelist = new String[myFileList.size()];\n\t\t\tmyFileList.toArray(filelist);\n\t\t\t\n\t\t\t\n\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.FoundFileLocalDirectory\",\"\"+filelist.length,realLocalDirectory));\n\t\t\t\n\t\t\tPattern pattern = null;\n\t\t\tif (!Const.isEmpty(realWildcard)) \n\t\t\t{\n\t\t\t\tpattern = Pattern.compile(realWildcard);\n\t\t\t\t\n\t\t\t} // end if\n\t\t\t\n\t\t\t\n\t\t\t// Get the files in the list and execute ftp.put() for each file\n\t\t\tfor (int i=0;i<filelist.length && !parentJob.isStopped();i++)\n\t\t\t{\n\t\t\t\tboolean getIt = true;\n\t\t\t\t\n\t\t\t\t// First see if the file matches the regular expression!\n\t\t\t\tif (pattern!=null)\n\t\t\t\t{\n\t\t\t\t\tMatcher matcher = pattern.matcher(filelist[i]);\n\t\t\t\t\tgetIt = matcher.matches();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (getIt)\n\t\t\t\t{\n\t\t\t\t\tif (!ftpclient.exists(filelist[i]) || (ftpclient.exists(filelist[i]) && !onlyPuttingNewFiles))\n\t\t\t\t\t{\n\t\t\t\t\t\tif (log.isDebug()) log.logDebug(toString(), Messages.getString(\"JobFTPPUT.Log.PuttingFileToRemoteDirectory\",filelist[i],realRemoteDirectory));\n\t\t\t\t\t\t\n\t\t\t\t\t\tString localFilename = realLocalDirectory+Const.FILE_SEPARATOR+filelist[i]; \n\t\t\t\t\t\tftpclient.put(localFilename, filelist[i]);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfilesput++;\n\t\t\t\t\t\n\t\t\t\t\t\t// Delete the file if this is needed!\n\t\t\t\t\t\tif (remove) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tchildren[i].delete();\n\t\t\t\t\t\t\tif (log.isDetailed()) log.logDetailed(toString(), Messages.getString(\"JobFTPPUT.Log.DeletedFile\",filelist[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tresult.setResult( true );\n\t\t\tif (log.isDetailed()) log.logDebug(toString(), Messages.getString(\"JobFTPPUT.Log.WeHavePut\",\"\"+filesput));\n\t\t}\n\t\tcatch(Exception e)\n\t\t{\n\t\t\tresult.setNrErrors(1);\n\t\t\tlog.logError(toString(), Messages.getString(\"JobFTPPUT.Log.ErrorPuttingFiles\",e.getMessage()));\n            log.logError(toString(), Const.getStackTracker(e));\n\t\t} finally \n\t\t{\n\t\t\t if (ftpclient!=null && ftpclient.connected())\n\t            {\n\t                try\n\t                {\n\t                    ftpclient.quit();\n\t                }\n\t                catch(Exception e)\n\t                {\n\t                    log.logError(toString(), Messages.getString(\"JobFTPPUT.Log.ErrorQuitingFTP\",e.getMessage()));\n\t                }\n\t            }\n\t\t}\n\t\t\n\t\treturn result;\n\t}","commit_id":"d1667dabbf06445dad2be6640a41e6f37ddda3ab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"servername\",      serverName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"serverport\",      serverPort);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"username\",        userName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"password\",        password);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"sftpdirectory\",    sftpDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"targetdirectory\", targetDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"wildcard\",        wildcard);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"binary\",          binaryMode);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"timeout\",         timeout);\n            rep.saveJobEntryAttribute(id_job, getID(), \"remove\",          remove);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"only_new\",        onlyPuttingNewFiles);\n            rep.saveJobEntryAttribute(id_job, getID(), \"active\",          activeConnection);\n            rep.saveJobEntryAttribute(id_job, getID(), \"control_encoding\",controlEncoding);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(\"Unable to save job entry of type 'SFTP' to the repository for id_job=\"+id_job, dbe);\n\t\t}\n\t}","id":20547,"modified_method":"public void saveRep(Repository rep, long id_job)\n\t\tthrows KettleException\n\t{\n\t\ttry\n\t\t{\n\t\t\tsuper.saveRep(rep, id_job);\n\t\t\t\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"servername\",      serverName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"serverport\",      serverPort);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"username\",        userName);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"password\",        password);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"sftpdirectory\",    sftpDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"targetdirectory\", targetDirectory);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"wildcard\",        wildcard);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"binary\",          binaryMode);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"timeout\",         timeout);\n            rep.saveJobEntryAttribute(id_job, getID(), \"remove\",          remove);\n\t\t\trep.saveJobEntryAttribute(id_job, getID(), \"only_new\",        onlyPuttingNewFiles);\n            rep.saveJobEntryAttribute(id_job, getID(), \"active\",          activeConnection);\n            rep.saveJobEntryAttribute(id_job, getID(), \"control_encoding\",controlEncoding);\n\t\t}\n\t\tcatch(KettleDatabaseException dbe)\n\t\t{\n\t\t\tthrow new KettleException(Messages.getString(\"JobFTPPUT.UnableToSaveToRepo\", String.valueOf(id_job)), dbe); //$NON-NLS-1$\n\t\t\t   \n\t\t\n\t\t}\n\t}","commit_id":"d1667dabbf06445dad2be6640a41e6f37ddda3ab","url":"https://github.com/pentaho/pentaho-kettle"},{"original_method":"/**\n\t * Implements the naming strategy for a {@see ManagedRoute}.\n\t * The convention used for a {@see ManagedEndpoint} ObjectName is\n\t * \"<domain>:context=<context>,type=Routes,endpoint=[urlPrefix]localPart\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(ManagedRoute mbean) throws MalformedObjectNameException {\n\t\tHashtable<String, String> keys = new Hashtable<String, String>();\n\t\tEndpoint ep = mbean.getRoute().getEndpoint();\n\t\tString ctxid = ep != null ? getContextId(ep.getContext()) : VALUE_UNKNOWN;\n\t\tkeys.put(KEY_CONTEXT, ctxid);\n\t\tkeys.put(KEY_TYPE, TYPE_ROUTES);\n\t\tkeys.put(KEY_ENDPOINT, getEndpointId(ep));\n\t\treturn new ObjectName(domainName, keys);\n\t}","id":20548,"modified_method":"/**\n\t * Implements the naming strategy for a {@see ManagedRoute}.\n\t * The convention used for a {@see ManagedEndpoint} ObjectName is\n\t * \"<domain>:context=<context>,type=Routes,endpoint=[urlPrefix]localPart\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(ManagedRoute mbean) throws MalformedObjectNameException {\n\t\tEndpoint ep = mbean.getRoute().getEndpoint();\n\t\tString ctxid = ep != null ? getContextId(ep.getContext()) : VALUE_UNKNOWN;\n\t\t\n\t\tStringBuffer buffer = new StringBuffer();\n\t\tbuffer.append(domainName + \":\");\n\t\tbuffer.append(KEY_CONTEXT + \"=\" + ctxid + \",\");\n\t\tbuffer.append(KEY_CLASS + \"=\" + CLASS_ROUTES + \",\");\n\t\tbuffer.append(KEY_ROUTE + \"=\" + getEndpointId(ep));\n\t\treturn new ObjectName(buffer.toString());\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"/**\n\t * Implements the naming strategy for a {@see ManagedEndpoint}.\n\t * The convention used for a {@see ManagedEndpoint} ObjectName is\n\t * \"<domain>:context=<context>,type=Endpoints,endpoint=[urlPrefix]localPart\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(ManagedEndpoint mbean) throws MalformedObjectNameException {\n\t\tEndpoint ep = mbean.getEndpoint();\n\t\tHashtable<String, String> keys = new Hashtable<String, String>();\n\t\tkeys.put(KEY_CONTEXT, getContextId(ep.getContext()));\n\t\tkeys.put(KEY_TYPE, TYPE_ENDPOINTS);\n\t\tkeys.put(KEY_ENDPOINT, getEndpointId(ep));\n\t\treturn new ObjectName(domainName, keys);\n\t}","id":20549,"modified_method":"/**\n\t * Implements the naming strategy for a {@see ManagedEndpoint}.\n\t * The convention used for a {@see ManagedEndpoint} ObjectName is\n\t * \"<domain>:context=<context>,type=Endpoints,endpoint=[urlPrefix]localPart\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(ManagedEndpoint mbean) throws MalformedObjectNameException {\n\t\tEndpoint ep = mbean.getEndpoint();\n\t\t\n\t\tStringBuffer buffer = new StringBuffer();\n\t\tbuffer.append(domainName + \":\");\n\t\tbuffer.append(KEY_CONTEXT + \"=\" + getContextId(ep.getContext()) + \",\");\n\t\tbuffer.append(KEY_CLASS + \"=\" + CLASS_ENDPOINTS + \",\");\n\t\tbuffer.append(KEY_NAME + \"=\" + getEndpointId(ep));\n\t\treturn new ObjectName(buffer.toString());\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"/**\n\t * Implements the naming strategy for a {@see ServiceSpport Service}.\n\t * The convention used for a {@see Service} ObjectName is\n\t * \"<domain>:context=<context>,type=Services,endpoint=[urlPrefix]localPart\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(CamelContext context, ManagedService mbean) throws MalformedObjectNameException {\n\t\tHashtable<String, String> keys = new Hashtable<String, String>();\n\t\tkeys.put(KEY_CONTEXT, getContextId(context));\n\t\tkeys.put(KEY_TYPE, TYPE_SERVICES);\n\t\tkeys.put(KEY_ENDPOINT, Integer.toHexString(mbean.getService().hashCode()));\n\t\treturn new ObjectName(domainName, keys);\n\t}","id":20550,"modified_method":"/**\n\t * Implements the naming strategy for a {@see ServiceSpport Service}.\n\t * The convention used for a {@see Service} ObjectName is\n\t * \"<domain>:context=<context>,type=Services,endpoint=[urlPrefix]localPart\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(CamelContext context, ManagedService mbean) throws MalformedObjectNameException {\n\t\tStringBuffer buffer = new StringBuffer();\n\t\tbuffer.append(domainName + \":\");\n\t\tbuffer.append(KEY_CONTEXT + \"=\" + getContextId(context) + \",\");\n\t\tbuffer.append(KEY_CLASS + \"=\" + CLASS_SERVICES + \",\");\n\t\tbuffer.append(KEY_NAME + \"=\" + Integer.toHexString(mbean.getService().hashCode()));\n\t\treturn new ObjectName(buffer.toString());\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"/**\n\t * Implements the naming strategy for a {@see CamelContext}.\n\t * The convention used for a {@see CamelContext} ObjectName is\n\t * \"<domain>:context=<context>,name=camel\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(CamelContext context) throws MalformedObjectNameException {\n\t\tHashtable<String, String> keys = new Hashtable<String, String>();\n\t\tkeys.put(KEY_CONTEXT, getContextId(context));\n\t\tkeys.put(KEY_NAME, \"camel\");\n\t\treturn new ObjectName(domainName, keys);\n\t}","id":20551,"modified_method":"/**\n\t * Implements the naming strategy for a {@see CamelContext}.\n\t * The convention used for a {@see CamelContext} ObjectName is\n\t * \"<domain>:context=<context>,name=camel\".\n\t * \n\t * @param mbean\n\t * @return generated ObjectName\n\t * @throws MalformedObjectNameException\n\t */\n\tpublic ObjectName getObjectName(CamelContext context) throws MalformedObjectNameException {\n\t\tStringBuffer buffer = new StringBuffer();\n\t\tbuffer.append(domainName + \":\");\n\t\tbuffer.append(KEY_CONTEXT + \"=\" + getContextId(context) + \",\");\n\t\tbuffer.append(KEY_NAME + \"=\" + \"context\");\n\t\treturn new ObjectName(buffer.toString());\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"protected void startRouteDefinitions(Collection<RouteType> list) throws Exception {\n        if (list != null) {\n            for (RouteType route : list) {\n                route.addRoutes(this);\n            }\n        }\n    }","id":20552,"modified_method":"protected void startRouteDefinitions(Collection<RouteType> list) throws Exception {\n        if (list != null) {\n            for (RouteType route : list) {\n            \tlifecycleStrategy.beforeStartRouteType(this, route);\n                route.addRoutes(this);\n            }\n        }\n    }","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"public void onContextCreate(CamelContext context) {\n\t\tif (context instanceof DefaultCamelContext) {\n\t\t\ttry {\t\n\t\t\t\tDefaultCamelContext dc = (DefaultCamelContext)context;\n\t\t\t\tManagedService ms = new ManagedService(dc);\n\t\t\t\tagent.register(ms, naming.getObjectName(dc));\n\t\t\t}\n\t\t\tcatch(JMException e) {\n\t\t\t\t// log a WARN\n\t\t\t}\n\t\t}\n\t}","id":20553,"modified_method":"public void onContextCreate(CamelContext context) {\n\t\tif (context instanceof DefaultCamelContext) {\n\t\t\ttry {\t\n\t\t\t\tDefaultCamelContext dc = (DefaultCamelContext)context;\n\t\t\t\tManagedService ms = new ManagedService(dc);\n\t\t\t\tagent.register(ms, naming.getObjectName(dc));\n\t\t\t}\n\t\t\tcatch(JMException e) {\n\t\t\t\tLOG.warn(\"Could not register CamelContext MBean\", e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"public void onServiceAdd(CamelContext context, Service service) {\n\t\tif (service instanceof ServiceSupport) {\n\t\t\ttry {\n\t\t\t\tManagedService ms = new ManagedService((ServiceSupport)service);\n\t\t\t\tagent.register(ms, naming.getObjectName(context, ms));\n\t\t\t}\n\t\t\tcatch(JMException e) {\n\t\t\t\t// log a WARN\n\t\t\t}\n\t\t}\n\t}","id":20554,"modified_method":"public void onServiceAdd(CamelContext context, Service service) {\n\t\tif (service instanceof ServiceSupport) {\n\t\t\ttry {\n\t\t\t\tManagedService ms = new ManagedService((ServiceSupport)service);\n\t\t\t\tagent.register(ms, naming.getObjectName(context, ms));\n\t\t\t}\n\t\t\tcatch(JMException e) {\n\t\t\t\tLOG.warn(\"Could not register Service MBean\", e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"public void onRoutesAdd(Collection<Route> routes) {\n\t\tfor (Route route: routes) {\n\t\t\ttry {\n\t\t\t\tManagedRoute mr = new ManagedRoute(route);\n\t\t\t\tagent.register(mr, naming.getObjectName(mr));\n\t\t\t}\n\t\t\tcatch(JMException e) {\n\t\t\t\t// log a WARN\n\t\t\t}\n\t\t}\n\t}","id":20555,"modified_method":"public void onRoutesAdd(Collection<Route> routes) {\n\t\tfor (Route route: routes) {\n\t\t\ttry {\n\t\t\t\tManagedRoute mr = new ManagedRoute(route);\n\t\t\t\tagent.register(mr, naming.getObjectName(mr));\n\t\t\t}\n\t\t\tcatch(JMException e) {\n\t\t\t\tLOG.warn(\"Could not register Route MBean\", e);\n\t\t\t}\n\t\t}\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"public void onEndpointAdd(Endpoint endpoint) {\n\t\ttry {\n\t\t\tManagedEndpoint me = new ManagedEndpoint(endpoint);\n\t\t\tagent.register(me, naming.getObjectName(me));\n\t\t}\n\t\tcatch(JMException e) {\n\t\t\t// log a WARN\n\t\t}\n\t}","id":20556,"modified_method":"public void onEndpointAdd(Endpoint endpoint) {\n\t\ttry {\n\t\t\tManagedEndpoint me = new ManagedEndpoint(endpoint);\n\t\t\tagent.register(me, naming.getObjectName(me));\n\t\t}\n\t\tcatch(JMException e) {\n\t\t\tLOG.warn(\"Could not register Endpoint MBean\", e);\n\t\t}\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"public void testMBeansRegistered() throws Exception {\n        resolveMandatoryEndpoint(\"mock:end\", MockEndpoint.class);\n        \n        ObjectName name = new ObjectName(domainName + \":type=Endpoints,*\");\n        Set s = iAgent.getMBeanServer().queryNames(name, null);\n        assertTrue(s.size() == 2);\n    }","id":20557,"modified_method":"public void testMBeansRegistered() throws Exception {\n    \tresolveMandatoryEndpoint(\"mock:end\", MockEndpoint.class);\n\n        ObjectName name = new ObjectName(domainName + \":class=endpoints,*\");\n        Set s = iAgent.getMBeanServer().queryNames(name, null);\n        assertTrue(s.size() == 2);\n    }","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"ManagedRoute(Route route) {\n\t\tthis.route = route;\n\t}","id":20558,"modified_method":"ManagedRoute(Route route) {\n\t\tthis.route = route;\n\t\tthis.description = route.toString();\n\t}","commit_id":"28e705fb782c27f2fd0328f5577c89c8fe95a154","url":"https://github.com/apache/camel"},{"original_method":"private static String quote(String val)\n    {\n        return String.format(\"\\\"%s\\\"\", val);\n    }","id":20559,"modified_method":"/**\n     * Wraps given string into quotes\n     * @param val string to quote\n     * @return quoted string\n     */\n    private static String quote(String val)\n    {\n        return String.format(\"\\\"%s\\\"\", val);\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"private static String asKey(String val)\n    {\n        return String.format(\"%s: \", quote(val));\n    }","id":20560,"modified_method":"/**\n     * JSON Hash Key serializer\n     * @param val value to set as a key\n     * @return JSON Hash key\n     */\n    private static String asKey(String val)\n    {\n        return String.format(\"%s: \", quote(val));\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"private static void serializeRow(PrintStream outs, SSTableIdentityIterator row) throws IOException\n    {\n        ColumnFamily columnFamily = row.getColumnFamilyWithColumns();\n        CFMetaData cfMetaData = columnFamily.metadata();\n\n        AbstractType comparator = columnFamily.getComparator();\n\n        // key is represented as String according to current Partitioner\n        outs.print(\"  \" + asKey(bytesToHex(row.getKey().key)));\n\n        if (columnFamily.isSuper())\n        {\n            outs.print(\"{ \");\n\n            Iterator<IColumn> iter = columnFamily.getSortedColumns().iterator();\n            while (iter.hasNext())\n            {\n                IColumn column = iter.next();\n\n                // header of the row\n                outs.print(asKey(comparator.getString(column.name())));\n                outs.print(\"{\");\n                outs.print(asKey(\"deletedAt\"));\n                outs.print(column.getMarkedForDeleteAt());\n                outs.print(\", \");\n                outs.print(asKey(\"subColumns\"));\n\n                // columns\n                serializeColumns(outs, column.getSubColumns(), columnFamily.getSubComparator(), cfMetaData);\n\n                outs.print(\"}\");\n\n                if (iter.hasNext())\n                {\n                    outs.print(\", \");\n                }\n            }\n            \n            outs.print(\"}\");\n        }\n        else\n        {\n            serializeColumns(outs, columnFamily.getSortedColumns(), comparator, cfMetaData);\n        }\n    }","id":20561,"modified_method":"/**\n     * Get portion of the columns and serialize in loop while not more columns left in the row\n     * @param reader SSTableReader for given SSTable\n     * @param row SSTableIdentityIterator row representation with Column Family\n     * @param key Decorated Key for the required row\n     * @param out output stream\n     */\n    private static void serializeRow(SSTableReader reader, SSTableIdentityIterator row, DecoratedKey key, PrintStream out)\n    {\n        ColumnFamily columnFamily = row.getColumnFamily();\n        boolean isSuperCF = columnFamily.isSuper();\n        ByteBuffer startColumn = ByteBufferUtil.EMPTY_BYTE_BUFFER; // initial column name, \"blank\" for first\n\n        out.print(asKey(bytesToHex(key.key)));\n\n        out.print(isSuperCF ? \"{\" : \"[\");\n\n        while (true)\n        {\n            QueryFilter filter = QueryFilter.getSliceFilter(key,\n                                                            new QueryPath(columnFamily.metadata().tableName),\n                                                            startColumn,\n                                                            ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                            false,\n                                                            PAGE_SIZE);\n\n            IColumnIterator columns = filter.getSSTableColumnIterator(reader);\n\n            int columnCount = 0;\n            while (columns.hasNext())\n            {\n                // setting new start column to the last of the current columns\n                startColumn = columns.next().name();\n                columnCount++;\n            }\n\n            try\n            {\n                columns = filter.getSSTableColumnIterator(reader); // iterator reset\n                serializeRow(columns, isSuperCF, out);\n            }\n            catch (IOException e)\n            {\n                System.err.println(\"WARNING: Corrupt row \" + key + \" (skipping).\");\n            }\n\n            if (columnCount < PAGE_SIZE)\n                break;\n        }\n\n        out.print(isSuperCF ? \"}\" : \"]\");\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Given arguments specifying an SSTable, and optionally an output file,\n     * export the contents of the SSTable to JSON.\n     *  \n     * @param args command lines arguments\n     * @throws IOException on failure to open/read/write files or output streams\n     * @throws ConfigurationException if configuration is invalid\n     */\n    public static void main(String[] args) throws IOException, ConfigurationException\n    {\n        String usage = String.format(\"Usage: %s <sstable> [-k key [-k key [...]] -x key [-x key [...]]]%n\", SSTableExport.class.getName());\n        \n        CommandLineParser parser = new PosixParser();\n        try\n        {\n            cmd = parser.parse(options, args);\n        }\n        catch (ParseException e1)\n        {\n            System.err.println(e1.getMessage());\n            System.err.println(usage);\n            System.exit(1);\n        }\n\n\n        if (cmd.getArgs().length != 1)\n        {\n            System.err.println(\"You must supply exactly one sstable\");\n            System.err.println(usage);\n            System.exit(1);\n        }\n        \n\n        String[] keys = cmd.getOptionValues(KEY_OPTION);\n        String[] excludes = cmd.getOptionValues(EXCLUDEKEY_OPTION);\n        String ssTableFileName = new File(cmd.getArgs()[0]).getAbsolutePath();\n\n        DatabaseDescriptor.loadSchemas();\n        if (DatabaseDescriptor.getNonSystemTables().size() < 1)\n        {\n            String msg = \"no non-system tables are defined\";\n            System.err.println(msg);\n            throw new ConfigurationException(msg);\n        }\n\n        if (cmd.hasOption(ENUMERATEKEYS_OPTION))\n        {\n            enumeratekeys(ssTableFileName, System.out);\n        }\n        else\n        {\n            if ((keys != null) && (keys.length > 0))\n                export(ssTableFileName, System.out, keys, excludes);\n            else\n                export(ssTableFileName, excludes);\n        }\n\n        System.exit(0);\n    }","id":20562,"modified_method":"/**\n     * Given arguments specifying an SSTable, and optionally an output file,\n     * export the contents of the SSTable to JSON.\n     *  \n     * @param args command lines arguments\n     * @throws IOException on failure to open/read/write files or output streams\n     * @throws ConfigurationException if configuration is invalid\n     */\n    public static void main(String[] args) throws IOException, ConfigurationException\n    {\n        String usage = String.format(\"Usage: %s <sstable> [-k key [-k key [...]] -x key [-x key [...]]]%n\", SSTableExport.class.getName());\n        \n        CommandLineParser parser = new PosixParser();\n        try\n        {\n            cmd = parser.parse(options, args);\n        }\n        catch (ParseException e1)\n        {\n            System.err.println(e1.getMessage());\n            System.err.println(usage);\n            System.exit(1);\n        }\n\n\n        if (cmd.getArgs().length != 1)\n        {\n            System.err.println(\"You must supply exactly one sstable\");\n            System.err.println(usage);\n            System.exit(1);\n        }\n        \n\n        String[] keys = cmd.getOptionValues(KEY_OPTION);\n        String[] excludes = cmd.getOptionValues(EXCLUDEKEY_OPTION);\n        String ssTableFileName = new File(cmd.getArgs()[0]).getAbsolutePath();\n\n        DatabaseDescriptor.loadSchemas();\n        if (DatabaseDescriptor.getNonSystemTables().size() < 1)\n        {\n            String msg = \"no non-system tables are defined\";\n            System.err.println(msg);\n            throw new ConfigurationException(msg);\n        }\n\n        if (cmd.hasOption(ENUMERATEKEYS_OPTION))\n        {\n            enumeratekeys(ssTableFileName, System.out);\n        }\n        else\n        {\n            if ((keys != null) && (keys.length > 0))\n                export(ssTableFileName, System.out, Arrays.asList(keys), excludes);\n            else\n                export(ssTableFileName, excludes);\n        }\n\n        System.exit(0);\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"static void export(SSTableReader reader, PrintStream outs, String[] excludes) throws IOException\n    {\n        SSTableScanner scanner = reader.getDirectScanner(INPUT_FILE_BUFFER_SIZE);\n        Set<String> excludeSet = new HashSet<String>();\n\n        if (excludes != null)\n            excludeSet = new HashSet<String>(Arrays.asList(excludes));\n\n        outs.println(\"{\");\n\n        SSTableIdentityIterator row;\n\n        boolean elementWritten = false;\n        while (scanner.hasNext())\n        {\n            row = (SSTableIdentityIterator) scanner.next();\n\n            if (excludeSet.contains(bytesToHex(row.getKey().key)))\n                continue;\n            else if (elementWritten)\n                outs.println(\",\");\n\n            try\n            {\n                serializeRow(outs, row);\n\n                // used to decide should we put ',' after previous row or not\n                if (!elementWritten)\n                    elementWritten = true;\n            }\n            catch (IOException ioexcep)\n            {\n                System.err.println(\"WARNING: Corrupt row \" + bytesToHex(row.getKey().key) + \" (skipping).\");\n                elementWritten = false;\n            }\n            catch (OutOfMemoryError oom)\n            {\n                System.err.println(\"ERROR: Out of memory deserializing row \" + bytesToHex(row.getKey().key));\n                elementWritten = false;\n            }\n        }\n        \n        outs.printf(\"%n}%n\");\n        outs.flush();\n    }","id":20563,"modified_method":"static void export(SSTableReader reader, PrintStream outs, String[] excludes) throws IOException\n    {\n        Set<String> excludeSet = new HashSet<String>();\n\n        if (excludes != null)\n            excludeSet = new HashSet<String>(Arrays.asList(excludes));\n\n\n        SSTableIdentityIterator row;\n        SSTableScanner scanner = reader.getDirectScanner(BufferedRandomAccessFile.DEFAULT_BUFFER_SIZE);\n\n        outs.println(\"{\");\n\n        int i = 0;\n\n        // collecting keys to export\n        while (scanner.hasNext())\n        {\n            row = (SSTableIdentityIterator) scanner.next();\n\n            String currentKey = bytesToHex(row.getKey().key);\n\n            if (excludeSet.contains(currentKey))\n                continue;\n            else if (i != 0)\n                outs.println(\",\");\n\n            serializeRow(reader, row, row.getKey(), outs);\n\n            i++;\n        }\n\n        outs.println(\"\\n}\");\n        outs.flush();\n\n        scanner.close();\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"private static void serializeColumns(PrintStream outs, Collection<IColumn> columns, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        outs.print(\"[\");\n\n        Iterator<IColumn> iter = columns.iterator();\n\n        while (iter.hasNext())\n        {\n            outs.print(\"[\");\n            IColumn column = iter.next();\n\n            ByteBuffer name = column.name();\n            AbstractType validator = cfMetaData.getValueValidator(name);\n\n            outs.print(quote(comparator.getString(name)));\n            outs.print(\", \");\n            outs.print(quote(validator.getString(column.value())));\n            outs.print(\", \");\n            outs.print(column.timestamp());\n            outs.print(\", \");\n            outs.print(column.isMarkedForDelete());\n\n            if (column instanceof ExpiringColumn)\n            {\n                outs.print(\", \");\n                outs.print(((ExpiringColumn) column).getTimeToLive());\n                outs.print(\", \");\n                outs.print(column.getLocalDeletionTime());\n            }\n\n            outs.print(\"]\");\n\n            if (iter.hasNext())\n            {\n                outs.print(\", \");\n            }\n        }\n        \n        outs.print(\"]\");\n    }","id":20564,"modified_method":"/**\n     * Serialize a collection of the columns\n     * @param columns collection of the columns to serialize\n     * @param out output stream\n     * @param comparator columns comparator\n     * @param cfMetaData Column Family metadata (to get validator)\n     */\n    private static void serializeColumns(Collection<IColumn> columns, PrintStream out, AbstractType comparator, CFMetaData cfMetaData)\n    {\n        serializeColumns(columns.iterator(), out, comparator, cfMetaData);\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Export specific rows from an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTable to export the rows from\n     * @param outs PrintStream to write the output to\n     * @param keys the keys corresponding to the rows to export\n     * @param excludes the keys to exclude from export\n     *\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, String[] keys, String[] excludes) throws IOException\n    {\n        SSTableReader reader = SSTableReader.open(Descriptor.fromFilename(ssTableFile));\n        SSTableScanner scanner = reader.getDirectScanner(INPUT_FILE_BUFFER_SIZE);\n        IPartitioner<?> partitioner = DatabaseDescriptor.getPartitioner();    \n        Set<String> excludeSet = new HashSet<String>();\n        int i = 0;\n\n        if (excludes != null)\n            excludeSet = new HashSet<String>(Arrays.asList(excludes));\n        \n        outs.println(\"{\");\n\n        // last key to compare order \n        DecoratedKey lastKey = null;\n        \n        for (String key : keys)\n        {\n            if (excludeSet.contains(key))\n                continue;\n\n            DecoratedKey<?> dk = partitioner.decorateKey(hexToBytes(key));\n\n            // validate order of the keys in the sstable\n            if (lastKey != null && lastKey.compareTo(dk) > 0 )\n                throw new IOException(\"Key out of order! \" + lastKey + \" > \" + dk);\n\n            lastKey = dk;\n\n            scanner.seekTo(dk);\n            \n            i++;\n\n            if (scanner.hasNext())\n            {\n                SSTableIdentityIterator row = (SSTableIdentityIterator) scanner.next();\n\n                try\n                {\n                    serializeRow(outs, row);\n                }\n                catch (IOException ioexc)\n                {\n                    System.err.println(\"WARNING: Corrupt row \" + key + \" (skipping).\");\n                    continue;\n                }\n                catch (OutOfMemoryError oom)\n                {\n                    System.err.println(\"ERROR: Out of memory deserializing row \" + key);\n                    continue;\n                }\n\n                if (i != 1)\n                    outs.println(\",\");\n            }\n        }\n        \n        outs.println(\"\\n}\");\n        outs.flush();\n    }","id":20565,"modified_method":"/**\n     * Export specific rows from an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTable to export the rows from\n     * @param outs PrintStream to write the output to\n     * @param toExport the keys corresponding to the rows to export\n     * @param excludes the keys to exclude from export\n     *\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, Collection<String> toExport, String[] excludes) throws IOException\n    {\n        SSTableReader reader = SSTableReader.open(Descriptor.fromFilename(ssTableFile));\n        SSTableScanner scanner = reader.getDirectScanner(BufferedRandomAccessFile.DEFAULT_BUFFER_SIZE);\n\n        IPartitioner<?> partitioner = StorageService.getPartitioner();\n\n        for (String toExclude : excludes)\n        {\n            toExport.remove(toExclude); // excluding key from export\n        }\n\n        outs.println(\"{\");\n\n        int i = 0;\n\n        // last key to compare order\n        DecoratedKey lastKey = null;\n\n        for (String key : toExport)\n        {\n            DecoratedKey decoratedKey = partitioner.decorateKey(hexToBytes(key));\n\n            if (lastKey != null && lastKey.compareTo(decoratedKey) > 0)\n                throw new IOException(\"Key out of order! \" + lastKey + \" > \" + decoratedKey);\n\n            lastKey = decoratedKey;\n\n            scanner.seekTo(decoratedKey);\n\n            if (!scanner.hasNext())\n                continue;\n\n            serializeRow(reader, (SSTableIdentityIterator) scanner.next(), decoratedKey, outs);\n\n            if (i != 0)\n                outs.println(\",\");\n\n            i++;\n        }\n\n        outs.println(\"\\n}\");\n        outs.flush();\n\n        scanner.close();\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Export an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTable to export\n     * @param outs PrintStream to write the output to\n     * @param excludes the keys to exclude from export\n     *\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, String[] excludes) throws IOException\n    {\n        SSTableReader reader = SSTableReader.open(Descriptor.fromFilename(ssTableFile));\n        export(reader, outs, excludes);\n    }","id":20566,"modified_method":"/**\n     * Export an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTable to export\n     * @param outs PrintStream to write the output to\n     * @param excludes the keys to exclude from export\n     *\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, String[] excludes) throws IOException\n    {\n        export(SSTableReader.open(Descriptor.fromFilename(ssTableFile)), outs, excludes);\n    }","commit_id":"fcf21d2d6d3415ae098edd1c2f0a7832a927d3ad","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Export an SSTable and write the resulting JSON to standard out.\n     * \n     * @param ssTableFile SSTable to export\n     * @throws IOException on failure to read/write SSTable/standard out\n     */\n    public static void export(String ssTableFile, String[] excludes) throws IOException\n    {\n        export(ssTableFile, System.out, excludes);\n    }","id":20567,"modified_method":"/**\n     * Export an SSTable and write the resulting JSON to standard out.\n     * \n     * @param ssTableFile SSTable to export\n     * @param excludes keys to exclude from export\n     *\n     * @throws IOException on failure to read/write SSTable/standard out\n     */\n    public static void export(String ssTableFile, String[] excludes) throws IOException\n    {\n        export(ssTableFile, System.out, excludes);\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"static void export(SSTableReader reader, PrintStream outs, String[] excludes) throws IOException\n    {\n        SSTableScanner scanner = reader.getDirectScanner(INPUT_FILE_BUFFER_SIZE);\n        Set<String> excludeSet = new HashSet<String>();\n\n        if (excludes != null)\n            excludeSet = new HashSet<String>(Arrays.asList(excludes));\n\n        outs.println(\"{\");\n\n        SSTableIdentityIterator row;\n\n        boolean elementWritten = false;\n        while (scanner.hasNext())\n        {\n            row = (SSTableIdentityIterator) scanner.next();\n\n            if (excludeSet.contains(bytesToHex(row.getKey().key)))\n                continue;\n            else if (elementWritten)\n                outs.println(\",\");\n\n            try\n            {\n                serializeRow(outs, row);\n\n                // used to decide should we put ',' after previous row or not\n                if (!elementWritten)\n                    elementWritten = true;\n            }\n            catch (IOException ioexcep)\n            {\n                System.err.println(\"WARNING: Corrupt row \" + bytesToHex(row.getKey().key) + \" (skipping).\");\n                elementWritten = false;\n            }\n            catch (OutOfMemoryError oom)\n            {\n                System.err.println(\"ERROR: Out of memory deserializing row \" + bytesToHex(row.getKey().key));\n                elementWritten = false;\n            }\n        }\n        \n        outs.printf(\"%n}%n\");\n        outs.flush();\n    }","id":20568,"modified_method":"static void export(SSTableReader reader, PrintStream outs, String[] excludes) throws IOException\n    {\n        Set<String> excludeSet = new HashSet<String>();\n\n        if (excludes != null)\n            excludeSet = new HashSet<String>(Arrays.asList(excludes));\n\n\n        SSTableIdentityIterator row;\n        SSTableScanner scanner = reader.getDirectScanner(BufferedRandomAccessFile.DEFAULT_BUFFER_SIZE);\n\n        outs.println(\"{\");\n\n        int i = 0;\n\n        // collecting keys to export\n        while (scanner.hasNext())\n        {\n            row = (SSTableIdentityIterator) scanner.next();\n\n            String currentKey = bytesToHex(row.getKey().key);\n\n            if (excludeSet.contains(currentKey))\n                continue;\n            else if (i != 0)\n                outs.println(\",\");\n\n            serializeRow(reader, row, row.getKey(), outs);\n\n            i++;\n        }\n\n        outs.println(\"\\n}\");\n        outs.flush();\n\n        scanner.close();\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Export specific rows from an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTable to export the rows from\n     * @param outs PrintStream to write the output to\n     * @param keys the keys corresponding to the rows to export\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, String[] keys, String[] excludes)\n    throws IOException\n    {\n        SSTableReader reader = SSTableReader.open(Descriptor.fromFilename(ssTableFile));\n        SSTableScanner scanner = reader.getDirectScanner(INPUT_FILE_BUFFER_SIZE);\n        IPartitioner<?> partitioner = DatabaseDescriptor.getPartitioner();    \n        Set<String> excludeSet = new HashSet<String>();\n        int i = 0;\n\n        if (excludes != null)\n            excludeSet = new HashSet<String>(Arrays.asList(excludes));\n        \n        outs.println(\"{\");\n\n        // last key to compare order \n        DecoratedKey lastKey = null;\n        \n        for (String key : keys)\n        {\n            if (excludeSet.contains(key))\n                continue;\n            DecoratedKey<?> dk = partitioner.decorateKey(hexToBytes(key));\n\n            // validate order of the keys in the sstable\n            if (lastKey != null && lastKey.compareTo(dk) > 0 )\n                throw new IOException(\"Key out of order! \" + lastKey + \" > \" + dk);\n            lastKey = dk;\n\n            scanner.seekTo(dk);\n            \n            i++;\n\n            if (scanner.hasNext())\n            {\n                SSTableIdentityIterator row = (SSTableIdentityIterator) scanner.next();\n\n                try\n                {\n                    serializeRow(outs, row);\n                }\n                catch (IOException ioexc)\n                {\n                    System.err.println(\"WARNING: Corrupt row \" + key + \" (skipping).\");\n                    continue;\n                }\n                catch (OutOfMemoryError oom)\n                {\n                    System.err.println(\"ERROR: Out of memory deserializing row \" + key);\n                    continue;\n                }\n\n                if (i != 1)\n                    outs.println(\",\");\n            }\n        }\n        \n        outs.println(\"\\n}\");\n        outs.flush();\n    }","id":20569,"modified_method":"/**\n     * Export specific rows from an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTableScanner to export the rows from\n     * @param outs PrintStream to write the output to\n     * @param toExport the keys corresponding to the rows to export\n     * @param excludes keys to exclude from export\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, Collection<String> toExport, String[] excludes) throws IOException\n    {\n        SSTableReader reader = SSTableReader.open(Descriptor.fromFilename(ssTableFile));\n        SSTableScanner scanner = reader.getDirectScanner(BufferedRandomAccessFile.DEFAULT_BUFFER_SIZE);\n\n        IPartitioner<?> partitioner = StorageService.getPartitioner();\n\n        for (String toExclude : excludes)\n        {\n            toExport.remove(toExclude); // excluding key from export\n        }\n\n        outs.println(\"{\");\n\n        int i = 0;\n\n        // last key to compare order\n        DecoratedKey lastKey = null;\n\n        for (String key : toExport)\n        {\n            DecoratedKey decoratedKey = partitioner.decorateKey(hexToBytes(key));\n\n            if (lastKey != null && lastKey.compareTo(decoratedKey) > 0)\n                throw new IOException(\"Key out of order! \" + lastKey + \" > \" + decoratedKey);\n\n            lastKey = decoratedKey;\n\n            scanner.seekTo(decoratedKey);\n\n            if (!scanner.hasNext())\n                continue;\n\n            serializeRow(reader, (SSTableIdentityIterator) scanner.next(), decoratedKey, outs);\n\n            if (i != 0)\n                outs.println(\",\");\n\n            i++;\n        }\n\n        outs.println(\"\\n}\");\n        outs.flush();\n\n        scanner.close();\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"private static void serializeRow(PrintStream outs, SSTableIdentityIterator row) throws IOException\n    {\n        ColumnFamily cf = row.getColumnFamilyWithColumns();\n        AbstractType comparator = cf.getComparator();\n        outs.print(asKey(bytesToHex(row.getKey().key)));\n\n        if (cf.isSuper())\n        {\n            outs.print(\"{ \");\n\n            Iterator<IColumn> iter = cf.getSortedColumns().iterator();\n            while (iter.hasNext())\n            {\n                IColumn column = iter.next();\n                outs.print(asKey(bytesToHex(column.name())));\n                outs.print(\"{\");\n                outs.print(asKey(\"deletedAt\"));\n                outs.print(column.getMarkedForDeleteAt());\n                outs.print(\", \");\n                outs.print(asKey(\"subColumns\"));\n                serializeColumns(outs, column.getSubColumns(), comparator);\n                outs.print(\"}\");\n                if (iter.hasNext())\n                    outs.print(\", \");\n            }\n            \n            outs.print(\"}\");\n        }\n        else\n        {\n            serializeColumns(outs, cf.getSortedColumns(), comparator);\n        }\n    }","id":20570,"modified_method":"/**\n     * Get portion of the columns and serialize in loop while not more columns left in the row\n     * @param reader SSTableReader for given SSTable\n     * @param row SSTableIdentityIterator row representation with Column Family\n     * @param key Decorated Key for the required row\n     * @param out output stream\n     */\n    private static void serializeRow(SSTableReader reader, SSTableIdentityIterator row, DecoratedKey key, PrintStream out)\n    {\n        ColumnFamily columnFamily = row.getColumnFamily();\n        boolean isSuperCF = columnFamily.isSuper();\n        ByteBuffer startColumn = ByteBufferUtil.EMPTY_BYTE_BUFFER; // initial column name, \"blank\" for first\n\n        out.print(asKey(bytesToHex(key.key)));\n\n        out.print(isSuperCF ? \"{\" : \"[\");\n\n        while (true)\n        {\n            QueryFilter filter = QueryFilter.getSliceFilter(key,\n                                                            new QueryPath(columnFamily.metadata().tableName),\n                                                            startColumn,\n                                                            ByteBufferUtil.EMPTY_BYTE_BUFFER,\n                                                            false,\n                                                            PAGE_SIZE);\n\n            IColumnIterator columns = filter.getSSTableColumnIterator(reader);\n\n            int columnCount = 0;\n            while (columns.hasNext())\n            {\n                // setting new start column to the last of the current columns\n                startColumn = columns.next().name();\n                columnCount++;\n            }\n\n            try\n            {\n                columns = filter.getSSTableColumnIterator(reader); // iterator reset\n                serializeRow(columns, isSuperCF, out);\n            }\n            catch (IOException e)\n            {\n                System.err.println(\"WARNING: Corrupt row \" + key + \" (skipping).\");\n            }\n\n            if (columnCount < PAGE_SIZE)\n                break;\n        }\n\n        out.print(isSuperCF ? \"}\" : \"]\");\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Export an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTable to export\n     * @param outs PrintStream to write the output to\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, String[] excludes) throws IOException\n    {\n        SSTableReader reader = SSTableReader.open(Descriptor.fromFilename(ssTableFile));\n        export(reader, outs, excludes);\n    }","id":20571,"modified_method":"/**\n     * Export an SSTable and write the resulting JSON to a PrintStream.\n     * \n     * @param ssTableFile the SSTable to export\n     * @param outs PrintStream to write the output to\n     * @param excludes keys to exclude from export\n     *\n     * @throws IOException on failure to read/write input/output\n     */\n    public static void export(String ssTableFile, PrintStream outs, String[] excludes) throws IOException\n    {\n        export(SSTableReader.open(Descriptor.fromFilename(ssTableFile)), outs, excludes);\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"private static void serializeColumns(PrintStream outs, Collection<IColumn> cols, AbstractType comp)\n    {\n        outs.print(\"[\");\n\n        Iterator<IColumn> iter = cols.iterator();\n        while (iter.hasNext())\n        {\n            outs.print(\"[\");\n            IColumn column = iter.next();\n            outs.print(quote(bytesToHex(column.name())));\n            outs.print(\", \");\n            outs.print(quote(bytesToHex(column.value())));\n            outs.print(\", \");\n            outs.print(column.timestamp());\n            outs.print(\", \");\n            outs.print(column.isMarkedForDelete());\n            if (column instanceof ExpiringColumn)\n            {\n                outs.print(\", \");\n                outs.print(((ExpiringColumn) column).getTimeToLive());\n                outs.print(\", \");\n                outs.print(column.getLocalDeletionTime());\n            }\n            outs.print(\"]\");\n            if (iter.hasNext())\n                outs.print(\", \");\n        }\n        \n        outs.print(\"]\");\n    }","id":20572,"modified_method":"/**\n     * Serialize a collection of the columns\n     * @param columns collection of the columns to serialize\n     * @param out output stream\n     */\n    private static void serializeColumns(Collection<IColumn> columns, PrintStream out)\n    {\n        serializeColumns(columns.iterator(), out);\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"private static String asKey(String val)\n    {\n        return String.format(\"%s: \", quote(val));\n    }","id":20573,"modified_method":"/**\n     * JSON Hash Key serializer\n     * @param val value to set as a key\n     * @return JSON Hash key\n     */\n    private static String asKey(String val)\n    {\n        return String.format(\"%s: \", quote(val));\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"private static String quote(String val)\n    {\n        return String.format(\"\\\"%s\\\"\", val);\n    }","id":20574,"modified_method":"/**\n     * Wraps given string into quotes\n     * @param val string to quote\n     * @return quoted string\n     */\n    private static String quote(String val)\n    {\n        return String.format(\"\\\"%s\\\"\", val);\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Given arguments specifying an SSTable, and optionally an output file,\n     * export the contents of the SSTable to JSON.\n     *  \n     * @param args command lines arguments\n     * @throws IOException on failure to open/read/write files or output streams\n     */\n    public static void main(String[] args) throws IOException, ConfigurationException\n    {\n        String usage = String.format(\"Usage: %s <sstable> [-k key [-k key [...]] -x key [-x key [...]]]%n\", SSTableExport.class.getName());\n        \n        CommandLineParser parser = new PosixParser();\n        try\n        {\n            cmd = parser.parse(options, args);\n        }\n        catch (ParseException e1)\n        {\n            System.err.println(e1.getMessage());\n            System.err.println(usage);\n            System.exit(1);\n        }\n\n\n        if (cmd.getArgs().length != 1)\n        {\n            System.err.println(\"You must supply exactly one sstable\");\n            System.err.println(usage);\n            System.exit(1);\n        }\n        \n\n        String[] keys = cmd.getOptionValues(KEY_OPTION);\n        String[] excludes = cmd.getOptionValues(EXCLUDEKEY_OPTION);\n        String ssTableFileName = new File(cmd.getArgs()[0]).getAbsolutePath();\n\n        DatabaseDescriptor.loadSchemas();\n        if (DatabaseDescriptor.getNonSystemTables().size() < 1)\n        {\n            String msg = \"no non-system tables are defined\";\n            System.err.println(msg);\n            throw new ConfigurationException(msg);\n        }\n\n        if (cmd.hasOption(ENUMERATEKEYS_OPTION))\n        {\n            enumeratekeys(ssTableFileName, System.out);\n        }\n        else\n        {\n            if ((keys != null) && (keys.length > 0))\n                export(ssTableFileName, System.out, keys, excludes);\n            else\n                export(ssTableFileName, excludes);\n        }\n\n        System.exit(0);\n    }","id":20575,"modified_method":"/**\n     * Given arguments specifying an SSTable, and optionally an output file,\n     * export the contents of the SSTable to JSON.\n     *  \n     * @param args command lines arguments\n     *\n     * @throws IOException on failure to open/read/write files or output streams\n     * @throws ConfigurationException on configuration failure (wrong params given)\n     */\n    public static void main(String[] args) throws IOException, ConfigurationException\n    {\n        String usage = String.format(\"Usage: %s <sstable> [-k key [-k key [...]] -x key [-x key [...]]]%n\", SSTableExport.class.getName());\n        \n        CommandLineParser parser = new PosixParser();\n        try\n        {\n            cmd = parser.parse(options, args);\n        }\n        catch (ParseException e1)\n        {\n            System.err.println(e1.getMessage());\n            System.err.println(usage);\n            System.exit(1);\n        }\n\n\n        if (cmd.getArgs().length != 1)\n        {\n            System.err.println(\"You must supply exactly one sstable\");\n            System.err.println(usage);\n            System.exit(1);\n        }\n        \n\n        String[] keys = cmd.getOptionValues(KEY_OPTION);\n        String[] excludes = cmd.getOptionValues(EXCLUDEKEY_OPTION);\n        String ssTableFileName = new File(cmd.getArgs()[0]).getAbsolutePath();\n\n        DatabaseDescriptor.loadSchemas();\n        if (DatabaseDescriptor.getNonSystemTables().size() < 1)\n        {\n            String msg = \"no non-system tables are defined\";\n            System.err.println(msg);\n            throw new ConfigurationException(msg);\n        }\n\n        if (cmd.hasOption(ENUMERATEKEYS_OPTION))\n        {\n            enumeratekeys(ssTableFileName, System.out);\n        }\n        else\n        {\n            if ((keys != null) && (keys.length > 0))\n                export(ssTableFileName, System.out, Arrays.asList(keys), excludes);\n            else\n                export(ssTableFileName, excludes);\n        }\n\n        System.exit(0);\n    }","commit_id":"15c2bb3c89e38186c5a59950fdb9c7d9c78fb351","url":"https://github.com/apache/cassandra"},{"original_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tString selectSQL =\n\t\t\t\"select resourcePermissionId, primKey, primKeyId, actionIds, \" +\n\t\t\t\t\"viewActionId from ResourcePermission\";\n\t\tString updateSQL =\n\t\t\t\"update ResourcePermission set primKeyId = ?, viewActionId = ? \" +\n\t\t\t\t\"where resourcePermissionId = ?\";\n\n\t\ttry (Connection con = DataAccess.getUpgradeOptimizedConnection()) {\n\t\t\tDatabaseMetaData databaseMetaData = con.getMetaData();\n\n\t\t\tboolean supportsBatchUpdates =\n\t\t\t\tdatabaseMetaData.supportsBatchUpdates();\n\n\t\t\ttry (PreparedStatement ps = con.prepareStatement(selectSQL);\n\t\t\t\tResultSet rs = ps.executeQuery();\n\t\t\t\tPreparedStatement ps2 = con.prepareStatement(updateSQL)) {\n\n\t\t\t\tint count = 0;\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tlong resourcePermissionId = rs.getLong(\n\t\t\t\t\t\t\"resourcePermissionId\");\n\t\t\t\t\tlong primKeyId = rs.getLong(\"primKeyId\");\n\t\t\t\t\tlong actionIds = rs.getLong(\"actionIds\");\n\t\t\t\t\tboolean viewActionId = rs.getBoolean(\"viewActionId\");\n\n\t\t\t\t\tlong newPrimKeyId = GetterUtil.getLong(\n\t\t\t\t\t\trs.getString(\"primKey\"));\n\t\t\t\t\tboolean newViewActionId = (actionIds % 2 == 1);\n\n\t\t\t\t\tif ((primKeyId == newPrimKeyId) &&\n\t\t\t\t\t\t(newViewActionId == viewActionId)) {\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tps2.setLong(1, newPrimKeyId);\n\n\t\t\t\t\tif (newViewActionId) {\n\t\t\t\t\t\tps2.setBoolean(2, true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tps2.setBoolean(2, false);\n\t\t\t\t\t}\n\n\t\t\t\t\tps2.setLong(3, resourcePermissionId);\n\n\t\t\t\t\tif (supportsBatchUpdates) {\n\t\t\t\t\t\tps2.addBatch();\n\n\t\t\t\t\t\tif (count == PropsValues.HIBERNATE_JDBC_BATCH_SIZE) {\n\t\t\t\t\t\t\tps2.executeBatch();\n\n\t\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tps2.executeUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (supportsBatchUpdates && (count > 0)) {\n\t\t\t\t\tps2.executeBatch();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":20576,"modified_method":"@Override\n\tprotected void doUpgrade() throws Exception {\n\t\tString selectSQL =\n\t\t\t\"select resourcePermissionId, primKey, primKeyId, actionIds, \" +\n\t\t\t\t\"viewActionId from ResourcePermission\";\n\t\tString updateSQL =\n\t\t\t\"update ResourcePermission set primKeyId = ?, viewActionId = ? \" +\n\t\t\t\t\"where resourcePermissionId = ?\";\n\n\t\ttry (Connection con = DataAccess.getUpgradeOptimizedConnection()) {\n\t\t\ttry (PreparedStatement ps = con.prepareStatement(selectSQL);\n\t\t\t\tResultSet rs = ps.executeQuery();\n\t\t\t\tPreparedStatement ps2 = AutoBatchPreparedStatementUtil.autoBath(\n\t\t\t\t\tcon.prepareStatement(updateSQL))) {\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tlong resourcePermissionId = rs.getLong(\n\t\t\t\t\t\t\"resourcePermissionId\");\n\t\t\t\t\tlong primKeyId = rs.getLong(\"primKeyId\");\n\t\t\t\t\tlong actionIds = rs.getLong(\"actionIds\");\n\t\t\t\t\tboolean viewActionId = rs.getBoolean(\"viewActionId\");\n\n\t\t\t\t\tlong newPrimKeyId = GetterUtil.getLong(\n\t\t\t\t\t\trs.getString(\"primKey\"));\n\t\t\t\t\tboolean newViewActionId = (actionIds % 2 == 1);\n\n\t\t\t\t\tif ((primKeyId == newPrimKeyId) &&\n\t\t\t\t\t\t(newViewActionId == viewActionId)) {\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tps2.setLong(1, newPrimKeyId);\n\n\t\t\t\t\tif (newViewActionId) {\n\t\t\t\t\t\tps2.setBoolean(2, true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tps2.setBoolean(2, false);\n\t\t\t\t\t}\n\n\t\t\t\t\tps2.setLong(3, resourcePermissionId);\n\n\t\t\t\t\tps2.addBatch();\n\t\t\t\t}\n\n\t\t\t\tps2.executeBatch();\n\t\t\t}\n\t\t}\n\t}","commit_id":"cd666b7772683e57d503564e8e5d1bc1b5d6ae42","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void upgradeRatingsStats() throws Exception {\n\t\tString selectSQL =\n\t\t\t\"select classNameId, classPK, count(1) as totalEntries, \" +\n\t\t\t\t\"sum(RatingsEntry.score) as totalScore, \" +\n\t\t\t\t\t\"sum(RatingsEntry.score) / count(1) as averageScore \" +\n\t\t\t\t\t\t\"from RatingsEntry group by classNameId, classPK\";\n\t\tString updateSQL =\n\t\t\t\"update RatingsStats set totalEntries = ?, totalScore = ?, \" +\n\t\t\t\t\"averageScore = ? where classNameId = ? and classPK = ?\";\n\n\t\ttry (Connection con = DataAccess.getUpgradeOptimizedConnection();\n\t\t\tPreparedStatement ps = con.prepareStatement(selectSQL);\n\t\t\tResultSet rs = ps.executeQuery()) {\n\n\t\t\tDatabaseMetaData databaseMetaData = con.getMetaData();\n\n\t\t\tboolean supportsBatchUpdates =\n\t\t\t\tdatabaseMetaData.supportsBatchUpdates();\n\n\t\t\ttry (PreparedStatement ps2 = con.prepareStatement(updateSQL)) {\n\t\t\t\tint count = 0;\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tps2.setInt(1, rs.getInt(\"totalEntries\"));\n\t\t\t\t\tps2.setDouble(2, rs.getDouble(\"totalScore\"));\n\t\t\t\t\tps2.setDouble(3, rs.getDouble(\"averageScore\"));\n\t\t\t\t\tps2.setLong(4, rs.getLong(\"classNameId\"));\n\t\t\t\t\tps2.setLong(5, rs.getLong(\"classPK\"));\n\n\t\t\t\t\tif (supportsBatchUpdates) {\n\t\t\t\t\t\tps2.addBatch();\n\n\t\t\t\t\t\tif (count == PropsValues.HIBERNATE_JDBC_BATCH_SIZE) {\n\t\t\t\t\t\t\tps2.executeBatch();\n\n\t\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tps2.executeUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (supportsBatchUpdates && (count > 0)) {\n\t\t\t\t\tps2.executeBatch();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":20577,"modified_method":"protected void upgradeRatingsStats() throws Exception {\n\t\tString selectSQL =\n\t\t\t\"select classNameId, classPK, count(1) as totalEntries, \" +\n\t\t\t\t\"sum(RatingsEntry.score) as totalScore, \" +\n\t\t\t\t\t\"sum(RatingsEntry.score) / count(1) as averageScore \" +\n\t\t\t\t\t\t\"from RatingsEntry group by classNameId, classPK\";\n\t\tString updateSQL =\n\t\t\t\"update RatingsStats set totalEntries = ?, totalScore = ?, \" +\n\t\t\t\t\"averageScore = ? where classNameId = ? and classPK = ?\";\n\n\t\ttry (Connection con = DataAccess.getUpgradeOptimizedConnection();\n\t\t\tPreparedStatement ps = con.prepareStatement(selectSQL);\n\t\t\tResultSet rs = ps.executeQuery()) {\n\n\t\t\ttry (PreparedStatement ps2 =\n\t\t\t\t\tAutoBatchPreparedStatementUtil.autoBath(\n\t\t\t\t\t\tcon.prepareStatement(updateSQL))) {\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tps2.setInt(1, rs.getInt(\"totalEntries\"));\n\t\t\t\t\tps2.setDouble(2, rs.getDouble(\"totalScore\"));\n\t\t\t\t\tps2.setDouble(3, rs.getDouble(\"averageScore\"));\n\t\t\t\t\tps2.setLong(4, rs.getLong(\"classNameId\"));\n\t\t\t\t\tps2.setLong(5, rs.getLong(\"classPK\"));\n\n\t\t\t\t\tps2.addBatch();\n\t\t\t\t}\n\n\t\t\t\tps2.executeBatch();\n\t\t\t}\n\t\t}\n\t}","commit_id":"dfa1fade4cd0d2243506d62e81854ec88531e362","url":"https://github.com/liferay/liferay-portal"},{"original_method":"protected void deleteConflictingIGPermissions(\n\t\t\tString igResourceName, String dlResourceName)\n\t\tthrows Exception {\n\n\t\tString selectSQL =\n\t\t\t\"select companyId, scope, primKey, roleId from \" +\n\t\t\t\t\"ResourcePermission where name = ?\";\n\t\tString deleteSQL =\n\t\t\t\"delete from ResourcePermission where name = ? and companyId = ? \" +\n\t\t\t\t\"and scope = ? and primKey = ? and roleId = ?\";\n\n\t\ttry (Connection con = DataAccess.getUpgradeOptimizedConnection();\n\t\t\tPreparedStatement ps = con.prepareStatement(selectSQL);\n\t\t\tResultSet rs = ps.executeQuery()) {\n\n\t\t\tDatabaseMetaData databaseMetaData = con.getMetaData();\n\n\t\t\tboolean supportsBatchUpdates =\n\t\t\t\tdatabaseMetaData.supportsBatchUpdates();\n\n\t\t\tps.setString(1, igResourceName);\n\n\t\t\ttry (PreparedStatement ps2 = con.prepareStatement(deleteSQL)) {\n\t\t\t\tint count = 0;\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tps2.setString(1, dlResourceName);\n\t\t\t\t\tps2.setLong(2, rs.getLong(\"companyId\"));\n\t\t\t\t\tps2.setInt(3, rs.getInt(\"scope\"));\n\t\t\t\t\tps2.setString(4, rs.getString(\"primKey\"));\n\t\t\t\t\tps2.setLong(5, rs.getLong(\"roleId\"));\n\n\t\t\t\t\tif (supportsBatchUpdates) {\n\t\t\t\t\t\tps2.addBatch();\n\n\t\t\t\t\t\tif (count == PropsValues.HIBERNATE_JDBC_BATCH_SIZE) {\n\t\t\t\t\t\t\tps2.executeBatch();\n\n\t\t\t\t\t\t\tcount = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tcount++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tps2.executeUpdate();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (supportsBatchUpdates && (count > 0)) {\n\t\t\t\t\tps2.executeBatch();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}","id":20578,"modified_method":"protected void deleteConflictingIGPermissions(\n\t\t\tString igResourceName, String dlResourceName)\n\t\tthrows Exception {\n\n\t\tString selectSQL =\n\t\t\t\"select companyId, scope, primKey, roleId from \" +\n\t\t\t\t\"ResourcePermission where name = ?\";\n\t\tString deleteSQL =\n\t\t\t\"delete from ResourcePermission where name = ? and companyId = ? \" +\n\t\t\t\t\"and scope = ? and primKey = ? and roleId = ?\";\n\n\t\ttry (Connection con = DataAccess.getUpgradeOptimizedConnection();\n\t\t\tPreparedStatement ps = con.prepareStatement(selectSQL);\n\t\t\tResultSet rs = ps.executeQuery()) {\n\n\t\t\tps.setString(1, igResourceName);\n\n\t\t\ttry (PreparedStatement ps2 =\n\t\t\t\t\tAutoBatchPreparedStatementUtil.autoBath(\n\t\t\t\t\t\tcon.prepareStatement(deleteSQL))) {\n\n\t\t\t\twhile (rs.next()) {\n\t\t\t\t\tps2.setString(1, dlResourceName);\n\t\t\t\t\tps2.setLong(2, rs.getLong(\"companyId\"));\n\t\t\t\t\tps2.setInt(3, rs.getInt(\"scope\"));\n\t\t\t\t\tps2.setString(4, rs.getString(\"primKey\"));\n\t\t\t\t\tps2.setLong(5, rs.getLong(\"roleId\"));\n\n\t\t\t\t\tps2.addBatch();\n\t\t\t\t}\n\n\t\t\t\tps2.executeBatch();\n\t\t\t}\n\t\t}\n\t}","commit_id":"604f4f84e2e71c2a1753c509a14ccfc920764e62","url":"https://github.com/liferay/liferay-portal"},{"original_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(functionalTestHelper.managementUri() + \"properties/neo4j-servers\").get(ClientResponse.class);\n        assertEquals(200, response.getStatus());\n    }","id":20579,"modified_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(\n                functionalTestHelper.managementUri() + \"properties/neo4j-servers\" ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        assertEquals(200, response.getStatus());\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config\n    )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n    }","id":20580,"modified_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config,\n                                   @Context OutputFormat output )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n        this.output = output;\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertIsValidJson( response.getEntity().toString() );\n        assertThat( (String) response.getEntity(), containsString( managementUri ) );\n        assertThat( (String) response.getEntity(), containsString( dataUri ) );\n    }","id":20581,"modified_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n        assertIsValidJson( entity );\n        assertThat( entity, containsString( managementUri ) );\n        assertThat( entity, containsString( dataUri ) );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20582,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( (String) response.getEntity(), containsString( unterminatedManagementUri + \"/\" ) );\n    }","id":20583,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty()\n            throws URISyntaxException, UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n\n        assertThat( entity, containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( entity, containsString( unterminatedManagementUri + \"/\" ) );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20584,"modified_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( (String) response.getEntity(), containsString( \"undefined\" ) );\n    }","id":20585,"modified_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( \"undefined\" ) );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( (String) response.getEntity(), containsString( \"bar\" ) );\n    }","id":20586,"modified_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ), containsString( \"bar\" ) );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource(url).get(ClientResponse.class);\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","id":20587,"modified_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource( url ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output, @Context InputFormat input )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","id":20588,"modified_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output, null );\n    }","id":20589,"modified_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void canFetchData() throws URISyntaxException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        assertEquals(resp.getEntity().toString(), 200, resp.getStatus());\n        assertThat((String)resp.getEntity(), containsString(\"timestamps\"));\n        assertThat((String)resp.getEntity(), containsString(\"end_time\"));\n        assertThat((String)resp.getEntity(), containsString(\"property_count\"));\n    }","id":20590,"modified_method":"@Test\n    public void canFetchData() throws URISyntaxException, UnsupportedEncodingException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        String entity = new String( (byte[]) resp.getEntity(), \"UTF-8\" );\n\n        assertEquals( entity, 200, resp.getStatus() );\n        assertThat( entity, containsString( \"timestamps\" ) );\n        assertThat( entity, containsString( \"end_time\" ) );\n        assertThat( entity, containsString( \"property_count\" ) );\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","id":20591,"modified_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        this.rrdData = rrdData;\n    }","id":20592,"modified_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        super( \"rrd-data\" );\n        this.rrdData = rrdData;\n    }","commit_id":"7adc43defc811965fc9aff9cda79a854b91e6263","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(functionalTestHelper.managementUri() + \"properties/neo4j-servers\").get(ClientResponse.class);\n        assertEquals(200, response.getStatus());\n    }","id":20593,"modified_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(\n                functionalTestHelper.managementUri() + \"properties/neo4j-servers\" ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        assertEquals(200, response.getStatus());\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config\n    )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n    }","id":20594,"modified_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config,\n                                   @Context OutputFormat output )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n        this.output = output;\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertIsValidJson( response.getEntity().toString() );\n        assertThat( (String) response.getEntity(), containsString( managementUri ) );\n        assertThat( (String) response.getEntity(), containsString( dataUri ) );\n    }","id":20595,"modified_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n        assertIsValidJson( entity );\n        assertThat( entity, containsString( managementUri ) );\n        assertThat( entity, containsString( dataUri ) );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20596,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( (String) response.getEntity(), containsString( \"undefined\" ) );\n    }","id":20597,"modified_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( \"undefined\" ) );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20598,"modified_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( (String) response.getEntity(), containsString( unterminatedManagementUri + \"/\" ) );\n    }","id":20599,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty()\n            throws URISyntaxException, UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n\n        assertThat( entity, containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( entity, containsString( unterminatedManagementUri + \"/\" ) );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( (String) response.getEntity(), containsString( \"bar\" ) );\n    }","id":20600,"modified_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ), containsString( \"bar\" ) );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource(url).get(ClientResponse.class);\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","id":20601,"modified_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource( url ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output, @Context InputFormat input )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","id":20602,"modified_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void canFetchData() throws URISyntaxException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        assertEquals(resp.getEntity().toString(), 200, resp.getStatus());\n        assertThat((String)resp.getEntity(), containsString(\"timestamps\"));\n        assertThat((String)resp.getEntity(), containsString(\"end_time\"));\n        assertThat((String)resp.getEntity(), containsString(\"property_count\"));\n    }","id":20603,"modified_method":"@Test\n    public void canFetchData() throws URISyntaxException, UnsupportedEncodingException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        String entity = new String( (byte[]) resp.getEntity(), \"UTF-8\" );\n\n        assertEquals( entity, 200, resp.getStatus() );\n        assertThat( entity, containsString( \"timestamps\" ) );\n        assertThat( entity, containsString( \"end_time\" ) );\n        assertThat( entity, containsString( \"property_count\" ) );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output, null );\n    }","id":20604,"modified_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output );\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","id":20605,"modified_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        this.rrdData = rrdData;\n    }","id":20606,"modified_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        super( \"rrd-data\" );\n        this.rrdData = rrdData;\n    }","commit_id":"516b5bf5c0ca6e09a8c9df4a7f857f0af642df0c","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(functionalTestHelper.managementUri() + \"properties/neo4j-servers\").get(ClientResponse.class);\n        assertEquals(200, response.getStatus());\n    }","id":20607,"modified_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(\n                functionalTestHelper.managementUri() + \"properties/neo4j-servers\" ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        assertEquals(200, response.getStatus());\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config\n    )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n    }","id":20608,"modified_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config,\n                                   @Context OutputFormat output )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n        this.output = output;\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20609,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertIsValidJson( response.getEntity().toString() );\n        assertThat( (String) response.getEntity(), containsString( managementUri ) );\n        assertThat( (String) response.getEntity(), containsString( dataUri ) );\n    }","id":20610,"modified_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n        assertIsValidJson( entity );\n        assertThat( entity, containsString( managementUri ) );\n        assertThat( entity, containsString( dataUri ) );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( (String) response.getEntity(), containsString( \"undefined\" ) );\n    }","id":20611,"modified_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( \"undefined\" ) );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20612,"modified_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( (String) response.getEntity(), containsString( \"bar\" ) );\n    }","id":20613,"modified_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ), containsString( \"bar\" ) );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( (String) response.getEntity(), containsString( unterminatedManagementUri + \"/\" ) );\n    }","id":20614,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty()\n            throws URISyntaxException, UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n\n        assertThat( entity, containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( entity, containsString( unterminatedManagementUri + \"/\" ) );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource(url).get(ClientResponse.class);\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","id":20615,"modified_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource( url ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output, @Context InputFormat input )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","id":20616,"modified_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void canFetchData() throws URISyntaxException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        assertEquals(resp.getEntity().toString(), 200, resp.getStatus());\n        assertThat((String)resp.getEntity(), containsString(\"timestamps\"));\n        assertThat((String)resp.getEntity(), containsString(\"end_time\"));\n        assertThat((String)resp.getEntity(), containsString(\"property_count\"));\n    }","id":20617,"modified_method":"@Test\n    public void canFetchData() throws URISyntaxException, UnsupportedEncodingException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        String entity = new String( (byte[]) resp.getEntity(), \"UTF-8\" );\n\n        assertEquals( entity, 200, resp.getStatus() );\n        assertThat( entity, containsString( \"timestamps\" ) );\n        assertThat( entity, containsString( \"end_time\" ) );\n        assertThat( entity, containsString( \"property_count\" ) );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output, null );\n    }","id":20618,"modified_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output );\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","id":20619,"modified_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        this.rrdData = rrdData;\n    }","id":20620,"modified_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        super( \"rrd-data\" );\n        this.rrdData = rrdData;\n    }","commit_id":"cc09ff2c6086b7989294a825bcbf44d3b7a01db9","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(functionalTestHelper.managementUri() + \"properties/neo4j-servers\").get(ClientResponse.class);\n        assertEquals(200, response.getStatus());\n    }","id":20621,"modified_method":"@Test\n    public void shouldRespondWithIndexes() throws Exception {\n        ClientResponse response = Client.create().resource(\n                functionalTestHelper.managementUri() + \"properties/neo4j-servers\" ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        assertEquals(200, response.getStatus());\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config\n    )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n    }","id":20622,"modified_method":"public AdminPropertiesService( @Context UriInfo uriInfo,\n                                   @Context Configuration config,\n                                   @Context OutputFormat output )\n    {\n        this.uriInfo = uriInfo;\n        this.config = config;\n        this.output = output;\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20623,"modified_method":"@Test\n    public void shouldAppendSlashToManagementUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"management.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertIsValidJson( response.getEntity().toString() );\n        assertThat( (String) response.getEntity(), containsString( managementUri ) );\n        assertThat( (String) response.getEntity(), containsString( dataUri ) );\n    }","id":20624,"modified_method":"@Test\n    public void shouldSupportLegacyWebAdminUris() throws URISyntaxException, JsonParseException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String managementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", managementUri );\n        String dataUri = \"http://jimsucks.com/data\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", dataUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/foo/bar?awesome=true\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n        assertIsValidJson( entity );\n        assertThat( entity, containsString( managementUri ) );\n        assertThat( entity, containsString( dataUri ) );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( (String) response.getEntity(), containsString( \"undefined\" ) );\n    }","id":20625,"modified_method":"@Test\n    public void shouldYieldUndefinedForUnknownProperties() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( \"undefined\" ) );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedUri + \"/\" ) );\n    }","id":20626,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissing() throws URISyntaxException,\n            UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"data.uri\" );\n\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ),\n                containsString( unterminatedUri + \"/\" ) );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( (String) response.getEntity(), containsString( \"bar\" ) );\n    }","id":20627,"modified_method":"@Test\n    public void simpleQueryShouldReturn200AndTheExpectedValue() throws Exception\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        config.setProperty( \"org.neo4j.server.webadmin.foo\", \"bar\" );\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"foo\" );\n        assertThat( response.getStatus(), is( 200 ) );\n        assertThat( new String( (byte[]) response.getEntity(), \"UTF-8\" ), containsString( \"bar\" ) );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty() throws URISyntaxException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        when( mockUri.getBaseUri() ).thenReturn( new URI( \"http://peteriscool.com:6666/\" ) );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri, config );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n\n        assertThat( (String) response.getEntity(), containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( (String) response.getEntity(), containsString( unterminatedManagementUri + \"/\" ) );\n    }","id":20628,"modified_method":"@Test\n    public void shouldAppendSlashToDataUriIfMissingWithinNeo4jServerProperty()\n            throws URISyntaxException, UnsupportedEncodingException\n    {\n        PropertiesConfiguration config = new PropertiesConfiguration();\n        String unterminatedDataUri = \"http://foo:22/get/yer/data/here\";\n        config.setProperty( \"org.neo4j.server.webadmin.data.uri\", unterminatedDataUri );\n        String unterminatedManagementUri = \"http://neo-is-awesome.se/manage\";\n        config.setProperty( \"org.neo4j.server.webadmin.management.uri\", unterminatedManagementUri );\n\n        UriInfo mockUri = mock( UriInfo.class );\n        URI baseUri = new URI( \"http://peteriscool.com:6666/\" );\n        when( mockUri.getBaseUri() ).thenReturn( baseUri );\n\n        AdminPropertiesService adminPropertiesService = new AdminPropertiesService( mockUri,\n                config, new OutputFormat( new JsonFormat(), baseUri, null ) );\n\n        Response response = adminPropertiesService.getValue( \"neo4j-servers\" );\n        String entity = new String( (byte[]) response.getEntity(), \"UTF-8\" );\n\n        assertThat( entity, containsString( unterminatedDataUri + \"/\" ) );\n        assertThat( entity, containsString( unterminatedManagementUri + \"/\" ) );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource(url).get(ClientResponse.class);\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","id":20629,"modified_method":"@Test\n    public void shouldRespondWithTheWebAdminClientSettings() throws Exception {\n        String url = functionalTestHelper.mangementUri() + \"properties/neo4j-servers\";\n\n        ClientResponse response = Client.create().resource( url ).accept(\n                MediaType.APPLICATION_JSON_TYPE ).get( ClientResponse.class );\n        String json = response.getEntity(String.class);\n\n        assertEquals(200, response.getStatus());\n        assertThat(json, containsString(\"\\\"url\\\" : \\\"\" + server.baseUri() + \"db/data/\\\"\"));\n        assertThat(json, containsString(\"\\\"manageUrl\\\" : \\\"\" + server.baseUri() + \"db/manage/\\\"\"));\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output, @Context InputFormat input )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","id":20630,"modified_method":"public MonitorService( @Context RrdDb rrdDb, @Context OutputFormat output )\n    {\n        this.rrdDb = rrdDb;\n        this.output = output;\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output, null );\n    }","id":20631,"modified_method":"@Before\n    public void setUp() throws Exception\n    {\n        database = new ImpermanentGraphDatabase();\n        RrdDb rrdDb = RrdFactory.createRrdDbAndSampler( database, this );\n\n        output = new EntityOutputFormat( new JsonFormat(),\n                URI.create( \"http://peteriscool.com:6666/\" ), null );\n        monitorService = new MonitorService( rrdDb, output );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"@Test\n    public void canFetchData() throws URISyntaxException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        assertEquals(resp.getEntity().toString(), 200, resp.getStatus());\n        assertThat((String)resp.getEntity(), containsString(\"timestamps\"));\n        assertThat((String)resp.getEntity(), containsString(\"end_time\"));\n        assertThat((String)resp.getEntity(), containsString(\"property_count\"));\n    }","id":20632,"modified_method":"@Test\n    public void canFetchData() throws URISyntaxException, UnsupportedEncodingException\n    {\n        UriInfo mockUri = mock(UriInfo.class);\n        URI uri = new URI(\"http://peteriscool.com:6666/\");\n        when(mockUri.getBaseUri()).thenReturn(uri);\n        Response resp = monitorService.getData();\n\n        String entity = new String( (byte[]) resp.getEntity(), \"UTF-8\" );\n\n        assertEquals( entity, 200, resp.getStatus() );\n        assertThat( entity, containsString( \"timestamps\" ) );\n        assertThat( entity, containsString( \"end_time\" ) );\n        assertThat( entity, containsString( \"property_count\" ) );\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","id":20633,"modified_method":"private AdvertisableService[] services()\n    {\n        AdvertisableService console = new ConsoleService( (SessionFactory)null, null, null );\n        AdvertisableService jmx = new JmxService( null, null );\n        MonitorService monitor = new MonitorService( null, null );\n\n        return new AdvertisableService[]{console, jmx, monitor};\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        this.rrdData = rrdData;\n    }","id":20634,"modified_method":"public RrdDataRepresentation( FetchData rrdData )\n    {\n        super( \"rrd-data\" );\n        this.rrdData = rrdData;\n    }","commit_id":"ee38276bb1d9a3975e5d12829cd138ec9690fc27","url":"https://github.com/neo4j/neo4j"},{"original_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid,request.isUserInRole(Authentication.ADMIN_ROLE));\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","id":20635,"modified_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid);\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors) throws ServletException, IOException, Exception {\n\n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit\");\n\n        AdminStorageCommClass bean = (AdminStorageCommClass) command;\n                       \n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit delete bucket[\"+ bean.getBucket() + \"]\");\n        if (request.isUserInRole(Authentication.ADMIN_ROLE)) {\n\n        boolean done = m_inventoryService.deleteBucket(bean.getBucket());\n        if (!done){\n            log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit error while deleting status for: \"+ bean.getBucket());\n        }\n        }\n        String redirectURL = request.getHeader(\"Referer\");\n        response.sendRedirect(redirectURL);\n        return super.onSubmit(request, response, command, errors);\n    }","id":20636,"modified_method":"protected ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors) throws ServletException, IOException, Exception {\n\n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit\");\n\n        AdminStorageCommClass bean = (AdminStorageCommClass) command;\n                       \n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit delete bucket[\"+ bean.getBucket() + \"]\");\n        if (request.isUserInRole(Authentication.ADMIN_ROLE)) {\n\n        boolean done = m_inventoryService.deleteBucket(bean.getBucket());\n        if (!done){\n            log().error(\"AdminStorageDeleteBucketController ModelAndView onSubmit error while deleting status for: \"+ bean.getBucket());\n        }\n        }\n        String redirectURL = request.getHeader(\"Referer\");\n        response.sendRedirect(redirectURL);\n        return super.onSubmit(request, response, command, errors);\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n\n        String bucket = request.getParameter(\"bucket\");\n        String filename = request.getParameter(\"filename\");\n        if (bucket != null && filename != null && request.isUserInRole(Authentication.ADMIN_ROLE)) {\n            boolean done = m_inventoryService.deleteBucketItem(bucket, filename);\n            if (!done){\n                log().debug(\"AdminStorageDeleteBucketItemController ModelAndView onSubmit error while deleting status for: \"+ bucket);\n            }\n     }\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid,request.isUserInRole(Authentication.ADMIN_ROLE));\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","id":20637,"modified_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n\n        String bucket = request.getParameter(\"bucket\");\n        String filename = request.getParameter(\"filename\");\n        if (bucket != null && filename != null && request.isUserInRole(Authentication.ADMIN_ROLE)) {\n            boolean done = m_inventoryService.deleteBucketItem(bucket, filename);\n            if (!done){\n                log().debug(\"AdminStorageDeleteBucketItemController ModelAndView onSubmit error while deleting status for: \"+ bucket);\n            }\n     }\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid);\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeBase(int nodeid) {\n        \n        log().debug(\"getRancidNodeBase start for nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        \n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n        \n        log().debug(\"getRancidNodeBase rancid node name: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", ElementUtil.getNodeStatusString(node.getType().charAt(0)));\n\n        // TODO find a method to get root service for URL\n        nodeModel.put(\"url\", m_cp.getUrl()+m_cp.getDirectory());\n\n        String rancidIntegrationUseOnlyRancidAdaperProperty = Vault.getProperty(\"opennms.rancidIntegrationUseOnlyRancidAdaper\"); \n        log().debug(\"getRancidNodeBase opennms.rancidIntegrationUseOnlyRancidAdaper: \" + rancidIntegrationUseOnlyRancidAdaperProperty);\n        if (rancidIntegrationUseOnlyRancidAdaperProperty != null &&  \"true\".equalsIgnoreCase(rancidIntegrationUseOnlyRancidAdaperProperty.trim())) {\n            log().debug(\"getRancidNodeBase permitModifyClogin: false\");\n            nodeModel.put(\"permitModifyClogin\",false);\n        } else {\n            log().debug(\"getRancidNodeBase permitModifyClogin: true\");\n            nodeModel.put(\"permitModifyClogin\",true);\n        }\n        \n        String foreignSource = node.getForeignSource();\n        if (foreignSource != null ) {\n            nodeModel.put(\"foreignSource\", foreignSource);\n        } else {\n            nodeModel.put(\"foreignSource\", \"\");            \n        }\n\n        return nodeModel;\n    }","id":20638,"modified_method":"public Map<String, Object> getRancidNodeBase(int nodeid) {\n        \n        log().debug(\"getRancidNodeBase start for nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        nodeModel.put(\"RWSStatus\",\"OK\");\n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n        \n        log().debug(\"getRancidNodeBase rancid node name: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", ElementUtil.getNodeStatusString(node.getType().charAt(0)));\n\n        // TODO find a method to get root service for URL\n        nodeModel.put(\"url\", m_cp.getUrl()+m_cp.getDirectory());\n\n        String rancidIntegrationUseOnlyRancidAdaperProperty = Vault.getProperty(\"opennms.rancidIntegrationUseOnlyRancidAdaper\"); \n        log().debug(\"getRancidNodeBase opennms.rancidIntegrationUseOnlyRancidAdaper: \" + rancidIntegrationUseOnlyRancidAdaperProperty);\n        if (rancidIntegrationUseOnlyRancidAdaperProperty != null &&  \"true\".equalsIgnoreCase(rancidIntegrationUseOnlyRancidAdaperProperty.trim())) {\n            log().debug(\"getRancidNodeBase permitModifyClogin: false\");\n            nodeModel.put(\"permitModifyClogin\",false);\n        } else {\n            log().debug(\"getRancidNodeBase permitModifyClogin: true\");\n            nodeModel.put(\"permitModifyClogin\",true);\n        }\n        \n        String foreignSource = node.getForeignSource();\n        if (foreignSource != null ) {\n            nodeModel.put(\"foreignSource\", foreignSource);\n        } else {\n            nodeModel.put(\"foreignSource\", \"\");            \n        }\n\n        return nodeModel;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeWithCLoginForGroup(int nodeid,String group, boolean adminRole) {\n        log().debug(\"getRancidNodeWithCloginFroGroup start: group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n\n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n        \n        \n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n            nodeModel.put(\"status\", rn.getState());\n            nodeModel.put(\"devicetype\", rn.getDeviceType());\n            nodeModel.put(\"comment\", rn.getComment());\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"deviceexist\", true);\n        }\n        catch (RancidApiException e){\n            nodeModel.put(\"deviceexist\", false);\n            log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + group);\n        }\n\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","id":20639,"modified_method":"public Map<String, Object> getRancidNodeWithCLoginForGroup(int nodeid,String group, boolean adminRole) {\n        log().debug(\"getRancidNodeWithCloginFroGroup start: group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n\n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n        \n        \n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n            nodeModel.put(\"status\", rn.getState());\n            nodeModel.put(\"devicetype\", rn.getDeviceType());\n            nodeModel.put(\"comment\", rn.getComment());\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"deviceexist\", true);\n        }\n        catch (RancidApiException e){\n            if (e.getRancidCode() == 2) {\n            nodeModel.put(\"deviceexist\", false);\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + group);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());               \n                return nodeModel;\n            }\n        }\n\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean deleteBucket(String bucket){\n        log().debug(\"InventoryService deleteBucket for bucket [\" + bucket + \"]/ \"); \n        try {\n          RWSClientApi.deleteBucket(m_cp, bucket);\n          log().debug(\"InventoryService ModelAndView deleteBucket changes submitted\");\n        }\n        catch (Exception e){\n            log().debug(\"deleteBucket has given exception on node \"  + bucket + \" \"+ e.getMessage() );\n            return false;\n        }\n        return true;\n    }","id":20640,"modified_method":"public boolean deleteBucket(String bucket){\n        log().debug(\"InventoryService deleteBucket for bucket [\" + bucket + \"]/ \"); \n        try {\n          RWSClientApi.forceDeleteBucket(m_cp, bucket);\n          log().debug(\"InventoryService ModelAndView deleteBucket changes submitted\");\n        }\n        catch (Exception e){\n            log().debug(\"deleteBucket has given exception on node \"  + bucket + \" \"+ e.getMessage() );\n            return false;\n        }\n        return true;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeList(int nodeid, String group) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid + \" group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n            \n        RancidNode rn;\n        try {\n            rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        \n        RWSResourceList versionList;\n        \n        try {\n            versionList = RWSClientApi.getRWSResourceConfigList(m_cp, group, rancidName);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<String> versionListStr= versionList.getResource();\n        \n        Iterator<String> iter1 = versionListStr.iterator();\n        \n        String vs;\n        \n        while (iter1.hasNext()) {\n            vs = iter1.next();\n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n            InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), group, in.getConfigurationUrl());\n            ranlist.add(inwr);\n        }\n        \n        nodeModel.put(\"grouptable\", ranlist);\n\n        return nodeModel;\n        \n    }","id":20641,"modified_method":"public Map<String, Object> getRancidNodeList(int nodeid, String group) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid + \" group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n            \n        RancidNode rn;\n        try {\n            rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n            return nodeModel;\n        }\n\n        \n        RWSResourceList versionList;\n        \n        try {\n            versionList = RWSClientApi.getRWSResourceConfigList(m_cp, group, rancidName);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<String> versionListStr= versionList.getResource();\n        \n        Iterator<String> iter1 = versionListStr.iterator();\n        \n        String vs;\n        \n        while (iter1.hasNext()) {\n            vs = iter1.next();\n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n            InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), group, in.getConfigurationUrl());\n            ranlist.add(inwr);\n        }\n        \n        nodeModel.put(\"grouptable\", ranlist);\n\n        return nodeModel;\n        \n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getInventory(int nodeid,\n                                                String group, String version) {\n        log().debug(\"getInventoryNode start: nodeid: \" + nodeid + \" group: \" + group + \" version: \" + version);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n    \n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(version);\n            \n            nodeModel.put(\"devicename\", rancidName);\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"version\", version);\n            nodeModel.put(\"status\", in.getParent().getState());\n            nodeModel.put(\"creationdate\", in.getCreationDate());\n            nodeModel.put(\"swconfigurationurl\", in.getSoftwareImageUrl());\n            nodeModel.put(\"configurationurl\", in.getConfigurationUrl());\n\n            log().debug(\"getInventoryNode date: \" + in.getCreationDate());\n\n            List<InventoryElement2> ie = RWSClientApi.getRWSRancidNodeInventoryElement2(m_cp, rn, version);\n            \n            \n            Iterator<InventoryElement2> iter1 = ie.iterator();\n                                       \n            while (iter1.hasNext()) {\n                InventoryElement2 ietmp = iter1.next();\n                \n                log().debug(\"Adding inventory: \" + ietmp.expand());\n            }\n                               \n            nodeModel.put(\"inventory\",ie);\n            \n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n        }\n        return nodeModel;\n    }","id":20642,"modified_method":"public Map<String, Object> getInventory(int nodeid,\n                                                String group, String version) {\n        log().debug(\"getInventoryNode start: nodeid: \" + nodeid + \" group: \" + group + \" version: \" + version);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n    \n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(version);\n            \n            nodeModel.put(\"devicename\", rancidName);\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"version\", version);\n            nodeModel.put(\"status\", in.getParent().getState());\n            nodeModel.put(\"creationdate\", in.getCreationDate());\n            nodeModel.put(\"swconfigurationurl\", in.getSoftwareImageUrl());\n            nodeModel.put(\"configurationurl\", in.getConfigurationUrl());\n\n            log().debug(\"getInventoryNode date: \" + in.getCreationDate());\n\n            List<InventoryElement2> ie = RWSClientApi.getRWSRancidNodeInventoryElement2(m_cp, rn, version);\n            \n            \n            Iterator<InventoryElement2> iter1 = ie.iterator();\n                                       \n            while (iter1.hasNext()) {\n                InventoryElement2 ietmp = iter1.next();\n                \n                log().debug(\"Adding inventory: \" + ietmp.expand());\n            }\n                               \n            nodeModel.put(\"inventory\",ie);\n            \n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNode(int nodeid) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        boolean first = true;\n        while (iter1.hasNext()){\n            String groupname = iter1.next();\n            log().debug(\"getRancidNode: \" + nodeid + \" for group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                } \n                RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                String vs = rn.getHeadRevision();\n                InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                  rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                ranlist.add(rnw); \n                \n            }\n            catch (RancidApiException e){\n                log().debug(\"No device found in router.db for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n\n        \n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {\n            log().debug(\"No bucket found for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName + \" .Cause: \" + e.getLocalizedMessage());\n        }\n        \n        nodeModel.put(\"bucketitems\", bucketlist);        \n\n        return nodeModel;\n    }","id":20643,"modified_method":"public Map<String, Object> getRancidNode(int nodeid) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        boolean first = true;\n        while (iter1.hasNext()){\n            String groupname = iter1.next();\n            log().debug(\"getRancidNode: \" + nodeid + \" for group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                }\n                try {\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                    String vs = rn.getHeadRevision();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                    RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                      rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                    ranlist.add(rnw); \n                } catch (RancidApiException e) {\n                    log().debug(\"No configuration found for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());                    \n                }\n            } catch (RancidApiException e){\n                if (e.getRancidCode() == 2) {\n                    log().debug(\"No device found in router.db for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());\n                }\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n\n        \n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {            \n            if (e.getRancidCode() == 2) {\n                log().debug(\"No entry in storage for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }\n        \n        nodeModel.put(\"bucketitems\", bucketlist);        \n\n        return nodeModel;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getBuckets(int nodeid,boolean isAdmin) {\n        log().debug(\"getBuckets start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        if (isAdmin) {\n            try {\n                RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n                bucketlist.addAll(bucket.getBucketItem());\n            } catch (RancidApiException e) {\n                log().debug(\"No bucket found for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName + \" .Cause: \" + e.getLocalizedMessage());\n            }\n            \n            nodeModel.put(\"bucketitems\", bucketlist);        \n        }\n        return nodeModel;        \n    }","id":20644,"modified_method":"public Map<String, Object> getBuckets(int nodeid) {\n        log().debug(\"getBuckets start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            nodeModel.put(\"bucketexist\", true);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                nodeModel.put(\"bucketexist\", false);\n                log().debug(\"No entry in storage for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }            \n        nodeModel.put(\"bucketitems\", bucketlist);        \n        return nodeModel;        \n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeList(int nodeid) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n                       \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n        \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter2 = grouplist.iterator();\n        \n        boolean first = true;\n        String groupname;\n        while (iter2.hasNext()) {\n            groupname = iter2.next();\n        \n            RancidNode rn;\n            try {\n                rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, groupname, rancidName);\n                if (first){\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    first = false;\n                }\n                RWSResourceList versionList = RWSClientApi.getRWSResourceConfigList(m_cp, groupname, rancidName);\n                \n                List<String> versionListStr= versionList.getResource();\n                \n                Iterator<String> iter1 = versionListStr.iterator();\n                \n                String vs;\n                \n                while (iter1.hasNext()) {\n                    vs = iter1.next();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n                    InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), groupname, in.getConfigurationUrl());\n                    ranlist.add(inwr);\n                }\n            } catch (RancidApiException e) {\n                log().error(e.getLocalizedMessage());\n            }\n        }\n            \n        nodeModel.put(\"grouptable\", ranlist);\n            \n            \n        return nodeModel;\n        \n    }","id":20645,"modified_method":"public Map<String, Object> getRancidNodeList(int nodeid) {\n        log().debug(\"getRancidNodelist start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n                       \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n        \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter2 = grouplist.iterator();\n        \n        boolean first = true;\n        String groupname;\n        while (iter2.hasNext()) {\n            groupname = iter2.next();\n        \n            RancidNode rn;\n            try {\n                rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, groupname, rancidName);\n                if (first){\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    first = false;\n                }\n                RWSResourceList versionList = RWSClientApi.getRWSResourceConfigList(m_cp, groupname, rancidName);\n                \n                List<String> versionListStr= versionList.getResource();\n                \n                Iterator<String> iter1 = versionListStr.iterator();\n                \n                String vs;\n                \n                while (iter1.hasNext()) {\n                    vs = iter1.next();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n                    InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), groupname, in.getConfigurationUrl());\n                    ranlist.add(inwr);\n                }\n            } catch (RancidApiException e) {\n                if (e.getRancidCode() == 2) {\n                    log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());\n                }\n            }\n        }\n            \n        nodeModel.put(\"grouptable\", ranlist);\n            \n            \n        return nodeModel;\n        \n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeWithCLogin(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNodeWithClogin start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n        Iterator<String> iter1 = grouplist.iterator();        \n      \n        String groupname;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNodeWithClogin \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                nodeModel.put(\"devicename\", rn.getDeviceName());\n                nodeModel.put(\"status\", rn.getState());\n                nodeModel.put(\"devicetype\", rn.getDeviceType());\n                nodeModel.put(\"comment\", rn.getComment());\n                nodeModel.put(\"groupname\", groupname);\n                nodeModel.put(\"deviceexist\", true);\n            }\n            catch (RancidApiException e){\n                nodeModel.put(\"deviceexist\", false);\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n            }\n        }\n                   \n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n\n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","id":20646,"modified_method":"public Map<String, Object> getRancidNodeWithCLogin(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNodeWithClogin start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n        Iterator<String> iter1 = grouplist.iterator();        \n      \n        String groupname;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNodeWithClogin \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                nodeModel.put(\"devicename\", rn.getDeviceName());\n                nodeModel.put(\"status\", rn.getState());\n                nodeModel.put(\"devicetype\", rn.getDeviceType());\n                nodeModel.put(\"comment\", rn.getComment());\n                nodeModel.put(\"groupname\", groupname);\n                nodeModel.put(\"deviceexist\", true);\n            } catch (RancidApiException e){\n                if (e.getRancidCode() == 2) {\n                    nodeModel.put(\"deviceexist\", false);\n                    log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());               \n                    return nodeModel;\n                }\n            }\n        }\n                   \n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n\n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"defcefd635c59630dd84141da5ba1d44b6dcacc8","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid,request.isUserInRole(Authentication.ADMIN_ROLE));\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","id":20647,"modified_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid);\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors) throws ServletException, IOException, Exception {\n\n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit\");\n\n        AdminStorageCommClass bean = (AdminStorageCommClass) command;\n                       \n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit delete bucket[\"+ bean.getBucket() + \"]\");\n        if (request.isUserInRole(Authentication.ADMIN_ROLE)) {\n\n        boolean done = m_inventoryService.deleteBucket(bean.getBucket());\n        if (!done){\n            log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit error while deleting status for: \"+ bean.getBucket());\n        }\n        }\n        String redirectURL = request.getHeader(\"Referer\");\n        response.sendRedirect(redirectURL);\n        return super.onSubmit(request, response, command, errors);\n    }","id":20648,"modified_method":"protected ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors) throws ServletException, IOException, Exception {\n\n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit\");\n\n        AdminStorageCommClass bean = (AdminStorageCommClass) command;\n                       \n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit delete bucket[\"+ bean.getBucket() + \"]\");\n        if (request.isUserInRole(Authentication.ADMIN_ROLE)) {\n\n        boolean done = m_inventoryService.deleteBucket(bean.getBucket());\n        if (!done){\n            log().error(\"AdminStorageDeleteBucketController ModelAndView onSubmit error while deleting status for: \"+ bean.getBucket());\n        }\n        }\n        String redirectURL = request.getHeader(\"Referer\");\n        response.sendRedirect(redirectURL);\n        return super.onSubmit(request, response, command, errors);\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n\n        String bucket = request.getParameter(\"bucket\");\n        String filename = request.getParameter(\"filename\");\n        if (bucket != null && filename != null && request.isUserInRole(Authentication.ADMIN_ROLE)) {\n            boolean done = m_inventoryService.deleteBucketItem(bucket, filename);\n            if (!done){\n                log().debug(\"AdminStorageDeleteBucketItemController ModelAndView onSubmit error while deleting status for: \"+ bucket);\n            }\n     }\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid,request.isUserInRole(Authentication.ADMIN_ROLE));\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","id":20649,"modified_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n\n        String bucket = request.getParameter(\"bucket\");\n        String filename = request.getParameter(\"filename\");\n        if (bucket != null && filename != null && request.isUserInRole(Authentication.ADMIN_ROLE)) {\n            boolean done = m_inventoryService.deleteBucketItem(bucket, filename);\n            if (!done){\n                log().debug(\"AdminStorageDeleteBucketItemController ModelAndView onSubmit error while deleting status for: \"+ bucket);\n            }\n     }\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid);\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean deleteBucket(String bucket){\n        log().debug(\"InventoryService deleteBucket for bucket [\" + bucket + \"]/ \"); \n        try {\n          RWSClientApi.deleteBucket(m_cp, bucket);\n          log().debug(\"InventoryService ModelAndView deleteBucket changes submitted\");\n        }\n        catch (Exception e){\n            log().debug(\"deleteBucket has given exception on node \"  + bucket + \" \"+ e.getMessage() );\n            return false;\n        }\n        return true;\n    }","id":20650,"modified_method":"public boolean deleteBucket(String bucket){\n        log().debug(\"InventoryService deleteBucket for bucket [\" + bucket + \"]/ \"); \n        try {\n          RWSClientApi.forceDeleteBucket(m_cp, bucket);\n          log().debug(\"InventoryService ModelAndView deleteBucket changes submitted\");\n        }\n        catch (Exception e){\n            log().debug(\"deleteBucket has given exception on node \"  + bucket + \" \"+ e.getMessage() );\n            return false;\n        }\n        return true;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getBuckets(int nodeid,boolean isAdmin) {\n        log().debug(\"getBuckets start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        if (isAdmin) {\n            try {\n                RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n                bucketlist.addAll(bucket.getBucketItem());\n            } catch (RancidApiException e) {\n                log().debug(\"No bucket found for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName + \" .Cause: \" + e.getLocalizedMessage());\n            }\n            \n            nodeModel.put(\"bucketitems\", bucketlist);        \n        }\n        return nodeModel;        \n    }","id":20651,"modified_method":"public Map<String, Object> getBuckets(int nodeid) {\n        log().debug(\"getBuckets start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            nodeModel.put(\"bucketexist\", true);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                nodeModel.put(\"bucketexist\", false);\n                log().debug(\"No entry in storage for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }            \n        nodeModel.put(\"bucketitems\", bucketlist);        \n        return nodeModel;        \n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getInventory(int nodeid,\n                                                String group, String version) {\n        log().debug(\"getInventoryNode start: nodeid: \" + nodeid + \" group: \" + group + \" version: \" + version);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n    \n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(version);\n            \n            nodeModel.put(\"devicename\", rancidName);\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"version\", version);\n            nodeModel.put(\"status\", in.getParent().getState());\n            nodeModel.put(\"creationdate\", in.getCreationDate());\n            nodeModel.put(\"swconfigurationurl\", in.getSoftwareImageUrl());\n            nodeModel.put(\"configurationurl\", in.getConfigurationUrl());\n\n            log().debug(\"getInventoryNode date: \" + in.getCreationDate());\n\n            List<InventoryElement2> ie = RWSClientApi.getRWSRancidNodeInventoryElement2(m_cp, rn, version);\n            \n            \n            Iterator<InventoryElement2> iter1 = ie.iterator();\n                                       \n            while (iter1.hasNext()) {\n                InventoryElement2 ietmp = iter1.next();\n                \n                log().debug(\"Adding inventory: \" + ietmp.expand());\n            }\n                               \n            nodeModel.put(\"inventory\",ie);\n            \n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n        }\n        return nodeModel;\n    }","id":20652,"modified_method":"public Map<String, Object> getInventory(int nodeid,\n                                                String group, String version) {\n        log().debug(\"getInventoryNode start: nodeid: \" + nodeid + \" group: \" + group + \" version: \" + version);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n    \n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(version);\n            \n            nodeModel.put(\"devicename\", rancidName);\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"version\", version);\n            nodeModel.put(\"status\", in.getParent().getState());\n            nodeModel.put(\"creationdate\", in.getCreationDate());\n            nodeModel.put(\"swconfigurationurl\", in.getSoftwareImageUrl());\n            nodeModel.put(\"configurationurl\", in.getConfigurationUrl());\n\n            log().debug(\"getInventoryNode date: \" + in.getCreationDate());\n\n            List<InventoryElement2> ie = RWSClientApi.getRWSRancidNodeInventoryElement2(m_cp, rn, version);\n            \n            \n            Iterator<InventoryElement2> iter1 = ie.iterator();\n                                       \n            while (iter1.hasNext()) {\n                InventoryElement2 ietmp = iter1.next();\n                \n                log().debug(\"Adding inventory: \" + ietmp.expand());\n            }\n                               \n            nodeModel.put(\"inventory\",ie);\n            \n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeWithCLoginForGroup(int nodeid,String group, boolean adminRole) {\n        log().debug(\"getRancidNodeWithCloginFroGroup start: group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n\n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n        \n        \n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n            nodeModel.put(\"status\", rn.getState());\n            nodeModel.put(\"devicetype\", rn.getDeviceType());\n            nodeModel.put(\"comment\", rn.getComment());\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"deviceexist\", true);\n        }\n        catch (RancidApiException e){\n            nodeModel.put(\"deviceexist\", false);\n            log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + group);\n        }\n\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","id":20653,"modified_method":"public Map<String, Object> getRancidNodeWithCLoginForGroup(int nodeid,String group, boolean adminRole) {\n        log().debug(\"getRancidNodeWithCloginFroGroup start: group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n\n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n        \n        \n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n            nodeModel.put(\"status\", rn.getState());\n            nodeModel.put(\"devicetype\", rn.getDeviceType());\n            nodeModel.put(\"comment\", rn.getComment());\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"deviceexist\", true);\n        }\n        catch (RancidApiException e){\n            if (e.getRancidCode() == 2) {\n            nodeModel.put(\"deviceexist\", false);\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + group);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());               \n                return nodeModel;\n            }\n        }\n\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNode(int nodeid) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        boolean first = true;\n        while (iter1.hasNext()){\n            String groupname = iter1.next();\n            log().debug(\"getRancidNode: \" + nodeid + \" for group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                } \n                RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                String vs = rn.getHeadRevision();\n                InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                  rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                ranlist.add(rnw); \n                \n            }\n            catch (RancidApiException e){\n                log().debug(\"No device found in router.db for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n\n        \n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {\n            log().debug(\"No bucket found for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName + \" .Cause: \" + e.getLocalizedMessage());\n        }\n        \n        nodeModel.put(\"bucketitems\", bucketlist);        \n\n        return nodeModel;\n    }","id":20654,"modified_method":"public Map<String, Object> getRancidNode(int nodeid) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        boolean first = true;\n        while (iter1.hasNext()){\n            String groupname = iter1.next();\n            log().debug(\"getRancidNode: \" + nodeid + \" for group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                }\n                try {\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                    String vs = rn.getHeadRevision();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                    RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                      rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                    ranlist.add(rnw); \n                } catch (RancidApiException e) {\n                    log().debug(\"No configuration found for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());                    \n                }\n            } catch (RancidApiException e){\n                if (e.getRancidCode() == 2) {\n                    log().debug(\"No device found in router.db for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());\n                }\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n\n        \n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {            \n            if (e.getRancidCode() == 2) {\n                log().debug(\"No entry in storage for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }\n        \n        nodeModel.put(\"bucketitems\", bucketlist);        \n\n        return nodeModel;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeList(int nodeid) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n                       \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n        \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter2 = grouplist.iterator();\n        \n        boolean first = true;\n        String groupname;\n        while (iter2.hasNext()) {\n            groupname = iter2.next();\n        \n            RancidNode rn;\n            try {\n                rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, groupname, rancidName);\n                if (first){\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    first = false;\n                }\n                RWSResourceList versionList = RWSClientApi.getRWSResourceConfigList(m_cp, groupname, rancidName);\n                \n                List<String> versionListStr= versionList.getResource();\n                \n                Iterator<String> iter1 = versionListStr.iterator();\n                \n                String vs;\n                \n                while (iter1.hasNext()) {\n                    vs = iter1.next();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n                    InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), groupname, in.getConfigurationUrl());\n                    ranlist.add(inwr);\n                }\n            } catch (RancidApiException e) {\n                log().error(e.getLocalizedMessage());\n            }\n        }\n            \n        nodeModel.put(\"grouptable\", ranlist);\n            \n            \n        return nodeModel;\n        \n    }","id":20655,"modified_method":"public Map<String, Object> getRancidNodeList(int nodeid) {\n        log().debug(\"getRancidNodelist start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n                       \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n        \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter2 = grouplist.iterator();\n        \n        boolean first = true;\n        String groupname;\n        while (iter2.hasNext()) {\n            groupname = iter2.next();\n        \n            RancidNode rn;\n            try {\n                rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, groupname, rancidName);\n                if (first){\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    first = false;\n                }\n                RWSResourceList versionList = RWSClientApi.getRWSResourceConfigList(m_cp, groupname, rancidName);\n                \n                List<String> versionListStr= versionList.getResource();\n                \n                Iterator<String> iter1 = versionListStr.iterator();\n                \n                String vs;\n                \n                while (iter1.hasNext()) {\n                    vs = iter1.next();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n                    InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), groupname, in.getConfigurationUrl());\n                    ranlist.add(inwr);\n                }\n            } catch (RancidApiException e) {\n                if (e.getRancidCode() == 2) {\n                    log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());\n                }\n            }\n        }\n            \n        nodeModel.put(\"grouptable\", ranlist);\n            \n            \n        return nodeModel;\n        \n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeBase(int nodeid) {\n        \n        log().debug(\"getRancidNodeBase start for nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        \n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n        \n        log().debug(\"getRancidNodeBase rancid node name: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", ElementUtil.getNodeStatusString(node.getType().charAt(0)));\n\n        // TODO find a method to get root service for URL\n        nodeModel.put(\"url\", m_cp.getUrl()+m_cp.getDirectory());\n\n        String rancidIntegrationUseOnlyRancidAdaperProperty = Vault.getProperty(\"opennms.rancidIntegrationUseOnlyRancidAdaper\"); \n        log().debug(\"getRancidNodeBase opennms.rancidIntegrationUseOnlyRancidAdaper: \" + rancidIntegrationUseOnlyRancidAdaperProperty);\n        if (rancidIntegrationUseOnlyRancidAdaperProperty != null &&  \"true\".equalsIgnoreCase(rancidIntegrationUseOnlyRancidAdaperProperty.trim())) {\n            log().debug(\"getRancidNodeBase permitModifyClogin: false\");\n            nodeModel.put(\"permitModifyClogin\",false);\n        } else {\n            log().debug(\"getRancidNodeBase permitModifyClogin: true\");\n            nodeModel.put(\"permitModifyClogin\",true);\n        }\n        \n        String foreignSource = node.getForeignSource();\n        if (foreignSource != null ) {\n            nodeModel.put(\"foreignSource\", foreignSource);\n        } else {\n            nodeModel.put(\"foreignSource\", \"\");            \n        }\n\n        return nodeModel;\n    }","id":20656,"modified_method":"public Map<String, Object> getRancidNodeBase(int nodeid) {\n        \n        log().debug(\"getRancidNodeBase start for nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        nodeModel.put(\"RWSStatus\",\"OK\");\n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n        \n        log().debug(\"getRancidNodeBase rancid node name: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", ElementUtil.getNodeStatusString(node.getType().charAt(0)));\n\n        // TODO find a method to get root service for URL\n        nodeModel.put(\"url\", m_cp.getUrl()+m_cp.getDirectory());\n\n        String rancidIntegrationUseOnlyRancidAdaperProperty = Vault.getProperty(\"opennms.rancidIntegrationUseOnlyRancidAdaper\"); \n        log().debug(\"getRancidNodeBase opennms.rancidIntegrationUseOnlyRancidAdaper: \" + rancidIntegrationUseOnlyRancidAdaperProperty);\n        if (rancidIntegrationUseOnlyRancidAdaperProperty != null &&  \"true\".equalsIgnoreCase(rancidIntegrationUseOnlyRancidAdaperProperty.trim())) {\n            log().debug(\"getRancidNodeBase permitModifyClogin: false\");\n            nodeModel.put(\"permitModifyClogin\",false);\n        } else {\n            log().debug(\"getRancidNodeBase permitModifyClogin: true\");\n            nodeModel.put(\"permitModifyClogin\",true);\n        }\n        \n        String foreignSource = node.getForeignSource();\n        if (foreignSource != null ) {\n            nodeModel.put(\"foreignSource\", foreignSource);\n        } else {\n            nodeModel.put(\"foreignSource\", \"\");            \n        }\n\n        return nodeModel;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeList(int nodeid, String group) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid + \" group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n            \n        RancidNode rn;\n        try {\n            rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        \n        RWSResourceList versionList;\n        \n        try {\n            versionList = RWSClientApi.getRWSResourceConfigList(m_cp, group, rancidName);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<String> versionListStr= versionList.getResource();\n        \n        Iterator<String> iter1 = versionListStr.iterator();\n        \n        String vs;\n        \n        while (iter1.hasNext()) {\n            vs = iter1.next();\n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n            InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), group, in.getConfigurationUrl());\n            ranlist.add(inwr);\n        }\n        \n        nodeModel.put(\"grouptable\", ranlist);\n\n        return nodeModel;\n        \n    }","id":20657,"modified_method":"public Map<String, Object> getRancidNodeList(int nodeid, String group) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid + \" group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n            \n        RancidNode rn;\n        try {\n            rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n            return nodeModel;\n        }\n\n        \n        RWSResourceList versionList;\n        \n        try {\n            versionList = RWSClientApi.getRWSResourceConfigList(m_cp, group, rancidName);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<String> versionListStr= versionList.getResource();\n        \n        Iterator<String> iter1 = versionListStr.iterator();\n        \n        String vs;\n        \n        while (iter1.hasNext()) {\n            vs = iter1.next();\n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n            InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), group, in.getConfigurationUrl());\n            ranlist.add(inwr);\n        }\n        \n        nodeModel.put(\"grouptable\", ranlist);\n\n        return nodeModel;\n        \n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeWithCLogin(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNodeWithClogin start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n        Iterator<String> iter1 = grouplist.iterator();        \n      \n        String groupname;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNodeWithClogin \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                nodeModel.put(\"devicename\", rn.getDeviceName());\n                nodeModel.put(\"status\", rn.getState());\n                nodeModel.put(\"devicetype\", rn.getDeviceType());\n                nodeModel.put(\"comment\", rn.getComment());\n                nodeModel.put(\"groupname\", groupname);\n                nodeModel.put(\"deviceexist\", true);\n            }\n            catch (RancidApiException e){\n                nodeModel.put(\"deviceexist\", false);\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n            }\n        }\n                   \n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n\n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","id":20658,"modified_method":"public Map<String, Object> getRancidNodeWithCLogin(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNodeWithClogin start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n        Iterator<String> iter1 = grouplist.iterator();        \n      \n        String groupname;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNodeWithClogin \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                nodeModel.put(\"devicename\", rn.getDeviceName());\n                nodeModel.put(\"status\", rn.getState());\n                nodeModel.put(\"devicetype\", rn.getDeviceType());\n                nodeModel.put(\"comment\", rn.getComment());\n                nodeModel.put(\"groupname\", groupname);\n                nodeModel.put(\"deviceexist\", true);\n            } catch (RancidApiException e){\n                if (e.getRancidCode() == 2) {\n                    nodeModel.put(\"deviceexist\", false);\n                    log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());               \n                    return nodeModel;\n                }\n            }\n        }\n                   \n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n\n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"3de45c4d4c7b04e98548ca65ec87bab5e2ba4ccf","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid,request.isUserInRole(Authentication.ADMIN_ROLE));\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","id":20659,"modified_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid);\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors) throws ServletException, IOException, Exception {\n\n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit\");\n\n        AdminStorageCommClass bean = (AdminStorageCommClass) command;\n                       \n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit delete bucket[\"+ bean.getBucket() + \"]\");\n        if (request.isUserInRole(Authentication.ADMIN_ROLE)) {\n\n        boolean done = m_inventoryService.deleteBucket(bean.getBucket());\n        if (!done){\n            log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit error while deleting status for: \"+ bean.getBucket());\n        }\n        }\n        String redirectURL = request.getHeader(\"Referer\");\n        response.sendRedirect(redirectURL);\n        return super.onSubmit(request, response, command, errors);\n    }","id":20660,"modified_method":"protected ModelAndView onSubmit(HttpServletRequest request, HttpServletResponse response,\n            Object command, BindException errors) throws ServletException, IOException, Exception {\n\n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit\");\n\n        AdminStorageCommClass bean = (AdminStorageCommClass) command;\n                       \n        log().debug(\"AdminStorageDeleteBucketController ModelAndView onSubmit delete bucket[\"+ bean.getBucket() + \"]\");\n        if (request.isUserInRole(Authentication.ADMIN_ROLE)) {\n\n        boolean done = m_inventoryService.deleteBucket(bean.getBucket());\n        if (!done){\n            log().error(\"AdminStorageDeleteBucketController ModelAndView onSubmit error while deleting status for: \"+ bean.getBucket());\n        }\n        }\n        String redirectURL = request.getHeader(\"Referer\");\n        response.sendRedirect(redirectURL);\n        return super.onSubmit(request, response, command, errors);\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n\n        String bucket = request.getParameter(\"bucket\");\n        String filename = request.getParameter(\"filename\");\n        if (bucket != null && filename != null && request.isUserInRole(Authentication.ADMIN_ROLE)) {\n            boolean done = m_inventoryService.deleteBucketItem(bucket, filename);\n            if (!done){\n                log().debug(\"AdminStorageDeleteBucketItemController ModelAndView onSubmit error while deleting status for: \"+ bucket);\n            }\n     }\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid,request.isUserInRole(Authentication.ADMIN_ROLE));\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","id":20661,"modified_method":"public ModelAndView handleRequest(HttpServletRequest request,\n            HttpServletResponse arg1) throws Exception {\n\n        String node = request.getParameter(\"node\");\n        int nodeid = WebSecurityUtils.safeParseInt(node);\n\n        String bucket = request.getParameter(\"bucket\");\n        String filename = request.getParameter(\"filename\");\n        if (bucket != null && filename != null && request.isUserInRole(Authentication.ADMIN_ROLE)) {\n            boolean done = m_inventoryService.deleteBucketItem(bucket, filename);\n            if (!done){\n                log().debug(\"AdminStorageDeleteBucketItemController ModelAndView onSubmit error while deleting status for: \"+ bucket);\n            }\n     }\n        Map<String, Object> model  = m_inventoryService.getBuckets(nodeid);\n        ModelAndView modelAndView = new ModelAndView(\"admin/storage/storageAdmin\",\"model\",model);\n        return modelAndView;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getInventory(int nodeid,\n                                                String group, String version) {\n        log().debug(\"getInventoryNode start: nodeid: \" + nodeid + \" group: \" + group + \" version: \" + version);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n    \n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(version);\n            \n            nodeModel.put(\"devicename\", rancidName);\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"version\", version);\n            nodeModel.put(\"status\", in.getParent().getState());\n            nodeModel.put(\"creationdate\", in.getCreationDate());\n            nodeModel.put(\"swconfigurationurl\", in.getSoftwareImageUrl());\n            nodeModel.put(\"configurationurl\", in.getConfigurationUrl());\n\n            log().debug(\"getInventoryNode date: \" + in.getCreationDate());\n\n            List<InventoryElement2> ie = RWSClientApi.getRWSRancidNodeInventoryElement2(m_cp, rn, version);\n            \n            \n            Iterator<InventoryElement2> iter1 = ie.iterator();\n                                       \n            while (iter1.hasNext()) {\n                InventoryElement2 ietmp = iter1.next();\n                \n                log().debug(\"Adding inventory: \" + ietmp.expand());\n            }\n                               \n            nodeModel.put(\"inventory\",ie);\n            \n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n        }\n        return nodeModel;\n    }","id":20662,"modified_method":"public Map<String, Object> getInventory(int nodeid,\n                                                String group, String version) {\n        log().debug(\"getInventoryNode start: nodeid: \" + nodeid + \" group: \" + group + \" version: \" + version);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n    \n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(version);\n            \n            nodeModel.put(\"devicename\", rancidName);\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"version\", version);\n            nodeModel.put(\"status\", in.getParent().getState());\n            nodeModel.put(\"creationdate\", in.getCreationDate());\n            nodeModel.put(\"swconfigurationurl\", in.getSoftwareImageUrl());\n            nodeModel.put(\"configurationurl\", in.getConfigurationUrl());\n\n            log().debug(\"getInventoryNode date: \" + in.getCreationDate());\n\n            List<InventoryElement2> ie = RWSClientApi.getRWSRancidNodeInventoryElement2(m_cp, rn, version);\n            \n            \n            Iterator<InventoryElement2> iter1 = ie.iterator();\n                                       \n            while (iter1.hasNext()) {\n                InventoryElement2 ietmp = iter1.next();\n                \n                log().debug(\"Adding inventory: \" + ietmp.expand());\n            }\n                               \n            nodeModel.put(\"inventory\",ie);\n            \n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNode(int nodeid) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        boolean first = true;\n        while (iter1.hasNext()){\n            String groupname = iter1.next();\n            log().debug(\"getRancidNode: \" + nodeid + \" for group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                } \n                RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                String vs = rn.getHeadRevision();\n                InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                  rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                ranlist.add(rnw); \n                \n            }\n            catch (RancidApiException e){\n                log().debug(\"No device found in router.db for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n\n        \n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {\n            log().debug(\"No bucket found for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName + \" .Cause: \" + e.getLocalizedMessage());\n        }\n        \n        nodeModel.put(\"bucketitems\", bucketlist);        \n\n        return nodeModel;\n    }","id":20663,"modified_method":"public Map<String, Object> getRancidNode(int nodeid) {\n        \n        log().debug(\"getRancidNode start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        List<RancidNodeWrapper> ranlist = new ArrayList<RancidNodeWrapper>();\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter1 = grouplist.iterator();\n        \n      \n        boolean first = true;\n        while (iter1.hasNext()){\n            String groupname = iter1.next();\n            log().debug(\"getRancidNode: \" + nodeid + \" for group \" + groupname);        \n            \n            try {\n                if (first){\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    nodeModel.put(\"status\", rn.getState());\n                    nodeModel.put(\"devicetype\", rn.getDeviceType());\n                    nodeModel.put(\"comment\", rn.getComment());\n                    nodeModel.put(\"groupname\", groupname);\n                    first = false;\n                }\n                try {\n                    RancidNode rn = RWSClientApi.getRWSRancidNodeInventory(m_cp ,groupname, rancidName);\n                    String vs = rn.getHeadRevision();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n\n                    RancidNodeWrapper rnw = new RancidNodeWrapper(rn.getDeviceName(), groupname, rn.getDeviceType(), rn.getComment(), rn.getHeadRevision(),\n                      rn.getTotalRevisions(), in.getCreationDate(), rn.getRootConfigurationUrl());\n\n                    ranlist.add(rnw); \n                } catch (RancidApiException e) {\n                    log().debug(\"No configuration found for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());                    \n                }\n            } catch (RancidApiException e){\n                if (e.getRancidCode() == 2) {\n                    log().debug(\"No device found in router.db for nodeid:\" + nodeid  + \" on Group: \" + groupname + \" .Cause: \" + e.getLocalizedMessage());\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());\n                }\n            }\n        }\n            \n        //Groups invariant            \n        nodeModel.put(\"grouptable\", ranlist);\n\n        \n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {            \n            if (e.getRancidCode() == 2) {\n                log().debug(\"No entry in storage for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }\n        \n        nodeModel.put(\"bucketitems\", bucketlist);        \n\n        return nodeModel;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeList(int nodeid, String group) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid + \" group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n            \n        RancidNode rn;\n        try {\n            rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        \n        RWSResourceList versionList;\n        \n        try {\n            versionList = RWSClientApi.getRWSResourceConfigList(m_cp, group, rancidName);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<String> versionListStr= versionList.getResource();\n        \n        Iterator<String> iter1 = versionListStr.iterator();\n        \n        String vs;\n        \n        while (iter1.hasNext()) {\n            vs = iter1.next();\n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n            InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), group, in.getConfigurationUrl());\n            ranlist.add(inwr);\n        }\n        \n        nodeModel.put(\"grouptable\", ranlist);\n\n        return nodeModel;\n        \n    }","id":20664,"modified_method":"public Map<String, Object> getRancidNodeList(int nodeid, String group) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid + \" group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n            \n        RancidNode rn;\n        try {\n            rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n            return nodeModel;\n        }\n\n        \n        RWSResourceList versionList;\n        \n        try {\n            versionList = RWSClientApi.getRWSResourceConfigList(m_cp, group, rancidName);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<String> versionListStr= versionList.getResource();\n        \n        Iterator<String> iter1 = versionListStr.iterator();\n        \n        String vs;\n        \n        while (iter1.hasNext()) {\n            vs = iter1.next();\n            InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n            InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), group, in.getConfigurationUrl());\n            ranlist.add(inwr);\n        }\n        \n        nodeModel.put(\"grouptable\", ranlist);\n\n        return nodeModel;\n        \n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean deleteBucket(String bucket){\n        log().debug(\"InventoryService deleteBucket for bucket [\" + bucket + \"]/ \"); \n        try {\n          RWSClientApi.deleteBucket(m_cp, bucket);\n          log().debug(\"InventoryService ModelAndView deleteBucket changes submitted\");\n        }\n        catch (Exception e){\n            log().debug(\"deleteBucket has given exception on node \"  + bucket + \" \"+ e.getMessage() );\n            return false;\n        }\n        return true;\n    }","id":20665,"modified_method":"public boolean deleteBucket(String bucket){\n        log().debug(\"InventoryService deleteBucket for bucket [\" + bucket + \"]/ \"); \n        try {\n          RWSClientApi.forceDeleteBucket(m_cp, bucket);\n          log().debug(\"InventoryService ModelAndView deleteBucket changes submitted\");\n        }\n        catch (Exception e){\n            log().debug(\"deleteBucket has given exception on node \"  + bucket + \" \"+ e.getMessage() );\n            return false;\n        }\n        return true;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeList(int nodeid) {\n        log().debug(\"getRancidlist start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n                       \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n        \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter2 = grouplist.iterator();\n        \n        boolean first = true;\n        String groupname;\n        while (iter2.hasNext()) {\n            groupname = iter2.next();\n        \n            RancidNode rn;\n            try {\n                rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, groupname, rancidName);\n                if (first){\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    first = false;\n                }\n                RWSResourceList versionList = RWSClientApi.getRWSResourceConfigList(m_cp, groupname, rancidName);\n                \n                List<String> versionListStr= versionList.getResource();\n                \n                Iterator<String> iter1 = versionListStr.iterator();\n                \n                String vs;\n                \n                while (iter1.hasNext()) {\n                    vs = iter1.next();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n                    InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), groupname, in.getConfigurationUrl());\n                    ranlist.add(inwr);\n                }\n            } catch (RancidApiException e) {\n                log().error(e.getLocalizedMessage());\n            }\n        }\n            \n        nodeModel.put(\"grouptable\", ranlist);\n            \n            \n        return nodeModel;\n        \n    }","id":20666,"modified_method":"public Map<String, Object> getRancidNodeList(int nodeid) {\n        log().debug(\"getRancidNodelist start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n                       \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n        \n        List<InventoryWrapper> ranlist = new ArrayList<InventoryWrapper>();\n        \n        List<String> grouplist = groups.getResource();\n        Iterator<String> iter2 = grouplist.iterator();\n        \n        boolean first = true;\n        String groupname;\n        while (iter2.hasNext()) {\n            groupname = iter2.next();\n        \n            RancidNode rn;\n            try {\n                rn = RWSClientApi.getRWSRancidNodeInventory(m_cp, groupname, rancidName);\n                if (first){\n                    nodeModel.put(\"devicename\", rn.getDeviceName());\n                    first = false;\n                }\n                RWSResourceList versionList = RWSClientApi.getRWSResourceConfigList(m_cp, groupname, rancidName);\n                \n                List<String> versionListStr= versionList.getResource();\n                \n                Iterator<String> iter1 = versionListStr.iterator();\n                \n                String vs;\n                \n                while (iter1.hasNext()) {\n                    vs = iter1.next();\n                    InventoryNode in = (InventoryNode)rn.getNodeVersions().get(vs);\n                    InventoryWrapper inwr = new InventoryWrapper(in.getVersionId(), in.getCreationDate(), groupname, in.getConfigurationUrl());\n                    ranlist.add(inwr);\n                }\n            } catch (RancidApiException e) {\n                if (e.getRancidCode() == 2) {\n                    log().debug(\"No Inventory found in CVS repository for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());\n                }\n            }\n        }\n            \n        nodeModel.put(\"grouptable\", ranlist);\n            \n            \n        return nodeModel;\n        \n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeWithCLogin(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNodeWithClogin start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n        Iterator<String> iter1 = grouplist.iterator();        \n      \n        String groupname;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNodeWithClogin \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                nodeModel.put(\"devicename\", rn.getDeviceName());\n                nodeModel.put(\"status\", rn.getState());\n                nodeModel.put(\"devicetype\", rn.getDeviceType());\n                nodeModel.put(\"comment\", rn.getComment());\n                nodeModel.put(\"groupname\", groupname);\n                nodeModel.put(\"deviceexist\", true);\n            }\n            catch (RancidApiException e){\n                nodeModel.put(\"deviceexist\", false);\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n            }\n        }\n                   \n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n\n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","id":20667,"modified_method":"public Map<String, Object> getRancidNodeWithCLogin(int nodeid, boolean adminRole) {\n        \n        log().debug(\"getRancidNodeWithClogin start\");\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n            \n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n        Iterator<String> iter1 = grouplist.iterator();        \n      \n        String groupname;\n        while (iter1.hasNext()){\n            groupname = iter1.next();\n            log().debug(\"getRancidNodeWithClogin \" + rancidName + \" group \" + groupname);        \n            \n            try {\n                RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, groupname, rancidName);\n                nodeModel.put(\"devicename\", rn.getDeviceName());\n                nodeModel.put(\"status\", rn.getState());\n                nodeModel.put(\"devicetype\", rn.getDeviceType());\n                nodeModel.put(\"comment\", rn.getComment());\n                nodeModel.put(\"groupname\", groupname);\n                nodeModel.put(\"deviceexist\", true);\n            } catch (RancidApiException e){\n                if (e.getRancidCode() == 2) {\n                    nodeModel.put(\"deviceexist\", false);\n                    log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + groupname);\n                } else {\n                    nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                    log().error(e.getLocalizedMessage());               \n                    return nodeModel;\n                }\n            }\n        }\n                   \n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n\n        //CLOGIN\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeWithCLoginForGroup(int nodeid,String group, boolean adminRole) {\n        log().debug(\"getRancidNodeWithCloginFroGroup start: group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n\n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e1) {\n            log().error(e1.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n        \n        \n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n            nodeModel.put(\"status\", rn.getState());\n            nodeModel.put(\"devicetype\", rn.getDeviceType());\n            nodeModel.put(\"comment\", rn.getComment());\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"deviceexist\", true);\n        }\n        catch (RancidApiException e){\n            nodeModel.put(\"deviceexist\", false);\n            log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + group);\n        }\n\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","id":20668,"modified_method":"public Map<String, Object> getRancidNodeWithCLoginForGroup(int nodeid,String group, boolean adminRole) {\n        log().debug(\"getRancidNodeWithCloginFroGroup start: group: \" + group);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n        \n        // Group list \n        RWSResourceList groups;\n        try {\n            groups = RWSClientApi.getRWSResourceGroupsList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> grouplist = groups.getResource();\n        nodeModel.put(\"grouplist\",grouplist);\n\n        // DeviceType list \n        RWSResourceList devicetypes;\n        try {\n            devicetypes = RWSClientApi.getRWSResourceDeviceTypesPatternList(m_cp);\n        } catch (RancidApiException e) {\n            nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n            log().error(e.getLocalizedMessage());\n            return nodeModel;\n        }\n\n        List<String> devicetypelist = devicetypes.getResource();\n        nodeModel.put(\"devicetypelist\",devicetypelist);\n        \n        \n        try {\n            RancidNode rn = RWSClientApi.getRWSRancidNodeTLO(m_cp, group, rancidName);\n            nodeModel.put(\"devicename\", rn.getDeviceName());\n            nodeModel.put(\"status\", rn.getState());\n            nodeModel.put(\"devicetype\", rn.getDeviceType());\n            nodeModel.put(\"comment\", rn.getComment());\n            nodeModel.put(\"groupname\", group);\n            nodeModel.put(\"deviceexist\", true);\n        }\n        catch (RancidApiException e){\n            if (e.getRancidCode() == 2) {\n            nodeModel.put(\"deviceexist\", false);\n                log().debug(\"No device found in router.db for:\" + rancidName + \"on Group: \" + group);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());               \n                return nodeModel;\n            }\n        }\n\n        if (adminRole) {\n            log().debug(\"getRancidNode: getting clogin info for: \" + rancidName);        \n            RancidNodeAuthentication rn5;\n            try {\n                rn5 = RWSClientApi.getRWSAuthNode(m_cp,rancidName);\n                nodeModel.put(\"isadmin\", \"true\");\n                nodeModel.put(\"cloginuser\", rn5.getUser());\n                nodeModel.put(\"cloginpassword\", rn5.getPassword());\n                nodeModel.put(\"cloginconnmethod\", rn5.getConnectionMethodString());\n                nodeModel.put(\"cloginenablepass\", rn5.getEnablePass());\n                String autoen = \"0\";\n                if (rn5.isAutoEnable()){\n                    autoen = \"1\";\n                }\n                nodeModel.put(\"cloginautoenable\", autoen);\n            }catch (RancidApiException e){\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(\"getRancidNode: clogin get failed with reason: \" + e.getLocalizedMessage());\n            }\n        }\n        return nodeModel;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getRancidNodeBase(int nodeid) {\n        \n        log().debug(\"getRancidNodeBase start for nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        \n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n        \n        log().debug(\"getRancidNodeBase rancid node name: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", ElementUtil.getNodeStatusString(node.getType().charAt(0)));\n\n        // TODO find a method to get root service for URL\n        nodeModel.put(\"url\", m_cp.getUrl()+m_cp.getDirectory());\n\n        String rancidIntegrationUseOnlyRancidAdaperProperty = Vault.getProperty(\"opennms.rancidIntegrationUseOnlyRancidAdaper\"); \n        log().debug(\"getRancidNodeBase opennms.rancidIntegrationUseOnlyRancidAdaper: \" + rancidIntegrationUseOnlyRancidAdaperProperty);\n        if (rancidIntegrationUseOnlyRancidAdaperProperty != null &&  \"true\".equalsIgnoreCase(rancidIntegrationUseOnlyRancidAdaperProperty.trim())) {\n            log().debug(\"getRancidNodeBase permitModifyClogin: false\");\n            nodeModel.put(\"permitModifyClogin\",false);\n        } else {\n            log().debug(\"getRancidNodeBase permitModifyClogin: true\");\n            nodeModel.put(\"permitModifyClogin\",true);\n        }\n        \n        String foreignSource = node.getForeignSource();\n        if (foreignSource != null ) {\n            nodeModel.put(\"foreignSource\", foreignSource);\n        } else {\n            nodeModel.put(\"foreignSource\", \"\");            \n        }\n\n        return nodeModel;\n    }","id":20669,"modified_method":"public Map<String, Object> getRancidNodeBase(int nodeid) {\n        \n        log().debug(\"getRancidNodeBase start for nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = new TreeMap<String, Object>();\n\n        nodeModel.put(\"RWSStatus\",\"OK\");\n        OnmsNode node = m_nodeDao.get(nodeid);\n        String rancidName = node.getLabel();\n        \n        log().debug(\"getRancidNodeBase rancid node name: \" + rancidName);\n\n\n        nodeModel.put(\"id\", rancidName);\n        nodeModel.put(\"db_id\", nodeid);\n        nodeModel.put(\"status_general\", ElementUtil.getNodeStatusString(node.getType().charAt(0)));\n\n        // TODO find a method to get root service for URL\n        nodeModel.put(\"url\", m_cp.getUrl()+m_cp.getDirectory());\n\n        String rancidIntegrationUseOnlyRancidAdaperProperty = Vault.getProperty(\"opennms.rancidIntegrationUseOnlyRancidAdaper\"); \n        log().debug(\"getRancidNodeBase opennms.rancidIntegrationUseOnlyRancidAdaper: \" + rancidIntegrationUseOnlyRancidAdaperProperty);\n        if (rancidIntegrationUseOnlyRancidAdaperProperty != null &&  \"true\".equalsIgnoreCase(rancidIntegrationUseOnlyRancidAdaperProperty.trim())) {\n            log().debug(\"getRancidNodeBase permitModifyClogin: false\");\n            nodeModel.put(\"permitModifyClogin\",false);\n        } else {\n            log().debug(\"getRancidNodeBase permitModifyClogin: true\");\n            nodeModel.put(\"permitModifyClogin\",true);\n        }\n        \n        String foreignSource = node.getForeignSource();\n        if (foreignSource != null ) {\n            nodeModel.put(\"foreignSource\", foreignSource);\n        } else {\n            nodeModel.put(\"foreignSource\", \"\");            \n        }\n\n        return nodeModel;\n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Map<String, Object> getBuckets(int nodeid,boolean isAdmin) {\n        log().debug(\"getBuckets start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        if (isAdmin) {\n            try {\n                RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n                bucketlist.addAll(bucket.getBucketItem());\n            } catch (RancidApiException e) {\n                log().debug(\"No bucket found for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName + \" .Cause: \" + e.getLocalizedMessage());\n            }\n            \n            nodeModel.put(\"bucketitems\", bucketlist);        \n        }\n        return nodeModel;        \n    }","id":20670,"modified_method":"public Map<String, Object> getBuckets(int nodeid) {\n        log().debug(\"getBuckets start: nodeid: \" + nodeid);\n        Map<String, Object> nodeModel = getRancidNodeBase(nodeid);\n        String rancidName = (String)nodeModel.get(\"id\"); \n\n        List<BucketItem> bucketlist = new ArrayList<BucketItem>();\n        try {\n            RWSBucket bucket = RWSClientApi.getBucket(m_cp, rancidName);\n            nodeModel.put(\"bucketexist\", true);\n            bucketlist.addAll(bucket.getBucketItem());\n        } catch (RancidApiException e) {\n            if (e.getRancidCode() == 2) {\n                nodeModel.put(\"bucketexist\", false);\n                log().debug(\"No entry in storage for nodeid:\" + nodeid  + \" nodeLabel: \" + rancidName);\n            } else {\n                nodeModel.put(\"RWSStatus\",e.getLocalizedMessage());\n                log().error(e.getLocalizedMessage());\n            }\n        }            \n        nodeModel.put(\"bucketitems\", bucketlist);        \n        return nodeModel;        \n    }","commit_id":"fabb416ed9ad3f060db1137485310420dba031ee","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public MapMenu getMapMenu(int mapId) throws MapsManagementException,\r\n    MapNotFoundException, MapsException {\r\n\r\n\t\tMapMenu m = null;\r\n\t\ttry {\r\n\t\t\tm = Factory.getMapMenu(mapId);\r\n\t\t    if (m == null) {\r\n\t\t        throw new MapNotFoundException(\"No Maps found.\");\r\n\t\t    }\r\n\t\t} catch (SQLException se) {\r\n\t\t\tthrow new MapsManagementException(\"Factory: unable to get map (menu) with id \"\r\n\t\t            +mapId +\".\" + se);\r\n\t\t}\r\n\t\t\r\n\t\treturn m;\r\n\t\t\r\n\t}","id":20671,"modified_method":"public MapMenu getMapMenu(int mapId) throws MapNotFoundException, MapsException {\n\t\tMapMenu m = null;\n\t\t\tm = m_implManager.getMapMenu(mapId);\n\t\t    if (m == null) {\n\t\t        throw new MapNotFoundException(\"No Maps found.\");\n\t\t    }\n\t\treturn m;\n\t}","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * save the map in input\r\n     * \r\n     * @param map\r\n     *            to save\r\n     * @throws MapsException\r\n     */\r\n    synchronized public void save(VMap map) throws MapsException {\r\n        try {\r\n            if (!map.isNew()) {\r\n                m_dbManager.deleteElementsOfMap(map.getId());\r\n            }\r\n            m_dbManager.saveMap(map);\r\n            m_dbManager.saveElements(map.getAllElements());\r\n        } catch (SQLException se) {\r\n            throw new MapsException(\"Error while saving map with id=\"\r\n                    + map.getId() + \"\\n\" + se);\r\n        }\r\n    }","id":20672,"modified_method":"/**\n     * save the map in input\n     * \n     * @param map\n     *            to save\n     * @throws MapsException\n     */\n    synchronized public void save(VMap map) throws MapsException {\n        if (!map.isNew()) {\n            m_implManager.deleteElementsOfMap(map.getId());\n        }\n        m_implManager.saveMap(map);\n        m_implManager.saveElements(map.getAllElements());\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the map with id in input and return it in VMap form.\r\n     * \r\n     * @param id\r\n     * @return the VMap with identifier id\r\n     * @throws MapsException\r\n     */\r\n    public VMap getMap(int id) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \t\r\n        VMap retVMap = null;\r\n        try {\r\n        \tlog.debug(\"Starting getMap with id \"+id);\r\n            Map m = Factory.getMap(id);\r\n            log.debug(\"Ending getMap with id \"+id);\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"Map with id \" + id\r\n                        + \" doesn't exist.\");\r\n            }\r\n            log.debug(\"Creating VMap with id \"+id);\r\n            retVMap = new VMap(id, m.getName(), m.getBackground(),\r\n                    m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\r\n                            .getScale(), m.getOffsetX(), m.getOffsetY(), m\r\n                            .getType(),m.getWidth(),m.getHeight());\r\n            log.debug(\"VMap with id \"+id+\" created.\");\r\n            retVMap.setCreateTime(m.getCreateTime());\r\n            retVMap.setLastModifiedTime(m.getLastModifiedTime());\r\n            log.debug(\"Starting getting elems for map with id \"+id);\r\n            Element[] mapElems = Factory.getElementsOfMap(id);\r\n            log.debug(\"Ending getting elems for map with id \"+id);\r\n            VElement elem =null;\r\n            if(mapElems!=null){\r\n\t            for (int i = 0; i < mapElems.length; i++) {\r\n            \t\telem = new VElement(mapElems[i]);\r\n            \t\t// here we must add all the stuff required\r\n            \t\tretVMap.addElement(elem);\r\n\t            }\r\n            }\r\n            log.debug(\"Starting refreshing elems for map with id \"+id);\r\n            List els = refreshElements(retVMap.getAllElements(),false);\r\n            log.debug(\"Ending refreshing elems for map with id \"+id);\r\n            log.debug(\"els.toArray()\");\r\n            VElement[] ves = (VElement[]) els.toArray(new VElement[0]);\r\n\t\t\tlog.debug(\"addElements(els)\");\r\n\t\t\tretVMap.addElements(ves);\r\n            \r\n            log.debug(\"Starting adding links for map with id \"+id);\r\n            log.debug(\"Starting getLinks\");\r\n            VLink[] vls = (VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]);\r\n            log.debug(\"Ending getLinks\");\r\n            log.debug(\"Starting addLinks\");\r\n            retVMap.addLinks(vls);\r\n            log.debug(\"Ending addLinks\");\r\n            log.debug(\"Ending adding links for map with id \"+id);\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Manager: unable to get map with id=\" + id + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20673,"modified_method":"/**\n     * Take the map with id in input and return it in VMap form.\n     * \n     * @param id\n     * @param refreshElems says if refresh the map's elements\n     * @return the VMap with identifier id\n     * @throws MapsException\n     */\n    public VMap getMap(int id, boolean refreshElems) throws MapsManagementException,\n            MapNotFoundException, MapsException {\n    \t\n        VMap retVMap = null;\n\n        Map m = m_implManager.getMap(id);\n        if (m == null) {\n            throw new MapNotFoundException(\"Map with id \" + id\n                    + \" doesn't exist.\");\n        }\n        retVMap = new VMap(id, m.getName(), m.getBackground(),\n                m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\n                        .getScale(), m.getOffsetX(), m.getOffsetY(), m\n                        .getType(),m.getWidth(),m.getHeight());\n        retVMap.setCreateTime(m.getCreateTime());\n        retVMap.setLastModifiedTime(m.getLastModifiedTime());\n        Element[] mapElems = m_implManager.getElementsOfMap(id);\n        VElement elem =null;\n        if(mapElems!=null){\n            for (int i = 0; i < mapElems.length; i++) {\n        \t\telem = new VElement(mapElems[i]);\n        \t\t// here we must add all the stuff required\n        \t\tretVMap.addElement(elem);\n            }\n        }\n\n        if(refreshElems){\n            log.debug(\"Starting refreshing elems for map with id \"+id);\n       \t\tVElement[] changedElems = m_implManager.refreshElements(retVMap.getAllElements());\n    \t\tif(changedElems!=null){\n\t       \t\tfor(int i=0;i<changedElems.length;i++){\n\t    \t\t\tretVMap.removeElement(changedElems[i].getId(), changedElems[i].getType());\n\t    \t\t\tretVMap.addElement(changedElems[i]);\n\t    \t\t}\n    \t\t}\n        }\n\t\t\n        \n        log.debug(\"Starting adding links for map with id \"+id);\n        log.debug(\"Starting getLinks\");\n        //VLink[] vls = null;\n        VLink[] vls = (VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]);\n        log.debug(\"Ending getLinks\");\n        log.debug(\"Starting addLinks\");\n        retVMap.addLinks(vls);\n        log.debug(\"Ending addLinks\");\n        log.debug(\"Ending adding links for map with id \"+id);\n        return retVMap;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n\t\tString iconname = Factory.getIconName(elementId,type);\r\n        VElement elem = new VElement(mapId,elementId,type,label,iconname);\r\n        return elem;\r\n    }","id":20674,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type) throws MapsException {\n\n\t\tElement elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,elem.getLabel(),elem.getIcon());\n\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * delete the map with identifier id\r\n     * \r\n     * @param id\r\n     *            of the map to delete\r\n     * @throws MapsException\r\n     */\r\n    synchronized public void deleteMap(int mapId) throws MapsException {\r\n        try {\r\n            m_dbManager.deleteMap(mapId);\r\n        } catch (SQLException s) {\r\n            throw new MapsException(\"Error while deleting map with id=\" + mapId\r\n                    + \"\\n \" + s);\r\n        }\r\n    }","id":20675,"modified_method":"/**\n     * delete the map with identifier id\n     * \n     * @param id\n     *            of the map to delete\n     * @throws MapsException\n     */\n    synchronized public void deleteMap(int mapId) throws MapsException {\n         m_implManager.deleteMap(mapId);\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type,String iconname) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n        VElement elem = new VElement(mapId,elementId,type,label,iconname);\r\n        return elem;\r\n    }","id":20676,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type,String iconname) throws \n            MapsException{\n        Element elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,elem.getLabel(),iconname);\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type, String iconname, int x,int y) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n\t\tVElement elem = new VElement(mapId,elementId,type,iconname,label,x,y);\r\n        return elem;\r\n    }","id":20677,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type, String iconname, int x,int y) throws \n            MapsException {\n\t\tElement elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,iconname,elem.getLabel(),x,y);\n\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Start the session: only operations made in the block between start and\r\n     * end session will be saved correctly.\r\n     * \r\n     * @throws MapsException\r\n     * @see endSession\r\n     */\r\n    public void startSession() throws MapsManagementException {\r\n        try {\r\n        \tFactory.createDbConnection();\r\n            m_dbManager.startSession();\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Manager: unable to start session.\" + se);\r\n        }\r\n    }","id":20678,"modified_method":"/**\n     * Start the session: only operations made in the block between start and\n     * end session will be saved correctly.\n     * \n     * @throws MapsException\n     * @see endSession\n     */\n    public void startSession() throws MapsException {\n        \tm_implManager.init();\n            m_implManager.startSession();\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type, int x,int y) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n\t\tString iconname = getIconName(elementId,type);\r\n\t\tVElement elem = new VElement(mapId,elementId,type,iconname,label,x,y);\r\n        return elem;\r\n    }","id":20679,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type, int x,int y) throws \n             MapsException{\n\n\t\tElement elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,elem.getIcon(),elem.getLabel(),x,y);\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the maps with label like the pattern in input and return them in\r\n     * VMap[] form.\r\n     * \r\n     * @param label\r\n     * @return the VMaps array if any label matches the pattern in input, null\r\n     *         otherwise\r\n     * @throws MapsException\r\n     */\r\n    public VMap[] getMapsLike(String likeLabel) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n        VMap[] retVMap = null;\r\n        try {\r\n            Map[] m = Factory.getMapsLike(likeLabel);\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"Maps with label like \"\r\n                        + likeLabel + \" don't exist.\");\r\n            }\r\n            retVMap = new VMap[m.length];\r\n            for (int i = 0; i < m.length; i++) {\r\n                retVMap[i] = getMap(m[i].getId());\r\n            }\r\n\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get maps with label like \" + likeLabel\r\n                            + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20680,"modified_method":"/**\n     * Take the maps with label like the pattern in input and return them in\n     * VMap[] form.\n     * \n     * @param label\n     * @param refreshElems says if refresh map's elements\n     * @return the VMaps array if any label matches the pattern in input, null\n     *         otherwise\n     * @throws MapsException\n     */\n    public VMap[] getMapsLike(String likeLabel, boolean refreshElems) throws  MapsException {\n        VMap[] retVMap = null;\n        Map[] m = m_implManager.getMapsLike(likeLabel);\n        if (m == null) {\n            throw new MapNotFoundException(\"Maps with label like \"\n                    + likeLabel + \" don't exist.\");\n        }\n        retVMap = new VMap[m.length];\n        for (int i = 0; i < m.length; i++) {\n            retVMap[i] = getMap(m[i].getId(),refreshElems);\n        }\n        return retVMap;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public List getLinksOnElem(VElement[] elems,VElement elem) throws SQLException, MapsException {\r\n\r\n    \tList links = new java.util.ArrayList();\r\n        \r\n    \t// this is the list of nodes set related to Element\r\n    \tSet linkednodeids = null;\r\n\t\tif (elem != null) {\r\n            linkednodeids = getLinkedNodeidsOnNodes(getNodeidsOnElement(elem));\r\n        } else {\r\n        \treturn links;\r\n        }\r\n        \r\n        if (elems != null && linkednodeids != null) {\r\n    \t\t\r\n        \tfor (int i = 0; i < elems.length; i++) {\r\n\t    \t\tIterator node_ite = getNodeidsOnElement(elems[i]).iterator();\r\n\t    \t\twhile (node_ite.hasNext()) {\r\n\t    \t\t\tInteger elemNodeId = (Integer) node_ite.next();\r\n\t\t        \tif (linkednodeids.contains(elemNodeId)) {\r\n\t\t        \t\tVLink vlink = new VLink(elems[i],elem);\r\n\t\t       \t\t\tlinks.add(vlink);\r\n\t\t       \t\t}\r\n\t    \t\t}\r\n\t    \t}\r\n        }\r\n        return links;\r\n    }","id":20681,"modified_method":"public List getLinksOnElem(VElement[] elems,VElement elem) throws MapsException {\n\n    \tList links = new ArrayList();\n        \n    \t\n    \tVLink[] vlinks = m_implManager.getLinksOnElement(elems, elem);\n    \tif (vlinks != null) for (int i=0;i<vlinks.length;i++) {\n    \t\tlinks.add(vlinks[i]);\n    \t\t\n    \t}\n        return links;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * delete the map in input\r\n     * \r\n     * @param map\r\n     *            to delete\r\n     * @throws MapsException\r\n     *             if an error occour deleting map, MapNotFoundException if the\r\n     *             map to delete doesn't exist.\r\n     */\r\n    synchronized public void deleteMap(VMap map) throws MapsException,\r\n            MapNotFoundException {\r\n        try {\r\n            if (m_dbManager.deleteMap(map.getId()) == 0)\r\n                throw new MapNotFoundException(\"The Map doesn't exist.\");\r\n        } catch (SQLException s) {\r\n            throw new MapsException(\"Error while deleting map with id=\"\r\n                    + map.getId() + \"\\n \" + s);\r\n        }\r\n    }","id":20682,"modified_method":"/**\n     * delete the map in input\n     * \n     * @param map\n     *            to delete\n     * @throws MapsException\n     *             if an error occour deleting map, MapNotFoundException if the\n     *             map to delete doesn't exist.\n     */\n    synchronized public void deleteMap(VMap map) throws MapsException,\n            MapNotFoundException {\n        if (m_implManager.deleteMap(map.getId()) == 0)\n            throw new MapNotFoundException(\"The Map doesn't exist.\");\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the maps with name in input and return them in\r\n     * MapMenu[] form.\r\n     * \r\n     * @param mapName\r\n     * @return the MapMenu array if any map has name in input, null\r\n     *         otherwise\r\n     * @throws MapsException\r\n     */\r\n    public MapMenu[] getMapsMenuByName(String mapName) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \tMapMenu[] retVMap = null;\r\n        try {\r\n        \tretVMap = Factory.getMapsMenuByName(mapName);\r\n            if (retVMap == null) {\r\n                throw new MapNotFoundException(\"Maps with name \"\r\n                        + mapName + \" don't exist.\");\r\n            }\r\n            \r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get maps with name \" + mapName\r\n                            + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20683,"modified_method":"/**\n     * Take the maps with name in input and return them in\n     * MapMenu[] form.\n     * \n     * @param mapName\n     * @return the MapMenu array if any map has name in input, null\n     *         otherwise\n     * @throws MapsException\n     */\n    public MapMenu[] getMapsMenuByName(String mapName) throws \n            MapNotFoundException, MapsException {\n    \tMapMenu[] retVMap = null;\n    \tretVMap = m_implManager.getMapsMenuByName(mapName);\n        if (retVMap == null) {\n            throw new MapNotFoundException(\"Maps with name \"\n                    + mapName + \" don't exist.\");\n        }\n        return retVMap;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Get all defined maps.\r\n     * \r\n     * @return the VMaps array containing all maps defined\r\n     * @throws MapsException\r\n     */\r\n    public VMap[] getAllMaps() throws MapsManagementException,\r\n            MapNotFoundException, MapsException  {\r\n        VMap[] retVMap = null;\r\n        try {\r\n            Map[] m = Factory.getAllMaps();\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"No Maps found.\");\r\n            }\r\n            retVMap = new VMap[m.length];\r\n            for (int i = 0; i < m.length; i++) {\r\n                retVMap[i] = getMap(m[i].getId());\r\n            }\r\n\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\"Factory: unable to get all maps\"\r\n                    + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20684,"modified_method":"/**\n     * Get all defined maps.\n     * @param refreshElems says if refresh maps' elements\n     * @return the VMaps array containing all maps defined\n     * @throws MapsException\n     */\n    public VMap[] getAllMaps(boolean refreshElems) throws MapNotFoundException, MapsException  {\n        VMap[] retVMap = null;\n        Map[] m = m_implManager.getAllMaps();\n        if (m == null) {\n            throw new MapNotFoundException(\"No Maps found.\");\n        }\n        retVMap = new VMap[m.length];\n        for (int i = 0; i < m.length; i++) {\n            retVMap[i] = getMap(m[i].getId(), refreshElems);\n        }\n        return retVMap;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take all the maps in the tree of maps considering the with name in input\r\n     * as the root of the tree. If there are more maps with <i>mapName<\/i> (case insensitive)\r\n     * all trees with these maps as root are considered and returned. \r\n     * \r\n     * @param mapName\r\n     * @return a List with the MapMenu objects.\r\n     * @throws MapsException\r\n     */\r\n    public List getMapsMenuTreeByName(String mapName) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \t  List mapsInTreesList = new ArrayList();\r\n\t      //\r\n\t      MapMenu[] mapsMenu = null;\r\n\t      try{\r\n\t      \tmapsMenu=getMapsMenuByName(mapName);\r\n\t      }catch(MapNotFoundException mnf){\r\n\t      \t//do nothing...\r\n\t      }\r\n\t      if(mapsMenu!=null){\r\n\t      \t  // find all accessible maps for the user,\r\n\t      \t  // for all maps (and theirs tree of maps) with name like user's ADProfile. \r\n\t      \t  for(int k=0; k<mapsMenu.length;k++){\r\n\t      \t  \t  //build a map in wich each entry is [mapparentid, listofchildsids]\r\n\t\t\t      java.util.Map parent_child = new HashMap();\r\n\t\t\t      try{\r\n\t\t\t      \tparent_child = Factory.getMapsStructure();\r\n\t\t\t      }catch(Exception e){\r\n\t\t\t      \tthrow new MapsException(e);\r\n\t\t\t      }\r\n\t\t\t      \r\n\t\t\t      \r\n\t\t\t      List childList = new ArrayList();\r\n\t\t\t      preorderVisit(new Integer(mapsMenu[k].getId()), childList, parent_child);\r\n\t\t\t      for(int i=0; i<childList.size(); i++){\r\n\t\t\t      \tpreorderVisit((Integer)childList.get(i), childList, parent_child);\r\n\t\t\t      }\r\n\r\n\t\t\t      //adds all sub-tree of maps to the visible map list\r\n\t\t\t      for(int i=0; i<childList.size(); i++){\r\n\t\t\t      \tmapsInTreesList.add(getMapMenu(((Integer)childList.get(i)).intValue()));\r\n\t\t\t      }\r\n\t      \t  }\r\n\t      }\r\n\r\n        return mapsInTreesList;\r\n    }","id":20685,"modified_method":"/**\n     * Take all the maps in the tree of maps considering the with name in input\n     * as the root of the tree. If there are more maps with <i>mapName<\/i> (case insensitive)\n     * all trees with these maps as root are considered and returned. \n     * \n     * @param mapName\n     * @return a List with the MapMenu objects.\n     * @throws MapsException\n     */\n    public List getMapsMenuTreeByName(String mapName) throws \n            MapNotFoundException, MapsException {\n    \t  List mapsInTreesList = new ArrayList();\n\t      //\n\t      MapMenu[] mapsMenu = null;\n\t      try{\n\t      \tmapsMenu=getMapsMenuByName(mapName);\n\t      }catch(MapNotFoundException mnf){\n\t      \t//do nothing...\n\t      }\n\t      if(mapsMenu!=null){\n\t      \t  // find all accessible maps for the user,\n\t      \t  // for all maps (and theirs tree of maps) with name like mapName. \n\t      \t  for(int k=0; k<mapsMenu.length;k++){\n\t      \t  \t  //build a map in wich each entry is [mapparentid, listofchildsids]\n\t\t\t      java.util.Map parent_child = new HashMap();\n\t\t\t      parent_child = m_implManager.getMapsStructure();\n\t\t\t      List childList = new ArrayList();\n\t\t\t      preorderVisit(new Integer(mapsMenu[k].getId()), childList, parent_child);\n\t\t\t      for(int i=0; i<childList.size(); i++){\n\t\t\t      \tpreorderVisit((Integer)childList.get(i), childList, parent_child);\n\t\t\t      }\n\t\t\t      //adds all sub-tree of maps to the visible map list\n\t\t\t      for(int i=0; i<childList.size(); i++){\n\t\t\t      \tmapsInTreesList.add(getMapMenu(((Integer)childList.get(i)).intValue()));\n\t\t\t      }\n\t      \t  }\n\t      }\n        return mapsInTreesList;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Manager() {\r\n\r\n\t\tString LOG4J_CATEGORY = \"OpenNMS.Map\";\r\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\r\n\t\tlog= ThreadCategory.getInstance(this.getClass());\r\n\r\n    \tm_dbManager = new org.opennms.web.map.db.Manager();\r\n        \r\n        try {\r\n        \tMapPropertiesFactory.init();\r\n        \tmpf = MapPropertiesFactory.getInstance();\r\n        \tstatuses = mpf.getStatusesMap();\r\n        \tseverities = mpf.getSeveritiesMap();\r\n        \tavails = mpf.getAvailabilitiesMap();\r\n        \tdefaultStatusId = mpf.getDefaultStatus().getId();\r\n        \tdefaultSeverityId = mpf.getDefaultSeverity().getId();\r\n        \tunknownStatusId = mpf.getUnknownUeiStatus().getId();\r\n        \tavailEnabled = mpf.enableAvail();\r\n        \tif (!availEnabled) defaultEnableFalseAvail = mpf.getDisabledAvail();\r\n        } catch (Exception e) {\r\n        \tlog.fatal(\"cannot use map.properties file \" + e);\r\n        }\r\n\r\n    }","id":20686,"modified_method":"/**\n     * Manage Maps using default implementation of Factory and Manager\n     */\n    public Manager() throws MapsException{\n    \t\n\t\tThreadCategory.setPrefix(MapsConstants.LOG4J_CATEGORY);\n\t\tlog= ThreadCategory.getInstance(this.getClass());\n        try {\n        \tMapPropertiesFactory.init();\n        \tmpf = MapPropertiesFactory.getInstance();\n        \tm_mapsFactory = mpf.getDefaultFactory();\n        \t\n           \tString dataSource = m_mapsFactory.getDataSource();\n           \tm_dataSource = null;\n        \tif(dataSource!=null){\n        \t\tm_dataSource = mpf.getDataSource(dataSource); \n        \t}\n \n        \tClass[] parameterTypes = {DataSource.class,java.util.Map.class};\n        \tObject[] params = {m_dataSource,m_mapsFactory.getParam()};\n        \tConstructor managerConstr = Class.forName(m_mapsFactory.getManagerClass()).getConstructor(parameterTypes);\n        \t\n        \tm_implManager = (org.opennms.web.map.dataaccess.Manager)managerConstr.newInstance(params);\n        } catch (Exception e) {\n        \tlog.fatal(\"cannot use map.properties file \" + e);\n        \te.printStackTrace();\n        \tthrow new MapsException(e);\n        }\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Get all defined maps.\r\n     * \r\n     * @return the VMaps array containing all maps defined\r\n     * @throws MapsException\r\n     */\r\n    \r\n    public MapMenu[] getAllMapMenus() throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \r\n    \tMapMenu[] m = null;\r\n\t\ttry {\r\n\t\t\tm = Factory.getAllMapsMenu();\r\n\t\t    if (m == null) {\r\n\t\t\treturn new MapMenu[0];\r\n\t\t        //throw new MapNotFoundException(\"No Maps found.\");\r\n\t\t    }\r\n\t\t} catch (SQLException se) {\r\n\t\t\tthrow new MapsManagementException(\"Factory: unable to get all maps\"\r\n\t                + \".\" + se);\r\n\t\t}\r\n\t\r\n\t    return m;\r\n\r\n    }","id":20687,"modified_method":"/**\n     * Get all defined maps.\n     * \n     * @return the MapMenu array containing all maps defined\n     * @throws MapsException\n     */\n    \n    public MapMenu[] getAllMapMenus() throws MapNotFoundException, MapsException {\n    \tMapMenu[] m = null;\n\t\tm = m_implManager.getAllMapMenus();\n\t    if (m == null) {\n\t        throw new MapNotFoundException(\"No Maps found.\");\n\t    }\n\t    return m;\n\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean foundLoopOnMaps(VMap parentMap,int mapId) throws SQLException {\r\n\t\t\r\n\t\tString LOG4J_CATEGORY = \"OpenNMS.Map\";\r\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\r\n\t\tCategory log= ThreadCategory.getInstance(this.getClass());\r\n\r\n\t\tjava.util.Map maps = Factory.getMapsStructure();\r\n\t\tVElement[] elems = parentMap.getAllElements();\r\n\t\tif (elems == null) return false;\r\n\t\tSet childSet = new TreeSet();\r\n\t\tfor (int i=0; i<elems.length;i++) {\r\n\t\t\tif (elems[i].getType().equals(VElement.MAP_TYPE))\r\n\t\t\t\tchildSet.add(new Integer(elems[i].getId()));\r\n\t\t}\r\n\t    \r\n\t\tlog.debug(\"List of sub-maps before preorder visit \"+childSet.toString());\r\n\r\n\t    maps.put(new Integer(parentMap.getId()),childSet);\r\n\r\n\t    while (childSet.size() > 0) {\r\n\t\t    childSet = preorderVisit(childSet,maps);\r\n\t\r\n\t\t    log.debug(\"List of sub-maps  \"+childSet.toString());\r\n\t\r\n\t\t    if(childSet.contains(new Integer(mapId))){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t    }\r\n\treturn false;\r\n\t\r\n\t}","id":20688,"modified_method":"public boolean foundLoopOnMaps(VMap parentMap,int mapId) throws MapsException {\n\t\t\n\t\tString LOG4J_CATEGORY = \"OpenNMS.Map\";\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\n\t\tCategory log= ThreadCategory.getInstance(this.getClass());\n\n\t\tjava.util.Map maps = m_implManager.getMapsStructure();\n\t\tVElement[] elems = parentMap.getAllElements();\n\t\tif (elems == null) return false;\n\t\tSet childSet = new TreeSet();\n\t\tfor (int i=0; i<elems.length;i++) {\n\t\t\tif (elems[i].getType().equals(VElement.MAP_TYPE))\n\t\t\t\tchildSet.add(new Integer(elems[i].getId()));\n\t\t}\n\t    \n\t\tlog.debug(\"List of sub-maps before preorder visit \"+childSet.toString());\n\n\t    maps.put(new Integer(parentMap.getId()),childSet);\n\n\t    while (childSet.size() > 0) {\n\t\t    childSet = preorderVisit(childSet,maps);\n\t\n\t\t    log.debug(\"List of sub-maps  \"+childSet.toString());\n\t\n\t\t    if(childSet.contains(new Integer(mapId))){\n\t\t\t\treturn true;\n\t\t\t}\n\t    }\n\treturn false;\n\t\n\t}","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public List getLinks(VElement[] elems) throws SQLException, MapsException {\r\n\r\n    \tList links = new ArrayList();\r\n        \r\n    \t// this is the list of nodes set related to Element\r\n    \tjava.util.List elemNodes = new java.util.ArrayList();\r\n    \ttry{\r\n\t    \tif (elems != null) {\r\n\t        \tfor (int i = 0; i < elems.length; i++) {\r\n\t                Set nodeids = getNodeidsOnElement(elems[i]);\r\n\t                elemNodes.add(nodeids);\r\n\t         \t}\r\n\t        }\r\n\t        \r\n\t        Iterator ite = elemNodes.iterator();\r\n\t        int firstelemcount = 0;\r\n\t        Set linkid = new TreeSet();\r\n\t        Connection conn = Vault.getDbConnection();\r\n\t        while (ite.hasNext()) {\r\n\t        \tSet firstelemnodes = (TreeSet) ite.next();\r\n\t        \tSet firstlinkednodes = getLinkedNodeidsOnNodes(firstelemnodes, conn);\r\n\t            int secondelemcount = firstelemcount +1;\r\n\t            Iterator sub_ite = elemNodes.subList(secondelemcount,elemNodes.size()).iterator(); \r\n\t        \twhile (sub_ite.hasNext()) {\r\n\t        \t\tIterator node_ite = ((TreeSet) sub_ite.next()).iterator();\r\n\t        \t\twhile (node_ite.hasNext()) {\r\n\t        \t\t\tInteger curNodeId = (Integer) node_ite.next();\r\n\t        \t\t\tif (firstlinkednodes.contains(curNodeId)) {\r\n\t        \t\t\t\tVLink vlink = new VLink(elems[firstelemcount],elems[secondelemcount]);\r\n\t        \t\t\t\tif(!links.contains(vlink)){\r\n\t        \t\t\t\t\tlog.debug(\"adding link \"+vlink.getFirst().getId()+vlink.getFirst().getType()+\"-\"+vlink.getSecond().getId()+vlink.getSecond().getType());\r\n\t        \t\t\t\t\tlinks.add(vlink);\r\n\t        \t\t\t\t}\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t\tsecondelemcount++;\r\n\t\t\t\t}\r\n\t\t\t\tfirstelemcount++;\r\n\t\t\t}\r\n\t        Vault.releaseDbConnection(conn);\r\n    \t}catch(SQLException s){\r\n    \t\tthrow s;\r\n    \t}catch(Exception e){\r\n    \t\tthrow new MapsException(e);\r\n    \t}\r\n        return links;\r\n    }","id":20689,"modified_method":"public List getLinks(VElement[] elems) throws MapsException {\n\n    \tList links = new ArrayList();\n        \n    \t\n    \tVLink[] vlinks = m_implManager.getLinks(elems);\n    \tif (vlinks != null) for (int i=0;i<vlinks.length;i++) {\n    \t\tlinks.add(vlinks[i]);\n    \t\t\n    \t}\n        return links;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the maps with name in input and return them in\r\n     * VMap[] form.\r\n     * \r\n     * @param mapName\r\n     * @return the VMaps array if any map has name in input, null\r\n     *         otherwise\r\n     * @throws MapsException\r\n     */\r\n    public VMap[] getMapsByName(String mapName) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n        VMap[] retVMap = null;\r\n        try {\r\n            Map[] m = Factory.getMapsByName(mapName);\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"Maps with name \"\r\n                        + mapName + \" don't exist.\");\r\n            }\r\n            retVMap = new VMap[m.length];\r\n            for (int i = 0; i < m.length; i++) {\r\n                retVMap[i] = getMap(m[i].getId());\r\n            }\r\n\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get maps with name \" + mapName\r\n                            + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20690,"modified_method":"/**\n     * Take the maps with name in input and return them in\n     * VMap[] form.\n     * \n     * @param mapName\n     * @param refhresElems says if refresh maps' elements\n     * @return the VMaps array if any map has name in input, null\n     *         otherwise\n     * @throws MapsException\n     */\n    public VMap[] getMapsByName(String mapName, boolean refreshElems) throws MapNotFoundException, MapsException {\n        VMap[] retVMap = null;\n        Map[] m = m_implManager.getMapsByName(mapName);\n        if (m == null) {\n            throw new MapNotFoundException(\"Maps with name \"\n                    + mapName + \" don't exist.\");\n        }\n        retVMap = new VMap[m.length];\n        for (int i = 0; i < m.length; i++) {\n            retVMap[i] = getMap(m[i].getId(), refreshElems);\n        }\n        return retVMap;\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Close the block open by startSession() method.\r\n     * \r\n     * @throws MapsException\r\n     * @see startSession()\r\n     */\r\n    synchronized public void endSession() throws MapsManagementException {\r\n        try {\r\n        \tFactory.releaseDbConnection();\r\n            m_dbManager.endSession();\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\"Manager: unable to end session.\"\r\n                    + se);\r\n        }\r\n    }","id":20691,"modified_method":"/**\n     * Close the block open by startSession() method.\n     * \n     * @throws MapsException\n     * @see startSession()\n     */\n    synchronized public void endSession() throws MapsException {\n    \t\tm_implManager.endSession();\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the map label and type in input and return it in VMap form.\r\n     * \r\n     * @param mapname\r\n     * @param maptype\r\n     * @return the VMap[] with corresponding mapname and maptype\r\n     * @throws MapsException\r\n     */\r\n\r\n    public VMap[] getMap(String mapname, String maptype) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \t\r\n        VMap retVMap = null;\r\n        if (!maptype.equals(VMap.AUTOMATICALLY_GENERATED_MAP) && !maptype.equals(VMap.USER_GENERATED_MAP)) {\r\n            throw new MapNotFoundException(\"Map with uncorrect maptype \" + maptype);\r\n        }\r\n        Vector ve = new Vector();\r\n\r\n        try {\r\n            Map[] maps = Factory.getMaps(mapname,maptype);\r\n            if (maps == null) {\r\n                throw new MapNotFoundException(\"Map with mapname \" + mapname\r\n                        + \"and maptype \" + maptype + \" doesn't exist.\");\r\n            }\r\n            for (int i = 0; i<maps.length;i++) {\r\n            \tMap m = maps[i];\r\n            \tretVMap = new VMap(m.getId(), m.getName(), m.getBackground(),\r\n                    m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\r\n                            .getScale(), m.getOffsetX(), m.getOffsetY(), m\r\n                            .getType(),m.getWidth(),m.getHeight());\r\n            \tretVMap.setCreateTime(m.getCreateTime());\r\n            \tretVMap.setLastModifiedTime(m.getLastModifiedTime());\r\n            \tElement[] mapElems = Factory.getElementsOfMap(m.getId());\r\n            \tVElement elem =null;\r\n            \tif(mapElems!=null){\r\n            \t\tfor (int j = 0; j < mapElems.length; j++) {\r\n            \t\t\telem = new VElement(mapElems[j]);\r\n            \t\t\t// here we must add all the stuff required\r\n            \t\t\tretVMap.addElement(elem);\r\n            \t\t}\r\n            \t}\r\n            \tretVMap.addElements((VElement[]) refreshElements(retVMap.getAllElements(),false).toArray(new VElement[0]));\r\n            \tretVMap.addLinks((VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]));\r\n            \tve.add(retVMap);\r\n            }\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get map with mapname and maptype \" + mapname + maptype + \".\" + se);\r\n        }\r\n        VMap[] vmaps = new VMap[ve.size()];\r\n        vmaps=(VMap[])ve.toArray(vmaps);\r\n        return vmaps;\r\n     }","id":20692,"modified_method":"/**\n     * Take the map label and type in input and return it in VMap form.\n     * \n     * @param mapname\n     * @param maptype\n     * @param refreshElems says if refresh map's elements\n     * @return the VMap[] with corresponding mapname and maptype\n     * @throws MapsException\n     */\n\n    public VMap[] getMap(String mapname, String maptype, boolean refreshElems) throws MapsManagementException,\n            MapNotFoundException, MapsException {\n    \t\n        VMap retVMap = null;\n        if (!maptype.equals(VMap.AUTOMATICALLY_GENERATED_MAP) && !maptype.equals(VMap.USER_GENERATED_MAP)) {\n            throw new MapNotFoundException(\"Map with uncorrect maptype \" + maptype);\n        }\n        Vector ve = new Vector();\n\n        Map[] maps = m_implManager.getMaps(mapname,maptype);\n        if (maps == null) {\n            throw new MapNotFoundException(\"Map with mapname \" + mapname\n                    + \"and maptype \" + maptype + \" doesn't exist.\");\n        }\n        for (int i = 0; i<maps.length;i++) {\n        \tMap m = maps[i];\n        \tretVMap = new VMap(m.getId(), m.getName(), m.getBackground(),\n                m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\n                        .getScale(), m.getOffsetX(), m.getOffsetY(), m\n                        .getType(),m.getWidth(),m.getHeight());\n        \tretVMap.setCreateTime(m.getCreateTime());\n        \tretVMap.setLastModifiedTime(m.getLastModifiedTime());\n        \tElement[] mapElems = m_implManager.getElementsOfMap(m.getId());\n        \tVElement elem =null;\n        \tif(mapElems!=null){\n        \t\tfor (int j = 0; j < mapElems.length; j++) {\n        \t\t\telem = new VElement(mapElems[j]);\n        \t\t\t// here we must add all the stuff required\n        \t\t\tretVMap.addElement(elem);\n        \t\t}\n        \t}\n            if(refreshElems){\n                log.debug(\"Starting refreshing elems for map with name \"+mapname+ \" and id \"+retVMap.getId());\n        \t\tVElement[] changedElems = m_implManager.refreshElements(retVMap.getAllElements());\n        \t\tfor(int j=0;j<changedElems.length;j++){\n        \t\t\tretVMap.removeElement(changedElems[j].getId(), changedElems[j].getType());\n        \t\t\tretVMap.addElement(changedElems[j]);\n        \t\t}\n                log.debug(\"Ending refreshing elems for map with name \"+mapname+ \" and id \"+retVMap.getId());\n            }\n        \tretVMap.addLinks((VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]));\n        \tve.add(retVMap);\n        }\n        VMap[] vmaps = new VMap[ve.size()];\n        vmaps=(VMap[])ve.toArray(vmaps);\n        return vmaps;\n     }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * \r\n     * @param mapElements the elements to refresh\r\n     * @param returnChangedElem return only element changed\r\n     * @return List of VElement\r\n     * @throws MapsException\r\n     * @throws SQLException\r\n     */\r\n    public List refreshElements(VElement[] mapElements, boolean returnChangedElem) throws MapsException, SQLException {\r\n    \t\r\n    \tString LOG4J_CATEGORY = \"OpenNMS.Map\";\r\n    \tCategory log;\r\n\r\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\r\n\t\tlog = ThreadCategory.getInstance(this.getClass());\r\n\t\tList elems = new ArrayList();\r\n\r\n        if (mapElements == null || mapElements.length == 0){\r\n\t\t\tlog.warn(\"refreshElements: method called with null or empty input\");\r\n\t\t\treturn elems;\r\n        }\r\n\r\n        CategoryModel cModel;\r\n        log.debug(\"Instantiating CModel\");\r\n        try {\r\n            cModel = CategoryModel.getInstance();\r\n        } catch (Exception e) {\r\n        \tthrow new MapsException(e);\r\n        }\r\n        log.debug(\"CModel instantiated.\");\r\n        log.debug(\"Getting outaged elems.\");\r\n        Iterator ite = Factory.getOutagedVElems().iterator();\r\n        log.debug(\"Outaged elems obtained.\");\r\n        java.util.Map outagedNodes = new HashMap();\r\n\t\tfloat severity = 0;\r\n\t\twhile (ite.hasNext()) {\r\n\t\t\tElementInfo outagelem = (ElementInfo) ite.next();\r\n\t\t\tint outageStatus = getStatus(outagelem.getUei());\r\n\t\t\tint outageSeverity = getSeverity(EventUtil.getSeverityLabel(outagelem.getSeverity()));\r\n\r\n\t\t\tif (log.isInfoEnabled())\r\n\t\t\t\tlog.info(\"refreshElements: parsing outaged node with nodeid: \" + outagelem.getId());\r\n\t\t\tOutageInfo oi = (OutageInfo)outagedNodes.get(new Integer(outagelem.getId())); \r\n\r\n\t\t\tif (oi != null) {\r\n\r\n\t\t\t\tif (oi.getStatus() > outageStatus) oi.setStatus(outageStatus);\r\n\t\t\t\toi.setSeverity((oi.getSeverity()+outageSeverity)/2);\r\n\t\t\t} else {\r\n\t\t\t\tint curStatus = outageStatus;\r\n\t\t\t\tfloat curSeverity = outageSeverity;\r\n\t\t\t\toi = new OutageInfo(outagelem.getId(),curStatus,curSeverity);\r\n\t\t\t}\r\n\t\t\toutagedNodes.put(new Integer(outagelem.getId()),oi);\r\n    \t\tif (log.isDebugEnabled()) \r\n    \t\t\tlog.debug(\"refreshElements: node status/severity \" + outageStatus + \"/\" + outageSeverity);\r\n\t\t}\r\n\r\n\t\tint status = defaultStatusId;\r\n\t\tVElement ve = null;\r\n\r\n\t\t\r\n\t\tjava.util.Map availsMap = null;\r\n\t\tif (availEnabled) {\r\n\t\t\tSet nodeIds = new TreeSet();\r\n\t\t\tfor(int i=0;i<mapElements.length;i++){\r\n\t\t\t\tif(mapElements[i].isNode()){\r\n\t\t\t\t\tnodeIds.add(new Integer(mapElements[i].getId()));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnodeIds.addAll(getNodeidsOnElement(mapElements[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlog.debug(\"Getting avails for nodes of map (\"+nodeIds.size()+\" nodes)\");\r\n\t\t\tavailsMap = cModel.getNodeAvailability(nodeIds);\r\n\t\t\tlog.debug(\"Avails obtained\");\r\n\t\t}\r\n\r\n    \tfor(int i=0;i<mapElements.length;i++){\r\n    \t\tve = (VElement) mapElements[i].clone();\r\n    \t\tif (log.isDebugEnabled()) \r\n    \t\t\tlog.debug(\"refreshElements: parsing VElement ID \" + ve.getId()+ve.getType());\r\n\r\n    \t\tdouble elementAvail =100.0;\r\n\t\t\tint elementStatus = defaultStatusId;\r\n   \t\t\tfloat elementSeverity = defaultSeverityId;\r\n \r\n    \t\t// get status and severity\r\n\t\t\t// status is worse\r\n\t\t\t// severity is medium value among severities\r\n   \t\t\tif (ve.isNode()) {\r\n   \t\t\t\tif (availEnabled) {\r\n   \t\t\t\t\telementAvail =((Double) availsMap.get(new Integer(ve.getId()))).doubleValue();\r\n   \t\t\t\t} else {\r\n   \t\t\t\t\telementAvail = defaultEnableFalseAvail.getMin();\r\n   \t\t\t\t}\r\n   \t\t\t\t\r\n    \t\t\tOutageInfo oi = (OutageInfo) outagedNodes.get(new Integer(ve.getId()));\r\n\t\t\t\tif (oi != null) {\r\n   \t\t\t\t\telementStatus = oi.getStatus();\r\n   \t\t\t\t\telementSeverity= oi.getSeverity();\r\n   \t    \t\t\t// get avalaibility\r\n   \t\t\t\t} \r\n     \t\t} else {\r\n   \t\t\t\tSet nodesonve = getNodeidsOnElement(ve);\r\n   \t    \t\tif (nodesonve != null && nodesonve.size()> 0) {\r\n   \t    \t\t\tif (availEnabled) {\r\n   \t    \t\t\t\tlog.debug(\"Getting avails for Map-Node\");\r\n   \t   \t    \t\t\telementAvail = getNodeAvailability(nodesonve,availsMap);\r\n   \t   \t    \t\tlog.debug(\"Avails for Map-Node obtained\" );\r\n   \t    \t\t\t} else {\r\n   \t   \t\t\t\t\telementAvail = defaultEnableFalseAvail.getMin();\r\n   \t   \t\t\t\t}\r\n   \t    \t\t\t\r\n   \t    \t\t\tite = nodesonve.iterator();\r\n   \t    \t\t\tint sev = 0; \r\n   \t    \t\t\twhile (ite.hasNext()) {\r\n   \t   \t\t\t\t\tOutageInfo oi = (OutageInfo) outagedNodes.get((Integer)(ite.next()));\r\n   \t    \t\t\t\tif (oi != null) {\r\n   \t    \t\t\t\t\tif (oi.getStatus() < elementStatus) elementStatus= oi.getStatus();\r\n\t   \t   \t\t\t\t\tsev += oi.getSeverity();\r\n   \t    \t\t\t\t} else {\r\n   \t    \t    \t\t\tsev += defaultSeverityId; \r\n   \t    \t\t\t\t}\r\n   \t    \t\t\t}\r\n   \t    \t\t\telementSeverity = sev/nodesonve.size();\r\n   \t    \t\t}\r\n       \t\t}\r\n\r\n   \t\t\tif (log.isDebugEnabled()) \r\n    \t\t\tlog.debug(\"refreshElements: element avail/status/severity \" + elementAvail + \"/\" + elementStatus + \"/\" + elementSeverity);\r\n\r\n    \t\tve.setRtc(elementAvail);\r\n\t\t\tve.setStatus(elementStatus);\r\n\t\t\tve.setSeverity(new BigDecimal(elementSeverity+1/2).intValue());\r\n\t\t\t//got the label\r\n\t\t\tve.setLabel(getLabel(ve));\r\n\r\n\t\t\tif (!returnChangedElem || (returnChangedElem && !ve.equalsIgnorePosition(mapElements[i]))){\r\n\t\t\t\tlog.debug(\"Adding element \"+ve.getId());\r\n\t\t\t\telems.add(ve);\r\n\t\t\t}\r\n    \t}\r\n        return elems;\r\n    }","id":20693,"modified_method":"/**\n     * Refreshes of avail,severity and status of the elements in input.\n     * The refresh is performed as follows:\n     * \t- default factory is used if no others defined;\n     *\t- if in the using factory is defined a source, the system will use this one \n     *\t  else, the system will use default source (OpenNMS)\n     *\t \n     * @param mapElements the elements to refresh\n     * @param incremental return only changed elements, if the refresh implementation is capable of this operation\n     * @return List of VElement\n     * @throws MapsException\n     */\n    public List refreshElements(VElement[] mapElements) throws MapsException{\n    \t\n    \tString LOG4J_CATEGORY = \"OpenNMS.Map\";\n    \tCategory log;\n\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\n\t\tlog = ThreadCategory.getInstance(this.getClass());\n\t\tList elems = new ArrayList();\n\n        if (mapElements == null || mapElements.length == 0){\n\t\t\tlog.warn(\"refreshElements: method called with null or empty input\");\n\t\t\treturn elems;\n        }\n\n        return Arrays.asList(m_implManager.refreshElements(mapElements));\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected VElement(int mapId, int id, String type, String label, String iconName) throws MapsException {\r\n        super(mapId, id, type, label, iconName, 0, 0);\r\n        isChild = true;\r\n    }","id":20694,"modified_method":"public VElement(int mapId, int id, String type, String label, String iconName) throws MapsException {\r\n        super(mapId, id, type, label, iconName, 0, 0);\r\n        isChild = true;\r\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * \r\n     */\r\n    protected VElement() {\r\n        super();\r\n    }","id":20695,"modified_method":"/**\r\n     * \r\n     */\r\n\tpublic VElement() {\r\n        super();\r\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * @param e\r\n     */\r\n    VElement(Element e) throws MapsException {\r\n        super(e);\r\n    }","id":20696,"modified_method":"/**\r\n     * @param e\r\n     */\r\n    public VElement(Element e) throws MapsException {\r\n        super(e);\r\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * @param mapId\r\n     * @param id\r\n     * @param type\r\n     * @param label\r\n     * @param iconName\r\n     * @param x\r\n     * @param y\r\n     */\r\n    protected VElement(int mapId, int id, String type, String iconName,String label,\r\n            int x, int y) throws MapsException {\r\n        super(mapId, id, type, label, iconName, x, y);\r\n        isChild = true;\r\n    }","id":20697,"modified_method":"/**\r\n     * @param mapId\r\n     * @param id\r\n     * @param type\r\n     * @param label\r\n     * @param iconName\r\n     * @param x\r\n     * @param y\r\n     */\r\n    public VElement(int mapId, int id, String type, String iconName,String label,\r\n            int x, int y) throws MapsException {\r\n        super(mapId, id, type, label, iconName, x, y);\r\n        isChild = true;\r\n    }","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean equals(Object otherLink) {\r\n\t\tVLink link = (VLink) otherLink;\r\n\t\tif (((this.elem1.getId() == link.getFirst().getId())\r\n\t\t\t\t&& this.elem1.getType().equals(link.getFirst().getType())\r\n\t\t\t\t&& (this.elem2.getId() == link.getSecond().getId()) && this.elem2\r\n\t\t\t\t.getType().equals(link.getSecond().getType()))\r\n\t\t\t\t|| (this.elem1.getId() == link.getSecond().getId()\r\n\t\t\t\t\t\t&& this.elem1.getType().equals(\r\n\t\t\t\t\t\t\t\tlink.getSecond().getType())\r\n\t\t\t\t\t\t&& this.elem2.getId() == link.getFirst().getId() && (this.elem2\r\n\t\t\t\t\t\t.getType().equals(link.getFirst().getType()))))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}","id":20698,"modified_method":"public boolean equals(Object otherLink) {\r\n\t\tif (!(otherLink instanceof VLink)) return false;\r\n\t\tVLink link = (VLink) otherLink;\r\n\t\tif (\r\n\t\t (this.elem1.hasSameIdentifier(link.getFirst()) && this.elem2.hasSameIdentifier(link.getSecond()))\r\n\t\t\t||\r\n\t\t(this.elem2.hasSameIdentifier(link.getFirst()) && this.elem1.hasSameIdentifier(link.getSecond()))\r\n\t\t) return true;\r\n\t\treturn false;\r\n\t}","commit_id":"d9528dc019ceb3f1c2a4f15739bb8476bbf74ecc","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public MapMenu getMapMenu(int mapId) throws MapsManagementException,\r\n    MapNotFoundException, MapsException {\r\n\r\n\t\tMapMenu m = null;\r\n\t\ttry {\r\n\t\t\tm = Factory.getMapMenu(mapId);\r\n\t\t    if (m == null) {\r\n\t\t        throw new MapNotFoundException(\"No Maps found.\");\r\n\t\t    }\r\n\t\t} catch (SQLException se) {\r\n\t\t\tthrow new MapsManagementException(\"Factory: unable to get map (menu) with id \"\r\n\t\t            +mapId +\".\" + se);\r\n\t\t}\r\n\t\t\r\n\t\treturn m;\r\n\t\t\r\n\t}","id":20699,"modified_method":"public MapMenu getMapMenu(int mapId) throws MapNotFoundException, MapsException {\n\t\tMapMenu m = null;\n\t\t\tm = m_implManager.getMapMenu(mapId);\n\t\t    if (m == null) {\n\t\t        throw new MapNotFoundException(\"No Maps found.\");\n\t\t    }\n\t\treturn m;\n\t}","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Close the block open by startSession() method.\r\n     * \r\n     * @throws MapsException\r\n     * @see startSession()\r\n     */\r\n    synchronized public void endSession() throws MapsManagementException {\r\n        try {\r\n        \tFactory.releaseDbConnection();\r\n            m_dbManager.endSession();\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\"Manager: unable to end session.\"\r\n                    + se);\r\n        }\r\n    }","id":20700,"modified_method":"/**\n     * Close the block open by startSession() method.\n     * \n     * @throws MapsException\n     * @see startSession()\n     */\n    synchronized public void endSession() throws MapsException {\n    \t\tm_implManager.endSession();\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type, String iconname, int x,int y) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n\t\tVElement elem = new VElement(mapId,elementId,type,iconname,label,x,y);\r\n        return elem;\r\n    }","id":20701,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type, String iconname, int x,int y) throws \n            MapsException {\n\t\tElement elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,iconname,elem.getLabel(),x,y);\n\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * delete the map with identifier id\r\n     * \r\n     * @param id\r\n     *            of the map to delete\r\n     * @throws MapsException\r\n     */\r\n    synchronized public void deleteMap(int mapId) throws MapsException {\r\n        try {\r\n            m_dbManager.deleteMap(mapId);\r\n        } catch (SQLException s) {\r\n            throw new MapsException(\"Error while deleting map with id=\" + mapId\r\n                    + \"\\n \" + s);\r\n        }\r\n    }","id":20702,"modified_method":"/**\n     * delete the map with identifier id\n     * \n     * @param id\n     *            of the map to delete\n     * @throws MapsException\n     */\n    synchronized public void deleteMap(int mapId) throws MapsException {\n         m_implManager.deleteMap(mapId);\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the map with id in input and return it in VMap form.\r\n     * \r\n     * @param id\r\n     * @return the VMap with identifier id\r\n     * @throws MapsException\r\n     */\r\n    public VMap getMap(int id) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \t\r\n        VMap retVMap = null;\r\n        try {\r\n        \tlog.debug(\"Starting getMap with id \"+id);\r\n            Map m = Factory.getMap(id);\r\n            log.debug(\"Ending getMap with id \"+id);\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"Map with id \" + id\r\n                        + \" doesn't exist.\");\r\n            }\r\n            log.debug(\"Creating VMap with id \"+id);\r\n            retVMap = new VMap(id, m.getName(), m.getBackground(),\r\n                    m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\r\n                            .getScale(), m.getOffsetX(), m.getOffsetY(), m\r\n                            .getType(),m.getWidth(),m.getHeight());\r\n            log.debug(\"VMap with id \"+id+\" created.\");\r\n            retVMap.setCreateTime(m.getCreateTime());\r\n            retVMap.setLastModifiedTime(m.getLastModifiedTime());\r\n            log.debug(\"Starting getting elems for map with id \"+id);\r\n            Element[] mapElems = Factory.getElementsOfMap(id);\r\n            log.debug(\"Ending getting elems for map with id \"+id);\r\n            VElement elem =null;\r\n            if(mapElems!=null){\r\n\t            for (int i = 0; i < mapElems.length; i++) {\r\n            \t\telem = new VElement(mapElems[i]);\r\n            \t\t// here we must add all the stuff required\r\n            \t\tretVMap.addElement(elem);\r\n\t            }\r\n            }\r\n            log.debug(\"Starting refreshing elems for map with id \"+id);\r\n            List els = refreshElements(retVMap.getAllElements(),false);\r\n            log.debug(\"Ending refreshing elems for map with id \"+id);\r\n            log.debug(\"els.toArray()\");\r\n            VElement[] ves = (VElement[]) els.toArray(new VElement[0]);\r\n\t\t\tlog.debug(\"addElements(els)\");\r\n\t\t\tretVMap.addElements(ves);\r\n            \r\n            log.debug(\"Starting adding links for map with id \"+id);\r\n            log.debug(\"Starting getLinks\");\r\n            VLink[] vls = (VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]);\r\n            log.debug(\"Ending getLinks\");\r\n            log.debug(\"Starting addLinks\");\r\n            retVMap.addLinks(vls);\r\n            log.debug(\"Ending addLinks\");\r\n            log.debug(\"Ending adding links for map with id \"+id);\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Manager: unable to get map with id=\" + id + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20703,"modified_method":"/**\n     * Take the map with id in input and return it in VMap form.\n     * \n     * @param id\n     * @param refreshElems says if refresh the map's elements\n     * @return the VMap with identifier id\n     * @throws MapsException\n     */\n    public VMap getMap(int id, boolean refreshElems) throws MapsManagementException,\n            MapNotFoundException, MapsException {\n    \t\n        VMap retVMap = null;\n\n        Map m = m_implManager.getMap(id);\n        if (m == null) {\n            throw new MapNotFoundException(\"Map with id \" + id\n                    + \" doesn't exist.\");\n        }\n        retVMap = new VMap(id, m.getName(), m.getBackground(),\n                m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\n                        .getScale(), m.getOffsetX(), m.getOffsetY(), m\n                        .getType(),m.getWidth(),m.getHeight());\n        retVMap.setCreateTime(m.getCreateTime());\n        retVMap.setLastModifiedTime(m.getLastModifiedTime());\n        Element[] mapElems = m_implManager.getElementsOfMap(id);\n        VElement elem =null;\n        if(mapElems!=null){\n            for (int i = 0; i < mapElems.length; i++) {\n        \t\telem = new VElement(mapElems[i]);\n        \t\t// here we must add all the stuff required\n        \t\tretVMap.addElement(elem);\n            }\n        }\n\n        if(refreshElems){\n            log.debug(\"Starting refreshing elems for map with id \"+id);\n       \t\tVElement[] changedElems = m_implManager.refreshElements(retVMap.getAllElements());\n    \t\tif(changedElems!=null){\n\t       \t\tfor(int i=0;i<changedElems.length;i++){\n\t    \t\t\tretVMap.removeElement(changedElems[i].getId(), changedElems[i].getType());\n\t    \t\t\tretVMap.addElement(changedElems[i]);\n\t    \t\t}\n    \t\t}\n        }\n\t\t\n        \n        log.debug(\"Starting adding links for map with id \"+id);\n        log.debug(\"Starting getLinks\");\n        //VLink[] vls = null;\n        VLink[] vls = (VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]);\n        log.debug(\"Ending getLinks\");\n        log.debug(\"Starting addLinks\");\n        retVMap.addLinks(vls);\n        log.debug(\"Ending addLinks\");\n        log.debug(\"Ending adding links for map with id \"+id);\n        return retVMap;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * \r\n     * @param mapElements the elements to refresh\r\n     * @param returnChangedElem return only element changed\r\n     * @return List of VElement\r\n     * @throws MapsException\r\n     * @throws SQLException\r\n     */\r\n    public List refreshElements(VElement[] mapElements, boolean returnChangedElem) throws MapsException, SQLException {\r\n    \t\r\n    \tString LOG4J_CATEGORY = \"OpenNMS.Map\";\r\n    \tCategory log;\r\n\r\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\r\n\t\tlog = ThreadCategory.getInstance(this.getClass());\r\n\t\tList elems = new ArrayList();\r\n\r\n        if (mapElements == null || mapElements.length == 0){\r\n\t\t\tlog.warn(\"refreshElements: method called with null or empty input\");\r\n\t\t\treturn elems;\r\n        }\r\n\r\n        CategoryModel cModel;\r\n        log.debug(\"Instantiating CModel\");\r\n        try {\r\n            cModel = CategoryModel.getInstance();\r\n        } catch (Exception e) {\r\n        \tthrow new MapsException(e);\r\n        }\r\n        log.debug(\"CModel instantiated.\");\r\n        log.debug(\"Getting outaged elems.\");\r\n        Iterator ite = Factory.getOutagedVElems().iterator();\r\n        log.debug(\"Outaged elems obtained.\");\r\n        java.util.Map outagedNodes = new HashMap();\r\n\t\tfloat severity = 0;\r\n\t\twhile (ite.hasNext()) {\r\n\t\t\tElementInfo outagelem = (ElementInfo) ite.next();\r\n\t\t\tint outageStatus = getStatus(outagelem.getUei());\r\n\t\t\tint outageSeverity = getSeverity(EventUtil.getSeverityLabel(outagelem.getSeverity()));\r\n\r\n\t\t\tif (log.isInfoEnabled())\r\n\t\t\t\tlog.info(\"refreshElements: parsing outaged node with nodeid: \" + outagelem.getId());\r\n\t\t\tOutageInfo oi = (OutageInfo)outagedNodes.get(new Integer(outagelem.getId())); \r\n\r\n\t\t\tif (oi != null) {\r\n\r\n\t\t\t\tif (oi.getStatus() > outageStatus) oi.setStatus(outageStatus);\r\n\t\t\t\toi.setSeverity((oi.getSeverity()+outageSeverity)/2);\r\n\t\t\t} else {\r\n\t\t\t\tint curStatus = outageStatus;\r\n\t\t\t\tfloat curSeverity = outageSeverity;\r\n\t\t\t\toi = new OutageInfo(outagelem.getId(),curStatus,curSeverity);\r\n\t\t\t}\r\n\t\t\toutagedNodes.put(new Integer(outagelem.getId()),oi);\r\n    \t\tif (log.isDebugEnabled()) \r\n    \t\t\tlog.debug(\"refreshElements: node status/severity \" + outageStatus + \"/\" + outageSeverity);\r\n\t\t}\r\n\r\n\t\tint status = defaultStatusId;\r\n\t\tVElement ve = null;\r\n\r\n\t\t\r\n\t\tjava.util.Map availsMap = null;\r\n\t\tif (availEnabled) {\r\n\t\t\tSet nodeIds = new TreeSet();\r\n\t\t\tfor(int i=0;i<mapElements.length;i++){\r\n\t\t\t\tif(mapElements[i].isNode()){\r\n\t\t\t\t\tnodeIds.add(new Integer(mapElements[i].getId()));\r\n\t\t\t\t}else{\r\n\t\t\t\t\tnodeIds.addAll(getNodeidsOnElement(mapElements[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlog.debug(\"Getting avails for nodes of map (\"+nodeIds.size()+\" nodes)\");\r\n\t\t\tavailsMap = cModel.getNodeAvailability(nodeIds);\r\n\t\t\tlog.debug(\"Avails obtained\");\r\n\t\t}\r\n\r\n    \tfor(int i=0;i<mapElements.length;i++){\r\n    \t\tve = (VElement) mapElements[i].clone();\r\n    \t\tif (log.isDebugEnabled()) \r\n    \t\t\tlog.debug(\"refreshElements: parsing VElement ID \" + ve.getId()+ve.getType());\r\n\r\n    \t\tdouble elementAvail =100.0;\r\n\t\t\tint elementStatus = defaultStatusId;\r\n   \t\t\tfloat elementSeverity = defaultSeverityId;\r\n \r\n    \t\t// get status and severity\r\n\t\t\t// status is worse\r\n\t\t\t// severity is medium value among severities\r\n   \t\t\tif (ve.isNode()) {\r\n   \t\t\t\tif (availEnabled) {\r\n   \t\t\t\t\telementAvail =((Double) availsMap.get(new Integer(ve.getId()))).doubleValue();\r\n   \t\t\t\t} else {\r\n   \t\t\t\t\telementAvail = defaultEnableFalseAvail.getMin();\r\n   \t\t\t\t}\r\n   \t\t\t\t\r\n    \t\t\tOutageInfo oi = (OutageInfo) outagedNodes.get(new Integer(ve.getId()));\r\n\t\t\t\tif (oi != null) {\r\n   \t\t\t\t\telementStatus = oi.getStatus();\r\n   \t\t\t\t\telementSeverity= oi.getSeverity();\r\n   \t    \t\t\t// get avalaibility\r\n   \t\t\t\t} \r\n     \t\t} else {\r\n   \t\t\t\tSet nodesonve = getNodeidsOnElement(ve);\r\n   \t    \t\tif (nodesonve != null && nodesonve.size()> 0) {\r\n   \t    \t\t\tif (availEnabled) {\r\n   \t    \t\t\t\tlog.debug(\"Getting avails for Map-Node\");\r\n   \t   \t    \t\t\telementAvail = getNodeAvailability(nodesonve,availsMap);\r\n   \t   \t    \t\tlog.debug(\"Avails for Map-Node obtained\" );\r\n   \t    \t\t\t} else {\r\n   \t   \t\t\t\t\telementAvail = defaultEnableFalseAvail.getMin();\r\n   \t   \t\t\t\t}\r\n   \t    \t\t\t\r\n   \t    \t\t\tite = nodesonve.iterator();\r\n   \t    \t\t\tint sev = 0; \r\n   \t    \t\t\twhile (ite.hasNext()) {\r\n   \t   \t\t\t\t\tOutageInfo oi = (OutageInfo) outagedNodes.get((Integer)(ite.next()));\r\n   \t    \t\t\t\tif (oi != null) {\r\n   \t    \t\t\t\t\tif (oi.getStatus() < elementStatus) elementStatus= oi.getStatus();\r\n\t   \t   \t\t\t\t\tsev += oi.getSeverity();\r\n   \t    \t\t\t\t} else {\r\n   \t    \t    \t\t\tsev += defaultSeverityId; \r\n   \t    \t\t\t\t}\r\n   \t    \t\t\t}\r\n   \t    \t\t\telementSeverity = sev/nodesonve.size();\r\n   \t    \t\t}\r\n       \t\t}\r\n\r\n   \t\t\tif (log.isDebugEnabled()) \r\n    \t\t\tlog.debug(\"refreshElements: element avail/status/severity \" + elementAvail + \"/\" + elementStatus + \"/\" + elementSeverity);\r\n\r\n    \t\tve.setRtc(elementAvail);\r\n\t\t\tve.setStatus(elementStatus);\r\n\t\t\tve.setSeverity(new BigDecimal(elementSeverity+1/2).intValue());\r\n\t\t\t//got the label\r\n\t\t\tve.setLabel(getLabel(ve));\r\n\r\n\t\t\tif (!returnChangedElem || (returnChangedElem && !ve.equalsIgnorePosition(mapElements[i]))){\r\n\t\t\t\tlog.debug(\"Adding element \"+ve.getId());\r\n\t\t\t\telems.add(ve);\r\n\t\t\t}\r\n    \t}\r\n        return elems;\r\n    }","id":20704,"modified_method":"/**\n     * Refreshes of avail,severity and status of the elements in input.\n     * The refresh is performed as follows:\n     * \t- default factory is used if no others defined;\n     *\t- if in the using factory is defined a source, the system will use this one \n     *\t  else, the system will use default source (OpenNMS)\n     *\t \n     * @param mapElements the elements to refresh\n     * @param incremental return only changed elements, if the refresh implementation is capable of this operation\n     * @return List of VElement\n     * @throws MapsException\n     */\n    public List refreshElements(VElement[] mapElements) throws MapsException{\n    \t\n    \tString LOG4J_CATEGORY = \"OpenNMS.Map\";\n    \tCategory log;\n\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\n\t\tlog = ThreadCategory.getInstance(this.getClass());\n\t\tList elems = new ArrayList();\n\n        if (mapElements == null || mapElements.length == 0){\n\t\t\tlog.warn(\"refreshElements: method called with null or empty input\");\n\t\t\treturn elems;\n        }\n\n        return Arrays.asList(m_implManager.refreshElements(mapElements));\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * delete the map in input\r\n     * \r\n     * @param map\r\n     *            to delete\r\n     * @throws MapsException\r\n     *             if an error occour deleting map, MapNotFoundException if the\r\n     *             map to delete doesn't exist.\r\n     */\r\n    synchronized public void deleteMap(VMap map) throws MapsException,\r\n            MapNotFoundException {\r\n        try {\r\n            if (m_dbManager.deleteMap(map.getId()) == 0)\r\n                throw new MapNotFoundException(\"The Map doesn't exist.\");\r\n        } catch (SQLException s) {\r\n            throw new MapsException(\"Error while deleting map with id=\"\r\n                    + map.getId() + \"\\n \" + s);\r\n        }\r\n    }","id":20705,"modified_method":"/**\n     * delete the map in input\n     * \n     * @param map\n     *            to delete\n     * @throws MapsException\n     *             if an error occour deleting map, MapNotFoundException if the\n     *             map to delete doesn't exist.\n     */\n    synchronized public void deleteMap(VMap map) throws MapsException,\n            MapNotFoundException {\n        if (m_implManager.deleteMap(map.getId()) == 0)\n            throw new MapNotFoundException(\"The Map doesn't exist.\");\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take all the maps in the tree of maps considering the with name in input\r\n     * as the root of the tree. If there are more maps with <i>mapName<\/i> (case insensitive)\r\n     * all trees with these maps as root are considered and returned. \r\n     * \r\n     * @param mapName\r\n     * @return a List with the MapMenu objects.\r\n     * @throws MapsException\r\n     */\r\n    public List getMapsMenuTreeByName(String mapName) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \t  List mapsInTreesList = new ArrayList();\r\n\t      //\r\n\t      MapMenu[] mapsMenu = null;\r\n\t      try{\r\n\t      \tmapsMenu=getMapsMenuByName(mapName);\r\n\t      }catch(MapNotFoundException mnf){\r\n\t      \t//do nothing...\r\n\t      }\r\n\t      if(mapsMenu!=null){\r\n\t      \t  // find all accessible maps for the user,\r\n\t      \t  // for all maps (and theirs tree of maps) with name like user's ADProfile. \r\n\t      \t  for(int k=0; k<mapsMenu.length;k++){\r\n\t      \t  \t  //build a map in wich each entry is [mapparentid, listofchildsids]\r\n\t\t\t      java.util.Map parent_child = new HashMap();\r\n\t\t\t      try{\r\n\t\t\t      \tparent_child = Factory.getMapsStructure();\r\n\t\t\t      }catch(Exception e){\r\n\t\t\t      \tthrow new MapsException(e);\r\n\t\t\t      }\r\n\t\t\t      \r\n\t\t\t      \r\n\t\t\t      List childList = new ArrayList();\r\n\t\t\t      preorderVisit(new Integer(mapsMenu[k].getId()), childList, parent_child);\r\n\t\t\t      for(int i=0; i<childList.size(); i++){\r\n\t\t\t      \tpreorderVisit((Integer)childList.get(i), childList, parent_child);\r\n\t\t\t      }\r\n\r\n\t\t\t      //adds all sub-tree of maps to the visible map list\r\n\t\t\t      for(int i=0; i<childList.size(); i++){\r\n\t\t\t      \tmapsInTreesList.add(getMapMenu(((Integer)childList.get(i)).intValue()));\r\n\t\t\t      }\r\n\t      \t  }\r\n\t      }\r\n\r\n        return mapsInTreesList;\r\n    }","id":20706,"modified_method":"/**\n     * Take all the maps in the tree of maps considering the with name in input\n     * as the root of the tree. If there are more maps with <i>mapName<\/i> (case insensitive)\n     * all trees with these maps as root are considered and returned. \n     * \n     * @param mapName\n     * @return a List with the MapMenu objects.\n     * @throws MapsException\n     */\n    public List getMapsMenuTreeByName(String mapName) throws \n            MapNotFoundException, MapsException {\n    \t  List mapsInTreesList = new ArrayList();\n\t      //\n\t      MapMenu[] mapsMenu = null;\n\t      try{\n\t      \tmapsMenu=getMapsMenuByName(mapName);\n\t      }catch(MapNotFoundException mnf){\n\t      \t//do nothing...\n\t      }\n\t      if(mapsMenu!=null){\n\t      \t  // find all accessible maps for the user,\n\t      \t  // for all maps (and theirs tree of maps) with name like mapName. \n\t      \t  for(int k=0; k<mapsMenu.length;k++){\n\t      \t  \t  //build a map in wich each entry is [mapparentid, listofchildsids]\n\t\t\t      java.util.Map parent_child = new HashMap();\n\t\t\t      parent_child = m_implManager.getMapsStructure();\n\t\t\t      List childList = new ArrayList();\n\t\t\t      preorderVisit(new Integer(mapsMenu[k].getId()), childList, parent_child);\n\t\t\t      for(int i=0; i<childList.size(); i++){\n\t\t\t      \tpreorderVisit((Integer)childList.get(i), childList, parent_child);\n\t\t\t      }\n\t\t\t      //adds all sub-tree of maps to the visible map list\n\t\t\t      for(int i=0; i<childList.size(); i++){\n\t\t\t      \tmapsInTreesList.add(getMapMenu(((Integer)childList.get(i)).intValue()));\n\t\t\t      }\n\t      \t  }\n\t      }\n        return mapsInTreesList;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type, int x,int y) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n\t\tString iconname = getIconName(elementId,type);\r\n\t\tVElement elem = new VElement(mapId,elementId,type,iconname,label,x,y);\r\n        return elem;\r\n    }","id":20707,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type, int x,int y) throws \n             MapsException{\n\n\t\tElement elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,elem.getIcon(),elem.getLabel(),x,y);\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Start the session: only operations made in the block between start and\r\n     * end session will be saved correctly.\r\n     * \r\n     * @throws MapsException\r\n     * @see endSession\r\n     */\r\n    public void startSession() throws MapsManagementException {\r\n        try {\r\n        \tFactory.createDbConnection();\r\n            m_dbManager.startSession();\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Manager: unable to start session.\" + se);\r\n        }\r\n    }","id":20708,"modified_method":"/**\n     * Start the session: only operations made in the block between start and\n     * end session will be saved correctly.\n     * \n     * @throws MapsException\n     * @see endSession\n     */\n    public void startSession() throws MapsException {\n        \tm_implManager.init();\n            m_implManager.startSession();\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public List getLinks(VElement[] elems) throws SQLException, MapsException {\r\n\r\n    \tList links = new ArrayList();\r\n        \r\n    \t// this is the list of nodes set related to Element\r\n    \tjava.util.List elemNodes = new java.util.ArrayList();\r\n    \ttry{\r\n\t    \tif (elems != null) {\r\n\t        \tfor (int i = 0; i < elems.length; i++) {\r\n\t                Set nodeids = getNodeidsOnElement(elems[i]);\r\n\t                elemNodes.add(nodeids);\r\n\t         \t}\r\n\t        }\r\n\t        \r\n\t        Iterator ite = elemNodes.iterator();\r\n\t        int firstelemcount = 0;\r\n\t        Set linkid = new TreeSet();\r\n\t        Connection conn = Vault.getDbConnection();\r\n\t        while (ite.hasNext()) {\r\n\t        \tSet firstelemnodes = (TreeSet) ite.next();\r\n\t        \tSet firstlinkednodes = getLinkedNodeidsOnNodes(firstelemnodes, conn);\r\n\t            int secondelemcount = firstelemcount +1;\r\n\t            Iterator sub_ite = elemNodes.subList(secondelemcount,elemNodes.size()).iterator(); \r\n\t        \twhile (sub_ite.hasNext()) {\r\n\t        \t\tIterator node_ite = ((TreeSet) sub_ite.next()).iterator();\r\n\t        \t\twhile (node_ite.hasNext()) {\r\n\t        \t\t\tInteger curNodeId = (Integer) node_ite.next();\r\n\t        \t\t\tif (firstlinkednodes.contains(curNodeId)) {\r\n\t        \t\t\t\tVLink vlink = new VLink(elems[firstelemcount],elems[secondelemcount]);\r\n\t        \t\t\t\tif(!links.contains(vlink)){\r\n\t        \t\t\t\t\tlog.debug(\"adding link \"+vlink.getFirst().getId()+vlink.getFirst().getType()+\"-\"+vlink.getSecond().getId()+vlink.getSecond().getType());\r\n\t        \t\t\t\t\tlinks.add(vlink);\r\n\t        \t\t\t\t}\r\n\t        \t\t\t}\r\n\t        \t\t}\r\n\t        \t\tsecondelemcount++;\r\n\t\t\t\t}\r\n\t\t\t\tfirstelemcount++;\r\n\t\t\t}\r\n\t        Vault.releaseDbConnection(conn);\r\n    \t}catch(SQLException s){\r\n    \t\tthrow s;\r\n    \t}catch(Exception e){\r\n    \t\tthrow new MapsException(e);\r\n    \t}\r\n        return links;\r\n    }","id":20709,"modified_method":"public List getLinks(VElement[] elems) throws MapsException {\n\n    \tList links = new ArrayList();\n        \n    \t\n    \tVLink[] vlinks = m_implManager.getLinks(elems);\n    \tif (vlinks != null) for (int i=0;i<vlinks.length;i++) {\n    \t\tlinks.add(vlinks[i]);\n    \t\t\n    \t}\n        return links;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n\t\tString iconname = Factory.getIconName(elementId,type);\r\n        VElement elem = new VElement(mapId,elementId,type,label,iconname);\r\n        return elem;\r\n    }","id":20710,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type) throws MapsException {\n\n\t\tElement elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,elem.getLabel(),elem.getIcon());\n\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the map label and type in input and return it in VMap form.\r\n     * \r\n     * @param mapname\r\n     * @param maptype\r\n     * @return the VMap[] with corresponding mapname and maptype\r\n     * @throws MapsException\r\n     */\r\n\r\n    public VMap[] getMap(String mapname, String maptype) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \t\r\n        VMap retVMap = null;\r\n        if (!maptype.equals(VMap.AUTOMATICALLY_GENERATED_MAP) && !maptype.equals(VMap.USER_GENERATED_MAP)) {\r\n            throw new MapNotFoundException(\"Map with uncorrect maptype \" + maptype);\r\n        }\r\n        Vector ve = new Vector();\r\n\r\n        try {\r\n            Map[] maps = Factory.getMaps(mapname,maptype);\r\n            if (maps == null) {\r\n                throw new MapNotFoundException(\"Map with mapname \" + mapname\r\n                        + \"and maptype \" + maptype + \" doesn't exist.\");\r\n            }\r\n            for (int i = 0; i<maps.length;i++) {\r\n            \tMap m = maps[i];\r\n            \tretVMap = new VMap(m.getId(), m.getName(), m.getBackground(),\r\n                    m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\r\n                            .getScale(), m.getOffsetX(), m.getOffsetY(), m\r\n                            .getType(),m.getWidth(),m.getHeight());\r\n            \tretVMap.setCreateTime(m.getCreateTime());\r\n            \tretVMap.setLastModifiedTime(m.getLastModifiedTime());\r\n            \tElement[] mapElems = Factory.getElementsOfMap(m.getId());\r\n            \tVElement elem =null;\r\n            \tif(mapElems!=null){\r\n            \t\tfor (int j = 0; j < mapElems.length; j++) {\r\n            \t\t\telem = new VElement(mapElems[j]);\r\n            \t\t\t// here we must add all the stuff required\r\n            \t\t\tretVMap.addElement(elem);\r\n            \t\t}\r\n            \t}\r\n            \tretVMap.addElements((VElement[]) refreshElements(retVMap.getAllElements(),false).toArray(new VElement[0]));\r\n            \tretVMap.addLinks((VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]));\r\n            \tve.add(retVMap);\r\n            }\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get map with mapname and maptype \" + mapname + maptype + \".\" + se);\r\n        }\r\n        VMap[] vmaps = new VMap[ve.size()];\r\n        vmaps=(VMap[])ve.toArray(vmaps);\r\n        return vmaps;\r\n     }","id":20711,"modified_method":"/**\n     * Take the map label and type in input and return it in VMap form.\n     * \n     * @param mapname\n     * @param maptype\n     * @param refreshElems says if refresh map's elements\n     * @return the VMap[] with corresponding mapname and maptype\n     * @throws MapsException\n     */\n\n    public VMap[] getMap(String mapname, String maptype, boolean refreshElems) throws MapsManagementException,\n            MapNotFoundException, MapsException {\n    \t\n        VMap retVMap = null;\n        if (!maptype.equals(VMap.AUTOMATICALLY_GENERATED_MAP) && !maptype.equals(VMap.USER_GENERATED_MAP)) {\n            throw new MapNotFoundException(\"Map with uncorrect maptype \" + maptype);\n        }\n        Vector ve = new Vector();\n\n        Map[] maps = m_implManager.getMaps(mapname,maptype);\n        if (maps == null) {\n            throw new MapNotFoundException(\"Map with mapname \" + mapname\n                    + \"and maptype \" + maptype + \" doesn't exist.\");\n        }\n        for (int i = 0; i<maps.length;i++) {\n        \tMap m = maps[i];\n        \tretVMap = new VMap(m.getId(), m.getName(), m.getBackground(),\n                m.getOwner(), m.getAccessMode(), m.getUserLastModifies(), m\n                        .getScale(), m.getOffsetX(), m.getOffsetY(), m\n                        .getType(),m.getWidth(),m.getHeight());\n        \tretVMap.setCreateTime(m.getCreateTime());\n        \tretVMap.setLastModifiedTime(m.getLastModifiedTime());\n        \tElement[] mapElems = m_implManager.getElementsOfMap(m.getId());\n        \tVElement elem =null;\n        \tif(mapElems!=null){\n        \t\tfor (int j = 0; j < mapElems.length; j++) {\n        \t\t\telem = new VElement(mapElems[j]);\n        \t\t\t// here we must add all the stuff required\n        \t\t\tretVMap.addElement(elem);\n        \t\t}\n        \t}\n            if(refreshElems){\n                log.debug(\"Starting refreshing elems for map with name \"+mapname+ \" and id \"+retVMap.getId());\n        \t\tVElement[] changedElems = m_implManager.refreshElements(retVMap.getAllElements());\n        \t\tfor(int j=0;j<changedElems.length;j++){\n        \t\t\tretVMap.removeElement(changedElems[j].getId(), changedElems[j].getType());\n        \t\t\tretVMap.addElement(changedElems[j]);\n        \t\t}\n                log.debug(\"Ending refreshing elems for map with name \"+mapname+ \" and id \"+retVMap.getId());\n            }\n        \tretVMap.addLinks((VLink[]) getLinks(retVMap.getAllElements()).toArray(new VLink[0]));\n        \tve.add(retVMap);\n        }\n        VMap[] vmaps = new VMap[ve.size()];\n        vmaps=(VMap[])ve.toArray(vmaps);\n        return vmaps;\n     }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public List getLinksOnElem(VElement[] elems,VElement elem) throws SQLException, MapsException {\r\n\r\n    \tList links = new java.util.ArrayList();\r\n        \r\n    \t// this is the list of nodes set related to Element\r\n    \tSet linkednodeids = null;\r\n\t\tif (elem != null) {\r\n            linkednodeids = getLinkedNodeidsOnNodes(getNodeidsOnElement(elem));\r\n        } else {\r\n        \treturn links;\r\n        }\r\n        \r\n        if (elems != null && linkednodeids != null) {\r\n    \t\t\r\n        \tfor (int i = 0; i < elems.length; i++) {\r\n\t    \t\tIterator node_ite = getNodeidsOnElement(elems[i]).iterator();\r\n\t    \t\twhile (node_ite.hasNext()) {\r\n\t    \t\t\tInteger elemNodeId = (Integer) node_ite.next();\r\n\t\t        \tif (linkednodeids.contains(elemNodeId)) {\r\n\t\t        \t\tVLink vlink = new VLink(elems[i],elem);\r\n\t\t       \t\t\tlinks.add(vlink);\r\n\t\t       \t\t}\r\n\t    \t\t}\r\n\t    \t}\r\n        }\r\n        return links;\r\n    }","id":20712,"modified_method":"public List getLinksOnElem(VElement[] elems,VElement elem) throws MapsException {\n\n    \tList links = new ArrayList();\n        \n    \t\n    \tVLink[] vlinks = m_implManager.getLinksOnElement(elems, elem);\n    \tif (vlinks != null) for (int i=0;i<vlinks.length;i++) {\n    \t\tlinks.add(vlinks[i]);\n    \t\t\n    \t}\n        return links;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Create a new (not child) empty Submap with the identifier setted to id.\r\n     * \r\n     * @param mapId\r\n     * @param elementId\r\n     * @param type the node type\r\n     * @return the new VElement\r\n     * @throws MapsManagementException\r\n     * @throws MapNotFoundException\r\n     * @throws MapsException\r\n     */\r\n\tpublic VElement newElement(int mapId, int elementId, String type,String iconname) throws MapsManagementException,\r\n            MapNotFoundException, MapsException, SQLException {\r\n\r\n\t\tString label = null;\r\n\t\tif (type.equals(VElement.NODE_TYPE)) label = NetworkElementFactory.getNodeLabel(elementId);\r\n\t\tif (type.equals(VElement.MAP_TYPE)) label = Factory.getMapName(elementId);\r\n        VElement elem = new VElement(mapId,elementId,type,label,iconname);\r\n        return elem;\r\n    }","id":20713,"modified_method":"/**\n     * Create a new (not child) empty Submap with the identifier setted to id.\n     * \n     * @param mapId\n     * @param elementId\n     * @param type the node type\n     * @return the new VElement\n     * @throws MapsException\n     */\n\tpublic VElement newElement(int mapId, int elementId, String type,String iconname) throws \n            MapsException{\n        Element elem = m_implManager.newElement(elementId, mapId, type);\n        return new VElement(mapId,elementId,type,elem.getLabel(),iconname);\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Get all defined maps.\r\n     * \r\n     * @return the VMaps array containing all maps defined\r\n     * @throws MapsException\r\n     */\r\n    public VMap[] getAllMaps() throws MapsManagementException,\r\n            MapNotFoundException, MapsException  {\r\n        VMap[] retVMap = null;\r\n        try {\r\n            Map[] m = Factory.getAllMaps();\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"No Maps found.\");\r\n            }\r\n            retVMap = new VMap[m.length];\r\n            for (int i = 0; i < m.length; i++) {\r\n                retVMap[i] = getMap(m[i].getId());\r\n            }\r\n\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\"Factory: unable to get all maps\"\r\n                    + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20714,"modified_method":"/**\n     * Get all defined maps.\n     * @param refreshElems says if refresh maps' elements\n     * @return the VMaps array containing all maps defined\n     * @throws MapsException\n     */\n    public VMap[] getAllMaps(boolean refreshElems) throws MapNotFoundException, MapsException  {\n        VMap[] retVMap = null;\n        Map[] m = m_implManager.getAllMaps();\n        if (m == null) {\n            throw new MapNotFoundException(\"No Maps found.\");\n        }\n        retVMap = new VMap[m.length];\n        for (int i = 0; i < m.length; i++) {\n            retVMap[i] = getMap(m[i].getId(), refreshElems);\n        }\n        return retVMap;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * save the map in input\r\n     * \r\n     * @param map\r\n     *            to save\r\n     * @throws MapsException\r\n     */\r\n    synchronized public void save(VMap map) throws MapsException {\r\n        try {\r\n            if (!map.isNew()) {\r\n                m_dbManager.deleteElementsOfMap(map.getId());\r\n            }\r\n            m_dbManager.saveMap(map);\r\n            m_dbManager.saveElements(map.getAllElements());\r\n        } catch (SQLException se) {\r\n            throw new MapsException(\"Error while saving map with id=\"\r\n                    + map.getId() + \"\\n\" + se);\r\n        }\r\n    }","id":20715,"modified_method":"/**\n     * save the map in input\n     * \n     * @param map\n     *            to save\n     * @throws MapsException\n     */\n    synchronized public void save(VMap map) throws MapsException {\n        if (!map.isNew()) {\n            m_implManager.deleteElementsOfMap(map.getId());\n        }\n        m_implManager.saveMap(map);\n        m_implManager.saveElements(map.getAllElements());\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public Manager() {\r\n\r\n\t\tString LOG4J_CATEGORY = \"OpenNMS.Map\";\r\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\r\n\t\tlog= ThreadCategory.getInstance(this.getClass());\r\n\r\n    \tm_dbManager = new org.opennms.web.map.db.Manager();\r\n        \r\n        try {\r\n        \tMapPropertiesFactory.init();\r\n        \tmpf = MapPropertiesFactory.getInstance();\r\n        \tstatuses = mpf.getStatusesMap();\r\n        \tseverities = mpf.getSeveritiesMap();\r\n        \tavails = mpf.getAvailabilitiesMap();\r\n        \tdefaultStatusId = mpf.getDefaultStatus().getId();\r\n        \tdefaultSeverityId = mpf.getDefaultSeverity().getId();\r\n        \tunknownStatusId = mpf.getUnknownUeiStatus().getId();\r\n        \tavailEnabled = mpf.enableAvail();\r\n        \tif (!availEnabled) defaultEnableFalseAvail = mpf.getDisabledAvail();\r\n        } catch (Exception e) {\r\n        \tlog.fatal(\"cannot use map.properties file \" + e);\r\n        }\r\n\r\n    }","id":20716,"modified_method":"/**\n     * Manage Maps using default implementation of Factory and Manager\n     */\n    public Manager() throws MapsException{\n    \t\n\t\tThreadCategory.setPrefix(MapsConstants.LOG4J_CATEGORY);\n\t\tlog= ThreadCategory.getInstance(this.getClass());\n        try {\n        \tMapPropertiesFactory.init();\n        \tmpf = MapPropertiesFactory.getInstance();\n        \tm_mapsFactory = mpf.getDefaultFactory();\n        \t\n           \tString dataSource = m_mapsFactory.getDataSource();\n           \tm_dataSource = null;\n        \tif(dataSource!=null){\n        \t\tm_dataSource = mpf.getDataSource(dataSource); \n        \t}\n \n        \tClass[] parameterTypes = {DataSource.class,java.util.Map.class};\n        \tObject[] params = {m_dataSource,m_mapsFactory.getParam()};\n        \tConstructor managerConstr = Class.forName(m_mapsFactory.getManagerClass()).getConstructor(parameterTypes);\n        \t\n        \tm_implManager = (org.opennms.web.map.dataaccess.Manager)managerConstr.newInstance(params);\n        } catch (Exception e) {\n        \tlog.fatal(\"cannot use map.properties file \" + e);\n        \te.printStackTrace();\n        \tthrow new MapsException(e);\n        }\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean foundLoopOnMaps(VMap parentMap,int mapId) throws SQLException {\r\n\t\t\r\n\t\tString LOG4J_CATEGORY = \"OpenNMS.Map\";\r\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\r\n\t\tCategory log= ThreadCategory.getInstance(this.getClass());\r\n\r\n\t\tjava.util.Map maps = Factory.getMapsStructure();\r\n\t\tVElement[] elems = parentMap.getAllElements();\r\n\t\tif (elems == null) return false;\r\n\t\tSet childSet = new TreeSet();\r\n\t\tfor (int i=0; i<elems.length;i++) {\r\n\t\t\tif (elems[i].getType().equals(VElement.MAP_TYPE))\r\n\t\t\t\tchildSet.add(new Integer(elems[i].getId()));\r\n\t\t}\r\n\t    \r\n\t\tlog.debug(\"List of sub-maps before preorder visit \"+childSet.toString());\r\n\r\n\t    maps.put(new Integer(parentMap.getId()),childSet);\r\n\r\n\t    while (childSet.size() > 0) {\r\n\t\t    childSet = preorderVisit(childSet,maps);\r\n\t\r\n\t\t    log.debug(\"List of sub-maps  \"+childSet.toString());\r\n\t\r\n\t\t    if(childSet.contains(new Integer(mapId))){\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t    }\r\n\treturn false;\r\n\t\r\n\t}","id":20717,"modified_method":"public boolean foundLoopOnMaps(VMap parentMap,int mapId) throws MapsException {\n\t\t\n\t\tString LOG4J_CATEGORY = \"OpenNMS.Map\";\n\t\tThreadCategory.setPrefix(LOG4J_CATEGORY);\n\t\tCategory log= ThreadCategory.getInstance(this.getClass());\n\n\t\tjava.util.Map maps = m_implManager.getMapsStructure();\n\t\tVElement[] elems = parentMap.getAllElements();\n\t\tif (elems == null) return false;\n\t\tSet childSet = new TreeSet();\n\t\tfor (int i=0; i<elems.length;i++) {\n\t\t\tif (elems[i].getType().equals(VElement.MAP_TYPE))\n\t\t\t\tchildSet.add(new Integer(elems[i].getId()));\n\t\t}\n\t    \n\t\tlog.debug(\"List of sub-maps before preorder visit \"+childSet.toString());\n\n\t    maps.put(new Integer(parentMap.getId()),childSet);\n\n\t    while (childSet.size() > 0) {\n\t\t    childSet = preorderVisit(childSet,maps);\n\t\n\t\t    log.debug(\"List of sub-maps  \"+childSet.toString());\n\t\n\t\t    if(childSet.contains(new Integer(mapId))){\n\t\t\t\treturn true;\n\t\t\t}\n\t    }\n\treturn false;\n\t\n\t}","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Get all defined maps.\r\n     * \r\n     * @return the VMaps array containing all maps defined\r\n     * @throws MapsException\r\n     */\r\n    \r\n    public MapMenu[] getAllMapMenus() throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \r\n    \tMapMenu[] m = null;\r\n\t\ttry {\r\n\t\t\tm = Factory.getAllMapsMenu();\r\n\t\t    if (m == null) {\r\n\t\t\treturn new MapMenu[0];\r\n\t\t        //throw new MapNotFoundException(\"No Maps found.\");\r\n\t\t    }\r\n\t\t} catch (SQLException se) {\r\n\t\t\tthrow new MapsManagementException(\"Factory: unable to get all maps\"\r\n\t                + \".\" + se);\r\n\t\t}\r\n\t\r\n\t    return m;\r\n\r\n    }","id":20718,"modified_method":"/**\n     * Get all defined maps.\n     * \n     * @return the MapMenu array containing all maps defined\n     * @throws MapsException\n     */\n    \n    public MapMenu[] getAllMapMenus() throws MapNotFoundException, MapsException {\n    \tMapMenu[] m = null;\n\t\tm = m_implManager.getAllMapMenus();\n\t    if (m == null) {\n\t        throw new MapNotFoundException(\"No Maps found.\");\n\t    }\n\t    return m;\n\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the maps with label like the pattern in input and return them in\r\n     * VMap[] form.\r\n     * \r\n     * @param label\r\n     * @return the VMaps array if any label matches the pattern in input, null\r\n     *         otherwise\r\n     * @throws MapsException\r\n     */\r\n    public VMap[] getMapsLike(String likeLabel) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n        VMap[] retVMap = null;\r\n        try {\r\n            Map[] m = Factory.getMapsLike(likeLabel);\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"Maps with label like \"\r\n                        + likeLabel + \" don't exist.\");\r\n            }\r\n            retVMap = new VMap[m.length];\r\n            for (int i = 0; i < m.length; i++) {\r\n                retVMap[i] = getMap(m[i].getId());\r\n            }\r\n\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get maps with label like \" + likeLabel\r\n                            + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20719,"modified_method":"/**\n     * Take the maps with label like the pattern in input and return them in\n     * VMap[] form.\n     * \n     * @param label\n     * @param refreshElems says if refresh map's elements\n     * @return the VMaps array if any label matches the pattern in input, null\n     *         otherwise\n     * @throws MapsException\n     */\n    public VMap[] getMapsLike(String likeLabel, boolean refreshElems) throws  MapsException {\n        VMap[] retVMap = null;\n        Map[] m = m_implManager.getMapsLike(likeLabel);\n        if (m == null) {\n            throw new MapNotFoundException(\"Maps with label like \"\n                    + likeLabel + \" don't exist.\");\n        }\n        retVMap = new VMap[m.length];\n        for (int i = 0; i < m.length; i++) {\n            retVMap[i] = getMap(m[i].getId(),refreshElems);\n        }\n        return retVMap;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the maps with name in input and return them in\r\n     * MapMenu[] form.\r\n     * \r\n     * @param mapName\r\n     * @return the MapMenu array if any map has name in input, null\r\n     *         otherwise\r\n     * @throws MapsException\r\n     */\r\n    public MapMenu[] getMapsMenuByName(String mapName) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n    \tMapMenu[] retVMap = null;\r\n        try {\r\n        \tretVMap = Factory.getMapsMenuByName(mapName);\r\n            if (retVMap == null) {\r\n                throw new MapNotFoundException(\"Maps with name \"\r\n                        + mapName + \" don't exist.\");\r\n            }\r\n            \r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get maps with name \" + mapName\r\n                            + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20720,"modified_method":"/**\n     * Take the maps with name in input and return them in\n     * MapMenu[] form.\n     * \n     * @param mapName\n     * @return the MapMenu array if any map has name in input, null\n     *         otherwise\n     * @throws MapsException\n     */\n    public MapMenu[] getMapsMenuByName(String mapName) throws \n            MapNotFoundException, MapsException {\n    \tMapMenu[] retVMap = null;\n    \tretVMap = m_implManager.getMapsMenuByName(mapName);\n        if (retVMap == null) {\n            throw new MapNotFoundException(\"Maps with name \"\n                    + mapName + \" don't exist.\");\n        }\n        return retVMap;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * Take the maps with name in input and return them in\r\n     * VMap[] form.\r\n     * \r\n     * @param mapName\r\n     * @return the VMaps array if any map has name in input, null\r\n     *         otherwise\r\n     * @throws MapsException\r\n     */\r\n    public VMap[] getMapsByName(String mapName) throws MapsManagementException,\r\n            MapNotFoundException, MapsException {\r\n        VMap[] retVMap = null;\r\n        try {\r\n            Map[] m = Factory.getMapsByName(mapName);\r\n            if (m == null) {\r\n                throw new MapNotFoundException(\"Maps with name \"\r\n                        + mapName + \" don't exist.\");\r\n            }\r\n            retVMap = new VMap[m.length];\r\n            for (int i = 0; i < m.length; i++) {\r\n                retVMap[i] = getMap(m[i].getId());\r\n            }\r\n\r\n        } catch (SQLException se) {\r\n            throw new MapsManagementException(\r\n                    \"Factory: unable to get maps with name \" + mapName\r\n                            + \".\" + se);\r\n        }\r\n        return retVMap;\r\n    }","id":20721,"modified_method":"/**\n     * Take the maps with name in input and return them in\n     * VMap[] form.\n     * \n     * @param mapName\n     * @param refhresElems says if refresh maps' elements\n     * @return the VMaps array if any map has name in input, null\n     *         otherwise\n     * @throws MapsException\n     */\n    public VMap[] getMapsByName(String mapName, boolean refreshElems) throws MapNotFoundException, MapsException {\n        VMap[] retVMap = null;\n        Map[] m = m_implManager.getMapsByName(mapName);\n        if (m == null) {\n            throw new MapNotFoundException(\"Maps with name \"\n                    + mapName + \" don't exist.\");\n        }\n        retVMap = new VMap[m.length];\n        for (int i = 0; i < m.length; i++) {\n            retVMap[i] = getMap(m[i].getId(), refreshElems);\n        }\n        return retVMap;\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"protected VElement(int mapId, int id, String type, String label, String iconName) throws MapsException {\r\n        super(mapId, id, type, label, iconName, 0, 0);\r\n        isChild = true;\r\n    }","id":20722,"modified_method":"public VElement(int mapId, int id, String type, String label, String iconName) throws MapsException {\r\n        super(mapId, id, type, label, iconName, 0, 0);\r\n        isChild = true;\r\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * @param e\r\n     */\r\n    VElement(Element e) throws MapsException {\r\n        super(e);\r\n    }","id":20723,"modified_method":"/**\r\n     * @param e\r\n     */\r\n    public VElement(Element e) throws MapsException {\r\n        super(e);\r\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * \r\n     */\r\n    protected VElement() {\r\n        super();\r\n    }","id":20724,"modified_method":"/**\r\n     * \r\n     */\r\n\tpublic VElement() {\r\n        super();\r\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\r\n     * @param mapId\r\n     * @param id\r\n     * @param type\r\n     * @param label\r\n     * @param iconName\r\n     * @param x\r\n     * @param y\r\n     */\r\n    protected VElement(int mapId, int id, String type, String iconName,String label,\r\n            int x, int y) throws MapsException {\r\n        super(mapId, id, type, label, iconName, x, y);\r\n        isChild = true;\r\n    }","id":20725,"modified_method":"/**\r\n     * @param mapId\r\n     * @param id\r\n     * @param type\r\n     * @param label\r\n     * @param iconName\r\n     * @param x\r\n     * @param y\r\n     */\r\n    public VElement(int mapId, int id, String type, String iconName,String label,\r\n            int x, int y) throws MapsException {\r\n        super(mapId, id, type, label, iconName, x, y);\r\n        isChild = true;\r\n    }","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public boolean equals(Object otherLink) {\r\n\t\tVLink link = (VLink) otherLink;\r\n\t\tif (((this.elem1.getId() == link.getFirst().getId())\r\n\t\t\t\t&& this.elem1.getType().equals(link.getFirst().getType())\r\n\t\t\t\t&& (this.elem2.getId() == link.getSecond().getId()) && this.elem2\r\n\t\t\t\t.getType().equals(link.getSecond().getType()))\r\n\t\t\t\t|| (this.elem1.getId() == link.getSecond().getId()\r\n\t\t\t\t\t\t&& this.elem1.getType().equals(\r\n\t\t\t\t\t\t\t\tlink.getSecond().getType())\r\n\t\t\t\t\t\t&& this.elem2.getId() == link.getFirst().getId() && (this.elem2\r\n\t\t\t\t\t\t.getType().equals(link.getFirst().getType()))))\r\n\t\t\treturn true;\r\n\t\treturn false;\r\n\t}","id":20726,"modified_method":"public boolean equals(Object otherLink) {\r\n\t\tif (!(otherLink instanceof VLink)) return false;\r\n\t\tVLink link = (VLink) otherLink;\r\n\t\tif (\r\n\t\t (this.elem1.hasSameIdentifier(link.getFirst()) && this.elem2.hasSameIdentifier(link.getSecond()))\r\n\t\t\t||\r\n\t\t(this.elem2.hasSameIdentifier(link.getFirst()) && this.elem1.hasSameIdentifier(link.getSecond()))\r\n\t\t) return true;\r\n\t\treturn false;\r\n\t}","commit_id":"6a2f71db25adcb3d87504a7fb175183531755009","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n        SSLSocket socket = (SSLSocket) getSSLContext().getSocketFactory().createSocket(host, port);\n        socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n        return socket;\n    }","id":20727,"modified_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n        Socket socket = (Socket) getSSLContext().getSocketFactory().createSocket(host, port);\n        if (socket instanceof SSLSocket) {\n            ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n        }\n        return socket;\n    }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int,java.net.InetAddress,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port, InetAddress clientHost, int clientPort) throws IOException, UnknownHostException {\n        SSLSocket socket = (SSLSocket) getSSLContext().getSocketFactory().createSocket(host, port, clientHost, clientPort);\n        socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n        return socket;\n    }","id":20728,"modified_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int,java.net.InetAddress,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port, InetAddress clientHost, int clientPort) throws IOException, UnknownHostException {\n        Socket socket = getSSLContext().getSocketFactory().createSocket(host, port, clientHost, clientPort);\n        if (socket instanceof SSLSocket) {\n            ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n        }\n        return socket;\n    }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * Attempts to get a new socket connection to the given host within the given time limit.\n     * <p>\n     * To circumvent the limitations of older JREs that do not support connect timeout a\n     * controller thread is executed. The controller thread attempts to create a new socket\n     * within the given limit of time. If socket constructor does not return until the\n     * timeout expires, the controller terminates and throws an {@link ConnectTimeoutException}\n     * <\/p>\n     *\n     * @param host the host name/IP\n     * @param port the port on the host\n     * @param localAddress the local host name/IP to bind the socket to\n     * @param localPort the port on the local machine\n     * @param params {@link HttpConnectionParams Http connection parameters}\n     *\n     * @return Socket a new socket\n     *\n     * @throws IOException if an I/O error occurs while creating the socket\n     * @throws UnknownHostException if the IP address of the host cannot be\n     * determined\n     */\n    @Override\n    public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n        throws IOException, UnknownHostException, ConnectTimeoutException {\n        if (params == null) {\n            throw new IllegalArgumentException(\"Parameters may not be null\");\n        }\n        int timeout = params.getConnectionTimeout();\n        SocketFactory socketfactory = getSSLContext().getSocketFactory();\n        if (timeout == 0) {\n            return socketfactory.createSocket(host, port, localAddress, localPort);\n        } else {\n            SSLSocket socket = (SSLSocket)  socketfactory.createSocket();\n            socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n            SocketAddress localaddr = new InetSocketAddress(localAddress, localPort);\n            SocketAddress remoteaddr = new InetSocketAddress(host, port);\n            socket.bind(localaddr);\n            socket.connect(remoteaddr, timeout);\n            return socket;\n        }\n    }","id":20729,"modified_method":"/**\n     * Attempts to get a new socket connection to the given host within the given time limit.\n     * <p>\n     * To circumvent the limitations of older JREs that do not support connect timeout a\n     * controller thread is executed. The controller thread attempts to create a new socket\n     * within the given limit of time. If socket constructor does not return until the\n     * timeout expires, the controller terminates and throws an {@link ConnectTimeoutException}\n     * <\/p>\n     *\n     * @param host the host name/IP\n     * @param port the port on the host\n     * @param localAddress the local host name/IP to bind the socket to\n     * @param localPort the port on the local machine\n     * @param params {@link HttpConnectionParams Http connection parameters}\n     *\n     * @return Socket a new socket\n     *\n     * @throws IOException if an I/O error occurs while creating the socket\n     * @throws UnknownHostException if the IP address of the host cannot be\n     * determined\n     */\n    @Override\n    public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n        throws IOException, UnknownHostException, ConnectTimeoutException {\n        if (params == null) {\n            throw new IllegalArgumentException(\"Parameters may not be null\");\n        }\n        int timeout = params.getConnectionTimeout();\n        SocketFactory socketfactory = getSSLContext().getSocketFactory();\n        if (timeout == 0) {\n            Socket socket = socketfactory.createSocket(host, port, localAddress, localPort);\n            if (socket instanceof SSLSocket) {\n                ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n            }\n            return socket;\n        } else {\n            Socket socket = socketfactory.createSocket();\n            if (socket instanceof SSLSocket) {\n                ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n            }\n            SocketAddress localaddr = new InetSocketAddress(localAddress, localPort);\n            SocketAddress remoteaddr = new InetSocketAddress(host, port);\n            socket.bind(localaddr);\n            socket.connect(remoteaddr, timeout);\n            return socket;\n        }\n    }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {\n        SSLSocket s= (SSLSocket) getSSLContext().getSocketFactory().createSocket(socket, host, port, autoClose);\n        s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n        return s;\n    }","id":20730,"modified_method":"public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {\n        Socket s = getSSLContext().getSocketFactory().createSocket(socket, host, port, autoClose);\n        if (s instanceof SSLSocket) {\n            ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n        }\n        return s;\n    }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(socket, host, port, autoClose);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20731,"modified_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            Socket s = ssf.createSocket(socket, host, port, autoClose);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) throws IOException,\n                UnknownHostException, ConnectTimeoutException {\n            int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                return createSocket(host, port, localAddress, localPort);\n            } else {\n                SSLSocket s = (SSLSocket) ssf.createSocket();\n                s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","id":20732,"modified_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) throws IOException,\n                UnknownHostException, ConnectTimeoutException {\n            int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                Socket s = createSocket(host, port, localAddress, localPort);\n                if (s instanceof SSLSocket) {\n                    ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n                }\n                return s;\n            } else {\n                Socket s = ssf.createSocket();\n                if (s instanceof SSLSocket) {\n                    ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n                }\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String host, final int port) throws IOException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(host, port);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20733,"modified_method":"@Override\n        public Socket createSocket(final String host, final int port) throws IOException {\n            Socket s = ssf.createSocket(host, port);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(address, port, localAddress, localPort);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20734,"modified_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            Socket s = ssf.createSocket(address, port, localAddress, localPort);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(socket, host, port, autoClose);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20735,"modified_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            Socket s = ssf.createSocket(socket, host, port, autoClose);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            SSLSocket socket = (SSLSocket) ssf.createSocket(address, port, localAddress, localPort);\n            socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n            return socket;\n        }","id":20736,"modified_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            Socket socket = ssf.createSocket(address, port, localAddress, localPort);\n            if (socket instanceof SSLSocket) {\n                ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n            }\n            return socket;\n        }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n                throws IOException, UnknownHostException, ConnectTimeoutException {\n            final int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                return createSocket(host, port, localAddress, localPort);\n            } else {\n                final SSLSocket s = (SSLSocket) ssf.createSocket();\n                s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","id":20737,"modified_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n                throws IOException, UnknownHostException, ConnectTimeoutException {\n            final int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                Socket socket = createSocket(host, port, localAddress, localPort);\n                if (socket instanceof SSLSocket) {\n                    ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n                }\n                return socket;\n            } else {\n                final Socket s = ssf.createSocket();\n                if (s instanceof SSLSocket) {\n                    ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n                }\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","commit_id":"d62d511f47ae8118544259b15c9382185364052e","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * Attempts to get a new socket connection to the given host within the given time limit.\n     * <p>\n     * To circumvent the limitations of older JREs that do not support connect timeout a\n     * controller thread is executed. The controller thread attempts to create a new socket\n     * within the given limit of time. If socket constructor does not return until the\n     * timeout expires, the controller terminates and throws an {@link ConnectTimeoutException}\n     * <\/p>\n     *\n     * @param host the host name/IP\n     * @param port the port on the host\n     * @param localAddress the local host name/IP to bind the socket to\n     * @param localPort the port on the local machine\n     * @param params {@link HttpConnectionParams Http connection parameters}\n     *\n     * @return Socket a new socket\n     *\n     * @throws IOException if an I/O error occurs while creating the socket\n     * @throws UnknownHostException if the IP address of the host cannot be\n     * determined\n     */\n    @Override\n    public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n        throws IOException, UnknownHostException, ConnectTimeoutException {\n        if (params == null) {\n            throw new IllegalArgumentException(\"Parameters may not be null\");\n        }\n        int timeout = params.getConnectionTimeout();\n        SocketFactory socketfactory = getSSLContext().getSocketFactory();\n        if (timeout == 0) {\n            return socketfactory.createSocket(host, port, localAddress, localPort);\n        } else {\n            SSLSocket socket = (SSLSocket)  socketfactory.createSocket();\n            socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n            SocketAddress localaddr = new InetSocketAddress(localAddress, localPort);\n            SocketAddress remoteaddr = new InetSocketAddress(host, port);\n            socket.bind(localaddr);\n            socket.connect(remoteaddr, timeout);\n            return socket;\n        }\n    }","id":20738,"modified_method":"/**\n     * Attempts to get a new socket connection to the given host within the given time limit.\n     * <p>\n     * To circumvent the limitations of older JREs that do not support connect timeout a\n     * controller thread is executed. The controller thread attempts to create a new socket\n     * within the given limit of time. If socket constructor does not return until the\n     * timeout expires, the controller terminates and throws an {@link ConnectTimeoutException}\n     * <\/p>\n     *\n     * @param host the host name/IP\n     * @param port the port on the host\n     * @param localAddress the local host name/IP to bind the socket to\n     * @param localPort the port on the local machine\n     * @param params {@link HttpConnectionParams Http connection parameters}\n     *\n     * @return Socket a new socket\n     *\n     * @throws IOException if an I/O error occurs while creating the socket\n     * @throws UnknownHostException if the IP address of the host cannot be\n     * determined\n     */\n    @Override\n    public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n        throws IOException, UnknownHostException, ConnectTimeoutException {\n        if (params == null) {\n            throw new IllegalArgumentException(\"Parameters may not be null\");\n        }\n        int timeout = params.getConnectionTimeout();\n        SocketFactory socketfactory = getSSLContext().getSocketFactory();\n        if (timeout == 0) {\n            Socket socket = socketfactory.createSocket(host, port, localAddress, localPort);\n            if (socket instanceof SSLSocket) {\n                ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n            }\n            return socket;\n        } else {\n            Socket socket = socketfactory.createSocket();\n            if (socket instanceof SSLSocket) {\n                ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n            }\n            SocketAddress localaddr = new InetSocketAddress(localAddress, localPort);\n            SocketAddress remoteaddr = new InetSocketAddress(host, port);\n            socket.bind(localaddr);\n            socket.connect(remoteaddr, timeout);\n            return socket;\n        }\n    }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {\n        SSLSocket s= (SSLSocket) getSSLContext().getSocketFactory().createSocket(socket, host, port, autoClose);\n        s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n        return s;\n    }","id":20739,"modified_method":"public Socket createSocket(Socket socket, String host, int port, boolean autoClose) throws IOException, UnknownHostException {\n        Socket s = getSSLContext().getSocketFactory().createSocket(socket, host, port, autoClose);\n        if (s instanceof SSLSocket) {\n            ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n        }\n        return s;\n    }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n        SSLSocket socket = (SSLSocket) getSSLContext().getSocketFactory().createSocket(host, port);\n        socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n        return socket;\n    }","id":20740,"modified_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port) throws IOException, UnknownHostException {\n        Socket socket = (Socket) getSSLContext().getSocketFactory().createSocket(host, port);\n        if (socket instanceof SSLSocket) {\n            ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n        }\n        return socket;\n    }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int,java.net.InetAddress,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port, InetAddress clientHost, int clientPort) throws IOException, UnknownHostException {\n        SSLSocket socket = (SSLSocket) getSSLContext().getSocketFactory().createSocket(host, port, clientHost, clientPort);\n        socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n        return socket;\n    }","id":20741,"modified_method":"/**\n     * @see ProtocolSocketFactory#createSocket(java.lang.String,int,java.net.InetAddress,int)\n     */\n    @Override\n    public Socket createSocket(String host, int port, InetAddress clientHost, int clientPort) throws IOException, UnknownHostException {\n        Socket socket = getSSLContext().getSocketFactory().createSocket(host, port, clientHost, clientPort);\n        if (socket instanceof SSLSocket) {\n            ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n        }\n        return socket;\n    }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(address, port, localAddress, localPort);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20742,"modified_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            Socket s = ssf.createSocket(address, port, localAddress, localPort);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) throws IOException,\n                UnknownHostException, ConnectTimeoutException {\n            int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                return createSocket(host, port, localAddress, localPort);\n            } else {\n                SSLSocket s = (SSLSocket) ssf.createSocket();\n                s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","id":20743,"modified_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params) throws IOException,\n                UnknownHostException, ConnectTimeoutException {\n            int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                Socket s = createSocket(host, port, localAddress, localPort);\n                if (s instanceof SSLSocket) {\n                    ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n                }\n                return s;\n            } else {\n                Socket s = ssf.createSocket();\n                if (s instanceof SSLSocket) {\n                    ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n                }\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String host, final int port) throws IOException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(host, port);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20744,"modified_method":"@Override\n        public Socket createSocket(final String host, final int port) throws IOException {\n            Socket s = ssf.createSocket(host, port);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(socket, host, port, autoClose);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20745,"modified_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            Socket s = ssf.createSocket(socket, host, port, autoClose);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            SSLSocket socket = (SSLSocket) ssf.createSocket(address, port, localAddress, localPort);\n            socket.setEnabledProtocols(SSLUtils.getSupportedProtocols(socket.getEnabledProtocols()));\n            return socket;\n        }","id":20746,"modified_method":"@Override\n        public Socket createSocket(final String address, final int port, final InetAddress localAddress, final int localPort) throws IOException, UnknownHostException {\n            Socket socket = ssf.createSocket(address, port, localAddress, localPort);\n            if (socket instanceof SSLSocket) {\n                ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n            }\n            return socket;\n        }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            SSLSocket s = (SSLSocket) ssf.createSocket(socket, host, port, autoClose);\n            s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n            return s;\n        }","id":20747,"modified_method":"@Override\n        public Socket createSocket(final Socket socket, final String host, final int port, final boolean autoClose) throws IOException, UnknownHostException {\n            Socket s = ssf.createSocket(socket, host, port, autoClose);\n            if (s instanceof SSLSocket) {\n                ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n            }\n            return s;\n        }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n                throws IOException, UnknownHostException, ConnectTimeoutException {\n            final int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                return createSocket(host, port, localAddress, localPort);\n            } else {\n                final SSLSocket s = (SSLSocket) ssf.createSocket();\n                s.setEnabledProtocols(SSLUtils.getSupportedProtocols(s.getEnabledProtocols()));\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","id":20748,"modified_method":"@Override\n        public Socket createSocket(final String host, final int port, final InetAddress localAddress, final int localPort, final HttpConnectionParams params)\n                throws IOException, UnknownHostException, ConnectTimeoutException {\n            final int timeout = params.getConnectionTimeout();\n            if (timeout == 0) {\n                Socket socket = createSocket(host, port, localAddress, localPort);\n                if (socket instanceof SSLSocket) {\n                    ((SSLSocket)socket).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)socket).getEnabledProtocols()));\n                }\n                return socket;\n            } else {\n                final Socket s = ssf.createSocket();\n                if (s instanceof SSLSocket) {\n                    ((SSLSocket)s).setEnabledProtocols(SSLUtils.getSupportedProtocols(((SSLSocket)s).getEnabledProtocols()));\n                }\n                s.bind(new InetSocketAddress(localAddress, localPort));\n                s.connect(new InetSocketAddress(host, port), timeout);\n                return s;\n            }\n        }","commit_id":"125abe8234ad465514a6487badadad43f386a17c","url":"https://github.com/apache/cloudstack"},{"original_method":"private static void flushAndCloseRAF(RandomAccessFile file) {\n\t\ttry {\n\t\t\tif (file != null)\n\t\t\t\tfile.getFD().sync();\n\t\t} catch (IOException e) {\n\t\t\t// ignore\n\t\t}\n\t\tcloseRAF(file, false);\n\t}","id":20749,"modified_method":"private static void flushAndCloseRAF(RandomAccessFile file) {\n\t\ttry {\n\t\t\tif (file != null)\n\t\t\t\tfile.getChannel().force(true);\n\t\t} catch (IOException e) {\n\t\t\t// ignore\n\t\t}\n\t\tcloseRAF(file, false);\n\t}","commit_id":"565265de84266373c16f8480fd0b6622d789a8a1","url":"https://github.com/freenet/fred"},{"original_method":"private void maybeSlowShrink(boolean dontCheckForHoles, boolean inStartUp) throws DatabaseException, IOException {\n\t\tList wantedKeep = new ArrayList(); // keep; content is wanted, and is in the right place\n\t\tList unwantedIgnore = new ArrayList(); // ignore; content is not wanted, and is not in the right place\n\t\tList wantedMove = new ArrayList(); // content is wanted, but is in the wrong part of the store\n\t\tList unwantedMove = new ArrayList(); // content is not wanted, but is in the part of the store we will keep\n\t\tList alreadyDropped = new ArrayList(); // any blocks past the end which have already been truncated, but which there are still database blocks pointing to\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\n\t\tlong newSize = maxBlocksInStore;\n\t\tif(blocksInStore < maxBlocksInStore) return;\n\t\t\n\t\tSystem.err.println(\"Shrinking from \"+blocksInStore+\" to \"+maxBlocksInStore+\" (from db \"+keysDB.count()+\" from file \"+countCHKBlocksFromFile()+ ')');\n\t\t\n\t\tif(!dontCheckForHoles)\n\t\t\tcheckForHoles(maxBlocksInStore, true);\n\t\t\n\t\tWrapperManager.signalStarting((int) (Math.min(Integer.MAX_VALUE, 5 * 60 * 1000 + blocksInStore * 100L))); // 10 per second\n\t\t\n\t\tlong realSize = countCHKBlocksFromFile();\n\t\t\n\t\tlong highestBlock = 0;\n\t\t\n\t\ttry {\n\t\t\tc = accessTimeDB.openCursor(null,null);\n\t\t\t\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\tOperationStatus opStat;\n\t\t\topStat = c.getLast(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\n\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\tSystem.err.println(\"Database is empty (shrinking).\");\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Logger.minor(this, \"Found first key\");\n\t\t\tint x = 0;\n\t\t\twhile(true) {\n\t\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tlong block = storeBlock.offset;\n\t\t\t\tif(block > highestBlock) highestBlock = block;\n\t\t\t\tif(storeBlock.offset > Integer.MAX_VALUE) {\n\t\t\t\t\t// 2^31 * blockSize; ~ 70TB for CHKs, 2TB for the others\n\t\t\t\t\tSystem.err.println(\"Store too big, doing quick shrink\"); // memory usage would be insane\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tmaybeQuickShrink(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tInteger blockNum = new Integer((int)storeBlock.offset);\n\t\t\t\t//Long seqNum = new Long(storeBlock.recentlyUsed);\n\t\t\t\t//System.out.println(\"#\"+x+\" seq \"+seqNum+\": block \"+blockNum);\n\t\t\t\tif(blockNum.longValue() >= realSize) {\n\t\t\t\t\t// Truncated already?\n\t\t\t\t\tLogger.minor(this, \"Truncated already? \"+blockNum.longValue());\n\t\t\t\t\talreadyDropped.add(blockNum);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tif(x < newSize) {\n\t\t\t\t\t\t// Wanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Keep where it is: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedKeep.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Move to where it should go: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedMove.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Unwanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Overwrite: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedMove.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Ignore, will be wiped: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedIgnore.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx++;\n\t\t\t\t\tif(x % 1024 == 0) {\n\t\t\t\t\t\tSystem.out.println(\"Reading store prior to shrink: \"+(x*100L/realSize)+ \"% ( \"+x+ '/' +realSize+ ')');\n\t\t\t\t\t}\n\t\t\t\t\tif(x == Integer.MAX_VALUE) {\n\t\t\t\t\t\tSystem.err.println(\"Key number \"+x+\" - ignoring store after \"+(x*(dataBlockSize+headerBlockSize)+\" bytes\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\topStat = c.getPrev(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\t\tSystem.out.println(\"Read store: \"+x+\" keys.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} finally {\n\t\t\tif(c != null)\n\t\t\t\tc.close();\n\t\t}\n\t\t\n\t\tInteger[] wantedKeepNums = (Integer[]) wantedKeep.toArray(new Integer[wantedKeep.size()]);\n\t\tInteger[] unwantedIgnoreNums = (Integer[]) unwantedIgnore.toArray(new Integer[unwantedIgnore.size()]);\n\t\tInteger[] wantedMoveNums = (Integer[]) wantedMove.toArray(new Integer[wantedMove.size()]);\n\t\tInteger[] unwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\tlong[] freeEarlySlots = freeBlocks.toArray();\n\t\tArrays.sort(wantedKeepNums);\n\t\tArrays.sort(unwantedIgnoreNums);\n\t\tArrays.sort(wantedMoveNums);\n\t\tArrays.sort(unwantedMoveNums);\n\t\t\n\t\tfor(int i=0;i<newSize;i++) {\n\t\t\tInteger ii = new Integer(i);\n\t\t\tif(Arrays.binarySearch(wantedKeepNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedIgnoreNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(wantedMoveNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedMoveNums, ii) >= 0) continue;\n\t\t\tunwantedMove.add(ii);\n\t\t}\n\t\tunwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\t\n\t\tSystem.err.println(\"Keys to keep where they are:     \"+wantedKeepNums.length);\n\t\tSystem.err.println(\"Keys which will be wiped anyway: \"+unwantedIgnoreNums.length);\n\t\tSystem.err.println(\"Keys to move:                    \"+wantedMoveNums.length);\n\t\tSystem.err.println(\"Keys to be moved over:           \"+unwantedMoveNums.length);\n\t\tSystem.err.println(\"Free slots to be moved over:     \"+freeEarlySlots.length);\n\t\t\n\t\t// Now move all the wantedMove blocks onto the corresponding unwantedMove's.\n\t\t\n\t\tWrapperManager.signalStarting((int)Math.min(Integer.MAX_VALUE, (5*60*1000 + wantedMoveNums.length*1000L + alreadyDropped.size() * 100L))); // 1 per second\n\t\t\n\t\tbyte[] buf = new byte[headerBlockSize + dataBlockSize];\n\t\tlong lruValue;\n\t\tbyte[] keyBuf = new byte[keyLength];\n\t\tt = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tif(alreadyDropped.size() > 0) {\n\t\t\t\tSystem.err.println(\"Deleting \"+alreadyDropped.size()+\" blocks beyond the length of the file\");\n\t\t\t\tfor(int i=0;i<alreadyDropped.size();i++) {\n\t\t\t\t\tint unwantedBlock = ((Integer) alreadyDropped.get(i)).intValue();\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock, unwantedBlockEntry);\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t\tif(i % 1024 == 0) {\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(alreadyDropped.size() % 1024 != 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<wantedMoveNums.length;i++) {\n\t\t\t\tInteger wantedBlock = wantedMoveNums[i];\n\t\t\t\t\n\t\t\t\tInteger unwantedBlock;\n\t\t\t\t\n\t\t\t\t// Can we move over an empty slot?\n\t\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\t\t// Don't need to delete old block\n\t\t\t\t\tunwantedBlock = new Integer((int) freeEarlySlots[i]); // will fit in an int\n\t\t\t\t} else if(unwantedMoveNums.length + freeEarlySlots.length > i) {\n\t\t\t\t\tunwantedBlock = unwantedMoveNums[i-freeEarlySlots.length];\n\t\t\t\t\t// Delete unwantedBlock from the store\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock.longValue(), unwantedBlockEntry);\n\t\t\t\t\t// Delete the old block from the database.\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.err.println(\"Keys to move but no keys to move over! Moved \"+i);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Move old data to new location\n\t\t\t\t\n\t\t\t\tDatabaseEntry wantedBlockEntry = new DatabaseEntry();\n\t\t\t\tLongBinding.longToEntry(wantedBlock.longValue(), wantedBlockEntry);\n\t\t\t\tlong entry = wantedBlock.longValue();\n\t\t\t\tboolean readLRU = false;\n\t\t\t\tboolean readKey = false;\n\t\t\t\ttry {\n\t\t\t\t\tstoreRAF.seek(entry * (headerBlockSize + dataBlockSize));\n\t\t\t\t\tstoreRAF.readFully(buf);\n\t\t\t\t\tlruValue = 0;\n\t\t\t\t\tif(lruRAF.length() > ((entry + 1) * 8)) {\n\t\t\t\t\t\treadLRU = true;\n\t\t\t\t\t\tlruRAF.seek(entry * 8);\n\t\t\t\t\t\tlruValue = lruRAF.readLong();\n\t\t\t\t\t}\n\t\t\t\t\tif(keysRAF != null && keysRAF.length() > ((entry + 1) * keyLength)) {\n\t\t\t\t\t\treadKey = true;\n\t\t\t\t\t\tkeysRAF.seek(entry * keyLength);\n\t\t\t\t\t\tkeysRAF.readFully(keyBuf);\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tSystem.err.println(\"Was reading \"+wantedBlock+\" to write to \"+unwantedBlock);\n\t\t\t\t\tSystem.err.println(e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tentry = unwantedBlock.longValue();\n\t\t\t\tstoreRAF.seek(entry * (headerBlockSize + dataBlockSize));\n\t\t\t\tstoreRAF.write(buf);\n\t\t\t\tif(readLRU) {\n\t\t\t\t\tlruRAF.seek(entry * 8);\n\t\t\t\t\tlruRAF.writeLong(lruValue);\n\t\t\t\t}\n\t\t\t\tif(readKey) {\n\t\t\t\t\tkeysRAF.seek(entry * keyLength);\n\t\t\t\t\tkeysRAF.write(keyBuf);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update the database w.r.t. the old block.\n\t\t\t\t\n\t\t\t\tDatabaseEntry routingKeyDBE = new DatabaseEntry();\n\t\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\t\tblockNumDB.get(t, wantedBlockEntry, routingKeyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tStoreBlock block = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tblock.offset = unwantedBlock.longValue();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(block, blockDBE);\n\t\t\t\tkeysDB.put(t, routingKeyDBE, blockDBE);\n\t\t\t\t\n\t\t\t\t// Think about committing the transaction.\n\t\t\t\t\n\t\t\t\tif((i+1) % 2048 == 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\tSystem.out.println(\"Moving blocks: \"+(i*100/wantedMove.size())+ \"% ( \"+i+ '/' +wantedMove.size()+ ')');\n\t\t\t\t}\n\t\t\t\t//System.err.println(\"Moved \"+wantedBlock+\" to \"+unwantedBlock);\n\t\t\t}\n\t\t\tSystem.out.println(\"Moved all \"+wantedMove.size()+\" blocks\");\n\t\t\tif(t != null) {\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t}\n\t\t} finally {\n\t\t\tif(t != null)\n\t\t\t\tt.abort();\n\t\t\tt = null;\n\t\t}\n\t\tSystem.out.println(\"Completing shrink\"); // FIXME remove\n\t\t\n\t\tint totalUnwantedBlocks = unwantedMoveNums.length+freeEarlySlots.length;\n\t\tWrapperManager.signalStarting((int) Math.min(Integer.MAX_VALUE, 5*60*1000 + (totalUnwantedBlocks-wantedMoveNums.length) * 100L));\n\t\t// If there are any slots left over, they must be free.\n\t\t\n\t\t// FIXME put these into the database as we do in reconstruct().\n\t\t// Not doing that now as its not immediately obvious how to deal with it...\n\t\t\n\t\tfreeBlocks.clear();\n\t\tt = environment.beginTransaction(null,null);\n\t\tfor(int i=wantedMoveNums.length;i<totalUnwantedBlocks;i++) {\n\t\t\tlong blockNo;\n\t\t\tString reason;\n\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\tblockNo = freeEarlySlots[i];\n\t\t\t\treason = \"early slot \"+i;\n\t\t\t} else {\n\t\t\t\tblockNo = unwantedMoveNums[i-freeEarlySlots.length].longValue();\n\t\t\t\treason = \"unwanted \"+(i-freeEarlySlots.length);\n\t\t\t}\n\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNo, unwantedBlockEntry);\n\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\tif(i % 1024 == 0) {\n\t\t\t\tSystem.out.println(\"Trimmed surplus keys in database: \"+(i-wantedMoveNums.length)+\"/\"+(totalUnwantedBlocks-wantedMoveNums.length));\n\t\t\t\tt.commit();\n\t\t\t\tif(i == totalUnwantedBlocks-1)\n\t\t\t\t\tt = null;\n\t\t\t\telse\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t}\n\t\t\taddFreeBlock(blockNo, true, reason);\n\t\t}\n\t\tif(t != null) t.commit();\n\t\tt = null;\n\t\t\n\t\tSystem.out.println(\"Finishing shrink\"); // FIXME remove\n\t\t\n\t\tstoreRAF.setLength(newSize * (dataBlockSize + headerBlockSize));\n\t\tlruRAF.setLength(newSize * 8);\n\t\tif(keysRAF != null)\n\t\t\tkeysRAF.setLength(newSize * keyLength);\n\t\t\n\t\tsynchronized(this) {\n\t\t\tblocksInStore = newSize;\n\t\t}\n\t\tSystem.err.println(\"Shrunk store, now have \"+blocksInStore+\" of \"+maxBlocksInStore);\n\t}","id":20750,"modified_method":"private void maybeSlowShrink(boolean dontCheckForHoles, boolean inStartUp) throws DatabaseException, IOException {\n\t\tList wantedKeep = new ArrayList(); // keep; content is wanted, and is in the right place\n\t\tList unwantedIgnore = new ArrayList(); // ignore; content is not wanted, and is not in the right place\n\t\tList wantedMove = new ArrayList(); // content is wanted, but is in the wrong part of the store\n\t\tList unwantedMove = new ArrayList(); // content is not wanted, but is in the part of the store we will keep\n\t\tList alreadyDropped = new ArrayList(); // any blocks past the end which have already been truncated, but which there are still database blocks pointing to\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\n\t\tlong newSize = maxBlocksInStore;\n\t\tif(blocksInStore < maxBlocksInStore) return;\n\t\t\n\t\tSystem.err.println(\"Shrinking from \"+blocksInStore+\" to \"+maxBlocksInStore+\" (from db \"+keysDB.count()+\" from file \"+countCHKBlocksFromFile()+ ')');\n\t\t\n\t\tif(!dontCheckForHoles)\n\t\t\tcheckForHoles(maxBlocksInStore, true);\n\t\t\n\t\tWrapperManager.signalStarting((int) (Math.min(Integer.MAX_VALUE, 5 * 60 * 1000 + blocksInStore * 100L))); // 10 per second\n\t\t\n\t\tlong realSize = countCHKBlocksFromFile();\n\t\t\n\t\tlong highestBlock = 0;\n\t\t\n\t\ttry {\n\t\t\tc = accessTimeDB.openCursor(null,null);\n\t\t\t\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\tOperationStatus opStat;\n\t\t\topStat = c.getLast(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\n\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\tSystem.err.println(\"Database is empty (shrinking).\");\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Logger.minor(this, \"Found first key\");\n\t\t\tint x = 0;\n\t\t\twhile(true) {\n\t\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tlong block = storeBlock.offset;\n\t\t\t\tif(block > highestBlock) highestBlock = block;\n\t\t\t\tif(storeBlock.offset > Integer.MAX_VALUE) {\n\t\t\t\t\t// 2^31 * blockSize; ~ 70TB for CHKs, 2TB for the others\n\t\t\t\t\tSystem.err.println(\"Store too big, doing quick shrink\"); // memory usage would be insane\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tmaybeQuickShrink(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tInteger blockNum = new Integer((int)storeBlock.offset);\n\t\t\t\t//Long seqNum = new Long(storeBlock.recentlyUsed);\n\t\t\t\t//System.out.println(\"#\"+x+\" seq \"+seqNum+\": block \"+blockNum);\n\t\t\t\tif(blockNum.longValue() >= realSize) {\n\t\t\t\t\t// Truncated already?\n\t\t\t\t\tLogger.minor(this, \"Truncated already? \"+blockNum.longValue());\n\t\t\t\t\talreadyDropped.add(blockNum);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tif(x < newSize) {\n\t\t\t\t\t\t// Wanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Keep where it is: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedKeep.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Move to where it should go: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedMove.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Unwanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Overwrite: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedMove.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Ignore, will be wiped: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedIgnore.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx++;\n\t\t\t\t\tif(x % 1024 == 0) {\n\t\t\t\t\t\tSystem.out.println(\"Reading store prior to shrink: \"+(x*100L/realSize)+ \"% ( \"+x+ '/' +realSize+ ')');\n\t\t\t\t\t}\n\t\t\t\t\tif(x == Integer.MAX_VALUE) {\n\t\t\t\t\t\tSystem.err.println(\"Key number \"+x+\" - ignoring store after \"+(x*(dataBlockSize+headerBlockSize)+\" bytes\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\topStat = c.getPrev(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\t\tSystem.out.println(\"Read store: \"+x+\" keys.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} finally {\n\t\t\tif(c != null)\n\t\t\t\tc.close();\n\t\t}\n\t\t\n\t\tInteger[] wantedKeepNums = (Integer[]) wantedKeep.toArray(new Integer[wantedKeep.size()]);\n\t\tInteger[] unwantedIgnoreNums = (Integer[]) unwantedIgnore.toArray(new Integer[unwantedIgnore.size()]);\n\t\tInteger[] wantedMoveNums = (Integer[]) wantedMove.toArray(new Integer[wantedMove.size()]);\n\t\tInteger[] unwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\tlong[] freeEarlySlots = freeBlocks.toArray();\n\t\tArrays.sort(wantedKeepNums);\n\t\tArrays.sort(unwantedIgnoreNums);\n\t\tArrays.sort(wantedMoveNums);\n\t\tArrays.sort(unwantedMoveNums);\n\t\t\n\t\tfor(int i=0;i<newSize;i++) {\n\t\t\tInteger ii = new Integer(i);\n\t\t\tif(Arrays.binarySearch(wantedKeepNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedIgnoreNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(wantedMoveNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedMoveNums, ii) >= 0) continue;\n\t\t\tunwantedMove.add(ii);\n\t\t}\n\t\tunwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\t\n\t\tSystem.err.println(\"Keys to keep where they are:     \"+wantedKeepNums.length);\n\t\tSystem.err.println(\"Keys which will be wiped anyway: \"+unwantedIgnoreNums.length);\n\t\tSystem.err.println(\"Keys to move:                    \"+wantedMoveNums.length);\n\t\tSystem.err.println(\"Keys to be moved over:           \"+unwantedMoveNums.length);\n\t\tSystem.err.println(\"Free slots to be moved over:     \"+freeEarlySlots.length);\n\t\t\n\t\t// Now move all the wantedMove blocks onto the corresponding unwantedMove's.\n\t\t\n\t\tWrapperManager.signalStarting((int)Math.min(Integer.MAX_VALUE, (5*60*1000 + wantedMoveNums.length*1000L + alreadyDropped.size() * 100L))); // 1 per second\n\t\t\n\t\tByteBuffer buf = ByteBuffer.allocate(headerBlockSize + dataBlockSize);\n\t\tlong lruValue;\n\t\tbyte[] keyBuf = new byte[keyLength];\n\t\tt = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tif(alreadyDropped.size() > 0) {\n\t\t\t\tSystem.err.println(\"Deleting \"+alreadyDropped.size()+\" blocks beyond the length of the file\");\n\t\t\t\tfor(int i=0;i<alreadyDropped.size();i++) {\n\t\t\t\t\tint unwantedBlock = ((Integer) alreadyDropped.get(i)).intValue();\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock, unwantedBlockEntry);\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t\tif(i % 1024 == 0) {\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(alreadyDropped.size() % 1024 != 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<wantedMoveNums.length;i++) {\n\t\t\t\tInteger wantedBlock = wantedMoveNums[i];\n\t\t\t\t\n\t\t\t\tInteger unwantedBlock;\n\t\t\t\t\n\t\t\t\t// Can we move over an empty slot?\n\t\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\t\t// Don't need to delete old block\n\t\t\t\t\tunwantedBlock = new Integer((int) freeEarlySlots[i]); // will fit in an int\n\t\t\t\t} else if(unwantedMoveNums.length + freeEarlySlots.length > i) {\n\t\t\t\t\tunwantedBlock = unwantedMoveNums[i-freeEarlySlots.length];\n\t\t\t\t\t// Delete unwantedBlock from the store\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock.longValue(), unwantedBlockEntry);\n\t\t\t\t\t// Delete the old block from the database.\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.err.println(\"Keys to move but no keys to move over! Moved \"+i);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Move old data to new location\n\t\t\t\t\n\t\t\t\tDatabaseEntry wantedBlockEntry = new DatabaseEntry();\n\t\t\t\tLongBinding.longToEntry(wantedBlock.longValue(), wantedBlockEntry);\n\t\t\t\tlong entry = wantedBlock.longValue();\n\t\t\t\tboolean readLRU = false;\n\t\t\t\tboolean readKey = false;\n\t\t\t\ttry {\n\t\t\t\t\tbuf.rewind();\n\t\t\t\t\tdo {\n\t\t\t\t\t\tint byteRead = storeFC.read(buf, entry * (headerBlockSize + dataBlockSize) + buf.position());\n\t\t\t\t\t\tif (byteRead == -1)\n\t\t\t\t\t\t\tthrow new EOFException();\n\t\t\t\t\t} while (buf.hasRemaining());\n\t\t\t\t\tbuf.flip();\n\t\t\t\t\tlruValue = 0;\n\t\t\t\t\tif(lruRAF.length() > ((entry + 1) * 8)) {\n\t\t\t\t\t\treadLRU = true;\n\t\t\t\t\t\tlruValue = fcReadLRU(entry);\n\t\t\t\t\t}\n\t\t\t\t\tif(keysRAF != null && keysRAF.length() > ((entry + 1) * keyLength)) {\n\t\t\t\t\t\treadKey = true;\n\t\t\t\t\t\tfcReadKey(entry, keyBuf);\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tSystem.err.println(\"Was reading \"+wantedBlock+\" to write to \"+unwantedBlock);\n\t\t\t\t\tSystem.err.println(e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tentry = unwantedBlock.longValue();\n\t\t\t\tdo {\n\t\t\t\t\tint byteWritten = storeFC.write(buf, entry * (headerBlockSize + dataBlockSize) + buf.position());\n\t\t\t\t\tif (byteWritten == -1)\n\t\t\t\t\t\tthrow new EOFException();\n\t\t\t\t} while (buf.hasRemaining());\n\t\t\t\tif(readLRU) {\n\t\t\t\t\tfcWriteLRU(entry, lruValue);\n\t\t\t\t}\n\t\t\t\tif(readKey) {\n\t\t\t\t\tfcWriteKey(entry, keyBuf);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update the database w.r.t. the old block.\n\t\t\t\t\n\t\t\t\tDatabaseEntry routingKeyDBE = new DatabaseEntry();\n\t\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\t\tblockNumDB.get(t, wantedBlockEntry, routingKeyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tStoreBlock block = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tblock.offset = unwantedBlock.longValue();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(block, blockDBE);\n\t\t\t\tkeysDB.put(t, routingKeyDBE, blockDBE);\n\t\t\t\t\n\t\t\t\t// Think about committing the transaction.\n\t\t\t\t\n\t\t\t\tif((i+1) % 2048 == 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\tSystem.out.println(\"Moving blocks: \"+(i*100/wantedMove.size())+ \"% ( \"+i+ '/' +wantedMove.size()+ ')');\n\t\t\t\t}\n\t\t\t\t//System.err.println(\"Moved \"+wantedBlock+\" to \"+unwantedBlock);\n\t\t\t}\n\t\t\tSystem.out.println(\"Moved all \"+wantedMove.size()+\" blocks\");\n\t\t\tif(t != null) {\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t}\n\t\t} finally {\n\t\t\tif(t != null)\n\t\t\t\tt.abort();\n\t\t\tt = null;\n\t\t}\n\t\tSystem.out.println(\"Completing shrink\"); // FIXME remove\n\t\t\n\t\tint totalUnwantedBlocks = unwantedMoveNums.length+freeEarlySlots.length;\n\t\tWrapperManager.signalStarting((int) Math.min(Integer.MAX_VALUE, 5*60*1000 + (totalUnwantedBlocks-wantedMoveNums.length) * 100L));\n\t\t// If there are any slots left over, they must be free.\n\t\t\n\t\t// FIXME put these into the database as we do in reconstruct().\n\t\t// Not doing that now as its not immediately obvious how to deal with it...\n\t\t\n\t\tfreeBlocks.clear();\n\t\tt = environment.beginTransaction(null,null);\n\t\tfor(int i=wantedMoveNums.length;i<totalUnwantedBlocks;i++) {\n\t\t\tlong blockNo;\n\t\t\tString reason;\n\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\tblockNo = freeEarlySlots[i];\n\t\t\t\treason = \"early slot \"+i;\n\t\t\t} else {\n\t\t\t\tblockNo = unwantedMoveNums[i-freeEarlySlots.length].longValue();\n\t\t\t\treason = \"unwanted \"+(i-freeEarlySlots.length);\n\t\t\t}\n\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNo, unwantedBlockEntry);\n\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\tif(i % 1024 == 0) {\n\t\t\t\tSystem.out.println(\"Trimmed surplus keys in database: \"+(i-wantedMoveNums.length)+\"/\"+(totalUnwantedBlocks-wantedMoveNums.length));\n\t\t\t\tt.commit();\n\t\t\t\tif(i == totalUnwantedBlocks-1)\n\t\t\t\t\tt = null;\n\t\t\t\telse\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t}\n\t\t\taddFreeBlock(blockNo, true, reason);\n\t\t}\n\t\tif(t != null) t.commit();\n\t\tt = null;\n\t\t\n\t\tSystem.out.println(\"Finishing shrink\"); // FIXME remove\n\t\t\n\t\tstoreRAF.setLength(newSize * (dataBlockSize + headerBlockSize));\n\t\tlruRAF.setLength(newSize * 8);\n\t\tif(keysRAF != null)\n\t\t\tkeysRAF.setLength(newSize * keyLength);\n\t\t\n\t\tsynchronized(this) {\n\t\t\tblocksInStore = newSize;\n\t\t}\n\t\tSystem.err.println(\"Shrunk store, now have \"+blocksInStore+\" of \"+maxBlocksInStore);\n\t}","commit_id":"565265de84266373c16f8480fd0b6622d789a8a1","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Initializes the datastore\n\t * \n\t * @param env\n\t *            Berkeley DB {@link Environment}.\n\t * @param prefix\n\t *            Database name prefix\n\t * @param storeFile\n\t *            Store file, where the actual data are stored\n\t * @param lruFile\n\t *            LRU data file, flat file store for recovery\n\t * @param keysFile\n\t *            Keys data file, flat file store for recovery, created only if\n\t *            <code>callback.storeFullKeys()<\/code> is <code>true<\/code>\n\t * @param fixSecondaryFile\n\t *            Flag file. Created when secondary database error occur. If\n\t *            this file exist on start, delete it and recreate the secondary\n\t *            database.\n\t * @param maxChkBlocks\n\t *            maximum number of blocks\n\t * @param wipe\n\t *            If <code>true<\/code>, wipe and reconstruct the database.\n\t * @param storeShutdownHook\n\t *            {@link SemiOrderedShutdownHook} for hooking database shutdown\n\t *            hook.\n\t * @param reconstructFile\n\t *            Flag file. Created when database crash.\n\t * @param callback\n\t *            {@link StoreCallback} object for this store.\n\t * @throws IOException\n\t * @throws DatabaseException\n\t */\n\tprivate BerkeleyDBFreenetStore(Environment env, String prefix, File storeFile, File lruFile, File keysFile,\n\t\t\tFile fixSecondaryFile, long maxChkBlocks, boolean wipe, SemiOrderedShutdownHook storeShutdownHook,\n\t\t\tFile reconstructFile,\n\t\t\tStoreCallback callback, RandomSource random) throws IOException, DatabaseException {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tlogDEBUG = Logger.shouldLog(Logger.DEBUG, this);\n\t\t\n\t\tthis.random = random;\n\t\tthis.environment = env;\n\t\tthis.name = prefix;\n\t\tthis.fixSecondaryFile = fixSecondaryFile;\n\t\tthis.maxBlocksInStore = maxChkBlocks;\n\t\tthis.reconstructFile = reconstructFile;\n\t\tthis.callback = callback;\n\t\tthis.collisionPossible = callback.collisionPossible();\n\t\tthis.dataBlockSize = callback.dataLength();\n\t\tthis.headerBlockSize = callback.headerLength();\n\t\tthis.keyLength = callback.fullKeyLength();\n\t\tcallback.setStore(this);\n\t\t\n\t\tOOMHandler.addOOMHook(this);\n\n\t\tthis.freeBlocks = new SortedLongSet();\n\n\t\t// Delete old database(s).\n\t\tif (wipe) {\n\t\t\tSystem.err.println(\"Wiping old database for \" + prefix);\n\t\t\twipeOldDatabases(environment, prefix);\n\t\t}\n\n\t\t// Initialize CHK database\n\t\tDatabaseConfig dbConfig = new DatabaseConfig();\n\t\tdbConfig.setAllowCreate(true);\n\t\tdbConfig.setTransactional(true);\n\n\t\tkeysDB = environment.openDatabase(null,prefix+\"CHK\",dbConfig);\n\t\tSystem.err.println(\"Opened main database for \"+prefix);\n\n\t\tif(fixSecondaryFile.exists()) {\n\t\t\tfixSecondaryFile.delete();\n\t\t\tremoveSecondaryDatabase();\n\t\t}\n\n\t\tstoreBlockTupleBinding = new StoreBlockTupleBinding();\n\n\t\t// Initialize secondary CHK database sorted on accesstime\n\t\taccessTimeDB = openSecondaryDataBase(prefix + \"CHK_accessTime\", keysDB.count() == 0 || wipe, wipe, true, new AccessTimeKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize other secondary database sorted on block number\n\t\tblockNumDB = openSecondaryDataBase(prefix + \"CHK_blockNum\", keysDB.count() == 0 || wipe, wipe, false, new BlockNumberKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize the store file\n\t\ttry {\n\t\t\tif(!storeFile.exists())\n\t\t\t\tif(!storeFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + storeFile + \" !\");\n\t\t\tstoreRAF = new RandomAccessFile(storeFile,\"rw\");\n\n\t\t\tif(!lruFile.exists()) \n\t\t\t\tif(!lruFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + lruFile + \" !\");\n\t\t\tlruRAF = new RandomAccessFile(lruFile,\"rw\");\n\n\t\t\tif(keysFile != null) {\n\t\t\t\tif(!keysFile.exists())\n\t\t\t\t\tif(!keysFile.createNewFile())\n\t\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + keysFile + \" !\");\n\t\t\t\tkeysRAF = new RandomAccessFile(keysFile,\"rw\");\n\t\t\t} else keysRAF = null;\n\n\t\t\tif (wipe) {\n                                // wipe and reconstruct\n\t\t\t\tblocksInStore = 0;\n\t\t\t\tlastRecentlyUsed = 0;\n\n\t\t\t\treconstruct();\n\n\t\t\t\tblocksInStore = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tmaybeOfflineShrink(true);\n\t\t\t} else {\n                                // just open\n                                boolean dontCheckForHolesShrinking = false;\n\n                                long chkBlocksInDatabase = highestBlockNumberInDatabase();\n                                blocksInStore = chkBlocksInDatabase;\n\t\t\t\tlong chkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tSystem.out.println(\"Keys in store: db \"+chkBlocksInDatabase+\" file \"+chkBlocksFromFile+\" / max \"+maxChkBlocks);\n\n\t\t\t\tif(chkBlocksInDatabase > chkBlocksFromFile) {\n\t\t\t\t\tSystem.out.println(\"More keys in database than in store!\");\n\n\t\t\t\t\t//throw new DatabaseException(\"More keys in database than in store!\");\n\t\t\t\t\t// FIXME reinstate if handling code doesn't work\n\t\t\t\t\t// FIXME we can do a cleverer recovery: Find all keys whose block number is > chkBlocksFromFile and delete them\n\t\t\t\t}\n\n\t\t\t\tif(((blocksInStore == 0) && (chkBlocksFromFile != 0)) ||\n                                            (((blocksInStore + 10) * 1.1) < chkBlocksFromFile)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tclose(false);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tLogger.error(this, \"Failed to close: \"+t, t);\n\t\t\t\t\t\tSystem.err.println(\"Failed to close: \"+t);\n\t\t\t\t\t\tt.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t\tthrow new DatabaseException(\"Keys in database: \"+blocksInStore+\" but keys in file: \"+chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Keys in store: \"+blocksInStore);\n\n\t\t\t\tmaybeOfflineShrink(dontCheckForHolesShrinking);\n\t\t\t\tchkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t// Add shutdownhook\n\t\t\tstoreShutdownHook.addEarlyJob(new ShutdownHook());\n\t\t} catch (DatabaseException t) {\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tt.printStackTrace();\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t} catch (IOException t) {\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t}\n\t}","id":20751,"modified_method":"/**\n\t * Initializes the datastore\n\t * \n\t * @param env\n\t *            Berkeley DB {@link Environment}.\n\t * @param prefix\n\t *            Database name prefix\n\t * @param storeFile\n\t *            Store file, where the actual data are stored\n\t * @param lruFile\n\t *            LRU data file, flat file store for recovery\n\t * @param keysFile\n\t *            Keys data file, flat file store for recovery, created only if\n\t *            <code>callback.storeFullKeys()<\/code> is <code>true<\/code>\n\t * @param fixSecondaryFile\n\t *            Flag file. Created when secondary database error occur. If\n\t *            this file exist on start, delete it and recreate the secondary\n\t *            database.\n\t * @param maxChkBlocks\n\t *            maximum number of blocks\n\t * @param wipe\n\t *            If <code>true<\/code>, wipe and reconstruct the database.\n\t * @param storeShutdownHook\n\t *            {@link SemiOrderedShutdownHook} for hooking database shutdown\n\t *            hook.\n\t * @param reconstructFile\n\t *            Flag file. Created when database crash.\n\t * @param callback\n\t *            {@link StoreCallback} object for this store.\n\t * @throws IOException\n\t * @throws DatabaseException\n\t */\n\tprivate BerkeleyDBFreenetStore(Environment env, String prefix, File storeFile, File lruFile, File keysFile,\n\t\t\tFile fixSecondaryFile, long maxChkBlocks, boolean wipe, SemiOrderedShutdownHook storeShutdownHook,\n\t\t\tFile reconstructFile,\n\t\t\tStoreCallback callback, RandomSource random) throws IOException, DatabaseException {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tlogDEBUG = Logger.shouldLog(Logger.DEBUG, this);\n\t\t\n\t\tthis.random = random;\n\t\tthis.environment = env;\n\t\tthis.name = prefix;\n\t\tthis.fixSecondaryFile = fixSecondaryFile;\n\t\tthis.maxBlocksInStore = maxChkBlocks;\n\t\tthis.reconstructFile = reconstructFile;\n\t\tthis.callback = callback;\n\t\tthis.collisionPossible = callback.collisionPossible();\n\t\tthis.dataBlockSize = callback.dataLength();\n\t\tthis.headerBlockSize = callback.headerLength();\n\t\tthis.keyLength = callback.fullKeyLength();\n\t\tcallback.setStore(this);\n\t\t\n\t\tOOMHandler.addOOMHook(this);\n\n\t\tthis.freeBlocks = new SortedLongSet();\n\n\t\t// Delete old database(s).\n\t\tif (wipe) {\n\t\t\tSystem.err.println(\"Wiping old database for \" + prefix);\n\t\t\twipeOldDatabases(environment, prefix);\n\t\t}\n\n\t\t// Initialize CHK database\n\t\tDatabaseConfig dbConfig = new DatabaseConfig();\n\t\tdbConfig.setAllowCreate(true);\n\t\tdbConfig.setTransactional(true);\n\n\t\tkeysDB = environment.openDatabase(null,prefix+\"CHK\",dbConfig);\n\t\tSystem.err.println(\"Opened main database for \"+prefix);\n\n\t\tif(fixSecondaryFile.exists()) {\n\t\t\tfixSecondaryFile.delete();\n\t\t\tremoveSecondaryDatabase();\n\t\t}\n\n\t\tstoreBlockTupleBinding = new StoreBlockTupleBinding();\n\n\t\t// Initialize secondary CHK database sorted on accesstime\n\t\taccessTimeDB = openSecondaryDataBase(prefix + \"CHK_accessTime\", keysDB.count() == 0 || wipe, wipe, true, new AccessTimeKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize other secondary database sorted on block number\n\t\tblockNumDB = openSecondaryDataBase(prefix + \"CHK_blockNum\", keysDB.count() == 0 || wipe, wipe, false, new BlockNumberKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize the store file\n\t\ttry {\n\t\t\tif(!storeFile.exists())\n\t\t\t\tif(!storeFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + storeFile + \" !\");\n\t\t\tstoreRAF = new RandomAccessFile(storeFile,\"rw\");\n\t\t\tstoreFC = storeRAF.getChannel();\n\n\t\t\tif(!lruFile.exists()) \n\t\t\t\tif(!lruFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + lruFile + \" !\");\n\t\t\tlruRAF = new RandomAccessFile(lruFile,\"rw\");\n\t\t\tlruFC = lruRAF.getChannel();\n\n\t\t\tif(keysFile != null) {\n\t\t\t\tif(!keysFile.exists())\n\t\t\t\t\tif(!keysFile.createNewFile())\n\t\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + keysFile + \" !\");\n\t\t\t\tkeysRAF = new RandomAccessFile(keysFile,\"rw\");\n\t\t\t\tkeysFC = keysRAF.getChannel();\n\t\t\t} else keysRAF = null;\n\n\t\t\tif (wipe) {\n                                // wipe and reconstruct\n\t\t\t\tblocksInStore = 0;\n\t\t\t\tlastRecentlyUsed = 0;\n\n\t\t\t\treconstruct();\n\n\t\t\t\tblocksInStore = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tmaybeOfflineShrink(true);\n\t\t\t} else {\n                                // just open\n                                boolean dontCheckForHolesShrinking = false;\n\n                                long chkBlocksInDatabase = highestBlockNumberInDatabase();\n                                blocksInStore = chkBlocksInDatabase;\n\t\t\t\tlong chkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tSystem.out.println(\"Keys in store: db \"+chkBlocksInDatabase+\" file \"+chkBlocksFromFile+\" / max \"+maxChkBlocks);\n\n\t\t\t\tif(chkBlocksInDatabase > chkBlocksFromFile) {\n\t\t\t\t\tSystem.out.println(\"More keys in database than in store!\");\n\n\t\t\t\t\t//throw new DatabaseException(\"More keys in database than in store!\");\n\t\t\t\t\t// FIXME reinstate if handling code doesn't work\n\t\t\t\t\t// FIXME we can do a cleverer recovery: Find all keys whose block number is > chkBlocksFromFile and delete them\n\t\t\t\t}\n\n\t\t\t\tif(((blocksInStore == 0) && (chkBlocksFromFile != 0)) ||\n                                            (((blocksInStore + 10) * 1.1) < chkBlocksFromFile)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tclose(false);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tLogger.error(this, \"Failed to close: \"+t, t);\n\t\t\t\t\t\tSystem.err.println(\"Failed to close: \"+t);\n\t\t\t\t\t\tt.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t\tthrow new DatabaseException(\"Keys in database: \"+blocksInStore+\" but keys in file: \"+chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Keys in store: \"+blocksInStore);\n\n\t\t\t\tmaybeOfflineShrink(dontCheckForHolesShrinking);\n\t\t\t\tchkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t// Add shutdownhook\n\t\t\tstoreShutdownHook.addEarlyJob(new ShutdownHook());\n\t\t} catch (DatabaseException t) {\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tt.printStackTrace();\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t} catch (IOException t) {\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t}\n\t}","commit_id":"565265de84266373c16f8480fd0b6622d789a8a1","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Overwrite a block with a new block which has the same key.\n\t */\n\tprivate boolean overwriteKeyUnchanged(StorableBlock block, byte[] routingkey, byte[] fullKey, byte[] data, byte[] header) throws IOException {\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn false;\n\t\t}\n\t\t\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\n\t\t\t// Lock the record.\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tsynchronized(storeRAF) {\n\t\t\t\tstoreRAF.seek(storeBlock.offset*(long)(dataBlockSize+headerBlockSize));\n\t\t\t\tstoreRAF.write(header);\n\t\t\t\tstoreRAF.write(data);\n\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\tkeysRAF.seek(storeBlock.offset * keyLength);\n\t\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Unlock record.\n\t\t\tc.close();\n\t\t\tc = null;\n\t\t\tt.commit();\n\t\t\tt = null;\n\t\t\t\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}","id":20752,"modified_method":"/**\n\t * Overwrite a block with a new block which has the same key.\n\t */\n\tprivate boolean overwriteKeyUnchanged(StorableBlock block, byte[] routingkey, byte[] fullKey, byte[] data, byte[] header) throws IOException {\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn false;\n\t\t}\n\t\t\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\n\t\t\t// Lock the record.\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tfcWriteStore(storeBlock.offset, header, data);\n\t\t\tif (keysRAF != null) {\n\t\t\t\tfcWriteKey(storeBlock.offset, fullKey);\n\t\t\t}\n\t\t\t\n\t\t\t// Unlock record.\n\t\t\tc.close();\n\t\t\tc = null;\n\t\t\tt.commit();\n\t\t\tt = null;\n\t\t\t\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}","commit_id":"565265de84266373c16f8480fd0b6622d789a8a1","url":"https://github.com/freenet/fred"},{"original_method":"private boolean writeNewBlock(long blockNum, byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\tlong byteOffset = blockNum*(dataBlockSize+headerBlockSize);\n\t\tStoreBlock storeBlock = new StoreBlock(this, blockNum);\n\t\tlong lruValue = storeBlock.recentlyUsed;\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\ttry {\n\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t} catch (DatabaseException e) {\n\t\t\tDatabaseEntry blockNumEntry = new DatabaseEntry();\n\t\t\tDatabaseEntry found = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNum, blockNumEntry);\n\t\t\t\n\t\t\tOperationStatus success =\n\t\t\t\tblockNumDB.get(t, blockNumEntry, found, LockMode.DEFAULT);\n\n\t\t\tif(success == OperationStatus.KEYEXIST || success == OperationStatus.SUCCESS) {\n\t\t\t\tSystem.err.println(\"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\te.printStackTrace();\n\t\t\t\tLogger.error(this, \"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tLogger.minor(this, \"Key doesn't exist for block num \"+blockNum+\" but caught \"+e, e);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tsynchronized(storeRAF) {\n\t\t\ttry {\n\t\t\t\tstoreRAF.seek(byteOffset);\n\t\t\t} catch (IOException ioe) {\n\t\t\t\tif(byteOffset > (2l*1024*1024*1024)) {\n\t\t\t\t\tLogger.error(this, \"Environment does not support files bigger than 2 GB?\");\n\t\t\t\t\tSystem.out.println(\"Environment does not support files bigger than 2 GB? (exception to follow)\");\n\t\t\t\t}\n\t\t\t\tLogger.error(this, \"Caught IOException on storeRAF.seek(\"+byteOffset+ ')');\n\t\t\t\tthrow ioe;\n\t\t\t}\n\t\t\tstoreRAF.write(header);\n\t\t\tstoreRAF.write(data);\n\t\t\tlruRAF.seek(blockNum * 8);\n\t\t\tlruRAF.writeLong(lruValue);\n\t\t\tif(keysRAF != null) {\n\t\t\t\tkeysRAF.seek(blockNum * keyLength);\n\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t\tif(logDEBUG)\n\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+blockNum+\" at \"+(blockNum * keyLength)+\" for \"+callback);\n\t\t\t} else if(logDEBUG) {\n\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+blockNum+\" for \"+callback);\n\t\t\t}\n\t\t\twrites++;\n\t\t}\n\t\treturn true;\n\t}","id":20753,"modified_method":"private boolean writeNewBlock(long blockNum, byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\tStoreBlock storeBlock = new StoreBlock(this, blockNum);\n\t\tlong lruValue = storeBlock.recentlyUsed;\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\ttry {\n\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t} catch (DatabaseException e) {\n\t\t\tDatabaseEntry blockNumEntry = new DatabaseEntry();\n\t\t\tDatabaseEntry found = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNum, blockNumEntry);\n\t\t\t\n\t\t\tOperationStatus success =\n\t\t\t\tblockNumDB.get(t, blockNumEntry, found, LockMode.DEFAULT);\n\n\t\t\tif(success == OperationStatus.KEYEXIST || success == OperationStatus.SUCCESS) {\n\t\t\t\tSystem.err.println(\"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\te.printStackTrace();\n\t\t\t\tLogger.error(this, \"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tLogger.minor(this, \"Key doesn't exist for block num \"+blockNum+\" but caught \"+e, e);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\tfcWriteStore(blockNum, header, data);\n\t\t\tfcWriteLRU(blockNum, lruValue);\n\t\t\tif(keysRAF != null) {\n\t\t\t\tfcWriteKey(blockNum, fullKey);\n\t\t\t\tif(logDEBUG)\n\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+blockNum+\" at \"+(blockNum * keyLength)+\" for \"+callback);\n\t\t\t} else if(logDEBUG) {\n\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+blockNum+\" for \"+callback);\n\t\t\t}\n\t\t\tsynchronized (this) {\n\t\t\twrites++;\n\t\t}\n\t\t\n\t\treturn true;\n\t}","commit_id":"565265de84266373c16f8480fd0b6622d789a8a1","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic StorableBlock fetch(byte[] routingkey, byte[] fullKey, boolean dontPromote) throws IOException {\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tint running;\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn null;\n\t\t\trunning = runningFetches++;\n\t\t}\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\t\t\t\n\t\t\t/**\n\t\t\t* We will have to write, unless both dontPromote and the key is valid.\n\t\t\t* The lock only applies to this record, so it's not a big problem for our use.\n\t\t\t* What *IS* a big problem is that if we take a LockMode.DEFAULT, and two threads\n\t\t\t* access the same key, they will both take the read lock, and then both try to\n\t\t\t* take the write lock. Neither can relinquish the read in order for the other to\n\t\t\t* take the write, so we're screwed.\n\t\t\t*/\n\t\t\tif(logMINOR) Logger.minor(this, \"Fetching \"+HexUtil.bytesToHex(routingkey)+\" dontPromote=\"+dontPromote+\" for \"+callback+\" running fetches: \"+running);\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not found\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tStorableBlock block = null;\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Reading block \"+storeBlock.offset+\"...\");\n\t\t\ttry {\n\t\t\t\tbyte[] header = new byte[headerBlockSize];\n\t\t\t\tbyte[] data = new byte[dataBlockSize];\n\t\t\t\ttry {\n\t\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t\tstoreRAF.seek(storeBlock.offset*(long)(dataBlockSize+headerBlockSize));\n\t\t\t\t\t\tstoreRAF.readFully(header);\n\t\t\t\t\t\tstoreRAF.readFully(data);\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tLogger.error(this, \"No block\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Data off end of store file\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tblock = callback.construct(data, header, routingkey, fullKey);\n\t\t\t\t\n\t\t\t\tif(!Arrays.equals(block.getRoutingKey(), routingkey)) {\n\t\t\t\t\t\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tmisses++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\t\n\t\t\t\t\t// Insert the block into the index.\n\t\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\t\n\t\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\t\n\t\t\t\t\tLogger.normal(this, \"Does not verify (not the expected key), setting accessTime to \"+lru+\" for : \"+HexUtil.bytesToHex(routingkey));\n\t\t\t\t\t\n\t\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\t\n\t\t\t\t\troutingkeyDBE = new DatabaseEntry(block.getRoutingKey());\n\t\t\t\t\t\n\t\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t\t\tif(fullKey == null)\n\t\t\t\t\t\t\tfullKey = block.getFullKey();\n\t\t\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\t\t\tkeysRAF.seek(storeBlock.offset * keyLength);\n\t\t\t\t\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t\t\t\t\t\tif(logDEBUG)\n\t\t\t\t\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+storeBlock.offset+\" at \"+(storeBlock.offset * keyLength)+\" for \"+callback);\n\t\t\t\t\t\t\t} else if(logDEBUG) {\n\t\t\t\t\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+storeBlock.offset+\" for \"+callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while replacing element\");\n\t\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\t\tc.close();\n\t\t\t\t\t\tc = null;\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = null;\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tLogger.normal(this, \"Successfully replaced entry at block number \"+storeBlock.offset+\" lru \"+lru);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!dontPromote) {\n\t\t\t\t\tstoreBlock.updateRecentlyUsed();\n\t\t\t\t\tDatabaseEntry updateDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, updateDBE);\n\t\t\t\t\tc.putCurrent(updateDBE);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t\tlruRAF.seek(storeBlock.offset * 8);\n\t\t\t\t\t\tlruRAF.writeLong(storeBlock.recentlyUsed);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.abort();\n\t\t\t\t\tt = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) {\n\t\t\t\t\tLogger.minor(this, \"Headers: \" + header.length+\" bytes, hash \" + Fields.hashCode(header));\n\t\t\t\t\tLogger.minor(this, \"Data: \" + data.length + \" bytes, hash \" + Fields.hashCode(data) + \" fetching \" + HexUtil.bytesToHex(routingkey));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch(KeyVerifyException ex) {\n\t\t\t\tLogger.normal(this, \"Does not verify (\"+ex+\"), setting accessTime to 0 for : \"+HexUtil.bytesToHex(routingkey), ex);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t// Clear the key in the keys file.\n\t\t\t\t\tbyte[] buf = new byte[keyLength];\n\t\t\t\t\tfor(int i=0;i<buf.length;i++) buf[i] = 0; // FIXME unnecessary?\n\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\tkeysRAF.seek(storeBlock.offset * keyLength);\n\t\t\t\t\t\tkeysRAF.write(buf);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\n\t\t\t\t// Insert the block into the index with a random key, so that it's part of the LRU.\n\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\n\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\n\t\t\t\tbyte[] randomKey = new byte[keyLength];\n\t\t\t\trandom.nextBytes(randomKey);\n\t\t\t\t\n\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\n\t\t\t\troutingkeyDBE = new DatabaseEntry(randomKey);\n\t\t\t\t\n\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\ttry {\n\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while adding corrupt element to LRU\");\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tsynchronized(this) {\n\t\t\t\thits++;\n\t\t\t}\n\t\t\treturn block;\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tif(ex instanceof IOException) {\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tif(closed) return null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tint x;\n\t\t\tsynchronized(this) {\n\t\t\t\tx = runningFetches--;\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Running fetches now \"+x);\n\t\t}\n\t}","id":20754,"modified_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic StorableBlock fetch(byte[] routingkey, byte[] fullKey, boolean dontPromote) throws IOException {\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tint running;\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn null;\n\t\t\trunning = runningFetches++;\n\t\t}\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\t\t\t\n\t\t\t/**\n\t\t\t* We will have to write, unless both dontPromote and the key is valid.\n\t\t\t* The lock only applies to this record, so it's not a big problem for our use.\n\t\t\t* What *IS* a big problem is that if we take a LockMode.DEFAULT, and two threads\n\t\t\t* access the same key, they will both take the read lock, and then both try to\n\t\t\t* take the write lock. Neither can relinquish the read in order for the other to\n\t\t\t* take the write, so we're screwed.\n\t\t\t*/\n\t\t\tif(logMINOR) Logger.minor(this, \"Fetching \"+HexUtil.bytesToHex(routingkey)+\" dontPromote=\"+dontPromote+\" for \"+callback+\" running fetches: \"+running);\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not found\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tStorableBlock block = null;\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Reading block \"+storeBlock.offset+\"...\");\n\t\t\ttry {\n\t\t\t\tbyte[] header = new byte[headerBlockSize];\n\t\t\t\tbyte[] data = new byte[dataBlockSize];\n\t\t\t\ttry {\n\t\t\t\t\tfcReadStore(storeBlock.offset, header, data);\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tLogger.error(this, \"No block\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Data off end of store file\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tblock = callback.construct(data, header, routingkey, fullKey);\n\t\t\t\t\n\t\t\t\tif(!Arrays.equals(block.getRoutingKey(), routingkey)) {\n\t\t\t\t\t\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tmisses++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\t\n\t\t\t\t\t// Insert the block into the index.\n\t\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\t\n\t\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\t\n\t\t\t\t\tLogger.normal(this, \"Does not verify (not the expected key), setting accessTime to \"+lru+\" for : \"+HexUtil.bytesToHex(routingkey));\n\t\t\t\t\t\n\t\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\t\n\t\t\t\t\troutingkeyDBE = new DatabaseEntry(block.getRoutingKey());\n\t\t\t\t\t\n\t\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t\t\tif(fullKey == null)\n\t\t\t\t\t\t\tfullKey = block.getFullKey();\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\t\t\tfcWriteKey(storeBlock.offset, fullKey);\n\t\t\t\t\t\t\t\tif(logDEBUG)\n\t\t\t\t\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+storeBlock.offset+\" at \"+(storeBlock.offset * keyLength)+\" for \"+callback);\n\t\t\t\t\t\t\t} else if(logDEBUG) {\n\t\t\t\t\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+storeBlock.offset+\" for \"+callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while replacing element\");\n\t\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\t\tc.close();\n\t\t\t\t\t\tc = null;\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = null;\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tLogger.normal(this, \"Successfully replaced entry at block number \"+storeBlock.offset+\" lru \"+lru);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!dontPromote) {\n\t\t\t\t\tstoreBlock.updateRecentlyUsed();\n\t\t\t\t\tDatabaseEntry updateDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, updateDBE);\n\t\t\t\t\tc.putCurrent(updateDBE);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\tfcWriteLRU(storeBlock.offset, storeBlock.recentlyUsed);\n\t\t\t\t} else {\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.abort();\n\t\t\t\t\tt = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) {\n\t\t\t\t\tLogger.minor(this, \"Headers: \" + header.length+\" bytes, hash \" + Fields.hashCode(header));\n\t\t\t\t\tLogger.minor(this, \"Data: \" + data.length + \" bytes, hash \" + Fields.hashCode(data) + \" fetching \" + HexUtil.bytesToHex(routingkey));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch(KeyVerifyException ex) {\n\t\t\t\tLogger.normal(this, \"Does not verify (\"+ex+\"), setting accessTime to 0 for : \"+HexUtil.bytesToHex(routingkey), ex);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t// Clear the key in the keys file.\n\t\t\t\t\tbyte[] buf = new byte[keyLength];\n\t\t\t\t\tfor(int i=0;i<buf.length;i++) buf[i] = 0; // FIXME unnecessary?\n\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\tfcWriteKey(storeBlock.offset, buf);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\n\t\t\t\t// Insert the block into the index with a random key, so that it's part of the LRU.\n\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\n\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\n\t\t\t\tbyte[] randomKey = new byte[keyLength];\n\t\t\t\trandom.nextBytes(randomKey);\n\t\t\t\t\n\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\n\t\t\t\troutingkeyDBE = new DatabaseEntry(randomKey);\n\t\t\t\t\n\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\ttry {\n\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while adding corrupt element to LRU\");\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tsynchronized(this) {\n\t\t\t\thits++;\n\t\t\t}\n\t\t\treturn block;\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tif(ex instanceof IOException) {\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tif(closed) return null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tint x;\n\t\t\tsynchronized(this) {\n\t\t\t\tx = runningFetches--;\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Running fetches now \"+x);\n\t\t}\n\t}","commit_id":"565265de84266373c16f8480fd0b6622d789a8a1","url":"https://github.com/freenet/fred"},{"original_method":"private void overwriteLRUBlock(byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\t// Overwrite an other block\n\t\tCursor c = accessTimeDB.openCursor(t,null);\n\t\tStoreBlock oldStoreBlock;\n\t\ttry {\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry dataDBE = new DatabaseEntry();\n\t\t\tc.getFirst(keyDBE,dataDBE,LockMode.RMW);\n\t\t\toldStoreBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(dataDBE);\n\t\t\tc.delete();\n\t\t} finally {\n\t\t\tc.close();\n\t\t}\n\t\t// Deleted, so we can now reuse it.\n\t\t// Because we acquired a write lock, nobody else has taken it.\n\t\t// FIXME if this fails we can leak the block??\n\t\tStoreBlock storeBlock = new StoreBlock(this, oldStoreBlock.getOffset());\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\tsynchronized(storeRAF) {\n\t\t\tstoreRAF.seek(storeBlock.getOffset()*(long)(dataBlockSize+headerBlockSize));\n\t\t\tstoreRAF.write(header);\n\t\t\tstoreRAF.write(data);\n\t\t\tlruRAF.seek(storeBlock.getOffset() * 8);\n\t\t\tlruRAF.writeLong(storeBlock.recentlyUsed);\n\t\t\tif(keysRAF != null) {\n\t\t\t\tkeysRAF.seek(storeBlock.getOffset() * keyLength);\n\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t}\n\t\t\twrites++;\n\t\t}\n\t}","id":20755,"modified_method":"private void overwriteLRUBlock(byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\t// Overwrite an other block\n\t\tCursor c = accessTimeDB.openCursor(t,null);\n\t\tStoreBlock oldStoreBlock;\n\t\ttry {\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry dataDBE = new DatabaseEntry();\n\t\t\tc.getFirst(keyDBE,dataDBE,LockMode.RMW);\n\t\t\toldStoreBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(dataDBE);\n\t\t\tc.delete();\n\t\t} finally {\n\t\t\tc.close();\n\t\t}\n\t\t// Deleted, so we can now reuse it.\n\t\t// Because we acquired a write lock, nobody else has taken it.\n\t\t// FIXME if this fails we can leak the block??\n\t\tStoreBlock storeBlock = new StoreBlock(this, oldStoreBlock.getOffset());\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\n\t\tfcWriteStore(storeBlock.getOffset(), header, data);\n\t\tfcWriteLRU( storeBlock.getOffset(),storeBlock.recentlyUsed);\n\t\tif (keysRAF != null)\n\t\t\tfcWriteKey(storeBlock.getOffset(), fullKey);\n\t\tsynchronized (this) {\n\t\t\twrites++;\n\t\t}\n\t}","commit_id":"565265de84266373c16f8480fd0b6622d789a8a1","url":"https://github.com/freenet/fred"},{"original_method":"private static void flushAndCloseRAF(RandomAccessFile file) {\n\t\ttry {\n\t\t\tif (file != null)\n\t\t\t\tfile.getFD().sync();\n\t\t} catch (IOException e) {\n\t\t\t// ignore\n\t\t}\n\t\tcloseRAF(file, false);\n\t}","id":20756,"modified_method":"private static void flushAndCloseRAF(RandomAccessFile file) {\n\t\ttry {\n\t\t\tif (file != null)\n\t\t\t\tfile.getChannel().force(true);\n\t\t} catch (IOException e) {\n\t\t\t// ignore\n\t\t}\n\t\tcloseRAF(file, false);\n\t}","commit_id":"57592ec97b70b4868b5989b3ccea8e3205f6a66a","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Overwrite a block with a new block which has the same key.\n\t */\n\tprivate boolean overwriteKeyUnchanged(StorableBlock block, byte[] routingkey, byte[] fullKey, byte[] data, byte[] header) throws IOException {\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn false;\n\t\t}\n\t\t\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\n\t\t\t// Lock the record.\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tsynchronized(storeRAF) {\n\t\t\t\tstoreRAF.seek(storeBlock.offset*(long)(dataBlockSize+headerBlockSize));\n\t\t\t\tstoreRAF.write(header);\n\t\t\t\tstoreRAF.write(data);\n\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\tkeysRAF.seek(storeBlock.offset * keyLength);\n\t\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Unlock record.\n\t\t\tc.close();\n\t\t\tc = null;\n\t\t\tt.commit();\n\t\t\tt = null;\n\t\t\t\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}","id":20757,"modified_method":"/**\n\t * Overwrite a block with a new block which has the same key.\n\t */\n\tprivate boolean overwriteKeyUnchanged(StorableBlock block, byte[] routingkey, byte[] fullKey, byte[] data, byte[] header) throws IOException {\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn false;\n\t\t}\n\t\t\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\n\t\t\t// Lock the record.\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tfcWriteStore(storeBlock.offset, header, data);\n\t\t\tif (keysRAF != null) {\n\t\t\t\tfcWriteKey(storeBlock.offset, fullKey);\n\t\t\t}\n\t\t\t\n\t\t\t// Unlock record.\n\t\t\tc.close();\n\t\t\tc = null;\n\t\t\tt.commit();\n\t\t\tt = null;\n\t\t\t\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\t\n\t\treturn true;\n\t}","commit_id":"57592ec97b70b4868b5989b3ccea8e3205f6a66a","url":"https://github.com/freenet/fred"},{"original_method":"private void maybeSlowShrink(boolean dontCheckForHoles, boolean inStartUp) throws DatabaseException, IOException {\n\t\tList wantedKeep = new ArrayList(); // keep; content is wanted, and is in the right place\n\t\tList unwantedIgnore = new ArrayList(); // ignore; content is not wanted, and is not in the right place\n\t\tList wantedMove = new ArrayList(); // content is wanted, but is in the wrong part of the store\n\t\tList unwantedMove = new ArrayList(); // content is not wanted, but is in the part of the store we will keep\n\t\tList alreadyDropped = new ArrayList(); // any blocks past the end which have already been truncated, but which there are still database blocks pointing to\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\n\t\tlong newSize = maxBlocksInStore;\n\t\tif(blocksInStore < maxBlocksInStore) return;\n\t\t\n\t\tSystem.err.println(\"Shrinking from \"+blocksInStore+\" to \"+maxBlocksInStore+\" (from db \"+keysDB.count()+\" from file \"+countCHKBlocksFromFile()+ ')');\n\t\t\n\t\tif(!dontCheckForHoles)\n\t\t\tcheckForHoles(maxBlocksInStore, true);\n\t\t\n\t\tWrapperManager.signalStarting((int) (Math.min(Integer.MAX_VALUE, 5 * 60 * 1000 + blocksInStore * 100L))); // 10 per second\n\t\t\n\t\tlong realSize = countCHKBlocksFromFile();\n\t\t\n\t\tlong highestBlock = 0;\n\t\t\n\t\ttry {\n\t\t\tc = accessTimeDB.openCursor(null,null);\n\t\t\t\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\tOperationStatus opStat;\n\t\t\topStat = c.getLast(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\n\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\tSystem.err.println(\"Database is empty (shrinking).\");\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Logger.minor(this, \"Found first key\");\n\t\t\tint x = 0;\n\t\t\twhile(true) {\n\t\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tlong block = storeBlock.offset;\n\t\t\t\tif(block > highestBlock) highestBlock = block;\n\t\t\t\tif(storeBlock.offset > Integer.MAX_VALUE) {\n\t\t\t\t\t// 2^31 * blockSize; ~ 70TB for CHKs, 2TB for the others\n\t\t\t\t\tSystem.err.println(\"Store too big, doing quick shrink\"); // memory usage would be insane\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tmaybeQuickShrink(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tInteger blockNum = new Integer((int)storeBlock.offset);\n\t\t\t\t//Long seqNum = new Long(storeBlock.recentlyUsed);\n\t\t\t\t//System.out.println(\"#\"+x+\" seq \"+seqNum+\": block \"+blockNum);\n\t\t\t\tif(blockNum.longValue() >= realSize) {\n\t\t\t\t\t// Truncated already?\n\t\t\t\t\tLogger.minor(this, \"Truncated already? \"+blockNum.longValue());\n\t\t\t\t\talreadyDropped.add(blockNum);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tif(x < newSize) {\n\t\t\t\t\t\t// Wanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Keep where it is: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedKeep.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Move to where it should go: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedMove.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Unwanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Overwrite: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedMove.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Ignore, will be wiped: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedIgnore.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx++;\n\t\t\t\t\tif(x % 1024 == 0) {\n\t\t\t\t\t\tSystem.out.println(\"Reading store prior to shrink: \"+(x*100L/realSize)+ \"% ( \"+x+ '/' +realSize+ ')');\n\t\t\t\t\t}\n\t\t\t\t\tif(x == Integer.MAX_VALUE) {\n\t\t\t\t\t\tSystem.err.println(\"Key number \"+x+\" - ignoring store after \"+(x*(dataBlockSize+headerBlockSize)+\" bytes\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\topStat = c.getPrev(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\t\tSystem.out.println(\"Read store: \"+x+\" keys.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} finally {\n\t\t\tif(c != null)\n\t\t\t\tc.close();\n\t\t}\n\t\t\n\t\tInteger[] wantedKeepNums = (Integer[]) wantedKeep.toArray(new Integer[wantedKeep.size()]);\n\t\tInteger[] unwantedIgnoreNums = (Integer[]) unwantedIgnore.toArray(new Integer[unwantedIgnore.size()]);\n\t\tInteger[] wantedMoveNums = (Integer[]) wantedMove.toArray(new Integer[wantedMove.size()]);\n\t\tInteger[] unwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\tlong[] freeEarlySlots = freeBlocks.toArray();\n\t\tArrays.sort(wantedKeepNums);\n\t\tArrays.sort(unwantedIgnoreNums);\n\t\tArrays.sort(wantedMoveNums);\n\t\tArrays.sort(unwantedMoveNums);\n\t\t\n\t\tfor(int i=0;i<newSize;i++) {\n\t\t\tInteger ii = new Integer(i);\n\t\t\tif(Arrays.binarySearch(wantedKeepNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedIgnoreNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(wantedMoveNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedMoveNums, ii) >= 0) continue;\n\t\t\tunwantedMove.add(ii);\n\t\t}\n\t\tunwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\t\n\t\tSystem.err.println(\"Keys to keep where they are:     \"+wantedKeepNums.length);\n\t\tSystem.err.println(\"Keys which will be wiped anyway: \"+unwantedIgnoreNums.length);\n\t\tSystem.err.println(\"Keys to move:                    \"+wantedMoveNums.length);\n\t\tSystem.err.println(\"Keys to be moved over:           \"+unwantedMoveNums.length);\n\t\tSystem.err.println(\"Free slots to be moved over:     \"+freeEarlySlots.length);\n\t\t\n\t\t// Now move all the wantedMove blocks onto the corresponding unwantedMove's.\n\t\t\n\t\tWrapperManager.signalStarting((int)Math.min(Integer.MAX_VALUE, (5*60*1000 + wantedMoveNums.length*1000L + alreadyDropped.size() * 100L))); // 1 per second\n\t\t\n\t\tbyte[] buf = new byte[headerBlockSize + dataBlockSize];\n\t\tlong lruValue;\n\t\tbyte[] keyBuf = new byte[keyLength];\n\t\tt = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tif(alreadyDropped.size() > 0) {\n\t\t\t\tSystem.err.println(\"Deleting \"+alreadyDropped.size()+\" blocks beyond the length of the file\");\n\t\t\t\tfor(int i=0;i<alreadyDropped.size();i++) {\n\t\t\t\t\tint unwantedBlock = ((Integer) alreadyDropped.get(i)).intValue();\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock, unwantedBlockEntry);\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t\tif(i % 1024 == 0) {\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(alreadyDropped.size() % 1024 != 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<wantedMoveNums.length;i++) {\n\t\t\t\tInteger wantedBlock = wantedMoveNums[i];\n\t\t\t\t\n\t\t\t\tInteger unwantedBlock;\n\t\t\t\t\n\t\t\t\t// Can we move over an empty slot?\n\t\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\t\t// Don't need to delete old block\n\t\t\t\t\tunwantedBlock = new Integer((int) freeEarlySlots[i]); // will fit in an int\n\t\t\t\t} else if(unwantedMoveNums.length + freeEarlySlots.length > i) {\n\t\t\t\t\tunwantedBlock = unwantedMoveNums[i-freeEarlySlots.length];\n\t\t\t\t\t// Delete unwantedBlock from the store\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock.longValue(), unwantedBlockEntry);\n\t\t\t\t\t// Delete the old block from the database.\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.err.println(\"Keys to move but no keys to move over! Moved \"+i);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Move old data to new location\n\t\t\t\t\n\t\t\t\tDatabaseEntry wantedBlockEntry = new DatabaseEntry();\n\t\t\t\tLongBinding.longToEntry(wantedBlock.longValue(), wantedBlockEntry);\n\t\t\t\tlong entry = wantedBlock.longValue();\n\t\t\t\tboolean readLRU = false;\n\t\t\t\tboolean readKey = false;\n\t\t\t\ttry {\n\t\t\t\t\tstoreRAF.seek(entry * (headerBlockSize + dataBlockSize));\n\t\t\t\t\tstoreRAF.readFully(buf);\n\t\t\t\t\tlruValue = 0;\n\t\t\t\t\tif(lruRAF.length() > ((entry + 1) * 8)) {\n\t\t\t\t\t\treadLRU = true;\n\t\t\t\t\t\tlruRAF.seek(entry * 8);\n\t\t\t\t\t\tlruValue = lruRAF.readLong();\n\t\t\t\t\t}\n\t\t\t\t\tif(keysRAF != null && keysRAF.length() > ((entry + 1) * keyLength)) {\n\t\t\t\t\t\treadKey = true;\n\t\t\t\t\t\tkeysRAF.seek(entry * keyLength);\n\t\t\t\t\t\tkeysRAF.readFully(keyBuf);\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tSystem.err.println(\"Was reading \"+wantedBlock+\" to write to \"+unwantedBlock);\n\t\t\t\t\tSystem.err.println(e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tentry = unwantedBlock.longValue();\n\t\t\t\tstoreRAF.seek(entry * (headerBlockSize + dataBlockSize));\n\t\t\t\tstoreRAF.write(buf);\n\t\t\t\tif(readLRU) {\n\t\t\t\t\tlruRAF.seek(entry * 8);\n\t\t\t\t\tlruRAF.writeLong(lruValue);\n\t\t\t\t}\n\t\t\t\tif(readKey) {\n\t\t\t\t\tkeysRAF.seek(entry * keyLength);\n\t\t\t\t\tkeysRAF.write(keyBuf);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update the database w.r.t. the old block.\n\t\t\t\t\n\t\t\t\tDatabaseEntry routingKeyDBE = new DatabaseEntry();\n\t\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\t\tblockNumDB.get(t, wantedBlockEntry, routingKeyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tStoreBlock block = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tblock.offset = unwantedBlock.longValue();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(block, blockDBE);\n\t\t\t\tkeysDB.put(t, routingKeyDBE, blockDBE);\n\t\t\t\t\n\t\t\t\t// Think about committing the transaction.\n\t\t\t\t\n\t\t\t\tif((i+1) % 2048 == 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\tSystem.out.println(\"Moving blocks: \"+(i*100/wantedMove.size())+ \"% ( \"+i+ '/' +wantedMove.size()+ ')');\n\t\t\t\t}\n\t\t\t\t//System.err.println(\"Moved \"+wantedBlock+\" to \"+unwantedBlock);\n\t\t\t}\n\t\t\tSystem.out.println(\"Moved all \"+wantedMove.size()+\" blocks\");\n\t\t\tif(t != null) {\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t}\n\t\t} finally {\n\t\t\tif(t != null)\n\t\t\t\tt.abort();\n\t\t\tt = null;\n\t\t}\n\t\tSystem.out.println(\"Completing shrink\"); // FIXME remove\n\t\t\n\t\tint totalUnwantedBlocks = unwantedMoveNums.length+freeEarlySlots.length;\n\t\tWrapperManager.signalStarting((int) Math.min(Integer.MAX_VALUE, 5*60*1000 + (totalUnwantedBlocks-wantedMoveNums.length) * 100L));\n\t\t// If there are any slots left over, they must be free.\n\t\t\n\t\t// FIXME put these into the database as we do in reconstruct().\n\t\t// Not doing that now as its not immediately obvious how to deal with it...\n\t\t\n\t\tfreeBlocks.clear();\n\t\tt = environment.beginTransaction(null,null);\n\t\tfor(int i=wantedMoveNums.length;i<totalUnwantedBlocks;i++) {\n\t\t\tlong blockNo;\n\t\t\tString reason;\n\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\tblockNo = freeEarlySlots[i];\n\t\t\t\treason = \"early slot \"+i;\n\t\t\t} else {\n\t\t\t\tblockNo = unwantedMoveNums[i-freeEarlySlots.length].longValue();\n\t\t\t\treason = \"unwanted \"+(i-freeEarlySlots.length);\n\t\t\t}\n\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNo, unwantedBlockEntry);\n\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\tif(i % 1024 == 0) {\n\t\t\t\tSystem.out.println(\"Trimmed surplus keys in database: \"+(i-wantedMoveNums.length)+\"/\"+(totalUnwantedBlocks-wantedMoveNums.length));\n\t\t\t\tt.commit();\n\t\t\t\tif(i == totalUnwantedBlocks-1)\n\t\t\t\t\tt = null;\n\t\t\t\telse\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t}\n\t\t\taddFreeBlock(blockNo, true, reason);\n\t\t}\n\t\tif(t != null) t.commit();\n\t\tt = null;\n\t\t\n\t\tSystem.out.println(\"Finishing shrink\"); // FIXME remove\n\t\t\n\t\tstoreRAF.setLength(newSize * (dataBlockSize + headerBlockSize));\n\t\tlruRAF.setLength(newSize * 8);\n\t\tif(keysRAF != null)\n\t\t\tkeysRAF.setLength(newSize * keyLength);\n\t\t\n\t\tsynchronized(this) {\n\t\t\tblocksInStore = newSize;\n\t\t}\n\t\tSystem.err.println(\"Shrunk store, now have \"+blocksInStore+\" of \"+maxBlocksInStore);\n\t}","id":20758,"modified_method":"private void maybeSlowShrink(boolean dontCheckForHoles, boolean inStartUp) throws DatabaseException, IOException {\n\t\tList wantedKeep = new ArrayList(); // keep; content is wanted, and is in the right place\n\t\tList unwantedIgnore = new ArrayList(); // ignore; content is not wanted, and is not in the right place\n\t\tList wantedMove = new ArrayList(); // content is wanted, but is in the wrong part of the store\n\t\tList unwantedMove = new ArrayList(); // content is not wanted, but is in the part of the store we will keep\n\t\tList alreadyDropped = new ArrayList(); // any blocks past the end which have already been truncated, but which there are still database blocks pointing to\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\n\t\tlong newSize = maxBlocksInStore;\n\t\tif(blocksInStore < maxBlocksInStore) return;\n\t\t\n\t\tSystem.err.println(\"Shrinking from \"+blocksInStore+\" to \"+maxBlocksInStore+\" (from db \"+keysDB.count()+\" from file \"+countCHKBlocksFromFile()+ ')');\n\t\t\n\t\tif(!dontCheckForHoles)\n\t\t\tcheckForHoles(maxBlocksInStore, true);\n\t\t\n\t\tWrapperManager.signalStarting((int) (Math.min(Integer.MAX_VALUE, 5 * 60 * 1000 + blocksInStore * 100L))); // 10 per second\n\t\t\n\t\tlong realSize = countCHKBlocksFromFile();\n\t\t\n\t\tlong highestBlock = 0;\n\t\t\n\t\ttry {\n\t\t\tc = accessTimeDB.openCursor(null,null);\n\t\t\t\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\tOperationStatus opStat;\n\t\t\topStat = c.getLast(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\n\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\tSystem.err.println(\"Database is empty (shrinking).\");\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t//Logger.minor(this, \"Found first key\");\n\t\t\tint x = 0;\n\t\t\twhile(true) {\n\t\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tlong block = storeBlock.offset;\n\t\t\t\tif(block > highestBlock) highestBlock = block;\n\t\t\t\tif(storeBlock.offset > Integer.MAX_VALUE) {\n\t\t\t\t\t// 2^31 * blockSize; ~ 70TB for CHKs, 2TB for the others\n\t\t\t\t\tSystem.err.println(\"Store too big, doing quick shrink\"); // memory usage would be insane\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tmaybeQuickShrink(true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tInteger blockNum = new Integer((int)storeBlock.offset);\n\t\t\t\t//Long seqNum = new Long(storeBlock.recentlyUsed);\n\t\t\t\t//System.out.println(\"#\"+x+\" seq \"+seqNum+\": block \"+blockNum);\n\t\t\t\tif(blockNum.longValue() >= realSize) {\n\t\t\t\t\t// Truncated already?\n\t\t\t\t\tLogger.minor(this, \"Truncated already? \"+blockNum.longValue());\n\t\t\t\t\talreadyDropped.add(blockNum);\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tif(x < newSize) {\n\t\t\t\t\t\t// Wanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Keep where it is: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedKeep.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Move to where it should go: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\twantedMove.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Unwanted\n\t\t\t\t\t\tif(block < newSize) {\n\t\t\t\t\t\t\t//System.out.println(\"Overwrite: \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedMove.add(blockNum);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//System.out.println(\"Ignore, will be wiped: block \"+blockNum+\" seq # \"+x+\" / \"+newSize);\n\t\t\t\t\t\t\tunwantedIgnore.add(blockNum);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tx++;\n\t\t\t\t\tif(x % 1024 == 0) {\n\t\t\t\t\t\tSystem.out.println(\"Reading store prior to shrink: \"+(x*100L/realSize)+ \"% ( \"+x+ '/' +realSize+ ')');\n\t\t\t\t\t}\n\t\t\t\t\tif(x == Integer.MAX_VALUE) {\n\t\t\t\t\t\tSystem.err.println(\"Key number \"+x+\" - ignoring store after \"+(x*(dataBlockSize+headerBlockSize)+\" bytes\"));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\topStat = c.getPrev(keyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tif(opStat == OperationStatus.NOTFOUND) {\n\t\t\t\t\tSystem.out.println(\"Read store: \"+x+\" keys.\");\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t} finally {\n\t\t\tif(c != null)\n\t\t\t\tc.close();\n\t\t}\n\t\t\n\t\tInteger[] wantedKeepNums = (Integer[]) wantedKeep.toArray(new Integer[wantedKeep.size()]);\n\t\tInteger[] unwantedIgnoreNums = (Integer[]) unwantedIgnore.toArray(new Integer[unwantedIgnore.size()]);\n\t\tInteger[] wantedMoveNums = (Integer[]) wantedMove.toArray(new Integer[wantedMove.size()]);\n\t\tInteger[] unwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\tlong[] freeEarlySlots = freeBlocks.toArray();\n\t\tArrays.sort(wantedKeepNums);\n\t\tArrays.sort(unwantedIgnoreNums);\n\t\tArrays.sort(wantedMoveNums);\n\t\tArrays.sort(unwantedMoveNums);\n\t\t\n\t\tfor(int i=0;i<newSize;i++) {\n\t\t\tInteger ii = new Integer(i);\n\t\t\tif(Arrays.binarySearch(wantedKeepNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedIgnoreNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(wantedMoveNums, ii) >= 0) continue;\n\t\t\tif(Arrays.binarySearch(unwantedMoveNums, ii) >= 0) continue;\n\t\t\tunwantedMove.add(ii);\n\t\t}\n\t\tunwantedMoveNums = (Integer[]) unwantedMove.toArray(new Integer[unwantedMove.size()]);\n\t\t\n\t\tSystem.err.println(\"Keys to keep where they are:     \"+wantedKeepNums.length);\n\t\tSystem.err.println(\"Keys which will be wiped anyway: \"+unwantedIgnoreNums.length);\n\t\tSystem.err.println(\"Keys to move:                    \"+wantedMoveNums.length);\n\t\tSystem.err.println(\"Keys to be moved over:           \"+unwantedMoveNums.length);\n\t\tSystem.err.println(\"Free slots to be moved over:     \"+freeEarlySlots.length);\n\t\t\n\t\t// Now move all the wantedMove blocks onto the corresponding unwantedMove's.\n\t\t\n\t\tWrapperManager.signalStarting((int)Math.min(Integer.MAX_VALUE, (5*60*1000 + wantedMoveNums.length*1000L + alreadyDropped.size() * 100L))); // 1 per second\n\t\t\n\t\tbyte[] buf = new byte[headerBlockSize + dataBlockSize];\n\t\tlong lruValue;\n\t\tbyte[] keyBuf = new byte[keyLength];\n\t\tt = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tif(alreadyDropped.size() > 0) {\n\t\t\t\tSystem.err.println(\"Deleting \"+alreadyDropped.size()+\" blocks beyond the length of the file\");\n\t\t\t\tfor(int i=0;i<alreadyDropped.size();i++) {\n\t\t\t\t\tint unwantedBlock = ((Integer) alreadyDropped.get(i)).intValue();\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock, unwantedBlockEntry);\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t\tif(i % 1024 == 0) {\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(alreadyDropped.size() % 1024 != 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<wantedMoveNums.length;i++) {\n\t\t\t\tInteger wantedBlock = wantedMoveNums[i];\n\t\t\t\t\n\t\t\t\tInteger unwantedBlock;\n\t\t\t\t\n\t\t\t\t// Can we move over an empty slot?\n\t\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\t\t// Don't need to delete old block\n\t\t\t\t\tunwantedBlock = new Integer((int) freeEarlySlots[i]); // will fit in an int\n\t\t\t\t} else if(unwantedMoveNums.length + freeEarlySlots.length > i) {\n\t\t\t\t\tunwantedBlock = unwantedMoveNums[i-freeEarlySlots.length];\n\t\t\t\t\t// Delete unwantedBlock from the store\n\t\t\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\t\t\tLongBinding.longToEntry(unwantedBlock.longValue(), unwantedBlockEntry);\n\t\t\t\t\t// Delete the old block from the database.\n\t\t\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\t\t} else {\n\t\t\t\t\tSystem.err.println(\"Keys to move but no keys to move over! Moved \"+i);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Move old data to new location\n\t\t\t\t\n\t\t\t\tDatabaseEntry wantedBlockEntry = new DatabaseEntry();\n\t\t\t\tLongBinding.longToEntry(wantedBlock.longValue(), wantedBlockEntry);\n\t\t\t\tlong entry = wantedBlock.longValue();\n\t\t\t\tboolean readLRU = false;\n\t\t\t\tboolean readKey = false;\n\t\t\t\ttry {\n\t\t\t\t\tstoreFC.read(ByteBuffer.wrap(buf), entry * (headerBlockSize + dataBlockSize));\n\t\t\t\t\tlruValue = 0;\n\t\t\t\t\tif(lruRAF.length() > ((entry + 1) * 8)) {\n\t\t\t\t\t\treadLRU = true;\n\t\t\t\t\t\tlruValue = fcReadLRU(entry);\n\t\t\t\t\t}\n\t\t\t\t\tif(keysRAF != null && keysRAF.length() > ((entry + 1) * keyLength)) {\n\t\t\t\t\t\treadKey = true;\n\t\t\t\t\t\tfcReadKey(entry, keyBuf);\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tSystem.err.println(\"Was reading \"+wantedBlock+\" to write to \"+unwantedBlock);\n\t\t\t\t\tSystem.err.println(e);\n\t\t\t\t\te.printStackTrace();\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t\tentry = unwantedBlock.longValue();\n\t\t\t\tstoreFC.write(ByteBuffer.wrap(buf), entry * (headerBlockSize + dataBlockSize));\n\t\t\t\tif(readLRU) {\n\t\t\t\t\tfcWriteLRU(entry, lruValue);\n\t\t\t\t}\n\t\t\t\tif(readKey) {\n\t\t\t\t\tfcWriteKey(entry, keyBuf);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Update the database w.r.t. the old block.\n\t\t\t\t\n\t\t\t\tDatabaseEntry routingKeyDBE = new DatabaseEntry();\n\t\t\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\t\t\tblockNumDB.get(t, wantedBlockEntry, routingKeyDBE, blockDBE, LockMode.RMW);\n\t\t\t\tStoreBlock block = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\tblock.offset = unwantedBlock.longValue();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(block, blockDBE);\n\t\t\t\tkeysDB.put(t, routingKeyDBE, blockDBE);\n\t\t\t\t\n\t\t\t\t// Think about committing the transaction.\n\t\t\t\t\n\t\t\t\tif((i+1) % 2048 == 0) {\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t\t\tSystem.out.println(\"Moving blocks: \"+(i*100/wantedMove.size())+ \"% ( \"+i+ '/' +wantedMove.size()+ ')');\n\t\t\t\t}\n\t\t\t\t//System.err.println(\"Moved \"+wantedBlock+\" to \"+unwantedBlock);\n\t\t\t}\n\t\t\tSystem.out.println(\"Moved all \"+wantedMove.size()+\" blocks\");\n\t\t\tif(t != null) {\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t}\n\t\t} finally {\n\t\t\tif(t != null)\n\t\t\t\tt.abort();\n\t\t\tt = null;\n\t\t}\n\t\tSystem.out.println(\"Completing shrink\"); // FIXME remove\n\t\t\n\t\tint totalUnwantedBlocks = unwantedMoveNums.length+freeEarlySlots.length;\n\t\tWrapperManager.signalStarting((int) Math.min(Integer.MAX_VALUE, 5*60*1000 + (totalUnwantedBlocks-wantedMoveNums.length) * 100L));\n\t\t// If there are any slots left over, they must be free.\n\t\t\n\t\t// FIXME put these into the database as we do in reconstruct().\n\t\t// Not doing that now as its not immediately obvious how to deal with it...\n\t\t\n\t\tfreeBlocks.clear();\n\t\tt = environment.beginTransaction(null,null);\n\t\tfor(int i=wantedMoveNums.length;i<totalUnwantedBlocks;i++) {\n\t\t\tlong blockNo;\n\t\t\tString reason;\n\t\t\tif(i < freeEarlySlots.length) {\n\t\t\t\tblockNo = freeEarlySlots[i];\n\t\t\t\treason = \"early slot \"+i;\n\t\t\t} else {\n\t\t\t\tblockNo = unwantedMoveNums[i-freeEarlySlots.length].longValue();\n\t\t\t\treason = \"unwanted \"+(i-freeEarlySlots.length);\n\t\t\t}\n\t\t\tDatabaseEntry unwantedBlockEntry = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNo, unwantedBlockEntry);\n\t\t\tblockNumDB.delete(t, unwantedBlockEntry);\n\t\t\tif(i % 1024 == 0) {\n\t\t\t\tSystem.out.println(\"Trimmed surplus keys in database: \"+(i-wantedMoveNums.length)+\"/\"+(totalUnwantedBlocks-wantedMoveNums.length));\n\t\t\t\tt.commit();\n\t\t\t\tif(i == totalUnwantedBlocks-1)\n\t\t\t\t\tt = null;\n\t\t\t\telse\n\t\t\t\t\tt = environment.beginTransaction(null,null);\n\t\t\t}\n\t\t\taddFreeBlock(blockNo, true, reason);\n\t\t}\n\t\tif(t != null) t.commit();\n\t\tt = null;\n\t\t\n\t\tSystem.out.println(\"Finishing shrink\"); // FIXME remove\n\t\t\n\t\tstoreRAF.setLength(newSize * (dataBlockSize + headerBlockSize));\n\t\tlruRAF.setLength(newSize * 8);\n\t\tif(keysRAF != null)\n\t\t\tkeysRAF.setLength(newSize * keyLength);\n\t\t\n\t\tsynchronized(this) {\n\t\t\tblocksInStore = newSize;\n\t\t}\n\t\tSystem.err.println(\"Shrunk store, now have \"+blocksInStore+\" of \"+maxBlocksInStore);\n\t}","commit_id":"57592ec97b70b4868b5989b3ccea8e3205f6a66a","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic StorableBlock fetch(byte[] routingkey, byte[] fullKey, boolean dontPromote) throws IOException {\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tint running;\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn null;\n\t\t\trunning = runningFetches++;\n\t\t}\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\t\t\t\n\t\t\t/**\n\t\t\t* We will have to write, unless both dontPromote and the key is valid.\n\t\t\t* The lock only applies to this record, so it's not a big problem for our use.\n\t\t\t* What *IS* a big problem is that if we take a LockMode.DEFAULT, and two threads\n\t\t\t* access the same key, they will both take the read lock, and then both try to\n\t\t\t* take the write lock. Neither can relinquish the read in order for the other to\n\t\t\t* take the write, so we're screwed.\n\t\t\t*/\n\t\t\tif(logMINOR) Logger.minor(this, \"Fetching \"+HexUtil.bytesToHex(routingkey)+\" dontPromote=\"+dontPromote+\" for \"+callback+\" running fetches: \"+running);\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not found\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tStorableBlock block = null;\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Reading block \"+storeBlock.offset+\"...\");\n\t\t\ttry {\n\t\t\t\tbyte[] header = new byte[headerBlockSize];\n\t\t\t\tbyte[] data = new byte[dataBlockSize];\n\t\t\t\ttry {\n\t\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t\tstoreRAF.seek(storeBlock.offset*(long)(dataBlockSize+headerBlockSize));\n\t\t\t\t\t\tstoreRAF.readFully(header);\n\t\t\t\t\t\tstoreRAF.readFully(data);\n\t\t\t\t\t}\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tLogger.error(this, \"No block\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Data off end of store file\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tblock = callback.construct(data, header, routingkey, fullKey);\n\t\t\t\t\n\t\t\t\tif(!Arrays.equals(block.getRoutingKey(), routingkey)) {\n\t\t\t\t\t\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tmisses++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\t\n\t\t\t\t\t// Insert the block into the index.\n\t\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\t\n\t\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\t\n\t\t\t\t\tLogger.normal(this, \"Does not verify (not the expected key), setting accessTime to \"+lru+\" for : \"+HexUtil.bytesToHex(routingkey));\n\t\t\t\t\t\n\t\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\t\n\t\t\t\t\troutingkeyDBE = new DatabaseEntry(block.getRoutingKey());\n\t\t\t\t\t\n\t\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t\t\tif(fullKey == null)\n\t\t\t\t\t\t\tfullKey = block.getFullKey();\n\t\t\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\t\t\tkeysRAF.seek(storeBlock.offset * keyLength);\n\t\t\t\t\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t\t\t\t\t\tif(logDEBUG)\n\t\t\t\t\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+storeBlock.offset+\" at \"+(storeBlock.offset * keyLength)+\" for \"+callback);\n\t\t\t\t\t\t\t} else if(logDEBUG) {\n\t\t\t\t\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+storeBlock.offset+\" for \"+callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while replacing element\");\n\t\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\t\tc.close();\n\t\t\t\t\t\tc = null;\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = null;\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tLogger.normal(this, \"Successfully replaced entry at block number \"+storeBlock.offset+\" lru \"+lru);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!dontPromote) {\n\t\t\t\t\tstoreBlock.updateRecentlyUsed();\n\t\t\t\t\tDatabaseEntry updateDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, updateDBE);\n\t\t\t\t\tc.putCurrent(updateDBE);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t\tlruRAF.seek(storeBlock.offset * 8);\n\t\t\t\t\t\tlruRAF.writeLong(storeBlock.recentlyUsed);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.abort();\n\t\t\t\t\tt = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) {\n\t\t\t\t\tLogger.minor(this, \"Headers: \" + header.length+\" bytes, hash \" + Fields.hashCode(header));\n\t\t\t\t\tLogger.minor(this, \"Data: \" + data.length + \" bytes, hash \" + Fields.hashCode(data) + \" fetching \" + HexUtil.bytesToHex(routingkey));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch(KeyVerifyException ex) {\n\t\t\t\tLogger.normal(this, \"Does not verify (\"+ex+\"), setting accessTime to 0 for : \"+HexUtil.bytesToHex(routingkey), ex);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\tsynchronized(storeRAF) {\n\t\t\t\t\t// Clear the key in the keys file.\n\t\t\t\t\tbyte[] buf = new byte[keyLength];\n\t\t\t\t\tfor(int i=0;i<buf.length;i++) buf[i] = 0; // FIXME unnecessary?\n\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\tkeysRAF.seek(storeBlock.offset * keyLength);\n\t\t\t\t\t\tkeysRAF.write(buf);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\n\t\t\t\t// Insert the block into the index with a random key, so that it's part of the LRU.\n\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\n\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\n\t\t\t\tbyte[] randomKey = new byte[keyLength];\n\t\t\t\trandom.nextBytes(randomKey);\n\t\t\t\t\n\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\n\t\t\t\troutingkeyDBE = new DatabaseEntry(randomKey);\n\t\t\t\t\n\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\ttry {\n\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while adding corrupt element to LRU\");\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tsynchronized(this) {\n\t\t\t\thits++;\n\t\t\t}\n\t\t\treturn block;\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tif(ex instanceof IOException) {\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tif(closed) return null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tint x;\n\t\t\tsynchronized(this) {\n\t\t\t\tx = runningFetches--;\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Running fetches now \"+x);\n\t\t}\n\t}","id":20759,"modified_method":"/**\n\t * {@inheritDoc}\n\t */\n\tpublic StorableBlock fetch(byte[] routingkey, byte[] fullKey, boolean dontPromote) throws IOException {\n\t\tDatabaseEntry routingkeyDBE = new DatabaseEntry(routingkey);\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tint running;\n\t\tsynchronized(this) {\n\t\t\tif(closed)\n\t\t\t\treturn null;\n\t\t\trunning = runningFetches++;\n\t\t}\n\t\t\n\t\tCursor c = null;\n\t\tTransaction t = null;\n\t\ttry {\n\t\t\tt = environment.beginTransaction(null,null);\n\t\t\tc = keysDB.openCursor(t,null);\n\t\t\t\n\t\t\t/**\n\t\t\t* We will have to write, unless both dontPromote and the key is valid.\n\t\t\t* The lock only applies to this record, so it's not a big problem for our use.\n\t\t\t* What *IS* a big problem is that if we take a LockMode.DEFAULT, and two threads\n\t\t\t* access the same key, they will both take the read lock, and then both try to\n\t\t\t* take the write lock. Neither can relinquish the read in order for the other to\n\t\t\t* take the write, so we're screwed.\n\t\t\t*/\n\t\t\tif(logMINOR) Logger.minor(this, \"Fetching \"+HexUtil.bytesToHex(routingkey)+\" dontPromote=\"+dontPromote+\" for \"+callback+\" running fetches: \"+running);\n\t\t\tif(c.getSearchKey(routingkeyDBE,blockDBE,LockMode.RMW)\n\t\t\t\t\t!=OperationStatus.SUCCESS) {\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.abort();\n\t\t\t\tt = null;\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Not found\");\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tStoreBlock storeBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(blockDBE);\n\t\t\t\t\t\t\n\t\t\tStorableBlock block = null;\n\t\t\t\n\t\t\tif(logMINOR) Logger.minor(this, \"Reading block \"+storeBlock.offset+\"...\");\n\t\t\ttry {\n\t\t\t\tbyte[] header = new byte[headerBlockSize];\n\t\t\t\tbyte[] data = new byte[dataBlockSize];\n\t\t\t\ttry {\n\t\t\t\t\tfcReadStore(storeBlock.offset, header, data);\n\t\t\t\t} catch (EOFException e) {\n\t\t\t\t\tLogger.error(this, \"No block\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Data off end of store file\");\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tblock = callback.construct(data, header, routingkey, fullKey);\n\t\t\t\t\n\t\t\t\tif(!Arrays.equals(block.getRoutingKey(), routingkey)) {\n\t\t\t\t\t\n\t\t\t\t\tsynchronized(this) {\n\t\t\t\t\t\tmisses++;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\t\n\t\t\t\t\t// Insert the block into the index.\n\t\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\t\n\t\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\t\n\t\t\t\t\tLogger.normal(this, \"Does not verify (not the expected key), setting accessTime to \"+lru+\" for : \"+HexUtil.bytesToHex(routingkey));\n\t\t\t\t\t\n\t\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\t\n\t\t\t\t\troutingkeyDBE = new DatabaseEntry(block.getRoutingKey());\n\t\t\t\t\t\n\t\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t\t\tif(fullKey == null)\n\t\t\t\t\t\t\tfullKey = block.getFullKey();\n\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\t\t\tfcWriteKey(storeBlock.offset, fullKey);\n\t\t\t\t\t\t\t\tif(logDEBUG)\n\t\t\t\t\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+storeBlock.offset+\" at \"+(storeBlock.offset * keyLength)+\" for \"+callback);\n\t\t\t\t\t\t\t} else if(logDEBUG) {\n\t\t\t\t\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+storeBlock.offset+\" for \"+callback);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while replacing element\");\n\t\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\t\tc.close();\n\t\t\t\t\t\tc = null;\n\t\t\t\t\t\tt.commit();\n\t\t\t\t\t\tt = null;\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tLogger.normal(this, \"Successfully replaced entry at block number \"+storeBlock.offset+\" lru \"+lru);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(!dontPromote) {\n\t\t\t\t\tstoreBlock.updateRecentlyUsed();\n\t\t\t\t\tDatabaseEntry updateDBE = new DatabaseEntry();\n\t\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, updateDBE);\n\t\t\t\t\tc.putCurrent(updateDBE);\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\tfcWriteLRU(storeBlock.offset, storeBlock.recentlyUsed);\n\t\t\t\t} else {\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.abort();\n\t\t\t\t\tt = null;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(logMINOR) {\n\t\t\t\t\tLogger.minor(this, \"Headers: \" + header.length+\" bytes, hash \" + Fields.hashCode(header));\n\t\t\t\t\tLogger.minor(this, \"Data: \" + data.length + \" bytes, hash \" + Fields.hashCode(data) + \" fetching \" + HexUtil.bytesToHex(routingkey));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch(KeyVerifyException ex) {\n\t\t\t\tLogger.normal(this, \"Does not verify (\"+ex+\"), setting accessTime to 0 for : \"+HexUtil.bytesToHex(routingkey), ex);\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tmisses++;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\t// Clear the key in the keys file.\n\t\t\t\t\tbyte[] buf = new byte[keyLength];\n\t\t\t\t\tfor(int i=0;i<buf.length;i++) buf[i] = 0; // FIXME unnecessary?\n\t\t\t\t\tif(keysRAF != null) {\n\t\t\t\t\t\tfcWriteKey(storeBlock.offset, buf);\n\t\t\t\t\t}\n\t\t\t\t\n\t\t\t\tkeysDB.delete(t, routingkeyDBE);\n\t\t\t\t\n\t\t\t\t// Insert the block into the index with a random key, so that it's part of the LRU.\n\t\t\t\t// Set the LRU to minimum - 1.\n\t\t\t\t\n\t\t\t\tlong lru = getMinRecentlyUsed(t) - 1;\n\t\t\t\t\n\t\t\t\tbyte[] randomKey = new byte[keyLength];\n\t\t\t\trandom.nextBytes(randomKey);\n\t\t\t\t\n\t\t\t\tstoreBlock = new StoreBlock(storeBlock.offset, lru);\n\t\t\t\t\n\t\t\t\troutingkeyDBE = new DatabaseEntry(randomKey);\n\t\t\t\t\n\t\t\t\tblockDBE = new DatabaseEntry();\n\t\t\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\t\t\ttry {\n\t\t\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\t\t} catch (DatabaseException e) {\n\t\t\t\t\tLogger.error(this, \"Caught database exception \"+e+\" while adding corrupt element to LRU\");\n\t\t\t\t\taddFreeBlock(storeBlock.offset, true, \"Bogus key\");\n\t\t\t\t\tc.close();\n\t\t\t\t\tc = null;\n\t\t\t\t\tt.commit();\n\t\t\t\t\tt = null;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tc.close();\n\t\t\t\tc = null;\n\t\t\t\tt.commit();\n\t\t\t\tt = null;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tsynchronized(this) {\n\t\t\t\thits++;\n\t\t\t}\n\t\t\treturn block;\n\t\t} catch(Throwable ex) {  // FIXME: ugly\n\t\t\tif(ex instanceof IOException) {\n\t\t\t\tsynchronized(this) {\n\t\t\t\t\tif(closed) return null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(c!=null) {\n\t\t\t\ttry{c.close();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tif(t!=null) {\n\t\t\t\ttry{t.abort();}catch(DatabaseException ex2){}\n\t\t\t}\n\t\t\tcheckSecondaryDatabaseError(ex);\n\t\t\tLogger.error(this, \"Caught \"+ex, ex);\n\t\t\tex.printStackTrace();\n\t\t\tthrow new IOException(ex.getMessage());\n\t\t} finally {\n\t\t\tint x;\n\t\t\tsynchronized(this) {\n\t\t\t\tx = runningFetches--;\n\t\t\t}\n\t\t\tif(logMINOR) Logger.minor(this, \"Running fetches now \"+x);\n\t\t}\n\t}","commit_id":"57592ec97b70b4868b5989b3ccea8e3205f6a66a","url":"https://github.com/freenet/fred"},{"original_method":"/**\n\t * Initializes the datastore\n\t * \n\t * @param env\n\t *            Berkeley DB {@link Environment}.\n\t * @param prefix\n\t *            Database name prefix\n\t * @param storeFile\n\t *            Store file, where the actual data are stored\n\t * @param lruFile\n\t *            LRU data file, flat file store for recovery\n\t * @param keysFile\n\t *            Keys data file, flat file store for recovery, created only if\n\t *            <code>callback.storeFullKeys()<\/code> is <code>true<\/code>\n\t * @param fixSecondaryFile\n\t *            Flag file. Created when secondary database error occur. If\n\t *            this file exist on start, delete it and recreate the secondary\n\t *            database.\n\t * @param maxChkBlocks\n\t *            maximum number of blocks\n\t * @param wipe\n\t *            If <code>true<\/code>, wipe and reconstruct the database.\n\t * @param storeShutdownHook\n\t *            {@link SemiOrderedShutdownHook} for hooking database shutdown\n\t *            hook.\n\t * @param reconstructFile\n\t *            Flag file. Created when database crash.\n\t * @param callback\n\t *            {@link StoreCallback} object for this store.\n\t * @throws IOException\n\t * @throws DatabaseException\n\t */\n\tprivate BerkeleyDBFreenetStore(Environment env, String prefix, File storeFile, File lruFile, File keysFile,\n\t\t\tFile fixSecondaryFile, long maxChkBlocks, boolean wipe, SemiOrderedShutdownHook storeShutdownHook,\n\t\t\tFile reconstructFile,\n\t\t\tStoreCallback callback, RandomSource random) throws IOException, DatabaseException {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tlogDEBUG = Logger.shouldLog(Logger.DEBUG, this);\n\t\t\n\t\tthis.random = random;\n\t\tthis.environment = env;\n\t\tthis.name = prefix;\n\t\tthis.fixSecondaryFile = fixSecondaryFile;\n\t\tthis.maxBlocksInStore = maxChkBlocks;\n\t\tthis.reconstructFile = reconstructFile;\n\t\tthis.callback = callback;\n\t\tthis.collisionPossible = callback.collisionPossible();\n\t\tthis.dataBlockSize = callback.dataLength();\n\t\tthis.headerBlockSize = callback.headerLength();\n\t\tthis.keyLength = callback.fullKeyLength();\n\t\tcallback.setStore(this);\n\t\t\n\t\tOOMHandler.addOOMHook(this);\n\n\t\tthis.freeBlocks = new SortedLongSet();\n\n\t\t// Delete old database(s).\n\t\tif (wipe) {\n\t\t\tSystem.err.println(\"Wiping old database for \" + prefix);\n\t\t\twipeOldDatabases(environment, prefix);\n\t\t}\n\n\t\t// Initialize CHK database\n\t\tDatabaseConfig dbConfig = new DatabaseConfig();\n\t\tdbConfig.setAllowCreate(true);\n\t\tdbConfig.setTransactional(true);\n\n\t\tkeysDB = environment.openDatabase(null,prefix+\"CHK\",dbConfig);\n\t\tSystem.err.println(\"Opened main database for \"+prefix);\n\n\t\tif(fixSecondaryFile.exists()) {\n\t\t\tfixSecondaryFile.delete();\n\t\t\tremoveSecondaryDatabase();\n\t\t}\n\n\t\tstoreBlockTupleBinding = new StoreBlockTupleBinding();\n\n\t\t// Initialize secondary CHK database sorted on accesstime\n\t\taccessTimeDB = openSecondaryDataBase(prefix + \"CHK_accessTime\", keysDB.count() == 0 || wipe, wipe, true, new AccessTimeKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize other secondary database sorted on block number\n\t\tblockNumDB = openSecondaryDataBase(prefix + \"CHK_blockNum\", keysDB.count() == 0 || wipe, wipe, false, new BlockNumberKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize the store file\n\t\ttry {\n\t\t\tif(!storeFile.exists())\n\t\t\t\tif(!storeFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + storeFile + \" !\");\n\t\t\tstoreRAF = new RandomAccessFile(storeFile,\"rw\");\n\n\t\t\tif(!lruFile.exists()) \n\t\t\t\tif(!lruFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + lruFile + \" !\");\n\t\t\tlruRAF = new RandomAccessFile(lruFile,\"rw\");\n\n\t\t\tif(keysFile != null) {\n\t\t\t\tif(!keysFile.exists())\n\t\t\t\t\tif(!keysFile.createNewFile())\n\t\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + keysFile + \" !\");\n\t\t\t\tkeysRAF = new RandomAccessFile(keysFile,\"rw\");\n\t\t\t} else keysRAF = null;\n\n\t\t\tif (wipe) {\n                                // wipe and reconstruct\n\t\t\t\tblocksInStore = 0;\n\t\t\t\tlastRecentlyUsed = 0;\n\n\t\t\t\treconstruct();\n\n\t\t\t\tblocksInStore = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tmaybeOfflineShrink(true);\n\t\t\t} else {\n                                // just open\n                                boolean dontCheckForHolesShrinking = false;\n\n                                long chkBlocksInDatabase = highestBlockNumberInDatabase();\n                                blocksInStore = chkBlocksInDatabase;\n\t\t\t\tlong chkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tSystem.out.println(\"Keys in store: db \"+chkBlocksInDatabase+\" file \"+chkBlocksFromFile+\" / max \"+maxChkBlocks);\n\n\t\t\t\tif(chkBlocksInDatabase > chkBlocksFromFile) {\n\t\t\t\t\tSystem.out.println(\"More keys in database than in store!\");\n\n\t\t\t\t\t//throw new DatabaseException(\"More keys in database than in store!\");\n\t\t\t\t\t// FIXME reinstate if handling code doesn't work\n\t\t\t\t\t// FIXME we can do a cleverer recovery: Find all keys whose block number is > chkBlocksFromFile and delete them\n\t\t\t\t}\n\n\t\t\t\tif(((blocksInStore == 0) && (chkBlocksFromFile != 0)) ||\n                                            (((blocksInStore + 10) * 1.1) < chkBlocksFromFile)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tclose(false);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tLogger.error(this, \"Failed to close: \"+t, t);\n\t\t\t\t\t\tSystem.err.println(\"Failed to close: \"+t);\n\t\t\t\t\t\tt.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t\tthrow new DatabaseException(\"Keys in database: \"+blocksInStore+\" but keys in file: \"+chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Keys in store: \"+blocksInStore);\n\n\t\t\t\tmaybeOfflineShrink(dontCheckForHolesShrinking);\n\t\t\t\tchkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t// Add shutdownhook\n\t\t\tstoreShutdownHook.addEarlyJob(new ShutdownHook());\n\t\t} catch (DatabaseException t) {\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tt.printStackTrace();\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t} catch (IOException t) {\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t}\n\t}","id":20760,"modified_method":"/**\n\t * Initializes the datastore\n\t * \n\t * @param env\n\t *            Berkeley DB {@link Environment}.\n\t * @param prefix\n\t *            Database name prefix\n\t * @param storeFile\n\t *            Store file, where the actual data are stored\n\t * @param lruFile\n\t *            LRU data file, flat file store for recovery\n\t * @param keysFile\n\t *            Keys data file, flat file store for recovery, created only if\n\t *            <code>callback.storeFullKeys()<\/code> is <code>true<\/code>\n\t * @param fixSecondaryFile\n\t *            Flag file. Created when secondary database error occur. If\n\t *            this file exist on start, delete it and recreate the secondary\n\t *            database.\n\t * @param maxChkBlocks\n\t *            maximum number of blocks\n\t * @param wipe\n\t *            If <code>true<\/code>, wipe and reconstruct the database.\n\t * @param storeShutdownHook\n\t *            {@link SemiOrderedShutdownHook} for hooking database shutdown\n\t *            hook.\n\t * @param reconstructFile\n\t *            Flag file. Created when database crash.\n\t * @param callback\n\t *            {@link StoreCallback} object for this store.\n\t * @throws IOException\n\t * @throws DatabaseException\n\t */\n\tprivate BerkeleyDBFreenetStore(Environment env, String prefix, File storeFile, File lruFile, File keysFile,\n\t\t\tFile fixSecondaryFile, long maxChkBlocks, boolean wipe, SemiOrderedShutdownHook storeShutdownHook,\n\t\t\tFile reconstructFile,\n\t\t\tStoreCallback callback, RandomSource random) throws IOException, DatabaseException {\n\t\tlogMINOR = Logger.shouldLog(Logger.MINOR, this);\n\t\tlogDEBUG = Logger.shouldLog(Logger.DEBUG, this);\n\t\t\n\t\tthis.random = random;\n\t\tthis.environment = env;\n\t\tthis.name = prefix;\n\t\tthis.fixSecondaryFile = fixSecondaryFile;\n\t\tthis.maxBlocksInStore = maxChkBlocks;\n\t\tthis.reconstructFile = reconstructFile;\n\t\tthis.callback = callback;\n\t\tthis.collisionPossible = callback.collisionPossible();\n\t\tthis.dataBlockSize = callback.dataLength();\n\t\tthis.headerBlockSize = callback.headerLength();\n\t\tthis.keyLength = callback.fullKeyLength();\n\t\tcallback.setStore(this);\n\t\t\n\t\tOOMHandler.addOOMHook(this);\n\n\t\tthis.freeBlocks = new SortedLongSet();\n\n\t\t// Delete old database(s).\n\t\tif (wipe) {\n\t\t\tSystem.err.println(\"Wiping old database for \" + prefix);\n\t\t\twipeOldDatabases(environment, prefix);\n\t\t}\n\n\t\t// Initialize CHK database\n\t\tDatabaseConfig dbConfig = new DatabaseConfig();\n\t\tdbConfig.setAllowCreate(true);\n\t\tdbConfig.setTransactional(true);\n\n\t\tkeysDB = environment.openDatabase(null,prefix+\"CHK\",dbConfig);\n\t\tSystem.err.println(\"Opened main database for \"+prefix);\n\n\t\tif(fixSecondaryFile.exists()) {\n\t\t\tfixSecondaryFile.delete();\n\t\t\tremoveSecondaryDatabase();\n\t\t}\n\n\t\tstoreBlockTupleBinding = new StoreBlockTupleBinding();\n\n\t\t// Initialize secondary CHK database sorted on accesstime\n\t\taccessTimeDB = openSecondaryDataBase(prefix + \"CHK_accessTime\", keysDB.count() == 0 || wipe, wipe, true, new AccessTimeKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize other secondary database sorted on block number\n\t\tblockNumDB = openSecondaryDataBase(prefix + \"CHK_blockNum\", keysDB.count() == 0 || wipe, wipe, false, new BlockNumberKeyCreator(\n\t\t\t\tstoreBlockTupleBinding));\n\n\t\t// Initialize the store file\n\t\ttry {\n\t\t\tif(!storeFile.exists())\n\t\t\t\tif(!storeFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + storeFile + \" !\");\n\t\t\tstoreRAF = new RandomAccessFile(storeFile,\"rw\");\n\t\t\tstoreFC = storeRAF.getChannel();\n\n\t\t\tif(!lruFile.exists()) \n\t\t\t\tif(!lruFile.createNewFile())\n\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + lruFile + \" !\");\n\t\t\tlruRAF = new RandomAccessFile(lruFile,\"rw\");\n\t\t\tlruFC = lruRAF.getChannel();\n\n\t\t\tif(keysFile != null) {\n\t\t\t\tif(!keysFile.exists())\n\t\t\t\t\tif(!keysFile.createNewFile())\n\t\t\t\t\t\tthrow new IOException(\"Can't create a new file \" + keysFile + \" !\");\n\t\t\t\tkeysRAF = new RandomAccessFile(keysFile,\"rw\");\n\t\t\t\tkeysFC = keysRAF.getChannel();\n\t\t\t} else keysRAF = null;\n\n\t\t\tif (wipe) {\n                                // wipe and reconstruct\n\t\t\t\tblocksInStore = 0;\n\t\t\t\tlastRecentlyUsed = 0;\n\n\t\t\t\treconstruct();\n\n\t\t\t\tblocksInStore = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tmaybeOfflineShrink(true);\n\t\t\t} else {\n                                // just open\n                                boolean dontCheckForHolesShrinking = false;\n\n                                long chkBlocksInDatabase = highestBlockNumberInDatabase();\n                                blocksInStore = chkBlocksInDatabase;\n\t\t\t\tlong chkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tlastRecentlyUsed = getMaxRecentlyUsed();\n\n\t\t\t\tSystem.out.println(\"Keys in store: db \"+chkBlocksInDatabase+\" file \"+chkBlocksFromFile+\" / max \"+maxChkBlocks);\n\n\t\t\t\tif(chkBlocksInDatabase > chkBlocksFromFile) {\n\t\t\t\t\tSystem.out.println(\"More keys in database than in store!\");\n\n\t\t\t\t\t//throw new DatabaseException(\"More keys in database than in store!\");\n\t\t\t\t\t// FIXME reinstate if handling code doesn't work\n\t\t\t\t\t// FIXME we can do a cleverer recovery: Find all keys whose block number is > chkBlocksFromFile and delete them\n\t\t\t\t}\n\n\t\t\t\tif(((blocksInStore == 0) && (chkBlocksFromFile != 0)) ||\n                                            (((blocksInStore + 10) * 1.1) < chkBlocksFromFile)) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tclose(false);\n\t\t\t\t\t} catch (Throwable t) {\n\t\t\t\t\t\tLogger.error(this, \"Failed to close: \"+t, t);\n\t\t\t\t\t\tSystem.err.println(\"Failed to close: \"+t);\n\t\t\t\t\t\tt.printStackTrace();\n\t\t\t\t\t}\n\t\t\t\t\tthrow new DatabaseException(\"Keys in database: \"+blocksInStore+\" but keys in file: \"+chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\tif(logMINOR) Logger.minor(this, \"Keys in store: \"+blocksInStore);\n\n\t\t\t\tmaybeOfflineShrink(dontCheckForHolesShrinking);\n\t\t\t\tchkBlocksFromFile = countCHKBlocksFromFile();\n\t\t\t\tblocksInStore = Math.max(blocksInStore, chkBlocksFromFile);\n\t\t\t\t}\n\n\t\t\t// Add shutdownhook\n\t\t\tstoreShutdownHook.addEarlyJob(new ShutdownHook());\n\t\t} catch (DatabaseException t) {\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tt.printStackTrace();\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t} catch (IOException t) {\n\t\t\tSystem.err.println(\"Caught exception, closing database: \" + prefix + \" (\" + t + \")\");\n\t\t\tLogger.error(this, \"Caught exception, closing database: \" + prefix, t);\n\t\t\tclose(false);\n\t\t\t\n\t\t\tthrow t;\n\t\t}\n\t}","commit_id":"57592ec97b70b4868b5989b3ccea8e3205f6a66a","url":"https://github.com/freenet/fred"},{"original_method":"private boolean writeNewBlock(long blockNum, byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\tlong byteOffset = blockNum*(dataBlockSize+headerBlockSize);\n\t\tStoreBlock storeBlock = new StoreBlock(this, blockNum);\n\t\tlong lruValue = storeBlock.recentlyUsed;\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\ttry {\n\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t} catch (DatabaseException e) {\n\t\t\tDatabaseEntry blockNumEntry = new DatabaseEntry();\n\t\t\tDatabaseEntry found = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNum, blockNumEntry);\n\t\t\t\n\t\t\tOperationStatus success =\n\t\t\t\tblockNumDB.get(t, blockNumEntry, found, LockMode.DEFAULT);\n\n\t\t\tif(success == OperationStatus.KEYEXIST || success == OperationStatus.SUCCESS) {\n\t\t\t\tSystem.err.println(\"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\te.printStackTrace();\n\t\t\t\tLogger.error(this, \"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tLogger.minor(this, \"Key doesn't exist for block num \"+blockNum+\" but caught \"+e, e);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tsynchronized(storeRAF) {\n\t\t\ttry {\n\t\t\t\tstoreRAF.seek(byteOffset);\n\t\t\t} catch (IOException ioe) {\n\t\t\t\tif(byteOffset > (2l*1024*1024*1024)) {\n\t\t\t\t\tLogger.error(this, \"Environment does not support files bigger than 2 GB?\");\n\t\t\t\t\tSystem.out.println(\"Environment does not support files bigger than 2 GB? (exception to follow)\");\n\t\t\t\t}\n\t\t\t\tLogger.error(this, \"Caught IOException on storeRAF.seek(\"+byteOffset+ ')');\n\t\t\t\tthrow ioe;\n\t\t\t}\n\t\t\tstoreRAF.write(header);\n\t\t\tstoreRAF.write(data);\n\t\t\tlruRAF.seek(blockNum * 8);\n\t\t\tlruRAF.writeLong(lruValue);\n\t\t\tif(keysRAF != null) {\n\t\t\t\tkeysRAF.seek(blockNum * keyLength);\n\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t\tif(logDEBUG)\n\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+blockNum+\" at \"+(blockNum * keyLength)+\" for \"+callback);\n\t\t\t} else if(logDEBUG) {\n\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+blockNum+\" for \"+callback);\n\t\t\t}\n\t\t\twrites++;\n\t\t}\n\t\treturn true;\n\t}","id":20761,"modified_method":"private boolean writeNewBlock(long blockNum, byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\tStoreBlock storeBlock = new StoreBlock(this, blockNum);\n\t\tlong lruValue = storeBlock.recentlyUsed;\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\ttry {\n\t\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t} catch (DatabaseException e) {\n\t\t\tDatabaseEntry blockNumEntry = new DatabaseEntry();\n\t\t\tDatabaseEntry found = new DatabaseEntry();\n\t\t\tLongBinding.longToEntry(blockNum, blockNumEntry);\n\t\t\t\n\t\t\tOperationStatus success =\n\t\t\t\tblockNumDB.get(t, blockNumEntry, found, LockMode.DEFAULT);\n\n\t\t\tif(success == OperationStatus.KEYEXIST || success == OperationStatus.SUCCESS) {\n\t\t\t\tSystem.err.println(\"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\te.printStackTrace();\n\t\t\t\tLogger.error(this, \"Trying to overwrite block \"+blockNum+\" but already used: \"+getName()+\" for \"+e);\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tLogger.minor(this, \"Key doesn't exist for block num \"+blockNum+\" but caught \"+e, e);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\tfcWriteStore(blockNum, header, data);\n\t\t\tfcWriteLRU(blockNum, lruValue);\n\t\t\tif(keysRAF != null) {\n\t\t\t\tfcWriteKey(blockNum, fullKey);\n\t\t\t\tif(logDEBUG)\n\t\t\t\t\tLogger.debug(this, \"Written full key length \"+fullKey.length+\" to block \"+blockNum+\" at \"+(blockNum * keyLength)+\" for \"+callback);\n\t\t\t} else if(logDEBUG) {\n\t\t\t\tLogger.debug(this, \"Not writing full key length \"+fullKey.length+\" for block \"+blockNum+\" for \"+callback);\n\t\t\t}\n\t\t\tsynchronized (this) {\n\t\t\twrites++;\n\t\t}\n\t\t\n\t\treturn true;\n\t}","commit_id":"57592ec97b70b4868b5989b3ccea8e3205f6a66a","url":"https://github.com/freenet/fred"},{"original_method":"private void overwriteLRUBlock(byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\t// Overwrite an other block\n\t\tCursor c = accessTimeDB.openCursor(t,null);\n\t\tStoreBlock oldStoreBlock;\n\t\ttry {\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry dataDBE = new DatabaseEntry();\n\t\t\tc.getFirst(keyDBE,dataDBE,LockMode.RMW);\n\t\t\toldStoreBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(dataDBE);\n\t\t\tc.delete();\n\t\t} finally {\n\t\t\tc.close();\n\t\t}\n\t\t// Deleted, so we can now reuse it.\n\t\t// Because we acquired a write lock, nobody else has taken it.\n\t\t// FIXME if this fails we can leak the block??\n\t\tStoreBlock storeBlock = new StoreBlock(this, oldStoreBlock.getOffset());\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\tsynchronized(storeRAF) {\n\t\t\tstoreRAF.seek(storeBlock.getOffset()*(long)(dataBlockSize+headerBlockSize));\n\t\t\tstoreRAF.write(header);\n\t\t\tstoreRAF.write(data);\n\t\t\tlruRAF.seek(storeBlock.getOffset() * 8);\n\t\t\tlruRAF.writeLong(storeBlock.recentlyUsed);\n\t\t\tif(keysRAF != null) {\n\t\t\t\tkeysRAF.seek(storeBlock.getOffset() * keyLength);\n\t\t\t\tkeysRAF.write(fullKey);\n\t\t\t}\n\t\t\twrites++;\n\t\t}\n\t}","id":20762,"modified_method":"private void overwriteLRUBlock(byte[] header, byte[] data, Transaction t, DatabaseEntry routingkeyDBE, byte[] fullKey) throws DatabaseException, IOException {\n\t\t// Overwrite an other block\n\t\tCursor c = accessTimeDB.openCursor(t,null);\n\t\tStoreBlock oldStoreBlock;\n\t\ttry {\n\t\t\tDatabaseEntry keyDBE = new DatabaseEntry();\n\t\t\tDatabaseEntry dataDBE = new DatabaseEntry();\n\t\t\tc.getFirst(keyDBE,dataDBE,LockMode.RMW);\n\t\t\toldStoreBlock = (StoreBlock) storeBlockTupleBinding.entryToObject(dataDBE);\n\t\t\tc.delete();\n\t\t} finally {\n\t\t\tc.close();\n\t\t}\n\t\t// Deleted, so we can now reuse it.\n\t\t// Because we acquired a write lock, nobody else has taken it.\n\t\t// FIXME if this fails we can leak the block??\n\t\tStoreBlock storeBlock = new StoreBlock(this, oldStoreBlock.getOffset());\n\t\tDatabaseEntry blockDBE = new DatabaseEntry();\n\t\tstoreBlockTupleBinding.objectToEntry(storeBlock, blockDBE);\n\t\tkeysDB.put(t,routingkeyDBE,blockDBE);\n\t\t\n\t\tfcWriteStore(storeBlock.getOffset(), header, data);\n\t\tfcWriteLRU( storeBlock.getOffset(),storeBlock.recentlyUsed);\n\t\tif (keysRAF != null)\n\t\t\tfcWriteKey(storeBlock.getOffset(), fullKey);\n\t\tsynchronized (this) {\n\t\t\twrites++;\n\t\t}\n\t}","commit_id":"57592ec97b70b4868b5989b3ccea8e3205f6a66a","url":"https://github.com/freenet/fred"},{"original_method":"public void addAuthor(String author) {\n    if (authorsList == null) {\n      authorsList = new ArrayList();\n    }\n    authorsList.add(author);\n  }","id":20763,"modified_method":"public void addAuthor(@NotNull String author) {\n    if (myAuthorsList == null) {\n      myAuthorsList = ContainerUtilRt.newArrayList();\n    }\n    myAuthorsList.add(author);\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getVersion() {\n    return version;\n  }","id":20764,"modified_method":"@Nullable\n  public String getVersion() {\n    return myVersion;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void generateSpecial(String prefix, @NonNls StringBuffer sb) {\n    super.generateSpecial(prefix, sb);\n    if (!isNull(authorsList)) {\n      for (Object aAuthorsList : authorsList) {\n        String s = (String)aAuthorsList;\n        sb.append(prefix);\n        sb.append(\"@author \");\n        sb.append(myFormatter.getParser().splitIntoCLines(s, prefix + \"        \", false));\n      }\n    }\n    if (!isNull(version)) {\n      sb.append(prefix);\n      sb.append(\"@version \");\n      sb.append(myFormatter.getParser().splitIntoCLines(version, prefix + \"         \", false));\n    }\n  }","id":20765,"modified_method":"@Override\n  protected void generateSpecial(@NotNull String prefix, @NotNull StringBuilder sb) {\n    super.generateSpecial(prefix, sb);\n    if (!isNull(myAuthorsList)) {\n      JDTag tag = JDTag.AUTHOR;\n      for (String author : myAuthorsList) {\n        sb.append(prefix);\n        sb.append(tag.getWithEndWhitespace());\n        sb.append(myFormatter.getParser().formatJDTagDescription(author, tag.getDescriptionPrefix(prefix)));\n      }\n    }\n    if (!isNull(myVersion)) {\n      sb.append(prefix);\n      JDTag tag = JDTag.VERSION;\n      sb.append(tag.getWithEndWhitespace());\n      sb.append(myFormatter.getParser().formatJDTagDescription(myVersion, tag.getDescriptionPrefix(prefix)));\n    }\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setVersion(String version) {\n    this.version = version;\n  }","id":20766,"modified_method":"public void setVersion(@NotNull String version) {\n    this.myVersion = version;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setDeprecated(String deprecated) {\n    this.deprecated = deprecated;\n  }","id":20767,"modified_method":"public void setDeprecated(@Nullable String deprecated) {\n    this.myDeprecated = deprecated;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"protected void generateSpecial(String prefix, StringBuffer sb) {\n  }","id":20768,"modified_method":"protected void generateSpecial(@NotNull String prefix, @NotNull StringBuilder sb) {\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String getDescription() {\n    return description;\n  }","id":20769,"modified_method":"@Nullable\n  public String getDescription() {\n    return myDescription;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setSince(String since) {\n    this.since = since;\n  }","id":20770,"modified_method":"public void setSince(@Nullable String since) {\n    this.mySince = since;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addUnknownTag(String unknownTag) {\n    if (unknownList == null) {\n      unknownList = new ArrayList();\n    }\n    unknownList.add(unknownTag);\n  }","id":20771,"modified_method":"public void addUnknownTag(@NotNull String unknownTag) {\n    if (myUnknownList == null) {\n      myUnknownList = ContainerUtilRt.newArrayList();\n    }\n    myUnknownList.add(unknownTag);\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setDescription(String description) {\n    this.description = description;\n  }","id":20772,"modified_method":"public void setDescription(@Nullable String description) {\n    this.myDescription = description;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addSeeAlso(String seeAlso) {\n    if (seeAlsoList == null) {\n      seeAlsoList = new ArrayList();\n    }\n    seeAlsoList.add(seeAlso);\n  }","id":20773,"modified_method":"public void addSeeAlso(@NotNull String seeAlso) {\n    if (mySeeAlsoList == null) {\n      mySeeAlsoList = ContainerUtilRt.newArrayList();\n    }\n    mySeeAlsoList.add(seeAlso);\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String generate(String indent) {\n    final String prefix;\n    if (myFormatter.getSettings().JD_LEADING_ASTERISKS_ARE_ENABLED) {\n      prefix = indent + \" * \";\n    } else {\n      prefix = indent;\n    }\n\n    @NonNls StringBuffer sb = new StringBuffer();\n//  sb.append(\"/**\\n\");\n\n    int start = sb.length();\n\n    if (!isNull(description)) {\n      sb.append(myFormatter.getParser().splitIntoCLines(description, prefix));\n\n      if (myFormatter.getSettings().JD_ADD_BLANK_AFTER_DESCRIPTION) {\n        sb.append(prefix);\n        sb.append('\\n');\n      }\n    }\n\n    generateSpecial(prefix, sb);\n\n    if (!isNull(unknownList) && myFormatter.getSettings().JD_KEEP_INVALID_TAGS) {\n      for (Object aUnknownList : unknownList) {\n        String s = (String)aUnknownList;\n        sb.append(myFormatter.getParser().splitIntoCLines(s, prefix));\n      }\n    }\n\n    /*\n    if( xdocTagMap.size() > 0 ) {\n    Iterator it = xdocTagMap.values().iterator();\n    while( it.hasNext() ) {\n    ArrayList list = (ArrayList) it.next();\n    for( int i = 0; i<list.size(); i++ ) {\n    XDTag tag = (XDTag) list.get(i);\n    tag.append(sb, prefix);\n    if( myFormatter.getSettings().add_blank_after_xdoclet_tag ) {\n    sb.append(prefix);\n    sb.append('\\n');\n    }\n    }\n    }\n    }*/\n\n    if (!isNull(seeAlsoList)) {\n      for (Object aSeeAlsoList : seeAlsoList) {\n        String s = (String)aSeeAlsoList;\n        sb.append(prefix);\n        sb.append(\"@see \");\n        sb.append(myFormatter.getParser().splitIntoCLines(s, prefix + \"     \", false));\n      }\n    }\n\n    if (!isNull(since)) {\n      sb.append(prefix);\n      sb.append(\"@since \");\n      sb.append(myFormatter.getParser().splitIntoCLines(since, prefix + \"       \", false));\n    }\n\n    if (deprecated != null) {\n      sb.append(prefix);\n      sb.append(\"@deprecated \");\n      sb.append(myFormatter.getParser().splitIntoCLines(deprecated, prefix + \"            \", false));\n    }\n\n    if (sb.length() == start) return null;\n\n    // if it ends with a blank line delete that\n    int nlen = sb.length() - prefix.length() - 1;\n    if (sb.substring(nlen, sb.length()).equals(prefix + \"\\n\")) {\n      sb.delete(nlen, sb.length());\n    }\n\n    if( !myFormatter.getSettings().JD_DO_NOT_WRAP_ONE_LINE_COMMENTS ||\n        sb.indexOf(\"\\n\") != sb.length()-1 ) {\n      sb.insert(0, \"/**\\n\");\n      sb.append(indent);\n    }\n    else {\n      sb.replace(0, prefix.length(), \"/** \");\n      sb.deleteCharAt(sb.length()-1);\n    }\n    sb.append(\" */\");\n\n    return sb.toString();\n  }","id":20774,"modified_method":"@Nullable\n  public String generate(@NotNull String indent) {\n    final String prefix;\n\n    if (myFormatter.getSettings().JD_LEADING_ASTERISKS_ARE_ENABLED) {\n      prefix = indent + \" * \";\n    } else {\n      prefix = indent;\n    }\n\n    StringBuilder sb = new StringBuilder();\n    int start = sb.length();\n\n    if (!isNull(myDescription)) {\n      sb.append(prefix);\n      sb.append(myFormatter.getParser().formatJDTagDescription(myDescription, prefix));\n\n      if (myFormatter.getSettings().JD_ADD_BLANK_AFTER_DESCRIPTION) {\n        sb.append(prefix);\n        sb.append('\\n');\n      }\n    }\n\n    generateSpecial(prefix, sb);\n\n    if (!isNull(myUnknownList) && myFormatter.getSettings().JD_KEEP_INVALID_TAGS) {\n      for (String aUnknownList : myUnknownList) {\n        sb.append(prefix);\n        sb.append(myFormatter.getParser().formatJDTagDescription(aUnknownList, prefix));\n      }\n    }\n\n    if (!isNull(mySeeAlsoList)) {\n      JDTag tag = JDTag.SEE;\n      for (String aSeeAlsoList : mySeeAlsoList) {\n        sb.append(prefix);\n        sb.append(tag.getWithEndWhitespace());\n        StringBuilder tagDescription = myFormatter.getParser()\n          .formatJDTagDescription(aSeeAlsoList, prefix, true, tag.getDescriptionPrefix(prefix).length());\n        sb.append(tagDescription);\n      }\n    }\n\n    if (!isNull(mySince)) {\n      JDTag tag = JDTag.SINCE;\n      sb.append(prefix);\n      sb.append(tag.getWithEndWhitespace());\n      StringBuilder tagDescription = myFormatter.getParser()\n        .formatJDTagDescription(mySince, prefix, true, tag.getDescriptionPrefix(prefix).length());\n      sb.append(tagDescription);\n    }\n\n    if (myDeprecated != null) {\n      JDTag tag = JDTag.DEPRECATED;\n      sb.append(prefix);\n      sb.append(tag.getWithEndWhitespace());\n      StringBuilder tagDescription = myFormatter.getParser()\n        .formatJDTagDescription(myDeprecated, prefix, true, tag.getDescriptionPrefix(prefix).length());\n      sb.append(tagDescription);\n    }\n\n    if (sb.length() == start) return null;\n\n    // if it ends with a blank line delete that\n    int nlen = sb.length() - prefix.length() - 1;\n    if (sb.substring(nlen, sb.length()).equals(prefix + \"\\n\")) {\n      sb.delete(nlen, sb.length());\n    }\n\n    if( !myFormatter.getSettings().JD_DO_NOT_WRAP_ONE_LINE_COMMENTS ||\n        sb.indexOf(\"\\n\") != sb.length()-1 ) {\n      sb.insert(0, \"/**\\n\");\n      sb.append(indent);\n    }\n    else {\n      sb.replace(0, prefix.length(), \"/** \");\n      sb.deleteCharAt(sb.length()-1);\n    }\n    sb.append(\" */\");\n\n    return sb.toString();\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void setReturnTag(String returnTag) {\n    this.returnTag = returnTag;\n  }","id":20775,"modified_method":"public void setReturnTag(@NotNull String returnTag) {\n    this.myReturnTag = returnTag;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void generateSpecial(String prefix, @NonNls StringBuffer sb) {\n    super.generateSpecial(prefix, sb);\n\n    if (returnTag != null) {\n      if (returnTag.trim().length() != 0 || myFormatter.getSettings().JD_KEEP_EMPTY_RETURN) {\n        sb.append(prefix);\n        sb.append(\"@return \");\n        sb.append(myFormatter.getParser().splitIntoCLines(returnTag, prefix + \"        \", false));\n        if (myFormatter.getSettings().JD_ADD_BLANK_AFTER_RETURN) {\n          sb.append(prefix);\n          sb.append('\\n');\n        }\n      }\n    }\n\n    if (throwsList != null) {\n      String tag = myFormatter.getSettings().JD_USE_THROWS_NOT_EXCEPTION ? THROWS_TAG : EXCEPTION_TAG;\n      generateList(prefix, sb, throwsList, tag,\n                   myFormatter.getSettings().JD_ALIGN_EXCEPTION_COMMENTS,\n                   myFormatter.getSettings().JD_KEEP_EMPTY_EXCEPTION,\n                   myFormatter.getSettings().JD_PARAM_DESCRIPTION_ON_NEW_LINE\n      );\n    }\n  }","id":20776,"modified_method":"@Override\n  protected void generateSpecial(@NotNull String prefix, @NotNull StringBuilder sb) {\n    super.generateSpecial(prefix, sb);\n\n    if (myReturnTag != null) {\n      if (myFormatter.getSettings().JD_KEEP_EMPTY_RETURN || myReturnTag.trim().length() != 0) {\n        JDTag tag = JDTag.RETURN;\n        sb.append(prefix);\n        sb.append(tag.getWithEndWhitespace());\n        sb.append(myFormatter.getParser().formatJDTagDescription(myReturnTag, prefix, true, tag.getDescriptionPrefix(prefix).length()));\n        if (myFormatter.getSettings().JD_ADD_BLANK_AFTER_RETURN) {\n          sb.append(prefix);\n          sb.append('\\n');\n        }\n      }\n    }\n\n    if (myThrowsList != null) {\n      JDTag tag = myFormatter.getSettings().JD_USE_THROWS_NOT_EXCEPTION ? JDTag.THROWS : JDTag.EXCEPTION;\n      generateList(prefix, sb, myThrowsList, tag.getWithEndWhitespace(),\n                   myFormatter.getSettings().JD_ALIGN_EXCEPTION_COMMENTS,\n                   myFormatter.getSettings().JD_KEEP_EMPTY_EXCEPTION,\n                   myFormatter.getSettings().JD_PARAM_DESCRIPTION_ON_NEW_LINE\n      );\n    }\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addThrow(String className, String description) {\n    if (throwsList == null) {\n      throwsList = new ArrayList<NameDesc>();\n    }\n    throwsList.add(new NameDesc(className, description));\n  }","id":20777,"modified_method":"public void addThrow(@NotNull String className, @Nullable String description) {\n    if (myThrowsList == null) {\n      myThrowsList = ContainerUtilRt.newArrayList();\n    }\n    myThrowsList.add(new NameDesc(className, description));\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public NameDesc getParameter(String name) {\n    return getNameDesc(name, parmsList);\n  }","id":20778,"modified_method":"@Nullable\n  public NameDesc getParameter(@Nullable String name) {\n    return getNameDesc(name, myParamsList);\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Generates parameters or exceptions\n   *\n   */\n  protected void generateList(String prefix,\n                              StringBuffer sb,\n                              ArrayList<NameDesc> list,\n                              String tag,\n                              boolean align_comments,\n                              boolean generate_empty_tags,\n                              boolean wrapDescription)\n  {\n    CodeStyleSettings settings = myFormatter.getSettings();\n    CommonCodeStyleSettings.IndentOptions indentOptions = settings.getIndentOptions(JavaFileType.INSTANCE);\n    String continuationIndent = new IndentInfo(0, indentOptions.CONTINUATION_INDENT_SIZE, 0).generateNewWhiteSpace(indentOptions);\n\n    int max = 0;\n\n    if (align_comments && !wrapDescription) {\n      for (NameDesc nd: list) {\n        int currentLength = nd.name.length();\n        if (isNull(nd.desc) && !generate_empty_tags) continue;\n        //finding longest parameter length\n        if (currentLength > max) {\n          max = currentLength;\n        }\n      }\n    }\n\n    StringBuffer fill = new StringBuffer(prefix.length() + tag.length() + max + 1);\n    fill.append(prefix);\n    StringUtil.repeatSymbol(fill, ' ', max + 1 + tag.length());\n\n    String wrapParametersPrefix = prefix + continuationIndent;\n    for (NameDesc nd : list) {\n      if (isNull(nd.desc) && !generate_empty_tags) continue;\n      if (wrapDescription && !isNull(nd.desc)) {\n        sb.append(prefix).append(tag).append(nd.name).append(\"\\n\");\n        sb.append(myFormatter.getParser().splitIntoCLines(nd.desc, wrapParametersPrefix));\n      }\n      else if (align_comments) {\n        sb.append(prefix);\n        sb.append(tag);\n        sb.append(nd.name);\n        int spacesNumber = max + 1 - nd.name.length();\n        StringUtil.repeatSymbol(sb, ' ', Math.max(0, spacesNumber));\n        sb.append(myFormatter.getParser().splitIntoCLines(nd.desc, fill, false));\n      }\n      else {\n        sb.append(myFormatter.getParser().splitIntoCLines(tag + nd.name + \" \" + nd.desc, prefix, true));\n      }\n    }\n  }","id":20779,"modified_method":"/**\n   * Generates parameters or exceptions\n   *\n   */\n  protected void generateList(@NotNull String prefix,\n                              @NotNull StringBuilder sb,\n                              @NotNull List<NameDesc> list,\n                              @NotNull String tag,\n                              boolean align_comments,\n                              boolean generate_empty_tags,\n                              boolean wrapDescription)\n  {\n    CodeStyleSettings settings = myFormatter.getSettings();\n    CommonCodeStyleSettings.IndentOptions indentOptions = settings.getIndentOptions(JavaFileType.INSTANCE);\n    String continuationIndent = new IndentInfo(0, indentOptions.CONTINUATION_INDENT_SIZE, 0).generateNewWhiteSpace(indentOptions);\n\n    int max = 0;\n\n    if (align_comments && !wrapDescription) {\n      for (NameDesc nd: list) {\n        int currentLength = nd.name.length();\n        if (isNull(nd.desc) && !generate_empty_tags) continue;\n        //finding longest parameter length\n        if (currentLength > max) {\n          max = currentLength;\n        }\n      }\n    }\n\n    StringBuilder fill = new StringBuilder(prefix.length() + tag.length() + max + 1);\n    fill.append(prefix);\n    StringUtil.repeatSymbol(fill, ' ', max + 1 + tag.length());\n\n    String wrapParametersPrefix = prefix + continuationIndent;\n    for (NameDesc nd : list) {\n      if (isNull(nd.desc) && !generate_empty_tags) continue;\n      if (wrapDescription && !isNull(nd.desc)) {\n        sb.append(prefix).append(tag).append(nd.name).append(\"\\n\");\n        sb.append(wrapParametersPrefix);\n        sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc, wrapParametersPrefix));\n      }\n      else if (align_comments) {\n        sb.append(prefix);\n        sb.append(tag);\n        sb.append(nd.name);\n        int spacesNumber = max + 1 - nd.name.length();\n        StringUtil.repeatSymbol(sb, ' ', Math.max(0, spacesNumber));\n        sb.append(myFormatter.getParser().formatJDTagDescription(nd.desc, fill));\n      }\n      else {\n        sb.append(prefix);\n        String description = (nd.desc == null) ? \"\" : nd.desc;\n        sb.append(myFormatter.getParser().formatJDTagDescription(tag + nd.name + \" \" + description, prefix));\n      }\n    }\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public void addParameter(String name, String description) {\n    if (parmsList == null) {\n      parmsList = new ArrayList<NameDesc>();\n    }\n    parmsList.add(new NameDesc(name, description));\n  }","id":20780,"modified_method":"public void addParameter(@NotNull String name, @Nullable String description) {\n    if (myParamsList == null) {\n      myParamsList = ContainerUtilRt.newArrayList();\n    }\n    myParamsList.add(new NameDesc(name, description));\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@Override\n  protected void generateSpecial(String prefix, StringBuffer sb) {\n     if (parmsList != null) {\n      int before = sb.length();\n      generateList(prefix, sb, parmsList, PARAM_TAG,\n                   myFormatter.getSettings().JD_ALIGN_PARAM_COMMENTS,\n                   myFormatter.getSettings().JD_KEEP_EMPTY_PARAMETER,\n                   myFormatter.getSettings().JD_PARAM_DESCRIPTION_ON_NEW_LINE\n      );\n\n      int size = sb.length() - before;\n      if (size > 0 && myFormatter.getSettings().JD_ADD_BLANK_AFTER_PARM_COMMENTS) {\n        sb.append(prefix);\n        sb.append('\\n');\n      }\n    }\n  }","id":20781,"modified_method":"@Override\n  protected void generateSpecial(@NotNull String prefix, @NotNull StringBuilder sb) {\n     if (myParamsList != null) {\n      int before = sb.length();\n      generateList(prefix, sb, myParamsList, JDTag.PARAM.getWithEndWhitespace(),\n                   myFormatter.getSettings().JD_ALIGN_PARAM_COMMENTS,\n                   myFormatter.getSettings().JD_KEEP_EMPTY_PARAMETER,\n                   myFormatter.getSettings().JD_PARAM_DESCRIPTION_ON_NEW_LINE\n      );\n\n      int size = sb.length() - before;\n      if (size > 0 && myFormatter.getSettings().JD_ADD_BLANK_AFTER_PARM_COMMENTS) {\n        sb.append(prefix);\n        sb.append('\\n');\n      }\n    }\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static NameDesc getNameDesc(String name, ArrayList<NameDesc> list) {\n    if (list == null) return null;\n    for (Object aList : list) {\n      NameDesc parameter = (NameDesc)aList;\n      if (parameter.name.equals(name)) return parameter;\n    }\n    return null;\n  }","id":20782,"modified_method":"@Nullable\n  private static NameDesc getNameDesc(@Nullable String name, @Nullable List<NameDesc> list) {\n    if (list == null) return null;\n    for (NameDesc aList : list) {\n      if (aList.name.equals(name)) {\n        return aList;\n      }\n    }\n    return null;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public JDComment parse(String text, JDComment c) {\n    if (text == null) return c;\n\n    ArrayList<Boolean> markers = new ArrayList<Boolean>();\n    ArrayList<String> l = toArray(text, \"\\n\", markers);\n    if (l == null) return c;\n    int size = l.size();\n    if (size == 0) return c;\n\n    // preprocess strings - removes first '*'\n    for (int i = 0; i < size; i++) {\n      String line = l.get(i);\n      line = line.trim();\n      if (line.length() > 0) {\n        if (line.charAt(0) == '*') {\n          if ((markers.get(i)).booleanValue()) {\n            if (line.length() > 1 && line.charAt(1) == ' ') {\n              line = line.substring(2);\n            }\n            else {\n              line = line.substring(1);\n            }\n          }\n          else {\n            line = line.substring(1).trim();\n          }\n        }\n      }\n      l.set(i, line);\n    }\n\n    StringBuffer sb = new StringBuffer();\n    String tag = null;\n    for (int i = 0; i <= size; i++) {\n      String line = i == size ? null : l.get(i);\n      if (i == size || line.length() > 0) {\n        if (i == size || line.charAt(0) == '@') {\n          if (tag == null) {\n            c.setDescription(sb.toString());\n          }\n          else {\n            int j = 0;\n            String myline = sb.toString();\n            for (; j < tagParsers.length; j++) {\n              TagParser parser = tagParsers[j];\n              if (parser.parse(tag, myline, c)) break;\n            }\n            if (j == tagParsers.length) {\n              c.addUnknownTag(\"@\" + tag + \" \" + myline);\n            }\n          }\n\n          if (i < size) {\n            int last_idx = line.indexOf(' ');\n            if (last_idx == -1) {\n              tag = line.substring(1);\n              line = \"\";\n            }\n            else {\n              tag = line.substring(1, last_idx);\n              line = line.substring(last_idx).trim();\n            }\n            sb.setLength(0);\n            sb.append(line);\n          }\n        }\n        else {\n          if (sb.length() > 0) {\n            sb.append(lineSeparator);\n          }\n          sb.append(line);\n        }\n      }\n      else {\n        if (sb.length() > 0) {\n          sb.append(lineSeparator);\n        }\n      }\n    }\n\n    return c;\n  }","id":20783,"modified_method":"@NotNull\n  public JDComment parse(@Nullable String text, @NotNull JDComment c) {\n    if (text == null) return c;\n\n    List<Boolean> markers = new ArrayList<Boolean>();\n    List<String> l = toArray(text, \"\\n\", markers);\n    if (l == null) return c;\n    int size = l.size();\n    if (size == 0) return c;\n\n    // preprocess strings - removes first '*'\n    for (int i = 0; i < size; i++) {\n      String line = l.get(i);\n      line = line.trim();\n      if (line.length() > 0) {\n        if (line.charAt(0) == '*') {\n          if ((markers.get(i)).booleanValue()) {\n            if (line.length() > 1 && line.charAt(1) == ' ') {\n              line = line.substring(2);\n            }\n            else {\n              line = line.substring(1);\n            }\n          }\n          else {\n            line = line.substring(1).trim();\n          }\n        }\n      }\n      l.set(i, line);\n    }\n\n    StringBuilder sb = new StringBuilder();\n    String tag = null;\n    for (int i = 0; i <= size; i++) {\n      String line = i == size ? null : l.get(i);\n      if (i == size || line.length() > 0) {\n        if (i == size || line.charAt(0) == '@') {\n          if (tag == null) {\n            c.setDescription(sb.toString());\n          }\n          else {\n            int j = 0;\n            String myline = sb.toString();\n            for (; j < tagParsers.length; j++) {\n              TagParser parser = tagParsers[j];\n              if (parser.parse(tag, myline, c)) break;\n            }\n            if (j == tagParsers.length) {\n              c.addUnknownTag(\"@\" + tag + \" \" + myline);\n            }\n          }\n\n          if (i < size) {\n            int last_idx = line.indexOf(' ');\n            if (last_idx == -1) {\n              tag = line.substring(1);\n              line = \"\";\n            }\n            else {\n              tag = line.substring(1, last_idx);\n              line = line.substring(last_idx).trim();\n            }\n            sb.setLength(0);\n            sb.append(line);\n          }\n        }\n        else {\n          if (sb.length() > 0) {\n            sb.append(lineSeparator);\n          }\n          sb.append(line);\n        }\n      }\n      else {\n        if (sb.length() > 0) {\n          sb.append(lineSeparator);\n        }\n      }\n    }\n\n    return c;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"@SuppressWarnings({\"HardCodedStringLiteral\"})\n  private boolean isParaTag(final String token) {\n    String withoutWS = removeWhiteSpacesFrom(token).toLowerCase();\n    return withoutWS.equals(\"<p/>\") || withoutWS.equals(\"<p>\");\n  }","id":20784,"modified_method":"private static boolean isParaTag(@NotNull final String token) {\n    String withoutWS = removeWhiteSpacesFrom(token).toLowerCase();\n    return withoutWS.equals(SELF_CLOSED_P_TAG) || withoutWS.equals(P_START_TAG);\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private String removeWhiteSpacesFrom(final String token) {\n    final StringBuffer result = new StringBuffer();\n    for (char c : token.toCharArray()) {\n      if (c != ' ') result.append(c);\n    }\n    return result.toString();\n  }","id":20785,"modified_method":"@NotNull\n  private static String removeWhiteSpacesFrom(@NotNull final String token) {\n    final StringBuilder result = new StringBuilder();\n    for (char c : token.toCharArray()) {\n      if (c != ' ') result.append(c);\n    }\n    return result.toString();\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Breaks the specified string by the specified separators into array of strings\n   * \n   * @param s          the specified string\n   * @param separators the specified separators\n   * @param markers    if this parameter is not null then it will be filled with Boolean values:\n   *                   true if the correspoding line in returned list is inside &lt;pre&gt; tag,\n   *                   false if it is outside\n   * @return array of strings (lines)\n   */\n  @SuppressWarnings({\"HardCodedStringLiteral\"})\n  private ArrayList<String> toArray(String s, String separators, ArrayList<Boolean> markers) {\n    if (s == null) return null;\n    s = s.trim();\n    if (s.length() == 0) return null;\n    boolean p2nl = markers != null && mySettings.JD_P_AT_EMPTY_LINES;\n    ArrayList<String> list = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, separators, true);\n    boolean first = true;\n    int preCount = 0;\n    int curPos = 0;\n    while (st.hasMoreTokens()) {\n      String token = st.nextToken();\n      curPos += token.length();\n\n      if (separators.indexOf(token) >= 0) {\n        if (!first) {\n          list.add(\"\");\n          if (markers != null) markers.add(Boolean.valueOf(preCount > 0));\n        }\n        first = false;\n      }\n      else {\n        first = true;\n        if (p2nl) {\n          if (isParaTag(token) && s.indexOf(\"<\/p>\", curPos) < 0) {\n            list.add(\"\");\n            markers.add(Boolean.valueOf(preCount > 0));\n            continue;\n          }\n        }\n        if (preCount == 0) token = token.trim();\n\n        list.add(token);\n\n        if (markers != null) {\n          if (token.indexOf(\"<pre>\") >= 0) preCount++;\n          markers.add(Boolean.valueOf(preCount > 0));\n          if (token.indexOf(\"<\/pre>\") >= 0) preCount--;\n        }\n\n      }\n    }\n    return list;\n  }","id":20786,"modified_method":"/**\n   * Breaks the specified string by the specified separators into array of strings\n   *\n   * @param s          the specified string\n   * @param separators the specified separators\n   * @param markers    if this parameter is not null then it will be filled with Boolean values:\n   *                   true if the corresponding line in returned list is inside &lt;pre&gt; tag,\n   *                   false if it is outside\n   * @return array of strings (lines)\n   */\n  @Nullable\n  private List<String> toArray(@Nullable String s, @NotNull String separators, @Nullable List<Boolean> markers) {\n    if (s == null) return null;\n    s = s.trim();\n    if (s.length() == 0) return null;\n    boolean p2nl = markers != null && mySettings.JD_P_AT_EMPTY_LINES;\n    List<String> list = new ArrayList<String>();\n    StringTokenizer st = new StringTokenizer(s, separators, true);\n    boolean first = true;\n    int preCount = 0;\n    int curPos = 0;\n    while (st.hasMoreTokens()) {\n      String token = st.nextToken();\n      curPos += token.length();\n\n      if (separators.contains(token)) {\n        if (!first) {\n          list.add(\"\");\n          if (markers != null) markers.add(Boolean.valueOf(preCount > 0));\n        }\n        first = false;\n      }\n      else {\n        first = true;\n        if (p2nl) {\n          if (isParaTag(token) && s.indexOf(P_END_TAG, curPos) < 0) {\n            list.add(\"\");\n            markers.add(Boolean.valueOf(preCount > 0));\n            continue;\n          }\n        }\n        if (preCount == 0) token = token.trim();\n\n        list.add(token);\n\n        if (markers != null) {\n          if (token.contains(PRE_TAG_START)) preCount++;\n          markers.add(Boolean.valueOf(preCount > 0));\n          if (token.contains(PRE_TAG_END)) preCount--;\n        }\n\n      }\n    }\n    return list;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"/**\n   * Processes given string and produces on its basis set of pairs like <code>'(string; flag)'<\/code> where <code>'string'<\/code>\n   * is interested line and <code>'flag'<\/code> indicates if it is wrapped to {@code <pre>} tag.\n   * \n   * @param s   string to process\n   * @return    processing result\n   */\n  @Nullable\n  private List<Pair<String, Boolean>> splitToParagraphs(@Nullable String s) {\n    if (s == null) return null;\n    s = s.trim();\n    if (s == null /* just to make inspection happy*/ || s.isEmpty()) return null;\n\n    List<Pair<String, Boolean>> result = new ArrayList<Pair<String, Boolean>>();\n    \n    StringBuilder sb = new StringBuilder();\n    ArrayList<Boolean> markers = new ArrayList<Boolean>();\n    ArrayList<String> list = toArray(s, \"\\n\", markers);\n    Boolean[] marks = markers.toArray(new Boolean[markers.size()]);\n    markers.clear();\n    for (int i = 0; i < list.size(); i++) {\n      String s1 = list.get(i);\n      if (marks[i].booleanValue()) {\n        if (sb.length() != 0) {\n          result.add(new Pair<String, Boolean>(sb.toString(), false));\n          sb.setLength(0);\n        }\n        result.add(new Pair<String, Boolean>(s1, marks[i]));\n      }\n      else {\n        if (s1.isEmpty()) {\n          if (sb.length() != 0) {\n            result.add(new Pair<String, Boolean>(sb.toString(), false));\n            sb.setLength(0);\n          }\n          result.add(new Pair<String, Boolean>(\"\", marks[i]));\n        }\n        else if (mySettings.JD_PRESERVE_LINE_FEEDS) {\n          result.add(new Pair<String, Boolean>(s1, marks[i]));\n        }\n        else {\n          if (sb.length() != 0) sb.append(' ');\n          sb.append(s1);\n        }\n      }\n    }\n    if (!mySettings.JD_PRESERVE_LINE_FEEDS && sb.length() != 0) {\n      result.add(new Pair<String, Boolean>(sb.toString(), false));\n    }\n    return result;\n  }","id":20787,"modified_method":"/**\n   * Processes given string and produces on its basis set of pairs like <code>'(string; flag)'<\/code> where <code>'string'<\/code>\n   * is interested line and <code>'flag'<\/code> indicates if it is wrapped to {@code <pre>} tag.\n   *\n   * @param s   string to process\n   * @return    processing result\n   */\n  @Nullable\n  private List<Pair<String, Boolean>> splitToParagraphs(@Nullable String s) {\n    if (s == null) return null;\n    s = s.trim();\n    if (s.isEmpty()) return null;\n\n    List<Pair<String, Boolean>> result = new ArrayList<Pair<String, Boolean>>();\n\n    StringBuilder sb = new StringBuilder();\n    List<Boolean> markers = new ArrayList<Boolean>();\n    List<String> list = toArray(s, \"\\n\", markers);\n    Boolean[] marks = markers.toArray(new Boolean[markers.size()]);\n    markers.clear();\n    assert list != null;\n    for (int i = 0; i < list.size(); i++) {\n      String s1 = list.get(i);\n      if (marks[i].booleanValue()) {\n        if (sb.length() != 0) {\n          result.add(new Pair<String, Boolean>(sb.toString(), false));\n          sb.setLength(0);\n        }\n        result.add(new Pair<String, Boolean>(s1, marks[i]));\n      }\n      else {\n        if (s1.isEmpty()) {\n          if (sb.length() != 0) {\n            result.add(new Pair<String, Boolean>(sb.toString(), false));\n            sb.setLength(0);\n          }\n          result.add(new Pair<String, Boolean>(\"\", marks[i]));\n        }\n        else if (mySettings.JD_PRESERVE_LINE_FEEDS) {\n          result.add(new Pair<String, Boolean>(s1, marks[i]));\n        }\n        else {\n          if (sb.length() != 0) sb.append(' ');\n          sb.append(s1);\n        }\n      }\n    }\n    if (!mySettings.JD_PRESERVE_LINE_FEEDS && sb.length() != 0) {\n      result.add(new Pair<String, Boolean>(sb.toString(), false));\n    }\n    return result;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public String toString() {\n    if (type == null) return name;\n    return name + \": \" + type;\n  }","id":20788,"modified_method":"@NotNull\n  @Override\n  public String toString() {\n    return name;\n  }","commit_id":"18582017efe2372bdd9537b4492e1af363347025","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public Object restrictedChoiceList() {\n        String restrictedChoiceKey=(String)d2wContext().valueForKey(\"restrictedChoiceKey\");\n        return restrictedChoiceKey!=null &&  restrictedChoiceKey.length()>0 ?  valueForKeyPath(restrictedChoiceKey) : null;\n    }","id":20789,"modified_method":"public Object restrictedChoiceList() {\n        String restrictedChoiceKey=(String)d2wContext().valueForKey(\"restrictedChoiceKey\");\n        if( restrictedChoiceKey!=null &&  restrictedChoiceKey.length()>0 )\n            return valueForKeyPath(restrictedChoiceKey);\n        String fetchSpecName=(String)d2wContext().valueForKey(\"restrictingFetchSpecification\");\n        if(fetchSpecName != null) {\n            EOEditingContext ec = ERXExtensions.newEditingContext();\n            EOEntity entity = d2wContext().entity();\n            EORelationship relationship = entity.relationshipNamed((String)d2wContext().valueForKey(\"propertyKey\"));\n            return EOUtilities.objectsWithFetchSpecificationAndBindings(ec, relationship.destinationEntity().name(),fetchSpecName,null);\n        }\n        return null;\n    }","commit_id":"05bf4402e73449737ba5093b3fc1e9e7e50752cb","url":"https://github.com/wocommunity/wonder"},{"original_method":"public Object restrictedChoiceList() {\n        String restrictedChoiceKey=(String)d2wContext().valueForKey(\"restrictedChoiceKey\");\n        return restrictedChoiceKey!=null &&  restrictedChoiceKey.length()>0 ?  valueForKeyPath(restrictedChoiceKey) : null;\n    }","id":20790,"modified_method":"public Object restrictedChoiceList() {\n        String restrictedChoiceKey=(String)d2wContext().valueForKey(\"restrictedChoiceKey\");\n        if( restrictedChoiceKey!=null &&  restrictedChoiceKey.length()>0 )\n            return valueForKeyPath(restrictedChoiceKey);\n        String fetchSpecName=(String)d2wContext().valueForKey(\"restrictingFetchSpecification\");\n        if(fetchSpecName != null) {\n            EORelationship relationship = ERXUtilities.relationshipWithObjectAndKeyPath((EOEnterpriseObject)object(),\n                                                                                        (String)d2wContext().valueForKey(\"propertyKey\"));\n            return EOUtilities.objectsWithFetchSpecificationAndBindings(object().editingContext(), relationship.destinationEntity().name(),fetchSpecName,null);\n        }\n        return null;\n    }","commit_id":"c2b0f43f98e44db7278d6e60245517963efcc14a","url":"https://github.com/wocommunity/wonder"},{"original_method":"public Object restrictedChoiceList() {\n        String restrictedChoiceKey=(String)d2wContext().valueForKey(\"restrictedChoiceKey\");\n        return restrictedChoiceKey!=null &&  restrictedChoiceKey.length()>0 ? valueForKeyPath(restrictedChoiceKey) : null;\n    }","id":20791,"modified_method":"public Object restrictedChoiceList() {\n        String restrictedChoiceKey=(String)d2wContext().valueForKey(\"restrictedChoiceKey\");\n        if( restrictedChoiceKey!=null &&  restrictedChoiceKey.length()>0 )\n            return valueForKeyPath(restrictedChoiceKey);\n        String fetchSpecName=(String)d2wContext().valueForKey(\"restrictingFetchSpecification\");\n        if(fetchSpecName != null) {\n            EORelationship relationship = ERXUtilities.relationshipWithObjectAndKeyPath((EOEnterpriseObject)object(),\n                                                                                        (String)d2wContext().valueForKey(\"propertyKey\"));\n            return EOUtilities.objectsWithFetchSpecificationAndBindings(object().editingContext(), relationship.destinationEntity().name(),fetchSpecName,null);\n        }\n        return null;\n    }","commit_id":"045d496a57a6d57b981ed6b5b3b4d44e69cf0832","url":"https://github.com/wocommunity/wonder"},{"original_method":"public CascadeBluffs(UUID ownerId) {\r\n        super(ownerId, 175, \"Cascade Bluffs\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        this.addAbility(new ColorlessManaAbility());\r\n        this.addAbility(new CascadeBluffsFirstManaAbility());\r\n        this.addAbility(new CascadeBluffsSecondManaAbility());\r\n        this.addAbility(new CascadeBluffsThirdManaAbility());\r\n    }","id":20792,"modified_method":"public CascadeBluffs(UUID ownerId) {\r\n        super(ownerId, 175, \"Cascade Bluffs\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        \r\n        // {tap}: Add {1} to your mana pool.\r\n        this.addAbility(new ColorlessManaAbility());\r\n\r\n        // {U/R}, {tap}: Add {U}{U}, {U}{R}, or {R}{R} to your mana pool.\r\n        SimpleManaAbility ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.BlueMana(2), new ManaCostsImpl(\"{U/R}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, new Mana(1, 0, 1, 0, 0, 0, 0), new ManaCostsImpl(\"{U/R}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.RedMana(2), new ManaCostsImpl(\"{U/R}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);        \r\n    }","commit_id":"3eed00c2fe4b50955cabf031514084868330dbf1","url":"https://github.com/magefree/mage"},{"original_method":"public FetidHeath (UUID ownerId) {\r\n        super(ownerId, 176, \"Fetid Heath\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        this.addAbility(new ColorlessManaAbility());\r\n        this.addAbility(new FetidHeathFirstManaAbility());\r\n        this.addAbility(new FetidHeathSecondManaAbility());\r\n        this.addAbility(new FetidHeathThirdManaAbility());\r\n    }","id":20793,"modified_method":"public FetidHeath (UUID ownerId) {\r\n        super(ownerId, 176, \"Fetid Heath\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        \r\n        // {tap}: Add {1} to your mana pool.\r\n        this.addAbility(new ColorlessManaAbility());\r\n        \r\n        // {W/B}, {tap}: Add {W}{W}, {W}{B}, or {B}{B} to your mana pool.\r\n        SimpleManaAbility ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.WhiteMana(2), new ManaCostsImpl(\"{W/B}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, new Mana(0, 0, 0, 1, 1, 0, 0), new ManaCostsImpl(\"{W/B}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.BlackMana(2), new ManaCostsImpl(\"{W/B}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);          \r\n    }","commit_id":"3eed00c2fe4b50955cabf031514084868330dbf1","url":"https://github.com/magefree/mage"},{"original_method":"public FloodedGrove (UUID ownerId) {\r\n        super(ownerId, 177, \"Flooded Grove\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        this.addAbility(new ColorlessManaAbility());\r\n        this.addAbility(new FloodedGroveFirstManaAbility());\r\n        this.addAbility(new FloodedGroveSecondManaAbility());\r\n        this.addAbility(new FloodedGroveThirdManaAbility());\r\n    }","id":20794,"modified_method":"public FloodedGrove (UUID ownerId) {\r\n        super(ownerId, 177, \"Flooded Grove\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        \r\n        // {T}: Add {1} to your mana pool.\r\n        this.addAbility(new ColorlessManaAbility());\r\n        \r\n        // {(G/U)}, {T}: Add {G}{G}, {G}{U}, or {U}{U} to your mana pool. \r\n        SimpleManaAbility ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.GreenMana(2), new ManaCostsImpl(\"{G/U}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, new Mana(0, 1, 1, 0, 0, 0, 0), new ManaCostsImpl(\"{G/U}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.BlueMana(2), new ManaCostsImpl(\"{G/U}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);           \r\n        \r\n    }","commit_id":"3eed00c2fe4b50955cabf031514084868330dbf1","url":"https://github.com/magefree/mage"},{"original_method":"public GravenCairns(UUID ownerId) {\n        super(ownerId, 272, \"Graven Cairns\", Rarity.RARE, new CardType[]{CardType.LAND}, \"\");\n        this.expansionSetCode = \"SHM\";\n\n        // {tap}: Add {1} to your mana pool.\n        this.addAbility(new ColorlessManaAbility());\n        // {BR}, {tap}: Add {B}{B}, {B}{R}, or {R}{R} to your mana pool.\n        this.addAbility(new GravenCairnsFirstManaAbility());\n        this.addAbility(new GravenCairnsSecondManaAbility());\n        this.addAbility(new GravenCairnsThirdManaAbility());\n    }","id":20795,"modified_method":"public GravenCairns(UUID ownerId) {\n        super(ownerId, 272, \"Graven Cairns\", Rarity.RARE, new CardType[]{CardType.LAND}, \"\");\n        this.expansionSetCode = \"SHM\";\n\n        // {T}: Add {1} to your mana pool.\n        this.addAbility(new ColorlessManaAbility());\n        \n        // {B/R}, {tap}: Add {B}{B}, {B}{R}, or {R}{R} to your mana pool.\n        SimpleManaAbility ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.BlackMana(2), new ManaCostsImpl(\"{B/R}\"));\n        ability.addCost(new TapSourceCost());\n        this.addAbility(ability);\n\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, new Mana(1, 0, 0, 0, 1, 0, 0), new ManaCostsImpl(\"{B/R}\"));\n        ability.addCost(new TapSourceCost());\n        this.addAbility(ability);\n\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.RedMana(2), new ManaCostsImpl(\"{B/R}\"));\n        ability.addCost(new TapSourceCost());\n        this.addAbility(ability);          \n    }","commit_id":"3eed00c2fe4b50955cabf031514084868330dbf1","url":"https://github.com/magefree/mage"},{"original_method":"public RuggedPrairie (UUID ownerId) {\r\n        super(ownerId, 178, \"Rugged Prairie\", Rarity.RARE, new CardType[]{CardType.LAND}, \"\");\r\n        this.expansionSetCode = \"EVE\";\r\n        this.addAbility(new ColorlessManaAbility());\r\n        this.addAbility(new RuggedPrairieFirstManaAbility());\r\n        this.addAbility(new RuggedPrairieSecondManaAbility());\r\n        this.addAbility(new RuggedPrairieThirdManaAbility());\r\n    }","id":20796,"modified_method":"public RuggedPrairie (UUID ownerId) {\r\n        super(ownerId, 178, \"Rugged Prairie\", Rarity.RARE, new CardType[]{CardType.LAND}, \"\");\r\n        this.expansionSetCode = \"EVE\";\r\n        // {T}: Add {1} to your mana pool.\r\n        this.addAbility(new ColorlessManaAbility());\r\n        \r\n        // {R/W}, {tap}: Add {R}{R}, {R}{W}, or {W}{W} to your mana pool.\r\n        SimpleManaAbility ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.RedMana(2), new ManaCostsImpl(\"{R/W}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, new Mana(1, 0, 0, 1, 0, 0, 0), new ManaCostsImpl(\"{R/W}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.WhiteMana(2), new ManaCostsImpl(\"{R/W}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);          \r\n    }","commit_id":"3eed00c2fe4b50955cabf031514084868330dbf1","url":"https://github.com/magefree/mage"},{"original_method":"public TwilightMire (UUID ownerId) {\r\n        super(ownerId, 180, \"Twilight Mire\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        this.addAbility(new ColorlessManaAbility());\r\n        this.addAbility(new TwilightMireFirstManaAbility());\r\n        this.addAbility(new TwilightMireSecondManaAbility());\r\n        this.addAbility(new TwilightMireThirdManaAbility());\r\n    }","id":20797,"modified_method":"public TwilightMire (UUID ownerId) {\r\n        super(ownerId, 180, \"Twilight Mire\", Rarity.RARE, new CardType[]{CardType.LAND}, null);\r\n        this.expansionSetCode = \"EVE\";\r\n        \r\n        // {R/W}, {tap}: Add {R}{R}, {R}{W}, or {W}{W} to your mana pool.\r\n        this.addAbility(new ColorlessManaAbility());\r\n        \r\n        // {B/G}, {tap}: Add {B}{B}, {B}{G}, or {G}{G} to your mana pool.\r\n        SimpleManaAbility ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.BlackMana(2), new ManaCostsImpl(\"{B/G}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, new Mana(0, 1, 0, 0, 1, 0, 0), new ManaCostsImpl(\"{B/G}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);\r\n\r\n        ability = new SimpleManaAbility(Zone.BATTLEFIELD, Mana.GreenMana(2), new ManaCostsImpl(\"{B/G}\"));\r\n        ability.addCost(new TapSourceCost());\r\n        this.addAbility(ability);        }","commit_id":"3eed00c2fe4b50955cabf031514084868330dbf1","url":"https://github.com/magefree/mage"},{"original_method":"/**\n     * Called by a service to send a set of events to other listeners.\n     */\n    public synchronized void sendNow(Log eventLog) {\n\n        // create a new event handler for the events and queue it to the\n        // event handler thread pool\n        try {\n            m_eventHandlerPool.getRunQueue().add(new EventHandler(eventLog, m_getNextEventIdStr, m_getNextAlarmIdStr));\n        } catch (InterruptedException iE) {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            log.warn(\"Unable to queue event log to the event handler pool queue\", iE);\n\n            throw new UndeclaredEventException(iE);\n        } catch (FifoQueueException qE) {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            log.warn(\"Unable to queue event log to the event handler pool queue\", qE);\n\n            throw new UndeclaredEventException(qE);\n        }\n    }","id":20798,"modified_method":"/**\n     * Called by a service to send a set of events to other listeners.\n     */\n    public synchronized void sendNow(Log eventLog) {\n\n        // create a new event handler for the events and queue it to the\n        // event handler thread pool\n        try {\n            m_eventHandlerPool.getRunQueue().add(new EventHandler(eventLog, m_getNextEventIdStr, m_getNextAlarmIdStr));\n        } catch (InterruptedException iE) {\n            log().warn(\"Unable to queue event log to the event handler pool queue\", iE);\n\n            throw new UndeclaredEventException(iE);\n        } catch (FifoQueueException qE) {\n            log().warn(\"Unable to queue event log to the event handler pool queue\", qE);\n\n            throw new UndeclaredEventException(qE);\n        }\n    }","commit_id":"c27d5ec756b5bc9c42e4b4185b6fb1c38c3273a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Called by eventd to send an event to all interested listeners\n     */\n    public synchronized void broadcastNow(Event event) {\n        Category log = ThreadCategory.getInstance(this.getClass());\n        if (log.isDebugEnabled())\n            log.debug(\"Event to be broadcasted: \" + event.getUei());\n\n        if (m_listeners.size() <= 0) {\n            if (log.isDebugEnabled())\n                log.debug(\"No listeners interested in all events\");\n\n        }\n\n        // send to listeners interested in receiving all events\n        for(EventListener listener : m_listeners) {\n\n            ListenerThread listenerThr = m_listenerThreads.get(listener.getName());\n            try {\n                listenerThr.getQueue().add(event);\n                if (log.isDebugEnabled())\n                    log.debug(\"Queued event to listener: \" + listener.getName());\n            } catch (FifoQueueException fe) {\n                log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n            } catch (InterruptedException ie) {\n                log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n            }\n        }\n\n        // get event UEI\n        String uei = event.getUei();\n        if (uei == null) {\n            return;\n        }\n\n        // send to listeners who are interested in this event uei\n        //Loop to get partial wild card \"directory\" matches\n        while (uei.length() > 0){\n        List<EventListener> listenerList = m_ueiListeners.get(uei);\n        if (listenerList != null) {\n            for(EventListener listener : listenerList) {\n                ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n                try {\n                    listenerThread.getQueue().add(event);\n                    if (log.isDebugEnabled())\n                        log.debug(\"Queued event \"+uei+\" to listener: \" + listener.getName());\n                } catch (FifoQueueException fe) {\n                    log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n                } catch (InterruptedException ie) {\n                    log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n                }\n            }\n        } else {\n            if (log.isDebugEnabled())\n                log.debug(\"No listener interested in event: \" + uei);\n        }\n        //Try wild cards: Find / before last character\n        int i = uei.lastIndexOf(\"/\",uei.length()-2);\n        if (i > 0){\n           //Split at \"/\", including the /\n           uei = uei.substring (0, i+1);\n        } else {\n           //No more wild cards to match\n           uei=\"\";\n           break;\n        }\n        }\n    }","id":20799,"modified_method":"/**\n     * Called by eventd to send an event to all interested listeners\n     */\n    public synchronized void broadcastNow(Event event) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"Event to be broadcasted: \" + event.getUei());\n        }\n\n        if (m_listeners.size() <= 0) {\n            if (log().isDebugEnabled()) {\n                log().debug(\"No listeners interested in all events\");\n            }\n\n        }\n\n        // send to listeners interested in receiving all events\n        for (EventListener listener : m_listeners) {\n            ListenerThread listenerThr = m_listenerThreads.get(listener.getName());\n            try {\n                listenerThr.getQueue().add(event);\n                if (log().isDebugEnabled()) {\n                    log().debug(\"Queued event to listener: \" + listener.getName());\n                }\n            } catch (FifoQueueException fe) {\n                log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n            } catch (InterruptedException ie) {\n                log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n            }\n        }\n\n        // get event UEI\n        String uei = event.getUei();\n        if (uei == null) {\n            return;\n        }\n\n        // send to listeners who are interested in this event uei\n        //Loop to get partial wild card \"directory\" matches\n        while (uei.length() > 0) {\n            List<EventListener> listenerList = m_ueiListeners.get(uei);\n            if (listenerList != null) {\n                for (EventListener listener : listenerList) {\n                    ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n                    try {\n                        listenerThread.getQueue().add(event);\n                        if (log().isDebugEnabled()) {\n                            log().debug(\"Queued event \"+uei+\" to listener: \" + listener.getName());\n                        }\n                    } catch (FifoQueueException fe) {\n                        log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n                    } catch (InterruptedException ie) {\n                        log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n                    }\n                }\n            } else {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"No listener interested in event: \" + uei);\n                }\n            }\n            \n            //Try wild cards: Find / before last character\n            int i = uei.lastIndexOf(\"/\",uei.length()-2);\n            if (i > 0) {\n                //Split at \"/\", including the /\n                uei = uei.substring (0, i+1);\n            } else {\n                //No more wild cards to match\n                uei=\"\";\n                break;\n            }\n        }\n    }","commit_id":"c27d5ec756b5bc9c42e4b4185b6fb1c38c3273a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Register an event listener interested in the UEIs in the passed list\n     */\n    public synchronized void addEventListener(EventListener listener, List<String> ueilist) {\n        Category log = ThreadCategory.getInstance(this.getClass());\n        if (log.isDebugEnabled())\n            log.debug(\"Adding event listener \" + listener.getName() + \" for \" + ueilist);\n\n        if (ueilist == null || ueilist.size() == 0) {\n            // nothing to do\n            return;\n        }\n\n        // create a new queue and listener thread for this listener\n        ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n        if (listenerThread == null) {\n            FifoQueue<Event> lq = new FifoQueueImpl<Event>();\n            listenerThread = new ListenerThread(listener, lq);\n            listenerThread.start();\n\n            m_listenerThreads.put(listener.getName(), listenerThread);\n        }\n\n        // add to uei listeners\n        for(String uei : ueilist) {\n\n            // check if there are other listeners already, else create\n            // an entry\n            List<EventListener> listenersList = m_ueiListeners.get(uei);\n            if (listenersList == null) {\n                listenersList = new ArrayList<EventListener>();\n                listenersList.add(listener);\n\n                m_ueiListeners.put(uei, listenersList);\n            } else {\n                if (!listenersList.contains(listener))\n                    listenersList.add(listener);\n            }\n        }\n\n        // remove from list of listeners listening for all events\n        m_listeners.remove(listener);\n\n    }","id":20800,"modified_method":"/**\n     * Register an event listener interested in the UEIs in the passed list\n     */\n    public synchronized void addEventListener(EventListener listener, List<String> ueilist) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"Adding event listener \" + listener.getName() + \" for \" + ueilist);\n        }\n\n        if (ueilist == null || ueilist.size() == 0) {\n            // nothing to do\n            return;\n        }\n\n        // create a new queue and listener thread for this listener\n        ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n        if (listenerThread == null) {\n            FifoQueue<Event> lq = new FifoQueueImpl<Event>();\n            listenerThread = new ListenerThread(listener, lq);\n            listenerThread.start();\n\n            m_listenerThreads.put(listener.getName(), listenerThread);\n        }\n\n        // add to uei listeners\n        for (String uei : ueilist) {\n            // check if there are other listeners already, else create an entry\n            List<EventListener> listenersList = m_ueiListeners.get(uei);\n            if (listenersList == null) {\n                listenersList = new ArrayList<EventListener>();\n                listenersList.add(listener);\n\n                m_ueiListeners.put(uei, listenersList);\n            } else {\n                if (!listenersList.contains(listener)) {\n                    listenersList.add(listener);\n                }\n            }\n        }\n\n        // remove from list of listeners listening for all events\n        m_listeners.remove(listener);\n\n    }","commit_id":"c27d5ec756b5bc9c42e4b4185b6fb1c38c3273a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n         * The run method preforms the actual work for the runnable. It loops\n         * infinitely until the shutdown flag is set, during which time it\n         * processes queue elements. Each element in the queue should be a\n         * instance of {@link org.opennms.netmgt.xml.event.Event}. After each\n         * event is read, the 'onEvent' method of the listener is invoked.\n         * \n         */\n        public void run() {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            if (log.isDebugEnabled())\n                log.debug(\"In ListenerThread \" + m_listener.getName() + \" run\");\n\n            while (!m_shutdown) {\n                Event event = null;\n                try {\n                    event = m_queue.remove(500);\n                    if (event == null)\n                        continue;\n                } catch (InterruptedException ie) {\n                    m_shutdown = true;\n                    break;\n                } catch (FifoQueueException fqE) {\n                    m_shutdown = true;\n                    break;\n                }\n\n                try {\n                    if (event != null) {\n\n                        if (log.isInfoEnabled()) {\n                            log.info(\"run: calling onEvent on \" + m_listener.getName() + \" for event \" + event.getUei() + \" dbid \" + event.getDbid() + \" with time \" + event.getTime());\n                        }\n                        \n                        // Make sure we restore our log4j logging prefix after onEvent is called\n                        String log4jPrefix = ThreadCategory.getPrefix(); \n                        try {\n                            m_listener.onEvent(event);\n                        } finally {\n                            ThreadCategory.setPrefix(log4jPrefix);\n                        }\n                    }\n                } catch (Throwable t) {\n                    log.warn(\"run: an unexpected error occured during ListenerThread \" + m_listener.getName() + \" run\", t);\n\n                }\n            }\n\n        }","id":20801,"modified_method":"/**\n         * The run method preforms the actual work for the runnable. It loops\n         * infinitely until the shutdown flag is set, during which time it\n         * processes queue elements. Each element in the queue should be a\n         * instance of {@link org.opennms.netmgt.xml.event.Event}. After each\n         * event is read, the 'onEvent' method of the listener is invoked.\n         * \n         */\n        public void run() {\n            if (log().isDebugEnabled()) {\n                log().debug(\"In ListenerThread \" + m_listener.getName() + \" run\");\n            }\n\n            while (!m_shutdown) {\n                Event event = null;\n                try {\n                    event = m_queue.remove(500);\n                    if (event == null) {\n                        continue;\n                    }\n                } catch (InterruptedException ie) {\n                    m_shutdown = true;\n                    break;\n                } catch (FifoQueueException fqE) {\n                    m_shutdown = true;\n                    break;\n                }\n\n                try {\n                    if (event != null) {\n\n                        if (log().isInfoEnabled()) {\n                            log().info(\"run: calling onEvent on \" + m_listener.getName() + \" for event \" + event.getUei() + \" dbid \" + event.getDbid() + \" with time \" + event.getTime());\n                        }\n                        \n                        // Make sure we restore our log4j logging prefix after onEvent is called\n                        String log4jPrefix = ThreadCategory.getPrefix(); \n                        try {\n                            m_listener.onEvent(event);\n                        } finally {\n                            ThreadCategory.setPrefix(log4jPrefix);\n                        }\n                    }\n                } catch (Throwable t) {\n                    log().warn(\"run: an unexpected error occured during ListenerThread \" + m_listener.getName() + \" run\", t);\n\n                }\n            }\n\n        }","commit_id":"c27d5ec756b5bc9c42e4b4185b6fb1c38c3273a5","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Register an event listener interested in the UEIs in the passed list\n     */\n    public synchronized void addEventListener(EventListener listener, List<String> ueilist) {\n        Category log = ThreadCategory.getInstance(this.getClass());\n        if (log.isDebugEnabled())\n            log.debug(\"Adding event listener \" + listener.getName() + \" for \" + ueilist);\n\n        if (ueilist == null || ueilist.size() == 0) {\n            // nothing to do\n            return;\n        }\n\n        // create a new queue and listener thread for this listener\n        ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n        if (listenerThread == null) {\n            FifoQueue<Event> lq = new FifoQueueImpl<Event>();\n            listenerThread = new ListenerThread(listener, lq);\n            listenerThread.start();\n\n            m_listenerThreads.put(listener.getName(), listenerThread);\n        }\n\n        // add to uei listeners\n        for(String uei : ueilist) {\n\n            // check if there are other listeners already, else create\n            // an entry\n            List<EventListener> listenersList = m_ueiListeners.get(uei);\n            if (listenersList == null) {\n                listenersList = new ArrayList<EventListener>();\n                listenersList.add(listener);\n\n                m_ueiListeners.put(uei, listenersList);\n            } else {\n                if (!listenersList.contains(listener))\n                    listenersList.add(listener);\n            }\n        }\n\n        // remove from list of listeners listening for all events\n        m_listeners.remove(listener);\n\n    }","id":20802,"modified_method":"/**\n     * Register an event listener interested in the UEIs in the passed list\n     */\n    public synchronized void addEventListener(EventListener listener, List<String> ueilist) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"Adding event listener \" + listener.getName() + \" for \" + ueilist);\n        }\n\n        if (ueilist == null || ueilist.size() == 0) {\n            // nothing to do\n            return;\n        }\n\n        // create a new queue and listener thread for this listener\n        ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n        if (listenerThread == null) {\n            FifoQueue<Event> lq = new FifoQueueImpl<Event>();\n            listenerThread = new ListenerThread(listener, lq);\n            listenerThread.start();\n\n            m_listenerThreads.put(listener.getName(), listenerThread);\n        }\n\n        // add to uei listeners\n        for (String uei : ueilist) {\n            // check if there are other listeners already, else create an entry\n            List<EventListener> listenersList = m_ueiListeners.get(uei);\n            if (listenersList == null) {\n                listenersList = new ArrayList<EventListener>();\n                listenersList.add(listener);\n\n                m_ueiListeners.put(uei, listenersList);\n            } else {\n                if (!listenersList.contains(listener)) {\n                    listenersList.add(listener);\n                }\n            }\n        }\n\n        // remove from list of listeners listening for all events\n        m_listeners.remove(listener);\n\n    }","commit_id":"21f2a26497ec77f6274063e0a5bfc0a450ec649d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n         * The run method preforms the actual work for the runnable. It loops\n         * infinitely until the shutdown flag is set, during which time it\n         * processes queue elements. Each element in the queue should be a\n         * instance of {@link org.opennms.netmgt.xml.event.Event}. After each\n         * event is read, the 'onEvent' method of the listener is invoked.\n         * \n         */\n        public void run() {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            if (log.isDebugEnabled())\n                log.debug(\"In ListenerThread \" + m_listener.getName() + \" run\");\n\n            while (!m_shutdown) {\n                Event event = null;\n                try {\n                    event = m_queue.remove(500);\n                    if (event == null)\n                        continue;\n                } catch (InterruptedException ie) {\n                    m_shutdown = true;\n                    break;\n                } catch (FifoQueueException fqE) {\n                    m_shutdown = true;\n                    break;\n                }\n\n                try {\n                    if (event != null) {\n\n                        if (log.isInfoEnabled()) {\n                            log.info(\"run: calling onEvent on \" + m_listener.getName() + \" for event \" + event.getUei() + \" dbid \" + event.getDbid() + \" with time \" + event.getTime());\n                        }\n                        \n                        // Make sure we restore our log4j logging prefix after onEvent is called\n                        String log4jPrefix = ThreadCategory.getPrefix(); \n                        try {\n                            m_listener.onEvent(event);\n                        } finally {\n                            ThreadCategory.setPrefix(log4jPrefix);\n                        }\n                    }\n                } catch (Throwable t) {\n                    log.warn(\"run: an unexpected error occured during ListenerThread \" + m_listener.getName() + \" run\", t);\n\n                }\n            }\n\n        }","id":20803,"modified_method":"/**\n         * The run method preforms the actual work for the runnable. It loops\n         * infinitely until the shutdown flag is set, during which time it\n         * processes queue elements. Each element in the queue should be a\n         * instance of {@link org.opennms.netmgt.xml.event.Event}. After each\n         * event is read, the 'onEvent' method of the listener is invoked.\n         * \n         */\n        public void run() {\n            if (log().isDebugEnabled()) {\n                log().debug(\"In ListenerThread \" + m_listener.getName() + \" run\");\n            }\n\n            while (!m_shutdown) {\n                Event event = null;\n                try {\n                    event = m_queue.remove(500);\n                    if (event == null) {\n                        continue;\n                    }\n                } catch (InterruptedException ie) {\n                    m_shutdown = true;\n                    break;\n                } catch (FifoQueueException fqE) {\n                    m_shutdown = true;\n                    break;\n                }\n\n                try {\n                    if (event != null) {\n\n                        if (log().isInfoEnabled()) {\n                            log().info(\"run: calling onEvent on \" + m_listener.getName() + \" for event \" + event.getUei() + \" dbid \" + event.getDbid() + \" with time \" + event.getTime());\n                        }\n                        \n                        // Make sure we restore our log4j logging prefix after onEvent is called\n                        String log4jPrefix = ThreadCategory.getPrefix(); \n                        try {\n                            m_listener.onEvent(event);\n                        } finally {\n                            ThreadCategory.setPrefix(log4jPrefix);\n                        }\n                    }\n                } catch (Throwable t) {\n                    log().warn(\"run: an unexpected error occured during ListenerThread \" + m_listener.getName() + \" run\", t);\n\n                }\n            }\n\n        }","commit_id":"21f2a26497ec77f6274063e0a5bfc0a450ec649d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Called by eventd to send an event to all interested listeners\n     */\n    public synchronized void broadcastNow(Event event) {\n        Category log = ThreadCategory.getInstance(this.getClass());\n        if (log.isDebugEnabled())\n            log.debug(\"Event to be broadcasted: \" + event.getUei());\n\n        if (m_listeners.size() <= 0) {\n            if (log.isDebugEnabled())\n                log.debug(\"No listeners interested in all events\");\n\n        }\n\n        // send to listeners interested in receiving all events\n        for(EventListener listener : m_listeners) {\n\n            ListenerThread listenerThr = m_listenerThreads.get(listener.getName());\n            try {\n                listenerThr.getQueue().add(event);\n                if (log.isDebugEnabled())\n                    log.debug(\"Queued event to listener: \" + listener.getName());\n            } catch (FifoQueueException fe) {\n                log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n            } catch (InterruptedException ie) {\n                log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n            }\n        }\n\n        // get event UEI\n        String uei = event.getUei();\n        if (uei == null) {\n            return;\n        }\n\n        // send to listeners who are interested in this event uei\n        //Loop to get partial wild card \"directory\" matches\n        while (uei.length() > 0){\n        List<EventListener> listenerList = m_ueiListeners.get(uei);\n        if (listenerList != null) {\n            for(EventListener listener : listenerList) {\n                ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n                try {\n                    listenerThread.getQueue().add(event);\n                    if (log.isDebugEnabled())\n                        log.debug(\"Queued event \"+uei+\" to listener: \" + listener.getName());\n                } catch (FifoQueueException fe) {\n                    log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n                } catch (InterruptedException ie) {\n                    log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n                }\n            }\n        } else {\n            if (log.isDebugEnabled())\n                log.debug(\"No listener interested in event: \" + uei);\n        }\n        //Try wild cards: Find / before last character\n        int i = uei.lastIndexOf(\"/\",uei.length()-2);\n        if (i > 0){\n           //Split at \"/\", including the /\n           uei = uei.substring (0, i+1);\n        } else {\n           //No more wild cards to match\n           uei=\"\";\n           break;\n        }\n        }\n    }","id":20804,"modified_method":"/**\n     * Called by eventd to send an event to all interested listeners\n     */\n    public synchronized void broadcastNow(Event event) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"Event to be broadcasted: \" + event.getUei());\n        }\n\n        if (m_listeners.size() <= 0) {\n            if (log().isDebugEnabled()) {\n                log().debug(\"No listeners interested in all events\");\n            }\n\n        }\n\n        // send to listeners interested in receiving all events\n        for (EventListener listener : m_listeners) {\n            ListenerThread listenerThr = m_listenerThreads.get(listener.getName());\n            try {\n                listenerThr.getQueue().add(event);\n                if (log().isDebugEnabled()) {\n                    log().debug(\"Queued event to listener: \" + listener.getName());\n                }\n            } catch (FifoQueueException fe) {\n                log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n            } catch (InterruptedException ie) {\n                log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n            }\n        }\n\n        // get event UEI\n        String uei = event.getUei();\n        if (uei == null) {\n            return;\n        }\n\n        // send to listeners who are interested in this event uei\n        //Loop to get partial wild card \"directory\" matches\n        while (uei.length() > 0) {\n            List<EventListener> listenerList = m_ueiListeners.get(uei);\n            if (listenerList != null) {\n                for (EventListener listener : listenerList) {\n                    ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n                    try {\n                        listenerThread.getQueue().add(event);\n                        if (log().isDebugEnabled()) {\n                            log().debug(\"Queued event \"+uei+\" to listener: \" + listener.getName());\n                        }\n                    } catch (FifoQueueException fe) {\n                        log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n                    } catch (InterruptedException ie) {\n                        log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n                    }\n                }\n            } else {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"No listener interested in event: \" + uei);\n                }\n            }\n            \n            //Try wild cards: Find / before last character\n            int i = uei.lastIndexOf(\"/\",uei.length()-2);\n            if (i > 0) {\n                //Split at \"/\", including the /\n                uei = uei.substring (0, i+1);\n            } else {\n                //No more wild cards to match\n                uei=\"\";\n                break;\n            }\n        }\n    }","commit_id":"21f2a26497ec77f6274063e0a5bfc0a450ec649d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Called by a service to send a set of events to other listeners.\n     */\n    public synchronized void sendNow(Log eventLog) {\n\n        // create a new event handler for the events and queue it to the\n        // event handler thread pool\n        try {\n            m_eventHandlerPool.getRunQueue().add(new EventHandler(eventLog, m_getNextEventIdStr, m_getNextAlarmIdStr));\n        } catch (InterruptedException iE) {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            log.warn(\"Unable to queue event log to the event handler pool queue\", iE);\n\n            throw new UndeclaredEventException(iE);\n        } catch (FifoQueueException qE) {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            log.warn(\"Unable to queue event log to the event handler pool queue\", qE);\n\n            throw new UndeclaredEventException(qE);\n        }\n    }","id":20805,"modified_method":"/**\n     * Called by a service to send a set of events to other listeners.\n     */\n    public synchronized void sendNow(Log eventLog) {\n\n        // create a new event handler for the events and queue it to the\n        // event handler thread pool\n        try {\n            m_eventHandlerPool.getRunQueue().add(new EventHandler(eventLog, m_getNextEventIdStr, m_getNextAlarmIdStr));\n        } catch (InterruptedException iE) {\n            log().warn(\"Unable to queue event log to the event handler pool queue\", iE);\n\n            throw new UndeclaredEventException(iE);\n        } catch (FifoQueueException qE) {\n            log().warn(\"Unable to queue event log to the event handler pool queue\", qE);\n\n            throw new UndeclaredEventException(qE);\n        }\n    }","commit_id":"21f2a26497ec77f6274063e0a5bfc0a450ec649d","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Register an event listener interested in the UEIs in the passed list\n     */\n    public synchronized void addEventListener(EventListener listener, List<String> ueilist) {\n        Category log = ThreadCategory.getInstance(this.getClass());\n        if (log.isDebugEnabled())\n            log.debug(\"Adding event listener \" + listener.getName() + \" for \" + ueilist);\n\n        if (ueilist == null || ueilist.size() == 0) {\n            // nothing to do\n            return;\n        }\n\n        // create a new queue and listener thread for this listener\n        ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n        if (listenerThread == null) {\n            FifoQueue<Event> lq = new FifoQueueImpl<Event>();\n            listenerThread = new ListenerThread(listener, lq);\n            listenerThread.start();\n\n            m_listenerThreads.put(listener.getName(), listenerThread);\n        }\n\n        // add to uei listeners\n        for(String uei : ueilist) {\n\n            // check if there are other listeners already, else create\n            // an entry\n            List<EventListener> listenersList = m_ueiListeners.get(uei);\n            if (listenersList == null) {\n                listenersList = new ArrayList<EventListener>();\n                listenersList.add(listener);\n\n                m_ueiListeners.put(uei, listenersList);\n            } else {\n                if (!listenersList.contains(listener))\n                    listenersList.add(listener);\n            }\n        }\n\n        // remove from list of listeners listening for all events\n        m_listeners.remove(listener);\n\n    }","id":20806,"modified_method":"/**\n     * Register an event listener interested in the UEIs in the passed list\n     */\n    public synchronized void addEventListener(EventListener listener, List<String> ueilist) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"Adding event listener \" + listener.getName() + \" for \" + ueilist);\n        }\n\n        if (ueilist == null || ueilist.size() == 0) {\n            // nothing to do\n            return;\n        }\n\n        // create a new queue and listener thread for this listener\n        ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n        if (listenerThread == null) {\n            FifoQueue<Event> lq = new FifoQueueImpl<Event>();\n            listenerThread = new ListenerThread(listener, lq);\n            listenerThread.start();\n\n            m_listenerThreads.put(listener.getName(), listenerThread);\n        }\n\n        // add to uei listeners\n        for (String uei : ueilist) {\n            // check if there are other listeners already, else create an entry\n            List<EventListener> listenersList = m_ueiListeners.get(uei);\n            if (listenersList == null) {\n                listenersList = new ArrayList<EventListener>();\n                listenersList.add(listener);\n\n                m_ueiListeners.put(uei, listenersList);\n            } else {\n                if (!listenersList.contains(listener)) {\n                    listenersList.add(listener);\n                }\n            }\n        }\n\n        // remove from list of listeners listening for all events\n        m_listeners.remove(listener);\n\n    }","commit_id":"eb6ba9da0a4020b2473fbccdf4050994481441ad","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n         * The run method preforms the actual work for the runnable. It loops\n         * infinitely until the shutdown flag is set, during which time it\n         * processes queue elements. Each element in the queue should be a\n         * instance of {@link org.opennms.netmgt.xml.event.Event}. After each\n         * event is read, the 'onEvent' method of the listener is invoked.\n         * \n         */\n        public void run() {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            if (log.isDebugEnabled())\n                log.debug(\"In ListenerThread \" + m_listener.getName() + \" run\");\n\n            while (!m_shutdown) {\n                Event event = null;\n                try {\n                    event = m_queue.remove(500);\n                    if (event == null)\n                        continue;\n                } catch (InterruptedException ie) {\n                    m_shutdown = true;\n                    break;\n                } catch (FifoQueueException fqE) {\n                    m_shutdown = true;\n                    break;\n                }\n\n                try {\n                    if (event != null) {\n\n                        if (log.isInfoEnabled()) {\n                            log.info(\"run: calling onEvent on \" + m_listener.getName() + \" for event \" + event.getUei() + \" dbid \" + event.getDbid() + \" with time \" + event.getTime());\n                        }\n                        \n                        // Make sure we restore our log4j logging prefix after onEvent is called\n                        String log4jPrefix = ThreadCategory.getPrefix(); \n                        try {\n                            m_listener.onEvent(event);\n                        } finally {\n                            ThreadCategory.setPrefix(log4jPrefix);\n                        }\n                    }\n                } catch (Throwable t) {\n                    log.warn(\"run: an unexpected error occured during ListenerThread \" + m_listener.getName() + \" run\", t);\n\n                }\n            }\n\n        }","id":20807,"modified_method":"/**\n         * The run method preforms the actual work for the runnable. It loops\n         * infinitely until the shutdown flag is set, during which time it\n         * processes queue elements. Each element in the queue should be a\n         * instance of {@link org.opennms.netmgt.xml.event.Event}. After each\n         * event is read, the 'onEvent' method of the listener is invoked.\n         * \n         */\n        public void run() {\n            if (log().isDebugEnabled()) {\n                log().debug(\"In ListenerThread \" + m_listener.getName() + \" run\");\n            }\n\n            while (!m_shutdown) {\n                Event event = null;\n                try {\n                    event = m_queue.remove(500);\n                    if (event == null) {\n                        continue;\n                    }\n                } catch (InterruptedException ie) {\n                    m_shutdown = true;\n                    break;\n                } catch (FifoQueueException fqE) {\n                    m_shutdown = true;\n                    break;\n                }\n\n                try {\n                    if (event != null) {\n\n                        if (log().isInfoEnabled()) {\n                            log().info(\"run: calling onEvent on \" + m_listener.getName() + \" for event \" + event.getUei() + \" dbid \" + event.getDbid() + \" with time \" + event.getTime());\n                        }\n                        \n                        // Make sure we restore our log4j logging prefix after onEvent is called\n                        String log4jPrefix = ThreadCategory.getPrefix(); \n                        try {\n                            m_listener.onEvent(event);\n                        } finally {\n                            ThreadCategory.setPrefix(log4jPrefix);\n                        }\n                    }\n                } catch (Throwable t) {\n                    log().warn(\"run: an unexpected error occured during ListenerThread \" + m_listener.getName() + \" run\", t);\n\n                }\n            }\n\n        }","commit_id":"eb6ba9da0a4020b2473fbccdf4050994481441ad","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Called by eventd to send an event to all interested listeners\n     */\n    public synchronized void broadcastNow(Event event) {\n        Category log = ThreadCategory.getInstance(this.getClass());\n        if (log.isDebugEnabled())\n            log.debug(\"Event to be broadcasted: \" + event.getUei());\n\n        if (m_listeners.size() <= 0) {\n            if (log.isDebugEnabled())\n                log.debug(\"No listeners interested in all events\");\n\n        }\n\n        // send to listeners interested in receiving all events\n        for(EventListener listener : m_listeners) {\n\n            ListenerThread listenerThr = m_listenerThreads.get(listener.getName());\n            try {\n                listenerThr.getQueue().add(event);\n                if (log.isDebugEnabled())\n                    log.debug(\"Queued event to listener: \" + listener.getName());\n            } catch (FifoQueueException fe) {\n                log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n            } catch (InterruptedException ie) {\n                log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n            }\n        }\n\n        // get event UEI\n        String uei = event.getUei();\n        if (uei == null) {\n            return;\n        }\n\n        // send to listeners who are interested in this event uei\n        //Loop to get partial wild card \"directory\" matches\n        while (uei.length() > 0){\n        List<EventListener> listenerList = m_ueiListeners.get(uei);\n        if (listenerList != null) {\n            for(EventListener listener : listenerList) {\n                ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n                try {\n                    listenerThread.getQueue().add(event);\n                    if (log.isDebugEnabled())\n                        log.debug(\"Queued event \"+uei+\" to listener: \" + listener.getName());\n                } catch (FifoQueueException fe) {\n                    log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n                } catch (InterruptedException ie) {\n                    log.error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n                }\n            }\n        } else {\n            if (log.isDebugEnabled())\n                log.debug(\"No listener interested in event: \" + uei);\n        }\n        //Try wild cards: Find / before last character\n        int i = uei.lastIndexOf(\"/\",uei.length()-2);\n        if (i > 0){\n           //Split at \"/\", including the /\n           uei = uei.substring (0, i+1);\n        } else {\n           //No more wild cards to match\n           uei=\"\";\n           break;\n        }\n        }\n    }","id":20808,"modified_method":"/**\n     * Called by eventd to send an event to all interested listeners\n     */\n    public synchronized void broadcastNow(Event event) {\n        if (log().isDebugEnabled()) {\n            log().debug(\"Event to be broadcasted: \" + event.getUei());\n        }\n\n        if (m_listeners.size() <= 0) {\n            if (log().isDebugEnabled()) {\n                log().debug(\"No listeners interested in all events\");\n            }\n\n        }\n\n        // send to listeners interested in receiving all events\n        for (EventListener listener : m_listeners) {\n            ListenerThread listenerThr = m_listenerThreads.get(listener.getName());\n            try {\n                listenerThr.getQueue().add(event);\n                if (log().isDebugEnabled()) {\n                    log().debug(\"Queued event to listener: \" + listener.getName());\n                }\n            } catch (FifoQueueException fe) {\n                log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n            } catch (InterruptedException ie) {\n                log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n            }\n        }\n\n        // get event UEI\n        String uei = event.getUei();\n        if (uei == null) {\n            return;\n        }\n\n        // send to listeners who are interested in this event uei\n        //Loop to get partial wild card \"directory\" matches\n        while (uei.length() > 0) {\n            List<EventListener> listenerList = m_ueiListeners.get(uei);\n            if (listenerList != null) {\n                for (EventListener listener : listenerList) {\n                    ListenerThread listenerThread = m_listenerThreads.get(listener.getName());\n                    try {\n                        listenerThread.getQueue().add(event);\n                        if (log().isDebugEnabled()) {\n                            log().debug(\"Queued event \"+uei+\" to listener: \" + listener.getName());\n                        }\n                    } catch (FifoQueueException fe) {\n                        log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), fe);\n                    } catch (InterruptedException ie) {\n                        log().error(\"Error queueing event \" + event.getUei() + \" to listener thread \" + listener.getName(), ie);\n                    }\n                }\n            } else {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"No listener interested in event: \" + uei);\n                }\n            }\n            \n            //Try wild cards: Find / before last character\n            int i = uei.lastIndexOf(\"/\",uei.length()-2);\n            if (i > 0) {\n                //Split at \"/\", including the /\n                uei = uei.substring (0, i+1);\n            } else {\n                //No more wild cards to match\n                uei=\"\";\n                break;\n            }\n        }\n    }","commit_id":"eb6ba9da0a4020b2473fbccdf4050994481441ad","url":"https://github.com/OpenNMS/opennms"},{"original_method":"/**\n     * Called by a service to send a set of events to other listeners.\n     */\n    public synchronized void sendNow(Log eventLog) {\n\n        // create a new event handler for the events and queue it to the\n        // event handler thread pool\n        try {\n            m_eventHandlerPool.getRunQueue().add(new EventHandler(eventLog, m_getNextEventIdStr, m_getNextAlarmIdStr));\n        } catch (InterruptedException iE) {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            log.warn(\"Unable to queue event log to the event handler pool queue\", iE);\n\n            throw new UndeclaredEventException(iE);\n        } catch (FifoQueueException qE) {\n            Category log = ThreadCategory.getInstance(this.getClass());\n            log.warn(\"Unable to queue event log to the event handler pool queue\", qE);\n\n            throw new UndeclaredEventException(qE);\n        }\n    }","id":20809,"modified_method":"/**\n     * Called by a service to send a set of events to other listeners.\n     */\n    public synchronized void sendNow(Log eventLog) {\n\n        // create a new event handler for the events and queue it to the\n        // event handler thread pool\n        try {\n            m_eventHandlerPool.getRunQueue().add(new EventHandler(eventLog, m_getNextEventIdStr, m_getNextAlarmIdStr));\n        } catch (InterruptedException iE) {\n            log().warn(\"Unable to queue event log to the event handler pool queue\", iE);\n\n            throw new UndeclaredEventException(iE);\n        } catch (FifoQueueException qE) {\n            log().warn(\"Unable to queue event log to the event handler pool queue\", qE);\n\n            throw new UndeclaredEventException(qE);\n        }\n    }","commit_id":"eb6ba9da0a4020b2473fbccdf4050994481441ad","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testUEI() {\n        for (UeiMatch uei : m_factory.getUeiList().getUeiMatchCollection()) {\n            boolean typeOk = ( uei.getMatch().getType().equals(\"substr\") || uei.getMatch().getType().equals(\"regex\") );\n            assertTrue(typeOk);\n            if (uei.getMatch().getType().equals(\"substr\")) {\n                assertEquals(\"CRISCO\", uei.getMatch().getExpression());\n            } else if (uei.getMatch().getType().equals(\"regex\")) {\n                assertEquals(\"uei.opennms.org/tests/syslogd/substrUeiRewriteTest\", uei.getUei());\n            }\n        }\n    }","id":20810,"modified_method":"public void testUEI() {\n        List<UeiMatch> ueiList = m_factory.getUeiList().getUeiMatchCollection();\n        UeiMatch uei = ueiList.get(0);\n        assertEquals(\"substr\", uei.getMatch().getType());\n        assertEquals(\"CRISCO\", uei.getMatch().getExpression());\n        assertEquals(\"uei.opennms.org/tests/syslogd/substrUeiRewriteTest\", uei.getUei());\n        \n        uei = ueiList.get(1);\n        assertEquals(\"regex\", uei.getMatch().getType());\n        assertEquals(\".*?foo: (\\\\d+) out of (\\\\d+) tests failed for (\\\\S+)$\", uei.getMatch().getExpression());\n        assertEquals(\"uei.opennms.org/tests/syslogd/regexUeiRewriteTest\", uei.getUei());\n    }","commit_id":"481cbf4b908b7c9e1b98a2abe700468221abcb80","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testUEI() {\n        for (UeiMatch uei : m_factory.getUeiList().getUeiMatchCollection()) {\n            boolean typeOk = ( uei.getMatch().getType().equals(\"substr\") || uei.getMatch().getType().equals(\"regex\") );\n            assertTrue(typeOk);\n            if (uei.getMatch().getType().equals(\"substr\")) {\n                assertEquals(\"CRISCO\", uei.getMatch().getExpression());\n            } else if (uei.getMatch().getType().equals(\"regex\")) {\n                assertEquals(\"uei.opennms.org/tests/syslogd/substrUeiRewriteTest\", uei.getUei());\n            }\n        }\n    }","id":20811,"modified_method":"public void testUEI() {\n        List<UeiMatch> ueiList = m_factory.getUeiList().getUeiMatchCollection();\n        UeiMatch uei = ueiList.get(0);\n        assertEquals(\"substr\", uei.getMatch().getType());\n        assertEquals(\"CRISCO\", uei.getMatch().getExpression());\n        assertEquals(\"uei.opennms.org/tests/syslogd/substrUeiRewriteTest\", uei.getUei());\n        \n        uei = ueiList.get(1);\n        assertEquals(\"regex\", uei.getMatch().getType());\n        assertEquals(\".*?foo: (\\\\d+) out of (\\\\d+) tests failed for (\\\\S+)$\", uei.getMatch().getExpression());\n        assertEquals(\"uei.opennms.org/tests/syslogd/regexUeiRewriteTest\", uei.getUei());\n    }","commit_id":"469a8b8a6e9a311f5def134e15e083d0eb547d51","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void testUEI() {\n        for (UeiMatch uei : m_factory.getUeiList().getUeiMatchCollection()) {\n            boolean typeOk = ( uei.getMatch().getType().equals(\"substr\") || uei.getMatch().getType().equals(\"regex\") );\n            assertTrue(typeOk);\n            if (uei.getMatch().getType().equals(\"substr\")) {\n                assertEquals(\"CRISCO\", uei.getMatch().getExpression());\n            } else if (uei.getMatch().getType().equals(\"regex\")) {\n                assertEquals(\"uei.opennms.org/tests/syslogd/substrUeiRewriteTest\", uei.getUei());\n            }\n        }\n    }","id":20812,"modified_method":"public void testUEI() {\n        List<UeiMatch> ueiList = m_factory.getUeiList().getUeiMatchCollection();\n        UeiMatch uei = ueiList.get(0);\n        assertEquals(\"substr\", uei.getMatch().getType());\n        assertEquals(\"CRISCO\", uei.getMatch().getExpression());\n        assertEquals(\"uei.opennms.org/tests/syslogd/substrUeiRewriteTest\", uei.getUei());\n        \n        uei = ueiList.get(1);\n        assertEquals(\"regex\", uei.getMatch().getType());\n        assertEquals(\".*?foo: (\\\\d+) out of (\\\\d+) tests failed for (\\\\S+)$\", uei.getMatch().getExpression());\n        assertEquals(\"uei.opennms.org/tests/syslogd/regexUeiRewriteTest\", uei.getUei());\n    }","commit_id":"67894b3b17812afa8c5a63467eeb2cdb4f59996a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private static void appendStackTraces(final File rootPath, final StringBuffer buffer, final Map<Thread,StackTraceElement[]> stackTraces, final boolean plain, final Thread.State stateIn) {\n        bufferappend(buffer, plain, \"THREADS WITH STATES: \" + stateIn.toString());\n        bufferappend(buffer, plain, \"\");\n        \n        final File classPath = new File(rootPath, \"source\");\n  \n        Thread thread;\n        // collect single dumps\n        HashMap<String, ArrayList<String>> dumps = new HashMap<String, ArrayList<String>>();\n        for (final Entry<Thread, StackTraceElement[]> entry: stackTraces.entrySet()) {\n            thread = entry.getKey();\n            final StackTraceElement[] stackTraceElements = entry.getValue();\n            StackTraceElement ste;\n            String line;\n            String tracename = \"\";\n            File classFile;\n            if ((stateIn.equals(thread.getState())) && (stackTraceElements.length > 0)) {\n                StringBuffer sb = new StringBuffer();\n                if (plain) {\n                    classFile = getClassFile(classPath, stackTraceElements[stackTraceElements.length - 1].getClassName());\n                    tracename = classFile.getName();\n                    if (tracename.endsWith(\".java\")) tracename = tracename.substring(0, tracename.length() - 5);\n                    if (tracename.length() > 20) tracename = tracename.substring(0, 20);\n                    while (tracename.length() < 20) tracename = tracename + \"_\";\n                    tracename = \"[\" + tracename + \"] \";                \n                }                \n                String threadtitle = tracename + \"Thread= \" + thread.getName() + \" \" + (thread.isDaemon()?\"daemon\":\"\") + \" id=\" + thread.getId() + \" \" + thread.getState().toString();\n                for (int i = 0; i < stackTraceElements.length; i++) {\n                    ste = stackTraceElements[i];\n                    if (i == 0) {\n                        line = getLine(getClassFile(classPath, ste.getClassName()), ste.getLineNumber());\n                    } else {\n                        line = null;\n                    }\n                    if ((line != null) && (line.length() > 0)) {\n                        bufferappend(sb, plain, tracename + \"at \" + htmlFilterCharacterCoding.unicode2html(ste.toString(), true) + \" [\" + line.trim() + \"]\");\n                    } else {\n                        bufferappend(sb, plain, tracename + \"at \" + htmlFilterCharacterCoding.unicode2html(ste.toString(), true));\n                    }\n                }\n                String threaddump = sb.toString();\n                ArrayList<String> threads = dumps.get(threaddump);\n                if (threads == null) threads = new ArrayList<String>();\n                threads.add(threadtitle);\n                dumps.put(threaddump, threads);\n            }\n        }\n        \n        // write dumps\n        for (final Entry<String, ArrayList<String>> entry: dumps.entrySet()) {\n            ArrayList<String> threads = entry.getValue();\n            for (int i = 0; i < threads.size(); i++) bufferappend(buffer, plain, threads.get(i));\n            bufferappend(buffer, plain, entry.getKey());\n            bufferappend(buffer, plain, \"\");\n        }\n        bufferappend(buffer, plain, \"\");\n    }","id":20813,"modified_method":"private static void appendStackTraces(final File rootPath, final StringBuffer buffer, final Map<Thread,StackTraceElement[]> stackTraces, final boolean plain, final Thread.State stateIn) {\n        bufferappend(buffer, plain, \"THREADS WITH STATES: \" + stateIn.toString());\n        bufferappend(buffer, plain, \"\");\n        // collect single dumps\n        HashMap<String, ArrayList<String>> dumps = dumpCollection(rootPath, stackTraces, plain, stateIn);\n        \n        // write dumps\n        for (final Entry<String, ArrayList<String>> entry: dumps.entrySet()) {\n            ArrayList<String> threads = entry.getValue();\n            for (int i = 0; i < threads.size(); i++) bufferappend(buffer, plain, threads.get(i));\n            bufferappend(buffer, plain, entry.getKey());\n            bufferappend(buffer, plain, \"\");\n        }\n        bufferappend(buffer, plain, \"\");\n    }","commit_id":"bd1dc9cd5dcf71459f9ce1d093e68c664899a47c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"public static serverObjects respond(final httpRequestHeader header, final serverObjects post, final serverSwitch<?> env) {\n\n    \tprop.clear();\n    \tsb = (plasmaSwitchboard) env;\n    \tfinal StringBuffer buffer = new StringBuffer(1000);\n    \t\n    \tif (post != null && post.containsKey(\"createThreaddump\")) {\n    \t    final boolean plain = post.get(\"plain\", \"false\").equals(\"true\");\n    \t    final int sleep = post.getInt(\"sleep\", 0); // a sleep before creation of a thread dump can be used for profiling\n    \t    if (sleep > 0) try {Thread.sleep(sleep);} catch (final InterruptedException e) {}\n    \t    prop.put(\"dump\", \"1\");\n        \t// Thread dump\n        \tfinal Map<Thread,StackTraceElement[]> stackTraces = Thread.getAllStackTraces();\n        \tfinal Date dt = new Date();\n        \tfinal String versionstring = yacyVersion.combined2prettyVersion(sb.getConfig(\"version\",\"0.1\"));\n        \t\n        \tbufferappend(buffer, plain, \"************* Start Thread Dump \" + dt + \" *******************\");\n        \tbufferappend(buffer, plain, \"\");\n        \tbufferappend(buffer, plain, \"YaCy Version: \" + versionstring);\n        \tbufferappend(buffer, plain, \"Total Memory = \" + (Runtime.getRuntime().totalMemory()));\n        \tbufferappend(buffer, plain, \"Used&nbsp;&nbsp;Memory = \" + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()));\n        \tbufferappend(buffer, plain, \"Free&nbsp;&nbsp;Memory = \" + (Runtime.getRuntime().freeMemory()));\n        \tbufferappend(buffer, plain, \"\");\n        \tbufferappend(buffer, plain, \"\");\n            \n        \tappendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.BLOCKED);\n        \tappendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.RUNNABLE);\n        \tappendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.TIMED_WAITING);\n        \tappendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.WAITING);\n        \tappendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.NEW);\n        \tappendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.TERMINATED);\n            \n        \tbufferappend(buffer, plain, \"************* End Thread Dump \" + dt + \" *******************\");\n        \n        \tprop.put(\"plain_content\", buffer.toString());\n        \tprop.put(\"plain\", (plain) ? 1 : 0);\n    \t}\n    \t\n       \treturn prop;    // return from serverObjects respond()\n    }","id":20814,"modified_method":"public static serverObjects respond(final httpRequestHeader header, final serverObjects post, final serverSwitch<?> env) {\n\n    \tprop.clear();\n    \tsb = (plasmaSwitchboard) env;\n    \tfinal StringBuffer buffer = new StringBuffer(1000);\n    \t\n\t    final boolean plain = post.get(\"plain\", \"false\").equals(\"true\");\n\t    final int sleep = post.getInt(\"sleep\", 0); // a sleep before creation of a thread dump can be used for profiling\n\t    if (sleep > 0) try {Thread.sleep(sleep);} catch (final InterruptedException e) {}\n\t    prop.put(\"dump\", \"1\");\n    \t// Thread dump\n    \tfinal Date dt = new Date();\n    \tfinal String versionstring = yacyVersion.combined2prettyVersion(sb.getConfig(\"version\",\"0.1\"));\n    \t\n    \tbufferappend(buffer, plain, \"************* Start Thread Dump \" + dt + \" *******************\");\n    \tbufferappend(buffer, plain, \"\");\n    \tbufferappend(buffer, plain, \"YaCy Version: \" + versionstring);\n    \tbufferappend(buffer, plain, \"Total Memory = \" + (Runtime.getRuntime().totalMemory()));\n    \tbufferappend(buffer, plain, \"Used&nbsp;&nbsp;Memory = \" + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()));\n    \tbufferappend(buffer, plain, \"Free&nbsp;&nbsp;Memory = \" + (Runtime.getRuntime().freeMemory()));\n    \tbufferappend(buffer, plain, \"\");\n    \tbufferappend(buffer, plain, \"\");\n    \t\n        if (post != null && post.containsKey(\"multipleThreaddump\")) {\n            final ArrayList<Map<Thread,StackTraceElement[]>> traces = new ArrayList<Map<Thread,StackTraceElement[]>>();\n            for (int i = 0; i < 100; i++) {\n                traces.add(Thread.getAllStackTraces());\n            }\n            appendStackTraceStats(sb.getRootPath(), buffer, traces, plain, Thread.State.BLOCKED);\n            appendStackTraceStats(sb.getRootPath(), buffer, traces, plain, Thread.State.RUNNABLE);\n            appendStackTraceStats(sb.getRootPath(), buffer, traces, plain, Thread.State.TIMED_WAITING);\n            appendStackTraceStats(sb.getRootPath(), buffer, traces, plain, Thread.State.WAITING);\n            appendStackTraceStats(sb.getRootPath(), buffer, traces, plain, Thread.State.NEW);\n            appendStackTraceStats(sb.getRootPath(), buffer, traces, plain, Thread.State.TERMINATED);\n        } else {\n            // generate a single thread dump\n            final Map<Thread,StackTraceElement[]> stackTraces = Thread.getAllStackTraces();\n            appendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.BLOCKED);\n            appendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.RUNNABLE);\n            appendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.TIMED_WAITING);\n            appendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.WAITING);\n            appendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.NEW);\n            appendStackTraces(sb.getRootPath(), buffer, stackTraces, plain, Thread.State.TERMINATED);\n        }\n        \n    \tbufferappend(buffer, plain, \"************* End Thread Dump \" + dt + \" *******************\");\n    \n    \tprop.put(\"plain_content\", buffer.toString());\n    \tprop.put(\"plain\", (plain) ? 1 : 0);\n    \t\n       \treturn prop;    // return from serverObjects respond()\n    }","commit_id":"bd1dc9cd5dcf71459f9ce1d093e68c664899a47c","url":"https://github.com/yacy/yacy_search_server"},{"original_method":"@Nullable\n    public static String generateInfo(PsiElement element) {\n      final Language language = element.getLanguage();\n      final DocumentationProvider documentationProvider = language.getDocumentationProvider();\n      if(documentationProvider != null) {\n        String info = documentationProvider.getQuickNavigateInfo(element);\n        if (info != null) {\n          return info;\n        }\n      }\n\n      if (element instanceof PsiFile) {\n        return generateFileInfo((PsiFile) element);\n      } else if (element instanceof PsiAntElement) {\n        return generateAttributeValueInfo((PsiAntElement)element);\n      } else {\n        return null;\n      }\n    }","id":20815,"modified_method":"@Nullable\n    public static String generateInfo(PsiElement element) {\n      final Language language = element.getLanguage();\n      final DocumentationProvider documentationProvider = language.getDocumentationProvider();\n      if(documentationProvider != null) {\n        String info = documentationProvider.getQuickNavigateInfo(element);\n        if (info != null) {\n          return info;\n        }\n      }\n\n      if (element instanceof PsiFile) {\n        return generateFileInfo((PsiFile) element);\n      }\n      return null;\n    }","commit_id":"1906d8b008b3a147f02544e88febba6db7be2a82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"static boolean canRename(PsiElement element, Project project) {\n    if (element instanceof PsiAntTarget || element instanceof PsiAntProperty) {\n      return CommonRefactoringUtil.checkReadOnlyStatus(project, element.getNavigationElement());\n    }\n\n    final String REFACTORING_NAME = RefactoringBundle.message(\"rename.title\");\n    if (element instanceof XmlTag && !(((XmlTag)element).getMetaData() instanceof PsiWritableMetaData) ||\n        !(element instanceof PsiNamedElement || element instanceof XmlAttributeValue)) {\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"error.wrong.caret.position.symbol\"));\n      if (!ApplicationManager.getApplication().isUnitTestMode()) {\n        CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME, message, null, project);\n      }\n      return false;\n    }\n\n    if (!PsiManager.getInstance(project).isInProject(element) && element.isPhysical()) {\n      String message = RefactoringBundle\n        .getCannotRefactorMessage(RefactoringBundle.message(\"error.out.of.project.element\", UsageViewUtil.getType(element)));\n      CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME, message, null, project);\n      return false;\n    }\n\n    if (InjectedLanguageUtil.isInInjectedLanguagePrefixSuffix(element)) {\n      String message = RefactoringBundle\n        .getCannotRefactorMessage(RefactoringBundle.message(\"error.in.injected.lang.prefix.suffix\", UsageViewUtil.getType(element)));\n      CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME, message, null, project);\n      return false;\n    }\n\n    return CommonRefactoringUtil.checkReadOnlyStatus(project, element);\n  }","id":20816,"modified_method":"static boolean canRename(PsiElement element, Project project) {\n    final String REFACTORING_NAME = RefactoringBundle.message(\"rename.title\");\n    if (element instanceof XmlTag && !(((XmlTag)element).getMetaData() instanceof PsiWritableMetaData) ||\n        !(element instanceof PsiNamedElement || element instanceof XmlAttributeValue)) {\n      String message = RefactoringBundle.getCannotRefactorMessage(RefactoringBundle.message(\"error.wrong.caret.position.symbol\"));\n      if (!ApplicationManager.getApplication().isUnitTestMode()) {\n        CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME, message, null, project);\n      }\n      return false;\n    }\n\n    if (!PsiManager.getInstance(project).isInProject(element) && element.isPhysical()) {\n      String message = RefactoringBundle\n        .getCannotRefactorMessage(RefactoringBundle.message(\"error.out.of.project.element\", UsageViewUtil.getType(element)));\n      CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME, message, null, project);\n      return false;\n    }\n\n    if (InjectedLanguageUtil.isInInjectedLanguagePrefixSuffix(element)) {\n      String message = RefactoringBundle\n        .getCannotRefactorMessage(RefactoringBundle.message(\"error.in.injected.lang.prefix.suffix\", UsageViewUtil.getType(element)));\n      CommonRefactoringUtil.showErrorMessage(REFACTORING_NAME, message, null, project);\n      return false;\n    }\n\n    return CommonRefactoringUtil.checkReadOnlyStatus(project, element);\n  }","commit_id":"1906d8b008b3a147f02544e88febba6db7be2a82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"public static String formatModifiers(PsiElement element, int options) throws IllegalArgumentException{\n    PsiModifierList list;\n    if (element instanceof PsiVariable){\n      list = ((PsiVariable)element).getModifierList();\n    }\n    else if (element instanceof PsiMethod){\n      list = ((PsiMethod)element).getModifierList();\n    }\n    else if (element instanceof PsiClass){\n      list = ((PsiClass)element).getModifierList();\n      if (list == null) return \"\";\n    }\n    else if (element instanceof PsiClassInitializer){\n      list = ((PsiClassInitializer)element).getModifierList();\n      if (list == null) return \"\";\n    }\n    else{\n      throw new IllegalArgumentException();\n    }\n    if (list == null) return \"\";\n    PsiClass parentClass = element.getParent() instanceof PsiClass ? (PsiClass)element.getParent() : null;\n    StringBuffer buffer = new StringBuffer();\n    if (list.hasModifierProperty(PsiModifier.PUBLIC)){\n      if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 || parentClass == null || !parentClass.isInterface()){\n        appendModifier(buffer, PsiModifier.PUBLIC);\n      }\n    }\n    if (list.hasModifierProperty(PsiModifier.PROTECTED)){\n      appendModifier(buffer, PsiModifier.PROTECTED);\n    }\n    if (list.hasModifierProperty(PsiModifier.PRIVATE)){\n      appendModifier(buffer, PsiModifier.PRIVATE);\n    }\n    if (list.hasModifierProperty(PsiModifier.PACKAGE_LOCAL) && (options & SHOW_PACKAGE_LOCAL) != 0){\n      if (element instanceof PsiClass || element instanceof PsiMethod || element instanceof PsiField){\n        if (element instanceof PsiClass && element.getParent() instanceof PsiDeclarationStatement){// local class\n          appendModifier(buffer, PsiBundle.message(\"local.class.preposition\"));\n        }\n        else{\n          appendModifier(buffer, PsiBundle.message(\"package.local.visibility\"));\n        }\n      }\n    }\n    if (list.hasModifierProperty(PsiModifier.STATIC)){\n      if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 ||\n        !(element instanceof PsiField && parentClass != null && parentClass.isInterface())){\n        appendModifier(buffer, PsiModifier.STATIC);\n      }\n    }\n    if (list.hasModifierProperty(PsiModifier.ABSTRACT)){\n      if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 ||\n        !(element instanceof PsiClass && ((PsiClass)element).isInterface()\n          || element instanceof PsiMethod && parentClass != null && parentClass.isInterface())){\n        appendModifier(buffer, PsiModifier.ABSTRACT);\n      }\n    }\n    if (list.hasModifierProperty(PsiModifier.FINAL)){\n      if ((options & SHOW_REDUNDANT_MODIFIERS) != 0 ||\n        !(element instanceof PsiField && parentClass != null && parentClass.isInterface())){\n        appendModifier(buffer, PsiModifier.FINAL);\n      }\n    }\n    if (list.hasModifierProperty(PsiModifier.NATIVE) && (options & JAVADOC_MODIFIERS_ONLY) == 0){\n      appendModifier(buffer, PsiModifier.NATIVE);\n    }\n    if (list.hasModifierProperty(PsiModifier.SYNCHRONIZED) && (options & JAVADOC_MODIFIERS_ONLY) == 0){\n      appendModifier(buffer, PsiModifier.SYNCHRONIZED);\n    }\n    if (list.hasModifierProperty(PsiModifier.STRICTFP) && (options & JAVADOC_MODIFIERS_ONLY) == 0){\n      appendModifier(buffer, PsiModifier.STRICTFP);\n    }\n    if (list.hasModifierProperty(PsiModifier.TRANSIENT) &&\n        element instanceof PsiVariable // javac 5 puts transient attr for methods\n       ){\n      appendModifier(buffer, PsiModifier.TRANSIENT);\n    }\n    if (list.hasModifierProperty(PsiModifier.VOLATILE)){\n      appendModifier(buffer, PsiModifier.VOLATILE);\n    }\n    if (buffer.length() > 0){\n      buffer.setLength(buffer.length() - 1);\n    }\n    return buffer.toString();\n  }","id":20817,"modified_method":"public static String formatModifiers(PsiElement element, int options) throws IllegalArgumentException{\n    PsiModifierList list;\n    if (element instanceof PsiVariable){\n      list = ((PsiVariable)element).getModifierList();\n    }\n    else if (element instanceof PsiMethod){\n      list = ((PsiMethod)element).getModifierList();\n    }\n    else if (element instanceof PsiClass){\n      list = ((PsiClass)element).getModifierList();\n      if (list == null) return \"\";\n    }\n    else if (element instanceof PsiClassInitializer){\n      list = ((PsiClassInitializer)element).getModifierList();\n      if (list == null) return \"\";\n    }\n    else{\n      throw new IllegalArgumentException();\n    }\n    if (list == null) return \"\";\n    PsiClass parentClass = element.getParent() instanceof PsiClass ? (PsiClass)element.getParent() : null;\n    StringBuffer buffer = new StringBuffer();\n    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0\n        ? list.hasModifierProperty(PsiModifier.PUBLIC)\n        : list.hasExplicitModifier(PsiModifier.PUBLIC)) appendModifier(buffer, PsiModifier.PUBLIC);\n\n    if (list.hasModifierProperty(PsiModifier.PROTECTED)){\n      appendModifier(buffer, PsiModifier.PROTECTED);\n    }\n    if (list.hasModifierProperty(PsiModifier.PRIVATE)){\n      appendModifier(buffer, PsiModifier.PRIVATE);\n    }\n\n    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0\n        ? list.hasModifierProperty(PsiModifier.PACKAGE_LOCAL)\n        : list.hasExplicitModifier(PsiModifier.PACKAGE_LOCAL)) {\n      if (element instanceof PsiClass && element.getParent() instanceof PsiDeclarationStatement) {// local class\n        appendModifier(buffer, PsiBundle.message(\"local.class.preposition\"));\n      }\n      else {\n        appendModifier(buffer, PsiBundle.message(\"package.local.visibility\"));\n      }\n    }\n\n    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0\n        ? list.hasModifierProperty(PsiModifier.STATIC)\n        : list.hasExplicitModifier(PsiModifier.STATIC)) appendModifier(buffer, PsiModifier.STATIC);\n\n    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0\n        ? list.hasModifierProperty(PsiModifier.ABSTRACT)\n        : list.hasExplicitModifier(PsiModifier.ABSTRACT)) appendModifier(buffer, PsiModifier.ABSTRACT);\n\n    if ((options & SHOW_REDUNDANT_MODIFIERS) != 0\n        ? list.hasModifierProperty(PsiModifier.FINAL)\n        : list.hasExplicitModifier(PsiModifier.FINAL)) appendModifier(buffer, PsiModifier.FINAL);\n\n    if (list.hasModifierProperty(PsiModifier.NATIVE) && (options & JAVADOC_MODIFIERS_ONLY) == 0){\n      appendModifier(buffer, PsiModifier.NATIVE);\n    }\n    if (list.hasModifierProperty(PsiModifier.SYNCHRONIZED) && (options & JAVADOC_MODIFIERS_ONLY) == 0){\n      appendModifier(buffer, PsiModifier.SYNCHRONIZED);\n    }\n    if (list.hasModifierProperty(PsiModifier.STRICTFP) && (options & JAVADOC_MODIFIERS_ONLY) == 0){\n      appendModifier(buffer, PsiModifier.STRICTFP);\n    }\n    if (list.hasModifierProperty(PsiModifier.TRANSIENT) &&\n        element instanceof PsiVariable // javac 5 puts transient attr for methods\n       ){\n      appendModifier(buffer, PsiModifier.TRANSIENT);\n    }\n    if (list.hasModifierProperty(PsiModifier.VOLATILE)){\n      appendModifier(buffer, PsiModifier.VOLATILE);\n    }\n    if (buffer.length() > 0){\n      buffer.setLength(buffer.length() - 1);\n    }\n    return buffer.toString();\n  }","commit_id":"1906d8b008b3a147f02544e88febba6db7be2a82","url":"https://github.com/JetBrains/intellij-community"},{"original_method":"private ModelAndView gotoNewExpression(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n        Expression expression=new Expression();\n        //Set the two default values which need to be set for the UI to work properly\n        expression.setDsType(\"node\");\n        expression.setType(\"high\"); \n        \n        //We're assuming that adding a expression puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int expressionIndex=group.getExpressionCount();\n        \n        group.addExpression(expression);\n        \n        //Double check the guess index, just in case:\n        if(expression!=group.getExpression(expressionIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getExpressionCount(); i++) {\n                if(expression==group.getExpression(i)) {\n                    expressionIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editExpression\");\n        modelAndView.addObject(\"expression\",expression);\n        modelAndView.addObject(\"expressionIndex\", expressionIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","id":20818,"modified_method":"private ModelAndView gotoNewExpression(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n\n        //We're assuming that adding a expression puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int expressionIndex=group.getExpressionCount();\n        \n        //Check if last expression has expression def. If not, we assume that is a new definition (not saved yet on thresholds.xml)\n        Expression expression = null;\n        if (expressionIndex > 0) {\n            expression = group.getExpression(expressionIndex-1);\n            if (expression.getExpression() == null || expression.getExpression().equals(\"\")) {\n\t            expressionIndex--;\n            } else {\n            \texpression = null;\n            }\n        }\n        \n        // create a new expression object\n        if (expression == null) {\n            expression=new Expression();\n            //Set the two default values which need to be set for the UI to work properly\n            expression.setDsType(\"node\");\n            expression.setType(\"high\");\n            expression.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n            group.addExpression(expression);\n        }\n    \n        //Double check the guess index, just in case:\n        if(expression!=group.getExpression(expressionIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getExpressionCount(); i++) {\n                if(expression==group.getExpression(i)) {\n                    expressionIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editExpression\");\n        modelAndView.addObject(\"expression\",expression);\n        modelAndView.addObject(\"expressionIndex\", expressionIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","commit_id":"ef78102ac1a4af05a4239f6edee7e8851272667a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView finishThresholdEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String thresholdIndexString=request.getParameter(\"thresholdIndex\");\n        if(thresholdIndexString==null) {\n            throw new ServletException(\"thresholdIndex parameter required to delete a threshold\");\n        }\n        int thresholdIndex=WebSecurityUtils.safeParseInt(thresholdIndexString);\n        Threshold threshold=group.getThreshold(thresholdIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, threshold);\n            threshold.setDsName(request.getParameter(\"dsName\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeThreshold(threshold);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \tthreshold.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, threshold);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n        \n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","id":20819,"modified_method":"private ModelAndView finishThresholdEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String thresholdIndexString=request.getParameter(\"thresholdIndex\");\n        if(thresholdIndexString==null) {\n            throw new ServletException(\"thresholdIndex parameter required to delete a threshold\");\n        }\n        int thresholdIndex=WebSecurityUtils.safeParseInt(thresholdIndexString);\n        Threshold threshold=group.getThreshold(thresholdIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, threshold);\n            String dsName = request.getParameter(\"dsName\");\n            if (dsName == null || dsName.equals(\"\")) {\n            \tthrow new ServletException(\"ds-name cannot be null or empty string\");\n            }\n            threshold.setDsName(request.getParameter(\"dsName\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeThreshold(threshold);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \tthreshold.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, threshold);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n        \n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","commit_id":"ef78102ac1a4af05a4239f6edee7e8851272667a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView finishExpressionEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String expressionIndexString=request.getParameter(\"expressionIndex\");\n        if(expressionIndexString==null) {\n            throw new ServletException(\"expressionIndex parameter required to delete a threshold\");\n        }\n        int expressionIndex=WebSecurityUtils.safeParseInt(expressionIndexString);\n        Expression expression=group.getExpression(expressionIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, expression);\n            expression.setExpression(request.getParameter(\"expression\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeExpression(expression);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \texpression.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, expression);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n\n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","id":20820,"modified_method":"private ModelAndView finishExpressionEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String expressionIndexString=request.getParameter(\"expressionIndex\");\n        if(expressionIndexString==null) {\n            throw new ServletException(\"expressionIndex parameter required to delete a threshold\");\n        }\n        int expressionIndex=WebSecurityUtils.safeParseInt(expressionIndexString);\n        Expression expression=group.getExpression(expressionIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, expression);\n            String expDef = request.getParameter(\"expression\");\n            if (expDef == null || expDef.equals(\"\")) {\n            \tthrow new ServletException(\"expression content cannot be null or empty string\");\n            }\n            expression.setExpression(expDef);\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeExpression(expression);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \texpression.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, expression);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n\n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","commit_id":"ef78102ac1a4af05a4239f6edee7e8851272667a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView gotoNewThreshold(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n        Threshold threshold=new Threshold();\n        //Set the two default values which need to be set for the UI to work properly\n        threshold.setDsType(\"node\");\n        threshold.setType(\"high\"); \n\tthreshold.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n        \n        //We're assuming that adding a threshold puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int thresholdIndex=group.getThresholdCount();\n        \n        group.addThreshold(threshold);\n        \n        //Double check the guess index, just in case:\n        if(threshold!=group.getThreshold(thresholdIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getThresholdCount(); i++) {\n                if(threshold==group.getThreshold(i)) {\n                    thresholdIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editThreshold\");\n        modelAndView.addObject(\"threshold\",threshold);\n        modelAndView.addObject(\"thresholdIndex\", thresholdIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","id":20821,"modified_method":"private ModelAndView gotoNewThreshold(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n\n        //We're assuming that adding a threshold puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int thresholdIndex=group.getThresholdCount();\n        \n        //Check if last threshold has dsName. If not, we assume that is a new definition (not saved yet on thresholds.xml)\n        Threshold threshold = null;\n        if (thresholdIndex > 0) {\n            threshold=group.getThreshold(thresholdIndex-1);\n            if (threshold.getDsName() == null || threshold.getDsName().equals(\"\")) {\n            \tthresholdIndex--;\n            } else {\n            \tthreshold = null;\n            }\n        }\n        \n        // create a new threshold object\n        if (threshold == null) {\n            threshold=new Threshold();\n            //Set the two default values which need to be set for the UI to work properly\n            threshold.setDsType(\"node\");\n            threshold.setType(\"high\"); \n            threshold.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n            group.addThreshold(threshold);\n        }\n        \n        //Double check the guess index, just in case:\n        if(threshold!=group.getThreshold(thresholdIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getThresholdCount(); i++) {\n                if(threshold==group.getThreshold(i)) {\n                    thresholdIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editThreshold\");\n        modelAndView.addObject(\"threshold\",threshold);\n        modelAndView.addObject(\"thresholdIndex\", thresholdIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","commit_id":"ef78102ac1a4af05a4239f6edee7e8851272667a","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView gotoNewExpression(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n        Expression expression=new Expression();\n        //Set the two default values which need to be set for the UI to work properly\n        expression.setDsType(\"node\");\n        expression.setType(\"high\"); \n        \n        //We're assuming that adding a expression puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int expressionIndex=group.getExpressionCount();\n        \n        group.addExpression(expression);\n        \n        //Double check the guess index, just in case:\n        if(expression!=group.getExpression(expressionIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getExpressionCount(); i++) {\n                if(expression==group.getExpression(i)) {\n                    expressionIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editExpression\");\n        modelAndView.addObject(\"expression\",expression);\n        modelAndView.addObject(\"expressionIndex\", expressionIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","id":20822,"modified_method":"private ModelAndView gotoNewExpression(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n\n        //We're assuming that adding a expression puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int expressionIndex=group.getExpressionCount();\n        \n        //Check if last expression has expression def. If not, we assume that is a new definition (not saved yet on thresholds.xml)\n        Expression expression = null;\n        if (expressionIndex > 0) {\n            expression = group.getExpression(expressionIndex-1);\n            if (expression.getExpression() == null || expression.getExpression().equals(\"\")) {\n\t            expressionIndex--;\n            } else {\n            \texpression = null;\n            }\n        }\n        \n        // create a new expression object\n        if (expression == null) {\n            expression=new Expression();\n            //Set the two default values which need to be set for the UI to work properly\n            expression.setDsType(\"node\");\n            expression.setType(\"high\");\n            expression.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n            group.addExpression(expression);\n        }\n    \n        //Double check the guess index, just in case:\n        if(expression!=group.getExpression(expressionIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getExpressionCount(); i++) {\n                if(expression==group.getExpression(i)) {\n                    expressionIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editExpression\");\n        modelAndView.addObject(\"expression\",expression);\n        modelAndView.addObject(\"expressionIndex\", expressionIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","commit_id":"43d4af71eaa44e1d980f2e4e5fcd8c074d084464","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView gotoNewThreshold(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n        Threshold threshold=new Threshold();\n        //Set the two default values which need to be set for the UI to work properly\n        threshold.setDsType(\"node\");\n        threshold.setType(\"high\"); \n\tthreshold.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n        \n        //We're assuming that adding a threshold puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int thresholdIndex=group.getThresholdCount();\n        \n        group.addThreshold(threshold);\n        \n        //Double check the guess index, just in case:\n        if(threshold!=group.getThreshold(thresholdIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getThresholdCount(); i++) {\n                if(threshold==group.getThreshold(i)) {\n                    thresholdIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editThreshold\");\n        modelAndView.addObject(\"threshold\",threshold);\n        modelAndView.addObject(\"thresholdIndex\", thresholdIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","id":20823,"modified_method":"private ModelAndView gotoNewThreshold(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n\n        //We're assuming that adding a threshold puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int thresholdIndex=group.getThresholdCount();\n        \n        //Check if last threshold has dsName. If not, we assume that is a new definition (not saved yet on thresholds.xml)\n        Threshold threshold = null;\n        if (thresholdIndex > 0) {\n            threshold=group.getThreshold(thresholdIndex-1);\n            if (threshold.getDsName() == null || threshold.getDsName().equals(\"\")) {\n            \tthresholdIndex--;\n            } else {\n            \tthreshold = null;\n            }\n        }\n        \n        // create a new threshold object\n        if (threshold == null) {\n            threshold=new Threshold();\n            //Set the two default values which need to be set for the UI to work properly\n            threshold.setDsType(\"node\");\n            threshold.setType(\"high\"); \n            threshold.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n            group.addThreshold(threshold);\n        }\n        \n        //Double check the guess index, just in case:\n        if(threshold!=group.getThreshold(thresholdIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getThresholdCount(); i++) {\n                if(threshold==group.getThreshold(i)) {\n                    thresholdIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editThreshold\");\n        modelAndView.addObject(\"threshold\",threshold);\n        modelAndView.addObject(\"thresholdIndex\", thresholdIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","commit_id":"43d4af71eaa44e1d980f2e4e5fcd8c074d084464","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView finishThresholdEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String thresholdIndexString=request.getParameter(\"thresholdIndex\");\n        if(thresholdIndexString==null) {\n            throw new ServletException(\"thresholdIndex parameter required to delete a threshold\");\n        }\n        int thresholdIndex=WebSecurityUtils.safeParseInt(thresholdIndexString);\n        Threshold threshold=group.getThreshold(thresholdIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, threshold);\n            threshold.setDsName(request.getParameter(\"dsName\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeThreshold(threshold);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \tthreshold.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, threshold);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n        \n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","id":20824,"modified_method":"private ModelAndView finishThresholdEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String thresholdIndexString=request.getParameter(\"thresholdIndex\");\n        if(thresholdIndexString==null) {\n            throw new ServletException(\"thresholdIndex parameter required to delete a threshold\");\n        }\n        int thresholdIndex=WebSecurityUtils.safeParseInt(thresholdIndexString);\n        Threshold threshold=group.getThreshold(thresholdIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, threshold);\n            String dsName = request.getParameter(\"dsName\");\n            if (dsName == null || dsName.equals(\"\")) {\n            \tthrow new ServletException(\"ds-name cannot be null or empty string\");\n            }\n            threshold.setDsName(request.getParameter(\"dsName\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeThreshold(threshold);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \tthreshold.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, threshold);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n        \n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","commit_id":"43d4af71eaa44e1d980f2e4e5fcd8c074d084464","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView finishExpressionEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String expressionIndexString=request.getParameter(\"expressionIndex\");\n        if(expressionIndexString==null) {\n            throw new ServletException(\"expressionIndex parameter required to delete a threshold\");\n        }\n        int expressionIndex=WebSecurityUtils.safeParseInt(expressionIndexString);\n        Expression expression=group.getExpression(expressionIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, expression);\n            expression.setExpression(request.getParameter(\"expression\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeExpression(expression);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \texpression.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, expression);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n\n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","id":20825,"modified_method":"private ModelAndView finishExpressionEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String expressionIndexString=request.getParameter(\"expressionIndex\");\n        if(expressionIndexString==null) {\n            throw new ServletException(\"expressionIndex parameter required to delete a threshold\");\n        }\n        int expressionIndex=WebSecurityUtils.safeParseInt(expressionIndexString);\n        Expression expression=group.getExpression(expressionIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, expression);\n            String expDef = request.getParameter(\"expression\");\n            if (expDef == null || expDef.equals(\"\")) {\n            \tthrow new ServletException(\"expression content cannot be null or empty string\");\n            }\n            expression.setExpression(expDef);\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeExpression(expression);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \texpression.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, expression);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n\n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","commit_id":"43d4af71eaa44e1d980f2e4e5fcd8c074d084464","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView gotoNewExpression(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n        Expression expression=new Expression();\n        //Set the two default values which need to be set for the UI to work properly\n        expression.setDsType(\"node\");\n        expression.setType(\"high\"); \n        \n        //We're assuming that adding a expression puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int expressionIndex=group.getExpressionCount();\n        \n        group.addExpression(expression);\n        \n        //Double check the guess index, just in case:\n        if(expression!=group.getExpression(expressionIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getExpressionCount(); i++) {\n                if(expression==group.getExpression(i)) {\n                    expressionIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editExpression\");\n        modelAndView.addObject(\"expression\",expression);\n        modelAndView.addObject(\"expressionIndex\", expressionIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","id":20826,"modified_method":"private ModelAndView gotoNewExpression(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n\n        //We're assuming that adding a expression puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int expressionIndex=group.getExpressionCount();\n        \n        //Check if last expression has expression def. If not, we assume that is a new definition (not saved yet on thresholds.xml)\n        Expression expression = null;\n        if (expressionIndex > 0) {\n            expression = group.getExpression(expressionIndex-1);\n            if (expression.getExpression() == null || expression.getExpression().equals(\"\")) {\n\t            expressionIndex--;\n            } else {\n            \texpression = null;\n            }\n        }\n        \n        // create a new expression object\n        if (expression == null) {\n            expression=new Expression();\n            //Set the two default values which need to be set for the UI to work properly\n            expression.setDsType(\"node\");\n            expression.setType(\"high\");\n            expression.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n            group.addExpression(expression);\n        }\n    \n        //Double check the guess index, just in case:\n        if(expression!=group.getExpression(expressionIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getExpressionCount(); i++) {\n                if(expression==group.getExpression(i)) {\n                    expressionIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editExpression\");\n        modelAndView.addObject(\"expression\",expression);\n        modelAndView.addObject(\"expressionIndex\", expressionIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","commit_id":"acc83b9bb98781abe50c552a4c37063d60cc4676","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView finishExpressionEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String expressionIndexString=request.getParameter(\"expressionIndex\");\n        if(expressionIndexString==null) {\n            throw new ServletException(\"expressionIndex parameter required to delete a threshold\");\n        }\n        int expressionIndex=WebSecurityUtils.safeParseInt(expressionIndexString);\n        Expression expression=group.getExpression(expressionIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, expression);\n            expression.setExpression(request.getParameter(\"expression\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeExpression(expression);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \texpression.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, expression);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n\n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","id":20827,"modified_method":"private ModelAndView finishExpressionEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String expressionIndexString=request.getParameter(\"expressionIndex\");\n        if(expressionIndexString==null) {\n            throw new ServletException(\"expressionIndex parameter required to delete a threshold\");\n        }\n        int expressionIndex=WebSecurityUtils.safeParseInt(expressionIndexString);\n        Expression expression=group.getExpression(expressionIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, expression);\n            String expDef = request.getParameter(\"expression\");\n            if (expDef == null || expDef.equals(\"\")) {\n            \tthrow new ServletException(\"expression content cannot be null or empty string\");\n            }\n            expression.setExpression(expDef);\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeExpression(expression);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \texpression.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, expression);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n\n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","commit_id":"acc83b9bb98781abe50c552a4c37063d60cc4676","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView gotoNewThreshold(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n        Threshold threshold=new Threshold();\n        //Set the two default values which need to be set for the UI to work properly\n        threshold.setDsType(\"node\");\n        threshold.setType(\"high\"); \n\tthreshold.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n        \n        //We're assuming that adding a threshold puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int thresholdIndex=group.getThresholdCount();\n        \n        group.addThreshold(threshold);\n        \n        //Double check the guess index, just in case:\n        if(threshold!=group.getThreshold(thresholdIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getThresholdCount(); i++) {\n                if(threshold==group.getThreshold(i)) {\n                    thresholdIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editThreshold\");\n        modelAndView.addObject(\"threshold\",threshold);\n        modelAndView.addObject(\"thresholdIndex\", thresholdIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","id":20828,"modified_method":"private ModelAndView gotoNewThreshold(String groupName) {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        \n        Group group=configFactory.getGroup(groupName);\n\n        //We're assuming that adding a threshold puts it at the end of the current list (i.e. that the Group implementation\n        // uses a simple List structure, probably ArrayList).  We can be a bit cleverer later on and check though, so we should\n        int thresholdIndex=group.getThresholdCount();\n        \n        //Check if last threshold has dsName. If not, we assume that is a new definition (not saved yet on thresholds.xml)\n        Threshold threshold = null;\n        if (thresholdIndex > 0) {\n            threshold=group.getThreshold(thresholdIndex-1);\n            if (threshold.getDsName() == null || threshold.getDsName().equals(\"\")) {\n            \tthresholdIndex--;\n            } else {\n            \tthreshold = null;\n            }\n        }\n        \n        // create a new threshold object\n        if (threshold == null) {\n            threshold=new Threshold();\n            //Set the two default values which need to be set for the UI to work properly\n            threshold.setDsType(\"node\");\n            threshold.setType(\"high\"); \n            threshold.setTrigger(1); //Default to 1 - 0 will give an error, so we may as well be helpful\n            group.addThreshold(threshold);\n        }\n        \n        //Double check the guess index, just in case:\n        if(threshold!=group.getThreshold(thresholdIndex)) {\n            //Ok, our guesses on indexing were completely wrong.  Failover and check each threshold in the group\n            for(int i=0; i<group.getThresholdCount(); i++) {\n                if(threshold==group.getThreshold(i)) {\n                    thresholdIndex=i;\n                    break; //out of the for loop\n                }\n            }\n        }\n        \n        ModelAndView modelAndView;\n        modelAndView=new ModelAndView(\"admin/thresholds/editThreshold\");\n        modelAndView.addObject(\"threshold\",threshold);\n        modelAndView.addObject(\"thresholdIndex\", thresholdIndex );\n        modelAndView.addObject(\"groupName\", groupName);\n        modelAndView.addObject(\"isNew\", true);\n        \n        addStandardEditingBits(modelAndView);\n\n        return modelAndView;\n    }","commit_id":"acc83b9bb98781abe50c552a4c37063d60cc4676","url":"https://github.com/OpenNMS/opennms"},{"original_method":"private ModelAndView finishThresholdEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String thresholdIndexString=request.getParameter(\"thresholdIndex\");\n        if(thresholdIndexString==null) {\n            throw new ServletException(\"thresholdIndex parameter required to delete a threshold\");\n        }\n        int thresholdIndex=WebSecurityUtils.safeParseInt(thresholdIndexString);\n        Threshold threshold=group.getThreshold(thresholdIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, threshold);\n            threshold.setDsName(request.getParameter(\"dsName\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeThreshold(threshold);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \tthreshold.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, threshold);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n        \n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","id":20829,"modified_method":"private ModelAndView finishThresholdEdit(HttpServletRequest request) throws ServletException {\n        ThresholdingConfigFactory configFactory=ThresholdingConfigFactory.getInstance();\n        ModelAndView modelAndView;\n        String groupName=request.getParameter(\"groupName\");\n        String submitAction=request.getParameter(\"submitAction\");\n        Group group=configFactory.getGroup(groupName);\n        String thresholdIndexString=request.getParameter(\"thresholdIndex\");\n        if(thresholdIndexString==null) {\n            throw new ServletException(\"thresholdIndex parameter required to delete a threshold\");\n        }\n        int thresholdIndex=WebSecurityUtils.safeParseInt(thresholdIndexString);\n        Threshold threshold=group.getThreshold(thresholdIndex);\n        \n        if(SAVE_BUTTON_TITLE.equals(submitAction)) {\n            this.commonFinishEdit(request, threshold);\n            String dsName = request.getParameter(\"dsName\");\n            if (dsName == null || dsName.equals(\"\")) {\n            \tthrow new ServletException(\"ds-name cannot be null or empty string\");\n            }\n            threshold.setDsName(request.getParameter(\"dsName\"));\n            saveChanges();\n         } else if (CANCEL_BUTTON_TITLE.equals(submitAction)) {\n            String isNew=request.getParameter(\"isNew\");\n            if(\"true\".equals(isNew)) {\n                //It was a new Threshold, but the user hit cancel.  Remove the new threshold from the group\n                group.removeThreshold(threshold);\n            } else {\n                List<ResourceFilter> filters = getFilterList(request, false);\n                if (filters != null)\n                \tthreshold.setResourceFilter(filters);\n            }\n        } else {\n            return finishThresholdFilterEdit(request, threshold);\n        }\n        // Remove Filters from Session\n        setFilterList(request, null);\n        \n        //and got back to the editGroup page\n        modelAndView=new ModelAndView(\"admin/thresholds/editGroup\");\n        modelAndView.addObject(\"group\",configFactory.getGroup(groupName));\n        return modelAndView;\n    }","commit_id":"acc83b9bb98781abe50c552a4c37063d60cc4676","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n  public Iterator<E> iterator() {\n    return new Iterator<E>() {\n      private final List<Integer> sortedKeys = Generics.newArrayList(new TreeSet<Integer>(index2Item.keySet()));\n      private int index = 0;\n      @Override\n      public boolean hasNext() {\n        return index < sortedKeys.size();\n      }\n      @Override\n      public E next() {\n        return index2Item.get(index++);\n      }\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }","id":20830,"modified_method":"@Override\n  public Iterator<E> iterator() {\n    return new Iterator<E>() {\n      private int index = 0;\n      @Override\n      public boolean hasNext() {\n        return index < index2Item.size();\n      }\n      @Override\n      public E next() {\n        return index2Item.get(index++);\n      }\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }","commit_id":"34d184579e52793b4e966fec4851cba7ee631950","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public int indexOf(E o, boolean add) {\n    Integer atomic = item2Index.get(o);\n    if (atomic == null) {\n      if (add) {\n        final int newIndex = indexCounter.getAndIncrement();\n        atomic = item2Index.putIfAbsent(o, newIndex);\n        if (atomic == null) {\n          index2Item.put(newIndex, o);\n          return newIndex;\n        } else {\n          return item2Index.get(o);\n        }\n      } else {\n        return UNKNOWN_ID;\n      }\n    } else {\n      return atomic;\n    }\n  }","id":20831,"modified_method":"@Override\n  public int indexOf(E o, boolean add) {\n    if (add) {\n      // TODO(spenceg) The Index interface contract states that indices must be\n      // non-negative and continuous. We tried to satisfy this requirement without\n      // a lock (e.g., by using AtomicInteger) but couldn't make it work.\n      synchronized(this) {\n        if ( ! item2Index.containsKey(o)) {\n          int newIndex = index2Item.size();\n          item2Index.put(o, newIndex);\n          index2Item.put(newIndex, o);\n        }\n      }\n      return item2Index.get(o);\n\n    } else {\n      return indexOf(o);\n    }\n  }","commit_id":"34d184579e52793b4e966fec4851cba7ee631950","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public void clear() {\n    synchronized(this) {\n      item2Index.clear();\n      index2Item.clear();\n      indexCounter = new AtomicInteger();\n    }\n  }","id":20832,"modified_method":"@Override\n  public void clear() {\n    synchronized(this) {\n      item2Index.clear();\n      index2Item.clear();\n    }\n  }","commit_id":"34d184579e52793b4e966fec4851cba7ee631950","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public void clear() {\n    synchronized(this) {\n      item2Index.clear();\n      index2Item.clear();\n      indexCounter = new AtomicInteger();\n    }\n  }","id":20833,"modified_method":"@Override\n  public void clear() {\n    synchronized(this) {\n      item2Index.clear();\n      index2Item.clear();\n    }\n  }","commit_id":"cc95e42d0c21ee41127183182401f2e55e61c4ad","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public int indexOf(E o, boolean add) {\n    Integer atomic = item2Index.get(o);\n    if (atomic == null) {\n      if (add) {\n        final int newIndex = indexCounter.getAndIncrement();\n        atomic = item2Index.putIfAbsent(o, newIndex);\n        if (atomic == null) {\n          index2Item.put(newIndex, o);\n          return newIndex;\n        } else {\n          return item2Index.get(o);\n        }\n      } else {\n        return UNKNOWN_ID;\n      }\n    } else {\n      return atomic;\n    }\n  }","id":20834,"modified_method":"@Override\n  public int indexOf(E o, boolean add) {\n    if (add) {\n      // TODO(spenceg) The Index interface contract states that indices must be\n      // non-negative and continuous. We tried to satisfy this requirement without\n      // a lock (e.g., by using AtomicInteger) but couldn't make it work.\n      synchronized(this) {\n        if ( ! item2Index.containsKey(o)) {\n          int newIndex = index2Item.size();\n          item2Index.put(o, newIndex);\n          index2Item.put(newIndex, o);\n        }\n      }\n      return item2Index.get(o);\n\n    } else {\n      return indexOf(o);\n    }\n  }","commit_id":"cc95e42d0c21ee41127183182401f2e55e61c4ad","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Iterator<E> iterator() {\n    return new Iterator<E>() {\n      private final List<Integer> sortedKeys = Generics.newArrayList(new TreeSet<Integer>(index2Item.keySet()));\n      private int index = 0;\n      @Override\n      public boolean hasNext() {\n        return index < sortedKeys.size();\n      }\n      @Override\n      public E next() {\n        return index2Item.get(index++);\n      }\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }","id":20835,"modified_method":"@Override\n  public Iterator<E> iterator() {\n    return new Iterator<E>() {\n      private int index = 0;\n      @Override\n      public boolean hasNext() {\n        return index < index2Item.size();\n      }\n      @Override\n      public E next() {\n        return index2Item.get(index++);\n      }\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }","commit_id":"cc95e42d0c21ee41127183182401f2e55e61c4ad","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public int indexOf(E o, boolean add) {\n    Integer atomic = item2Index.get(o);\n    if (atomic == null) {\n      if (add) {\n        final int newIndex = indexCounter.getAndIncrement();\n        atomic = item2Index.putIfAbsent(o, newIndex);\n        if (atomic == null) {\n          index2Item.put(newIndex, o);\n          return newIndex;\n        } else {\n          return item2Index.get(o);\n        }\n      } else {\n        return UNKNOWN_ID;\n      }\n    } else {\n      return atomic;\n    }\n  }","id":20836,"modified_method":"@Override\n  public int indexOf(E o, boolean add) {\n    if (add) {\n      // TODO(spenceg) The Index interface contract states that indices must be\n      // non-negative and continuous. We tried to satisfy this requirement without\n      // a lock (e.g., by using AtomicInteger) but couldn't make it work.\n      synchronized(this) {\n        if ( ! item2Index.containsKey(o)) {\n          int newIndex = index2Item.size();\n          item2Index.put(o, newIndex);\n          index2Item.put(newIndex, o);\n        }\n      }\n      return item2Index.get(o);\n\n    } else {\n      return indexOf(o);\n    }\n  }","commit_id":"cd35da31d51abf8266cd98f144106623b486f6bd","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Iterator<E> iterator() {\n    return new Iterator<E>() {\n      private final List<Integer> sortedKeys = Generics.newArrayList(new TreeSet<Integer>(index2Item.keySet()));\n      private int index = 0;\n      @Override\n      public boolean hasNext() {\n        return index < sortedKeys.size();\n      }\n      @Override\n      public E next() {\n        return index2Item.get(index++);\n      }\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }","id":20837,"modified_method":"@Override\n  public Iterator<E> iterator() {\n    return new Iterator<E>() {\n      private int index = 0;\n      @Override\n      public boolean hasNext() {\n        return index < index2Item.size();\n      }\n      @Override\n      public E next() {\n        return index2Item.get(index++);\n      }\n      @Override\n      public void remove() {\n        throw new UnsupportedOperationException();\n      }\n    };\n  }","commit_id":"cd35da31d51abf8266cd98f144106623b486f6bd","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public void clear() {\n    synchronized(this) {\n      item2Index.clear();\n      index2Item.clear();\n      indexCounter = new AtomicInteger();\n    }\n  }","id":20838,"modified_method":"@Override\n  public void clear() {\n    synchronized(this) {\n      item2Index.clear();\n      index2Item.clear();\n    }\n  }","commit_id":"cd35da31d51abf8266cd98f144106623b486f6bd","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/** @throws WebApplicationException With code 401 unauthorized */\n    public static WebApplicationException unauthorized(String format, Object... args) {\n        String msg = String.format(format, args);\n        if (log.isDebugEnabled()) log.debug(\"returning 401 unauthorized(\"+msg+\")\");\n        throw new WebApplicationException(Response.status(Response.Status.UNAUTHORIZED)\n                .type(MediaType.APPLICATION_JSON_TYPE)\n                .entity(ApiError.builder().message(msg).build()).build());\n    }","id":20839,"modified_method":"/** @throws WebApplicationException With code 401 unauthorized */\n    public static WebApplicationException unauthorized(String format, Object... args) {\n        return throwWebApplicationException(Response.Status.UNAUTHORIZED, format, args);\n    }","commit_id":"c74288157552a8b00a8f40d55f3a0c6403840078","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"/** @throws WebApplicationException With code 400 bad request */\n    public static WebApplicationException badRequest(String format, Object... args) {\n        String msg = String.format(format, args);\n        if (log.isDebugEnabled()) log.debug(\"returning 400 bad request (\"+msg+\")\");\n        throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST)\n                .type(MediaType.APPLICATION_JSON_TYPE)\n                .entity(ApiError.builder().message(msg).build()).build());\n    }","id":20840,"modified_method":"/** @throws WebApplicationException With code 400 bad request */\n    public static WebApplicationException badRequest(String format, Object... args) {\n        return throwWebApplicationException(Response.Status.BAD_REQUEST, format, args);\n    }","commit_id":"c74288157552a8b00a8f40d55f3a0c6403840078","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"/** @throws WebApplicationException With code 404 not found */\n    public static WebApplicationException notFound(String format, Object... args) {\n        String msg = String.format(format, args);\n        if (log.isDebugEnabled()) log.debug(\"returning 404 notFound(\"+msg+\")\");\n        throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\n                .type(MediaType.APPLICATION_JSON_TYPE)\n                .entity(ApiError.builder().message(msg).build()).build());\n    }","id":20841,"modified_method":"/** @throws WebApplicationException With code 404 not found */\n    public static WebApplicationException notFound(String format, Object... args) {\n        return throwWebApplicationException(Response.Status.NOT_FOUND, format, args);\n    }","commit_id":"c74288157552a8b00a8f40d55f3a0c6403840078","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"/** @throws WebApplicationException With code 412 precondition failed */\n    public static WebApplicationException preconditionFailed(String format, Object... args) {\n        String msg = String.format(format, args);\n        if (log.isDebugEnabled()) log.debug(\"returning 412 preconditionFailed(\"+msg+\")\");\n        throw new WebApplicationException(Response.status(Response.Status.PRECONDITION_FAILED)\n                .type(MediaType.APPLICATION_JSON_TYPE)\n                .entity(ApiError.builder().message(msg).build()).build());\n    }","id":20842,"modified_method":"/** @throws WebApplicationException With code 412 precondition failed */\n    public static WebApplicationException preconditionFailed(String format, Object... args) {\n        return throwWebApplicationException(Response.Status.PRECONDITION_FAILED, format, args);\n    }","commit_id":"c74288157552a8b00a8f40d55f3a0c6403840078","url":"https://github.com/apache/incubator-brooklyn"},{"original_method":"private void createProperties(List<RenderingRuleProperty> customRules, final int strId, String cat,\n\t\t\t\t\t\t\t\t  final ContextMenuAdapter adapter, final MapActivity activity) {\n\t\tfinal List<RenderingRuleProperty> ps = new ArrayList<>();\n\t\tfinal List<OsmandSettings.CommonPreference<Boolean>> prefs = new ArrayList<>();\n\t\tIterator<RenderingRuleProperty> it = customRules.iterator();\n\n\t\twhile (it.hasNext()) {\n\t\t\tRenderingRuleProperty p = it.next();\n\t\t\tif (cat.equals(p.getCategory()) && p.isBoolean()) {\n\t\t\t\tps.add(p);\n\t\t\t\tfinal OsmandSettings.CommonPreference<Boolean> pref = activity.getMyApplication().getSettings()\n\t\t\t\t\t\t.getCustomRenderBooleanProperty(p.getAttrName());\n\t\t\t\tprefs.add(pref);\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\t\tif (prefs.size() > 0) {\n\t\t\tfinal String descr = getDescription(prefs);\n\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t.setTitleId(strId, activity)\n\t\t\t\t\t.setDescription(descr)\n\t\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<ContextMenuItem> a,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\t\tshowPreferencesDialog(adapter, a, pos, activity, activity.getString(strId), ps, prefs);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}).createItem());\n//\t\t\tcreateCustomRenderingProperties(adapter, activity, ps);\n\t\t}\n\t}","id":20843,"modified_method":"private void createProperties(List<RenderingRuleProperty> customRules,\n\t\t\t\t\t\t\t\t  @StringRes final int strId,\n\t\t\t\t\t\t\t\t  @DrawableRes final int icon,\n\t\t\t\t\t\t\t\t  String category,\n\t\t\t\t\t\t\t\t  final ContextMenuAdapter adapter, final MapActivity activity) {\n\t\tfinal List<RenderingRuleProperty> ps = new ArrayList<>();\n\t\tfinal List<OsmandSettings.CommonPreference<Boolean>> prefs = new ArrayList<>();\n\t\tIterator<RenderingRuleProperty> it = customRules.iterator();\n\n\t\twhile (it.hasNext()) {\n\t\t\tRenderingRuleProperty p = it.next();\n\t\t\tif (category.equals(p.getCategory()) && p.isBoolean()) {\n\t\t\t\tps.add(p);\n\t\t\t\tfinal OsmandSettings.CommonPreference<Boolean> pref = activity.getMyApplication().getSettings()\n\t\t\t\t\t\t.getCustomRenderBooleanProperty(p.getAttrName());\n\t\t\t\tprefs.add(pref);\n\t\t\t\tit.remove();\n\t\t\t}\n\t\t}\n\t\tif (prefs.size() > 0) {\n\t\t\tfinal String descr = getDescription(prefs);\n\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t.setTitleId(strId, activity)\n\t\t\t\t\t.setDescription(descr)\n\t\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t\t.setIcon(icon)\n\t\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\n\t\t\t\t\t\t@Override\n\t\t\t\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<ContextMenuItem> a,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, int pos, boolean isChecked) {\n\t\t\t\t\t\t\tshowPreferencesDialog(adapter, a, pos, activity, activity.getString(strId), ps, prefs);\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}).createItem());\n//\t\t\tcreateCustomRenderingProperties(adapter, activity, ps);\n\t\t}\n\t}","commit_id":"95d6ccd9fac80506531ce2cb0f684bd644303178","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void createLayersItems(ContextMenuAdapter adapter, MapActivity activity) {\n\t\tOsmandApplication app = activity.getMyApplication();\n\t\tOsmandSettings settings = app.getSettings();\n\t\tLayerMenuListener l = new LayerMenuListener(activity, adapter);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_show, activity)\n\t\t\t\t.setCategory(true).setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\t// String appMode = \" [\" + settings.getApplicationMode().toHumanString(view.getApplication()) +\"] \";\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_poi, activity)\n\t\t\t\t.setSelected(settings.SELECTED_POI_FILTER_FOR_MAP.get() != null)\n\t\t\t\t.setIcon(R.drawable.ic_action_info_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_amenity_label, activity)\n\t\t\t\t.setSelected(settings.SHOW_POI_LABEL.get())\n\t\t\t\t.setIcon(R.drawable.ic_action_text_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_favorites, activity)\n\t\t\t\t.setSelected(settings.SHOW_FAVORITES.get())\n\t\t\t\t.setIcon(R.drawable.ic_action_fav_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_gpx_layer, activity)\n\t\t\t\t.setSelected(app.getSelectedGpxHelper().isShowingAnyGpxFiles())\n\t\t\t\t.setIcon(R.drawable.ic_action_polygom_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_map, activity)\n\t\t\t\t.setIcon(R.drawable.ic_world_globe_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tif (TransportRouteHelper.getInstance().routeIsCalculated()) {\n\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t.setTitleId(R.string.layer_transport_route, activity)\n\t\t\t\t\t.setSelected(true)\n\t\t\t\t\t.setIcon(R.drawable.ic_action_bus_dark)\n\t\t\t\t\t.setListener(l).createItem());\n\t\t}\n\n\t\tOsmandPlugin.registerLayerContextMenu(activity.getMapView(), adapter, activity);\n\t\tapp.getAppCustomization().prepareLayerContextMenu(activity, adapter);\n\t}","id":20844,"modified_method":"private void createLayersItems(ContextMenuAdapter adapter, MapActivity activity) {\n\t\tOsmandApplication app = activity.getMyApplication();\n\t\tOsmandSettings settings = app.getSettings();\n\t\tLayerMenuListener l = new LayerMenuListener(activity, adapter);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_show, activity)\n\t\t\t\t.setCategory(true).setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\t// String appMode = \" [\" + settings.getApplicationMode().toHumanString(view.getApplication()) +\"] \";\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_poi, activity)\n\t\t\t\t.setSelected(settings.SELECTED_POI_FILTER_FOR_MAP.get() != null)\n\t\t\t\t.setIcon(R.drawable.ic_action_info_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_amenity_label, activity)\n\t\t\t\t.setSelected(settings.SHOW_POI_LABEL.get())\n\t\t\t\t.setIcon(R.drawable.ic_action_text_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.shared_string_favorites, activity)\n\t\t\t\t.setSelected(settings.SHOW_FAVORITES.get())\n\t\t\t\t.setIcon(R.drawable.ic_action_fav_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_gpx_layer, activity)\n\t\t\t\t.setSelected(app.getSelectedGpxHelper().isShowingAnyGpxFiles())\n\t\t\t\t.setIcon(R.drawable.ic_action_polygom_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(l).createItem());\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.layer_map, activity)\n\t\t\t\t.setIcon(R.drawable.ic_world_globe_dark)\n\t\t\t\t.setListener(l).createItem());\n\t\tif (TransportRouteHelper.getInstance().routeIsCalculated()) {\n\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t.setTitleId(R.string.layer_transport_route, activity)\n\t\t\t\t\t.setSelected(true)\n\t\t\t\t\t.setIcon(R.drawable.ic_action_bus_dark)\n\t\t\t\t\t.setListener(l).createItem());\n\t\t}\n\n\t\tOsmandPlugin.registerLayerContextMenu(activity.getMapView(), adapter, activity);\n\t\tapp.getAppCustomization().prepareLayerContextMenu(activity, adapter);\n\t}","commit_id":"95d6ccd9fac80506531ce2cb0f684bd644303178","url":"https://github.com/osmandapp/Osmand"},{"original_method":"private void createRenderingAttributeItems(final ContextMenuAdapter adapter, final MapActivity activity) {\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_map_rendering, activity)\n\t\t\t\t.setCategory(true)\n\t\t\t\t.setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\tString descr = getRenderDescr(activity);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_renderer, activity)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(activity);\n\t\t\t\t\t\tbld.setTitle(R.string.renderers);\n\t\t\t\t\t\tfinal OsmandApplication app = activity.getMyApplication();\n\t\t\t\t\t\tCollection<String> rendererNames = app.getRendererRegistry().getRendererNames();\n\t\t\t\t\t\tfinal String[] items = rendererNames.toArray(new String[rendererNames.size()]);\n\t\t\t\t\t\tfinal String[] visibleNames = new String[items.length];\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String selectedName = app.getRendererRegistry().getCurrentSelectedRenderer().getName();\n\t\t\t\t\t\tfor (int j = 0; j < items.length; j++) {\n\t\t\t\t\t\t\tif (items[j].equals(selectedName)) {\n\t\t\t\t\t\t\t\tselected = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisibleNames[j] = items[j].replace('_', ' ').replace('-', ' ');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbld.setSingleChoiceItems(visibleNames, selected, new DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tString renderer = items[which];\n\t\t\t\t\t\t\t\tRenderingRulesStorage loaded = app.getRendererRegistry().getRenderer(renderer);\n\t\t\t\t\t\t\t\tif (loaded != null) {\n\t\t\t\t\t\t\t\t\tOsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\t\t\t\tview.getSettings().RENDERER.set(renderer);\n\t\t\t\t\t\t\t\t\tapp.getRendererRegistry().setCurrentSelectedRender(loaded);\n\t\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tAccessibleToast.makeText(app, R.string.renderer_load_exception, Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getRenderDescr(activity));\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).setDescription(descr).setLayout(R.layout.list_item_single_line_descrition_narrow).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_day_night, activity)\n\t\t\t\t.setDescription(getDayNightDescr(activity))\n\t\t\t\t.setListener(new ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tbld.setTitle(R.string.daynight);\n\t\t\t\t\t\tfinal String[] items = new String[OsmandSettings.DayNightMode.values().length];\n\t\t\t\t\t\tfor (int i = 0; i < items.length; i++) {\n\t\t\t\t\t\t\titems[i] = OsmandSettings.DayNightMode.values()[i].toHumanString(activity.getMyApplication());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint i = view.getSettings().DAYNIGHT_MODE.get().ordinal();\n\t\t\t\t\t\tbld.setSingleChoiceItems(items, i, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().DAYNIGHT_MODE.set(OsmandSettings.DayNightMode.values()[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\t//adapter.getItem(pos).setDescription(s, getDayNightDescr(activity));\n\t\t\t\t\t\t\t\t//ad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).setLayout(R.layout.list_item_single_line_descrition_narrow).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_magnifier, activity).setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tfinal OsmandSettings.OsmandPreference<Float> mapDensity = view.getSettings().MAP_DENSITY;\n\t\t\t\t\t\tfinal AlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tint p = (int) (mapDensity.get() * 100);\n\t\t\t\t\t\tfinal TIntArrayList tlist = new TIntArrayList(new int[]{33, 50, 75, 100, 150, 200, 300, 400});\n\t\t\t\t\t\tfinal List<String> values = new ArrayList<>();\n\t\t\t\t\t\tint i = -1;\n\t\t\t\t\t\tfor (int k = 0; k <= tlist.size(); k++) {\n\t\t\t\t\t\t\tfinal boolean end = k == tlist.size();\n\t\t\t\t\t\t\tif (i == -1) {\n\t\t\t\t\t\t\t\tif ((end || p < tlist.get(k))) {\n\t\t\t\t\t\t\t\t\tvalues.add(p + \" %\");\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t} else if (p == tlist.get(k)) {\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (k < tlist.size()) {\n\t\t\t\t\t\t\t\tvalues.add(tlist.get(k) + \" %\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (values.size() != tlist.size()) {\n\t\t\t\t\t\t\ttlist.insert(i, p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbld.setTitle(R.string.map_magnifier);\n\t\t\t\t\t\tbld.setSingleChoiceItems(values.toArray(new String[values.size()]), i,\n\t\t\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\t\t\tint p = tlist.get(which);\n\t\t\t\t\t\t\t\t\t\tmapDensity.set(p / 100.0f);\n\t\t\t\t\t\t\t\t\t\tview.setComplexZoom(view.getZoom(), view.getSettingsMapDensity());\n\t\t\t\t\t\t\t\t\t\tMapRendererContext mapContext = NativeCoreContext.getMapRendererContext();\n\t\t\t\t\t\t\t\t\t\tif (mapContext != null) {\n\t\t\t\t\t\t\t\t\t\t\tmapContext.updateMapSettings();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(String.format(\"%.0f\", 100f * activity.getMyApplication().getSettings().MAP_DENSITY.get()) + \" %\");\n\t\t\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).setDescription(String.format(\"%.0f\", 100f * activity.getMyApplication().getSettings().MAP_DENSITY.get()) + \" %\")\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.text_size, activity).setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.text_size);\n\t\t\t\t\t\tfinal Float[] txtValues = new Float[]{0.75f, 1f, 1.25f, 1.5f, 2f, 3f};\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String[] txtNames = new String[txtValues.length];\n\t\t\t\t\t\tfor (int i = 0; i < txtNames.length; i++) {\n\t\t\t\t\t\t\ttxtNames[i] = (int) (txtValues[i] * 100) + \" %\";\n\t\t\t\t\t\t\tif (Math.abs(view.getSettings().TEXT_SCALE.get() - txtValues[i]) < 0.1f) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtNames, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().TEXT_SCALE.set(txtValues[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getScale(activity));\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).setDescription(getScale(activity)).setLayout(R.layout.list_item_single_line_descrition_narrow).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_locale, activity).setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.map_preferred_locale);\n\t\t\t\t\t\tfinal String[] txtIds = getSortedMapNamesIds(activity);\n\t\t\t\t\t\tfinal String[] txtValues = getMapNamesValues(activity, txtIds);\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfor (int i = 0; i < txtIds.length; i++) {\n\t\t\t\t\t\t\tif (view.getSettings().MAP_PREFERRED_LOCALE.get().equals(txtIds[i])) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtValues, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().MAP_PREFERRED_LOCALE.set(txtIds[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(txtIds[which]);\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.setDescription(activity.getMyApplication().getSettings().MAP_PREFERRED_LOCALE.get())\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow).createItem());\n\n\t\tRenderingRulesStorage renderer = activity.getMyApplication().getRendererRegistry().getCurrentSelectedRenderer();\n\t\tif (renderer != null) {\n\t\t\tList<RenderingRuleProperty> customRules = new ArrayList<>();\n\t\t\tfor (RenderingRuleProperty p : renderer.PROPS.getCustomRules()) {\n\t\t\t\tif (!RenderingRuleStorageProperties.UI_CATEGORY_HIDDEN.equals(p.getCategory())) {\n\t\t\t\t\tcustomRules.add(p);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcreateProperties(customRules, R.string.rendering_category_transport, \"transport\",\n\t\t\t\t\tadapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_details, \"details\",\n\t\t\t\t\tadapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_hide, \"hide\",\n\t\t\t\t\tadapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_routes, \"routes\",\n\t\t\t\t\tadapter, activity);\n\n\t\t\tif (customRules.size() > 0) {\n\t\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t\t.setTitleId(R.string.rendering_category_others, activity)\n\t\t\t\t\t\t.setCategory(true)\n\t\t\t\t\t\t.setLayout(R.layout.list_group_title_with_switch)\n\t\t\t\t\t\t.createItem());\n\t\t\t\tcreateCustomRenderingProperties(adapter, activity, customRules);\n\t\t\t}\n\t\t}\n\t}","id":20845,"modified_method":"private void createRenderingAttributeItems(final ContextMenuAdapter adapter, final MapActivity activity) {\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_map_rendering, activity)\n\t\t\t\t.setCategory(true)\n\t\t\t\t.setLayout(R.layout.list_group_title_with_switch).createItem());\n\t\tString descr = getRenderDescr(activity);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_renderer, activity)\n\t\t\t\t.setDescription(descr)\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_map)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(activity);\n\t\t\t\t\t\tbld.setTitle(R.string.renderers);\n\t\t\t\t\t\tfinal OsmandApplication app = activity.getMyApplication();\n\t\t\t\t\t\tCollection<String> rendererNames = app.getRendererRegistry().getRendererNames();\n\t\t\t\t\t\tfinal String[] items = rendererNames.toArray(new String[rendererNames.size()]);\n\t\t\t\t\t\tfinal String[] visibleNames = new String[items.length];\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String selectedName = app.getRendererRegistry().getCurrentSelectedRenderer().getName();\n\t\t\t\t\t\tfor (int j = 0; j < items.length; j++) {\n\t\t\t\t\t\t\tif (items[j].equals(selectedName)) {\n\t\t\t\t\t\t\t\tselected = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvisibleNames[j] = items[j].replace('_', ' ').replace('-', ' ');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbld.setSingleChoiceItems(visibleNames, selected, new DialogInterface.OnClickListener() {\n\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tString renderer = items[which];\n\t\t\t\t\t\t\t\tRenderingRulesStorage loaded = app.getRendererRegistry().getRenderer(renderer);\n\t\t\t\t\t\t\t\tif (loaded != null) {\n\t\t\t\t\t\t\t\t\tOsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\t\t\t\tview.getSettings().RENDERER.set(renderer);\n\t\t\t\t\t\t\t\t\tapp.getRendererRegistry().setCurrentSelectedRender(loaded);\n\t\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tAccessibleToast.makeText(app, R.string.renderer_load_exception, Toast.LENGTH_SHORT).show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getRenderDescr(activity));\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_widget_day_night, activity)\n\t\t\t\t.setDescription(getDayNightDescr(activity))\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_night)\n\t\t\t\t.setListener(new ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tbld.setTitle(R.string.daynight);\n\t\t\t\t\t\tfinal String[] items = new String[OsmandSettings.DayNightMode.values().length];\n\t\t\t\t\t\tfor (int i = 0; i < items.length; i++) {\n\t\t\t\t\t\t\titems[i] = OsmandSettings.DayNightMode.values()[i].toHumanString(activity.getMyApplication());\n\t\t\t\t\t\t}\n\t\t\t\t\t\tint i = view.getSettings().DAYNIGHT_MODE.get().ordinal();\n\t\t\t\t\t\tbld.setSingleChoiceItems(items, i, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().DAYNIGHT_MODE.set(OsmandSettings.DayNightMode.values()[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\tactivity.getDashboard().refreshContent(true);\n\t\t\t\t\t\t\t\t//adapter.getItem(pos).setDescription(s, getDayNightDescr(activity));\n\t\t\t\t\t\t\t\t//ad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_magnifier, activity)\n\t\t\t\t.setDescription(String.format(\"%.0f\", 100f * activity.getMyApplication().getSettings().MAP_DENSITY.get()) + \" %\")\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_magnifier)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tfinal OsmandSettings.OsmandPreference<Float> mapDensity = view.getSettings().MAP_DENSITY;\n\t\t\t\t\t\tfinal AlertDialog.Builder bld = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\tint p = (int) (mapDensity.get() * 100);\n\t\t\t\t\t\tfinal TIntArrayList tlist = new TIntArrayList(new int[]{33, 50, 75, 100, 150, 200, 300, 400});\n\t\t\t\t\t\tfinal List<String> values = new ArrayList<>();\n\t\t\t\t\t\tint i = -1;\n\t\t\t\t\t\tfor (int k = 0; k <= tlist.size(); k++) {\n\t\t\t\t\t\t\tfinal boolean end = k == tlist.size();\n\t\t\t\t\t\t\tif (i == -1) {\n\t\t\t\t\t\t\t\tif ((end || p < tlist.get(k))) {\n\t\t\t\t\t\t\t\t\tvalues.add(p + \" %\");\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t} else if (p == tlist.get(k)) {\n\t\t\t\t\t\t\t\t\ti = k;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (k < tlist.size()) {\n\t\t\t\t\t\t\t\tvalues.add(tlist.get(k) + \" %\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (values.size() != tlist.size()) {\n\t\t\t\t\t\t\ttlist.insert(i, p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbld.setTitle(R.string.map_magnifier);\n\t\t\t\t\t\tbld.setSingleChoiceItems(values.toArray(new String[values.size()]), i,\n\t\t\t\t\t\t\t\tnew DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\t\t\tint p = tlist.get(which);\n\t\t\t\t\t\t\t\t\t\tmapDensity.set(p / 100.0f);\n\t\t\t\t\t\t\t\t\t\tview.setComplexZoom(view.getZoom(), view.getSettingsMapDensity());\n\t\t\t\t\t\t\t\t\t\tMapRendererContext mapContext = NativeCoreContext.getMapRendererContext();\n\t\t\t\t\t\t\t\t\t\tif (mapContext != null) {\n\t\t\t\t\t\t\t\t\t\t\tmapContext.updateMapSettings();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(String.format(\"%.0f\", 100f * activity.getMyApplication().getSettings().MAP_DENSITY.get()) + \" %\");\n\t\t\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\tbld.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.text_size, activity)\n\t\t\t\t.setDescription(getScale(activity))\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_text_size)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.text_size);\n\t\t\t\t\t\tfinal Float[] txtValues = new Float[]{0.75f, 1f, 1.25f, 1.5f, 2f, 3f};\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfinal String[] txtNames = new String[txtValues.length];\n\t\t\t\t\t\tfor (int i = 0; i < txtNames.length; i++) {\n\t\t\t\t\t\t\ttxtNames[i] = (int) (txtValues[i] * 100) + \" %\";\n\t\t\t\t\t\t\tif (Math.abs(view.getSettings().TEXT_SCALE.get() - txtValues[i]) < 0.1f) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtNames, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().TEXT_SCALE.set(txtValues[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(getScale(activity));\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t.setTitleId(R.string.map_locale, activity)\n\t\t\t\t.setDescription(activity.getMyApplication().getSettings().MAP_PREFERRED_LOCALE.get())\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_narrow)\n\t\t\t\t.setIcon(R.drawable.ic_action_map_language)\n\t\t\t\t.setListener(new ContextMenuAdapter.ItemClickListener() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic boolean onContextMenuClick(final ArrayAdapter<ContextMenuItem> ad,\n\t\t\t\t\t\t\t\t\t\t\t\t\t  int itemId, final int pos, boolean isChecked) {\n\t\t\t\t\t\tfinal OsmandMapTileView view = activity.getMapView();\n\t\t\t\t\t\tAlertDialog.Builder b = new AlertDialog.Builder(view.getContext());\n\t\t\t\t\t\t// test old descr as title\n\t\t\t\t\t\tb.setTitle(R.string.map_preferred_locale);\n\t\t\t\t\t\tfinal String[] txtIds = getSortedMapNamesIds(activity);\n\t\t\t\t\t\tfinal String[] txtValues = getMapNamesValues(activity, txtIds);\n\t\t\t\t\t\tint selected = -1;\n\t\t\t\t\t\tfor (int i = 0; i < txtIds.length; i++) {\n\t\t\t\t\t\t\tif (view.getSettings().MAP_PREFERRED_LOCALE.get().equals(txtIds[i])) {\n\t\t\t\t\t\t\t\tselected = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tb.setSingleChoiceItems(txtValues, selected, new DialogInterface.OnClickListener() {\n\t\t\t\t\t\t\t@Override\n\t\t\t\t\t\t\tpublic void onClick(DialogInterface dialog, int which) {\n\t\t\t\t\t\t\t\tview.getSettings().MAP_PREFERRED_LOCALE.set(txtIds[which]);\n\t\t\t\t\t\t\t\trefreshMapComplete(activity);\n\t\t\t\t\t\t\t\tadapter.getItem(pos).setDescription(txtIds[which]);\n\t\t\t\t\t\t\t\tad.notifyDataSetInvalidated();\n\t\t\t\t\t\t\t\tdialog.dismiss();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tb.show();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}).createItem());\n\n\t\tRenderingRulesStorage renderer = activity.getMyApplication().getRendererRegistry().getCurrentSelectedRenderer();\n\t\tif (renderer != null) {\n\t\t\tList<RenderingRuleProperty> customRules = new ArrayList<>();\n\t\t\tfor (RenderingRuleProperty p : renderer.PROPS.getCustomRules()) {\n\t\t\t\tif (!RenderingRuleStorageProperties.UI_CATEGORY_HIDDEN.equals(p.getCategory())) {\n\t\t\t\t\tcustomRules.add(p);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcreateProperties(customRules, R.string.rendering_category_transport,\n\t\t\t\t\tR.drawable.ic_action_bus_dark, \"transport\", adapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_details,\n\t\t\t\t\tR.drawable.widget_no_icon, \"details\", adapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_hide,\n\t\t\t\t\tR.drawable.ic_action_hide,\"hide\", adapter, activity);\n\t\t\tcreateProperties(customRules, R.string.rendering_category_routes,\n\t\t\t\t\tR.drawable.ic_action_map_routes, \"routes\", adapter, activity);\n\n\t\t\tif (customRules.size() > 0) {\n\t\t\t\tadapter.addItem(new ContextMenuItem.ItemBuilder()\n\t\t\t\t\t\t.setTitleId(R.string.rendering_category_others, activity)\n\t\t\t\t\t\t.setCategory(true)\n\t\t\t\t\t\t.setLayout(R.layout.list_group_title_with_switch)\n\t\t\t\t\t\t.createItem());\n\t\t\t\tcreateCustomRenderingProperties(adapter, activity, customRules);\n\t\t\t}\n\t\t}\n\t}","commit_id":"95d6ccd9fac80506531ce2cb0f684bd644303178","url":"https://github.com/osmandapp/Osmand"},{"original_method":"@Override\n\tpublic void registerLayerContextMenuActions(final OsmandMapTileView mapView,\n\t\t\t\t\t\t\t\t\t\t\t\tContextMenuAdapter adapter,\n\t\t\t\t\t\t\t\t\t\t\t\tfinal MapActivity mapActivity) {\n\t\tfinal MapActivityLayers layers = mapActivity.getMapLayers();\n\t\tContextMenuAdapter.ItemClickListener listener = new ItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<ContextMenuItem> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\tOsmandSettings settings = mapActivity.getMyApplication().getSettings();\n\t\t\t\tif (itemId == R.string.layer_map) {\n\t\t\t\t\tlayers.selectMapLayer(mapView);\n\t\t\t\t} else if (itemId == R.string.layer_overlay) {\n\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.OVERLAY_MAP);\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (itemId == R.string.layer_underlay) {\n\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.UNDERLAY_MAP);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tString overlayMapDescr = settings.MAP_OVERLAY.get();\n\t\toverlayMapDescr = overlayMapDescr != null ? overlayMapDescr : mapActivity.getString(R.string.shared_string_none);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.layer_overlay, mapActivity)\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_wide)\n\t\t\t\t.setDescription(overlayMapDescr)\n\t\t\t\t.setIcon(R.drawable.ic_layer_top_dark)\n\t\t\t\t.setListener(listener)\n\t\t\t\t.setPosition(14)\n\t\t\t\t.createItem());\n\t\tString underlayMapDescr = settings.MAP_UNDERLAY.get();\n\t\tunderlayMapDescr = underlayMapDescr != null ? underlayMapDescr : mapActivity.getString(R.string.shared_string_none);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.layer_underlay, mapActivity)\n\t\t\t\t.setLayout(R.layout.list_item_single_line_descrition_wide)\n\t\t\t\t.setDescription(underlayMapDescr)\n\t\t\t\t.setIcon(R.drawable.ic_layer_bottom_dark)\n\t\t\t\t.setListener(listener)\n\t\t\t\t.setPosition(15)\n\t\t\t\t.createItem());\n\t}","id":20846,"modified_method":"@Override\n\tpublic void registerLayerContextMenuActions(final OsmandMapTileView mapView,\n\t\t\t\t\t\t\t\t\t\t\t\tContextMenuAdapter adapter,\n\t\t\t\t\t\t\t\t\t\t\t\tfinal MapActivity mapActivity) {\n\t\tfinal MapActivityLayers layers = mapActivity.getMapLayers();\n\t\tContextMenuAdapter.ItemClickListener listener = new ItemClickListener() {\n\t\t\t@Override\n\t\t\tpublic boolean onContextMenuClick(ArrayAdapter<ContextMenuItem> adapter, int itemId, int pos, boolean isChecked) {\n\t\t\t\tOsmandSettings settings = mapActivity.getMyApplication().getSettings();\n\t\t\t\tif (itemId == R.string.layer_map) {\n\t\t\t\t\tlayers.selectMapLayer(mapView);\n\t\t\t\t} else if (itemId == R.string.layer_overlay) {\n\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.OVERLAY_MAP);\n\t\t\t\t\treturn false;\n\t\t\t\t} else if (itemId == R.string.layer_underlay) {\n\t\t\t\t\tmapActivity.getDashboard().setDashboardVisibility(true, DashboardType.UNDERLAY_MAP);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\n\t\tString overlayMapDescr = settings.MAP_OVERLAY.get();\n\t\tboolean hasOverlayDescription = overlayMapDescr != null;\n\t\toverlayMapDescr = hasOverlayDescription ? overlayMapDescr : mapActivity.getString(R.string.shared_string_none);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.layer_overlay, mapActivity)\n\t\t\t\t.setDescription(overlayMapDescr)\n\t\t\t\t.setSelected(hasOverlayDescription)\n\t\t\t\t.setIcon(R.drawable.ic_layer_top_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(listener)\n\t\t\t\t.setPosition(14)\n\t\t\t\t.createItem());\n\t\tString underlayMapDescr = settings.MAP_UNDERLAY.get();\n\t\tboolean hasUnderlayDescription = underlayMapDescr != null;\n\t\tunderlayMapDescr = hasUnderlayDescription ? underlayMapDescr : mapActivity.getString(R.string.shared_string_none);\n\t\tadapter.addItem(new ContextMenuItem.ItemBuilder().setTitleId(R.string.layer_underlay, mapActivity)\n\t\t\t\t.setDescription(underlayMapDescr)\n\t\t\t\t.setSelected(hasUnderlayDescription)\n\t\t\t\t.setIcon(R.drawable.ic_layer_bottom_dark)\n\t\t\t\t.setSecondaryIcon(R.drawable.ic_action_additional_option)\n\t\t\t\t.setListener(listener)\n\t\t\t\t.setPosition(15)\n\t\t\t\t.createItem());\n\t}","commit_id":"95d6ccd9fac80506531ce2cb0f684bd644303178","url":"https://github.com/osmandapp/Osmand"},{"original_method":"/**\n   * Tests generation of Chinese grammatical relations from a file.\n   * Default encoding is utf-8.\n   *\n   * TODO: remove this main method and use the one in the abstract class GrammaticalStructure. Making this\n   * change is non-trivial due to some of the English specific assumptions in the code currently invoked by\n   * GrammaticalStructure#main.\n   *\n   * Usage: <br> <code>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -treeFile [treeFile] <br>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -sentFile [sentenceFile] <\/code>\n   *\n   * @param args Command line args as above\n   */\n  public static void main(String[] args) {\n\n    // System.out.print(\"GrammaticalRelations under DEPENDENT:\");\n    // System.out.println(DEPENDENT.toPrettyString());\n\n    Treebank tb = new MemoryTreebank();\n    Properties props = StringUtils.argsToProperties(args);\n\n    String encoding = props.getProperty(\"encoding\", \"utf-8\");\n    try {\n      System.setOut(new PrintStream(System.out, true, encoding));\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    String treeFileName = props.getProperty(\"treeFile\");\n    String treeDirname = props.getProperty(\"treeDir\");\n    String sentFileName = props.getProperty(\"sentFile\");\n    boolean conllx = props.getProperty(\"conllx\") != null;\n    boolean basic = props.getProperty(\"basic\") != null;\n    boolean collapsed = props.getProperty(\"collapsed\") != null;\n    boolean parseTree = props.getProperty(\"parseTree\") != null;\n    boolean keepPunct = props.getProperty(\"keepPunct\") != null;\n\n    // force keepPunct, if conllx is turned on\n    if (conllx) {\n      keepPunct = true;\n    }\n\n    String hf = props.getProperty(\"hf\");\n    String parserModel = props.getProperty(\"parserModel\", \"/u/nlp/data/lexparser/chineseFactored.ser.gz\");\n\n    if (!basic && !collapsed) {\n      if (conllx) {\n        basic = true;     // default to basic dependencies for conllx\n      } else {\n        collapsed = true; // otherwise, default to collapsed dependencies\n      }\n    }\n\n    try {\n      if (hf != null) {\n        shf = (HeadFinder)Class.forName(hf).newInstance();\n        System.err.println(\"Using \"+hf);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Fail to use HeadFinder: \"+hf);\n    }\n\n\n    if (args.length == 0) {\n      System.err.printf(\"Usage:\\n\\t%s [optional flags] -treeFile treeFile\\n\\nOr:\\n\\t%s [optional flags] -sentFile sentFile\\n\", ChineseGrammaticalStructure.class.getName(), ChineseGrammaticalStructure.class.getName());\n      System.err.println(\"\\nOptional flags:\");\n      System.err.println(\"\\t-parseTree  : print phrase-structure parse tree\");\n      System.err.println(\"\\t-basic : basic non-collapsed dependencies preserving a tree structure\");\n      System.err.println(\"\\t-collapsed : collapsed dependencies\");\n      System.err.println(\"\\t-conllx : conllx formatted dependencies, can be used with either basic\\n\\t or collaped dependencies, but basic is recommended\");\n\n    } else {\n      if (treeDirname != null && treeFileName != null) {\n        throw new RuntimeException(\"Only one of treeDirname or treeFileName should be set\");\n      }\n      if (treeDirname != null) {\n        File dir = new File(treeDirname);\n        String[] files = dir.list();\n        for (String file : files) {\n          AddTreesFromFile(treeDirname+\"/\"+file, encoding, tb);\n        }\n      } else if (treeFileName != null) {\n        AddTreesFromFile(treeFileName, encoding, tb);\n      } else if (sentFileName != null) {\n        // Load parser by reflection, so that this class doesn't require parser for runtime use\n        // LexicalizedParser lp = new LexicalizedParser(parserModel);\n        ViterbiParserWithOptions lp;\n        try {\n          Class<?>[] classes = new Class<?>[]{String.class};\n          Constructor<?> constr = Class.forName(\"edu.stanford.nlp.parser.lexparser.LexicalizedParser\").getConstructor(classes);\n          String[] opts = {\"-retainTmpSubcategories\"};\n          lp = (ViterbiParserWithOptions) constr.newInstance(parserModel);\n          lp.setOptionFlags(opts);\n        } catch (Exception cnfe) {\n          cnfe.printStackTrace();\n          return;\n        }\n        BufferedReader reader = null;\n        try {\n          reader = new BufferedReader(new FileReader(sentFileName));\n        } catch (FileNotFoundException e) {\n          System.err.println(\"Cannot find \" + sentFileName);\n          System.exit(1);\n        }\n        try {\n          System.out.println(\"Processing sentence file \" + sentFileName);\n          String line;\n          while ((line = reader.readLine()) != null) {\n            CHTBTokenizer chtb = new CHTBTokenizer(new StringReader(line));\n            List words = chtb.tokenize();\n            lp.parse(words);\n            Tree tree = lp.getBestParse();\n            tb.add(tree);\n          }\n          reader.close();\n        } catch (Exception e) {\n          throw new RuntimeException(\"Exception reading key file \" + sentFileName, e);\n        }\n      }\n    }\n\n\n    for (Tree t : tb) {\n      Filter<String> puncFilter;\n\n      if (keepPunct) {\n        puncFilter = Filters.acceptFilter();\n      } else {\n        puncFilter = new ChineseTreebankLanguagePack().punctuationWordRejectFilter();\n      }\n\n      GrammaticalStructure gs = new ChineseGrammaticalStructure(t, puncFilter);\n\n      if (parseTree) {\n        System.out.println(\"============= parse tree =======================\");\n        t.pennPrint();\n      }\n      //System.out.println(\"----------------------------\");\n      //TreeGraph tg = new TreeGraph(t);\n      //System.out.println(tg);\n\n      //System.out.println(\"----------------------------\");\n      //System.out.println(gs);\n\n      if (basic) {\n        if (collapsed) {\n          System.out.println(\"------------- basic dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(true), t, conllx, false);\n      }\n\n      // TODO: add a non-collapsed which uses the extra dependencies\n      // basic dependencies should be without extras\n\n      if (collapsed) {\n        if (basic) {\n          System.out.println(\"----------- collapsed dependencies -----------\");\n        }\n        printDependencies(gs, gs.typedDependenciesCollapsed(true), t, conllx, false);\n      }\n\n      //gs.printTypedDependencies(\"xml\");\n    }\n  }","id":20847,"modified_method":"/**\n   * Tests generation of Chinese grammatical relations from a file.\n   * Default encoding is utf-8.\n   *\n   * TODO: remove this main method and use the one in the abstract class GrammaticalStructure. Making this\n   * change is non-trivial due to some of the English specific assumptions in the code currently invoked by\n   * GrammaticalStructure#main.\n   *\n   * Usage: <br> <code>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -treeFile [treeFile] <br>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -sentFile [sentenceFile] <\/code>\n   *\n   * @param args Command line args as above\n   */\n  public static void main(String[] args) {\n\n    // System.out.print(\"GrammaticalRelations under DEPENDENT:\");\n    // System.out.println(DEPENDENT.toPrettyString());\n\n    Treebank tb = new MemoryTreebank();\n    Properties props = StringUtils.argsToProperties(args);\n\n    String encoding = props.getProperty(\"encoding\", \"utf-8\");\n    try {\n      System.setOut(new PrintStream(System.out, true, encoding));\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    String treeFileName = props.getProperty(\"treeFile\");\n    String treeDirname = props.getProperty(\"treeDir\");\n    String sentFileName = props.getProperty(\"sentFile\");\n    boolean conllx = props.getProperty(\"conllx\") != null;\n    boolean basic = props.getProperty(\"basic\") != null;\n    boolean nonCollapsed = props.getProperty(\"nonCollapsed\") != null;\n    boolean collapsed = props.getProperty(\"collapsed\") != null;\n    boolean parseTree = props.getProperty(\"parseTree\") != null;\n    boolean keepPunct = props.getProperty(\"keepPunct\") != null;\n\n    // force keepPunct, if conllx is turned on\n    if (conllx) {\n      keepPunct = true;\n    }\n\n    String hf = props.getProperty(\"hf\");\n    String parserModel = props.getProperty(\"parserModel\", \"/u/nlp/data/lexparser/chineseFactored.ser.gz\");\n\n    if (!basic && !collapsed) {\n      if (conllx) {\n        basic = true;     // default to basic dependencies for conllx\n      } else {\n        collapsed = true; // otherwise, default to collapsed dependencies\n      }\n    }\n\n    try {\n      if (hf != null) {\n        shf = (HeadFinder)Class.forName(hf).newInstance();\n        System.err.println(\"Using \"+hf);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Fail to use HeadFinder: \"+hf);\n    }\n\n\n    if (args.length == 0) {\n      System.err.printf(\"Usage:\\n\\t%s [optional flags] -treeFile treeFile\\n\\nOr:\\n\\t%s [optional flags] -sentFile sentFile\\n\", ChineseGrammaticalStructure.class.getName(), ChineseGrammaticalStructure.class.getName());\n      System.err.println(\"\\nOptional flags:\");\n      System.err.println(\"\\t-parseTree  : print phrase-structure parse tree\");\n      System.err.println(\"\\t-basic : basic non-collapsed dependencies preserving a tree structure\");\n      System.err.println(\"\\t-collapsed : collapsed dependencies\");\n      System.err.println(\"\\t-conllx : conllx formatted dependencies, can be used with either basic\\n\\t or collaped dependencies, but basic is recommended\");\n\n    } else {\n      if (treeDirname != null && treeFileName != null) {\n        throw new RuntimeException(\"Only one of treeDirname or treeFileName should be set\");\n      }\n      if (treeDirname != null) {\n        File dir = new File(treeDirname);\n        String[] files = dir.list();\n        for (String file : files) {\n          AddTreesFromFile(treeDirname+\"/\"+file, encoding, tb);\n        }\n      } else if (treeFileName != null) {\n        AddTreesFromFile(treeFileName, encoding, tb);\n      } else if (sentFileName != null) {\n        // Load parser by reflection, so that this class doesn't require parser for runtime use\n        // LexicalizedParser lp = new LexicalizedParser(parserModel);\n        ViterbiParserWithOptions lp;\n        try {\n          Class<?>[] classes = new Class<?>[]{String.class};\n          Constructor<?> constr = Class.forName(\"edu.stanford.nlp.parser.lexparser.LexicalizedParser\").getConstructor(classes);\n          String[] opts = {\"-retainTmpSubcategories\"};\n          lp = (ViterbiParserWithOptions) constr.newInstance(parserModel);\n          lp.setOptionFlags(opts);\n        } catch (Exception cnfe) {\n          cnfe.printStackTrace();\n          return;\n        }\n        BufferedReader reader = null;\n        try {\n          reader = new BufferedReader(new FileReader(sentFileName));\n        } catch (FileNotFoundException e) {\n          System.err.println(\"Cannot find \" + sentFileName);\n          System.exit(1);\n        }\n        try {\n          System.out.println(\"Processing sentence file \" + sentFileName);\n          String line;\n          while ((line = reader.readLine()) != null) {\n            CHTBTokenizer chtb = new CHTBTokenizer(new StringReader(line));\n            List words = chtb.tokenize();\n            lp.parse(words);\n            Tree tree = lp.getBestParse();\n            tb.add(tree);\n          }\n          reader.close();\n        } catch (Exception e) {\n          throw new RuntimeException(\"Exception reading key file \" + sentFileName, e);\n        }\n      }\n    }\n\n\n    for (Tree t : tb) {\n      Filter<String> puncFilter;\n\n      if (keepPunct) {\n        puncFilter = Filters.acceptFilter();\n      } else {\n        puncFilter = new ChineseTreebankLanguagePack().punctuationWordRejectFilter();\n      }\n\n      GrammaticalStructure gs = new ChineseGrammaticalStructure(t, puncFilter);\n\n      if (parseTree) {\n        System.out.println(\"============= parse tree =======================\");\n        t.pennPrint();\n      }\n      //System.out.println(\"----------------------------\");\n      //TreeGraph tg = new TreeGraph(t);\n      //System.out.println(tg);\n\n      //System.out.println(\"----------------------------\");\n      //System.out.println(gs);\n\n      if (basic) {\n        if (collapsed || nonCollapsed) {\n          System.out.println(\"------------- basic dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(false), t, conllx, false);\n      }\n\n      if (nonCollapsed) {\n        if (basic || collapsed) {\n          System.out.println(\"------------- noncollapsed dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(true), t, conllx, false);\n      }\n\n      if (collapsed) {\n        if (basic || nonCollapsed) {\n          System.out.println(\"----------- collapsed dependencies -----------\");\n        }\n        printDependencies(gs, gs.typedDependenciesCollapsed(true), t, conllx, false);\n      }\n\n      //gs.printTypedDependencies(\"xml\");\n    }\n  }","commit_id":"0b5dd14de595824123206b47f41040e879e82830","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Tests generation of Chinese grammatical relations from a file.\n   * Default encoding is utf-8.\n   *\n   * TODO: remove this main method and use the one in the abstract class GrammaticalStructure. Making this\n   * change is non-trivial due to some of the English specific assumptions in the code currently invoked by\n   * GrammaticalStructure#main.\n   *\n   * Usage: <br> <code>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -treeFile [treeFile] <br>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -sentFile [sentenceFile] <\/code>\n   *\n   * @param args Command line args as above\n   */\n  public static void main(String[] args) {\n\n    // System.out.print(\"GrammaticalRelations under DEPENDENT:\");\n    // System.out.println(DEPENDENT.toPrettyString());\n\n    Treebank tb = new MemoryTreebank();\n    Properties props = StringUtils.argsToProperties(args);\n\n    String encoding = props.getProperty(\"encoding\", \"utf-8\");\n    try {\n      System.setOut(new PrintStream(System.out, true, encoding));\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    String treeFileName = props.getProperty(\"treeFile\");\n    String treeDirname = props.getProperty(\"treeDir\");\n    String sentFileName = props.getProperty(\"sentFile\");\n    boolean conllx = props.getProperty(\"conllx\") != null;\n    boolean basic = props.getProperty(\"basic\") != null;\n    boolean collapsed = props.getProperty(\"collapsed\") != null;\n    boolean parseTree = props.getProperty(\"parseTree\") != null;\n    boolean keepPunct = props.getProperty(\"keepPunct\") != null;\n\n    // force keepPunct, if conllx is turned on\n    if (conllx) {\n      keepPunct = true;\n    }\n\n    String hf = props.getProperty(\"hf\");\n    String parserModel = props.getProperty(\"parserModel\", \"/u/nlp/data/lexparser/chineseFactored.ser.gz\");\n\n    if (!basic && !collapsed) {\n      if (conllx) {\n        basic = true;     // default to basic dependencies for conllx\n      } else {\n        collapsed = true; // otherwise, default to collapsed dependencies\n      }\n    }\n\n    try {\n      if (hf != null) {\n        shf = (HeadFinder)Class.forName(hf).newInstance();\n        System.err.println(\"Using \"+hf);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Fail to use HeadFinder: \"+hf);\n    }\n\n\n    if (args.length == 0) {\n      System.err.printf(\"Usage:\\n\\t%s [optional flags] -treeFile treeFile\\n\\nOr:\\n\\t%s [optional flags] -sentFile sentFile\\n\", ChineseGrammaticalStructure.class.getName(), ChineseGrammaticalStructure.class.getName());\n      System.err.println(\"\\nOptional flags:\");\n      System.err.println(\"\\t-parseTree  : print phrase-structure parse tree\");\n      System.err.println(\"\\t-basic : basic non-collapsed dependencies preserving a tree structure\");\n      System.err.println(\"\\t-collapsed : collapsed dependencies\");\n      System.err.println(\"\\t-conllx : conllx formatted dependencies, can be used with either basic\\n\\t or collaped dependencies, but basic is recommended\");\n\n    } else {\n      if (treeDirname != null && treeFileName != null) {\n        throw new RuntimeException(\"Only one of treeDirname or treeFileName should be set\");\n      }\n      if (treeDirname != null) {\n        File dir = new File(treeDirname);\n        String[] files = dir.list();\n        for (String file : files) {\n          AddTreesFromFile(treeDirname+\"/\"+file, encoding, tb);\n        }\n      } else if (treeFileName != null) {\n        AddTreesFromFile(treeFileName, encoding, tb);\n      } else if (sentFileName != null) {\n        // Load parser by reflection, so that this class doesn't require parser for runtime use\n        // LexicalizedParser lp = new LexicalizedParser(parserModel);\n        ViterbiParserWithOptions lp;\n        try {\n          Class<?>[] classes = new Class<?>[]{String.class};\n          Constructor<?> constr = Class.forName(\"edu.stanford.nlp.parser.lexparser.LexicalizedParser\").getConstructor(classes);\n          String[] opts = {\"-retainTmpSubcategories\"};\n          lp = (ViterbiParserWithOptions) constr.newInstance(parserModel);\n          lp.setOptionFlags(opts);\n        } catch (Exception cnfe) {\n          cnfe.printStackTrace();\n          return;\n        }\n        BufferedReader reader = null;\n        try {\n          reader = new BufferedReader(new FileReader(sentFileName));\n        } catch (FileNotFoundException e) {\n          System.err.println(\"Cannot find \" + sentFileName);\n          System.exit(1);\n        }\n        try {\n          System.out.println(\"Processing sentence file \" + sentFileName);\n          String line;\n          while ((line = reader.readLine()) != null) {\n            CHTBTokenizer chtb = new CHTBTokenizer(new StringReader(line));\n            List words = chtb.tokenize();\n            lp.parse(words);\n            Tree tree = lp.getBestParse();\n            tb.add(tree);\n          }\n          reader.close();\n        } catch (Exception e) {\n          throw new RuntimeException(\"Exception reading key file \" + sentFileName, e);\n        }\n      }\n    }\n\n\n    for (Tree t : tb) {\n      Filter<String> puncFilter;\n\n      if (keepPunct) {\n        puncFilter = Filters.acceptFilter();\n      } else {\n        puncFilter = new ChineseTreebankLanguagePack().punctuationWordRejectFilter();\n      }\n\n      GrammaticalStructure gs = new ChineseGrammaticalStructure(t, puncFilter);\n\n      if (parseTree) {\n        System.out.println(\"============= parse tree =======================\");\n        t.pennPrint();\n      }\n      //System.out.println(\"----------------------------\");\n      //TreeGraph tg = new TreeGraph(t);\n      //System.out.println(tg);\n\n      //System.out.println(\"----------------------------\");\n      //System.out.println(gs);\n\n      if (basic) {\n        if (collapsed) {\n          System.out.println(\"------------- basic dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(true), t, conllx, false);\n      }\n\n      // TODO: add a non-collapsed which uses the extra dependencies\n      // basic dependencies should be without extras\n\n      if (collapsed) {\n        if (basic) {\n          System.out.println(\"----------- collapsed dependencies -----------\");\n        }\n        printDependencies(gs, gs.typedDependenciesCollapsed(true), t, conllx, false);\n      }\n\n      //gs.printTypedDependencies(\"xml\");\n    }\n  }","id":20848,"modified_method":"/**\n   * Tests generation of Chinese grammatical relations from a file.\n   * Default encoding is utf-8.\n   *\n   * TODO: remove this main method and use the one in the abstract class GrammaticalStructure. Making this\n   * change is non-trivial due to some of the English specific assumptions in the code currently invoked by\n   * GrammaticalStructure#main.\n   *\n   * Usage: <br> <code>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -treeFile [treeFile] <br>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -sentFile [sentenceFile] <\/code>\n   *\n   * @param args Command line args as above\n   */\n  public static void main(String[] args) {\n\n    // System.out.print(\"GrammaticalRelations under DEPENDENT:\");\n    // System.out.println(DEPENDENT.toPrettyString());\n\n    Treebank tb = new MemoryTreebank();\n    Properties props = StringUtils.argsToProperties(args);\n\n    String encoding = props.getProperty(\"encoding\", \"utf-8\");\n    try {\n      System.setOut(new PrintStream(System.out, true, encoding));\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    String treeFileName = props.getProperty(\"treeFile\");\n    String treeDirname = props.getProperty(\"treeDir\");\n    String sentFileName = props.getProperty(\"sentFile\");\n    boolean conllx = props.getProperty(\"conllx\") != null;\n    boolean basic = props.getProperty(\"basic\") != null;\n    boolean nonCollapsed = props.getProperty(\"nonCollapsed\") != null;\n    boolean collapsed = props.getProperty(\"collapsed\") != null;\n    boolean parseTree = props.getProperty(\"parseTree\") != null;\n    boolean keepPunct = props.getProperty(\"keepPunct\") != null;\n\n    // force keepPunct, if conllx is turned on\n    if (conllx) {\n      keepPunct = true;\n    }\n\n    String hf = props.getProperty(\"hf\");\n    String parserModel = props.getProperty(\"parserModel\", \"/u/nlp/data/lexparser/chineseFactored.ser.gz\");\n\n    if (!basic && !collapsed) {\n      if (conllx) {\n        basic = true;     // default to basic dependencies for conllx\n      } else {\n        collapsed = true; // otherwise, default to collapsed dependencies\n      }\n    }\n\n    try {\n      if (hf != null) {\n        shf = (HeadFinder)Class.forName(hf).newInstance();\n        System.err.println(\"Using \"+hf);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Fail to use HeadFinder: \"+hf);\n    }\n\n\n    if (args.length == 0) {\n      System.err.printf(\"Usage:\\n\\t%s [optional flags] -treeFile treeFile\\n\\nOr:\\n\\t%s [optional flags] -sentFile sentFile\\n\", ChineseGrammaticalStructure.class.getName(), ChineseGrammaticalStructure.class.getName());\n      System.err.println(\"\\nOptional flags:\");\n      System.err.println(\"\\t-parseTree  : print phrase-structure parse tree\");\n      System.err.println(\"\\t-basic : basic non-collapsed dependencies preserving a tree structure\");\n      System.err.println(\"\\t-collapsed : collapsed dependencies\");\n      System.err.println(\"\\t-conllx : conllx formatted dependencies, can be used with either basic\\n\\t or collaped dependencies, but basic is recommended\");\n\n    } else {\n      if (treeDirname != null && treeFileName != null) {\n        throw new RuntimeException(\"Only one of treeDirname or treeFileName should be set\");\n      }\n      if (treeDirname != null) {\n        File dir = new File(treeDirname);\n        String[] files = dir.list();\n        for (String file : files) {\n          AddTreesFromFile(treeDirname+\"/\"+file, encoding, tb);\n        }\n      } else if (treeFileName != null) {\n        AddTreesFromFile(treeFileName, encoding, tb);\n      } else if (sentFileName != null) {\n        // Load parser by reflection, so that this class doesn't require parser for runtime use\n        // LexicalizedParser lp = new LexicalizedParser(parserModel);\n        ViterbiParserWithOptions lp;\n        try {\n          Class<?>[] classes = new Class<?>[]{String.class};\n          Constructor<?> constr = Class.forName(\"edu.stanford.nlp.parser.lexparser.LexicalizedParser\").getConstructor(classes);\n          String[] opts = {\"-retainTmpSubcategories\"};\n          lp = (ViterbiParserWithOptions) constr.newInstance(parserModel);\n          lp.setOptionFlags(opts);\n        } catch (Exception cnfe) {\n          cnfe.printStackTrace();\n          return;\n        }\n        BufferedReader reader = null;\n        try {\n          reader = new BufferedReader(new FileReader(sentFileName));\n        } catch (FileNotFoundException e) {\n          System.err.println(\"Cannot find \" + sentFileName);\n          System.exit(1);\n        }\n        try {\n          System.out.println(\"Processing sentence file \" + sentFileName);\n          String line;\n          while ((line = reader.readLine()) != null) {\n            CHTBTokenizer chtb = new CHTBTokenizer(new StringReader(line));\n            List words = chtb.tokenize();\n            lp.parse(words);\n            Tree tree = lp.getBestParse();\n            tb.add(tree);\n          }\n          reader.close();\n        } catch (Exception e) {\n          throw new RuntimeException(\"Exception reading key file \" + sentFileName, e);\n        }\n      }\n    }\n\n\n    for (Tree t : tb) {\n      Filter<String> puncFilter;\n\n      if (keepPunct) {\n        puncFilter = Filters.acceptFilter();\n      } else {\n        puncFilter = new ChineseTreebankLanguagePack().punctuationWordRejectFilter();\n      }\n\n      GrammaticalStructure gs = new ChineseGrammaticalStructure(t, puncFilter);\n\n      if (parseTree) {\n        System.out.println(\"============= parse tree =======================\");\n        t.pennPrint();\n      }\n      //System.out.println(\"----------------------------\");\n      //TreeGraph tg = new TreeGraph(t);\n      //System.out.println(tg);\n\n      //System.out.println(\"----------------------------\");\n      //System.out.println(gs);\n\n      if (basic) {\n        if (collapsed || nonCollapsed) {\n          System.out.println(\"------------- basic dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(false), t, conllx, false);\n      }\n\n      if (nonCollapsed) {\n        if (basic || collapsed) {\n          System.out.println(\"------------- noncollapsed dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(true), t, conllx, false);\n      }\n\n      if (collapsed) {\n        if (basic || nonCollapsed) {\n          System.out.println(\"----------- collapsed dependencies -----------\");\n        }\n        printDependencies(gs, gs.typedDependenciesCollapsed(true), t, conllx, false);\n      }\n\n      //gs.printTypedDependencies(\"xml\");\n    }\n  }","commit_id":"52eb29b8cd333f15caa5406fa6d350c31b749955","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Tests generation of Chinese grammatical relations from a file.\n   * Default encoding is utf-8.\n   *\n   * TODO: remove this main method and use the one in the abstract class GrammaticalStructure. Making this\n   * change is non-trivial due to some of the English specific assumptions in the code currently invoked by\n   * GrammaticalStructure#main.\n   *\n   * Usage: <br> <code>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -treeFile [treeFile] <br>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -sentFile [sentenceFile] <\/code>\n   *\n   * @param args Command line args as above\n   */\n  public static void main(String[] args) {\n\n    // System.out.print(\"GrammaticalRelations under DEPENDENT:\");\n    // System.out.println(DEPENDENT.toPrettyString());\n\n    Treebank tb = new MemoryTreebank();\n    Properties props = StringUtils.argsToProperties(args);\n\n    String encoding = props.getProperty(\"encoding\", \"utf-8\");\n    try {\n      System.setOut(new PrintStream(System.out, true, encoding));\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    String treeFileName = props.getProperty(\"treeFile\");\n    String treeDirname = props.getProperty(\"treeDir\");\n    String sentFileName = props.getProperty(\"sentFile\");\n    boolean conllx = props.getProperty(\"conllx\") != null;\n    boolean basic = props.getProperty(\"basic\") != null;\n    boolean collapsed = props.getProperty(\"collapsed\") != null;\n    boolean parseTree = props.getProperty(\"parseTree\") != null;\n    boolean keepPunct = props.getProperty(\"keepPunct\") != null;\n\n    // force keepPunct, if conllx is turned on\n    if (conllx) {\n      keepPunct = true;\n    }\n\n    String hf = props.getProperty(\"hf\");\n    String parserModel = props.getProperty(\"parserModel\", \"/u/nlp/data/lexparser/chineseFactored.ser.gz\");\n\n    if (!basic && !collapsed) {\n      if (conllx) {\n        basic = true;     // default to basic dependencies for conllx\n      } else {\n        collapsed = true; // otherwise, default to collapsed dependencies\n      }\n    }\n\n    try {\n      if (hf != null) {\n        shf = (HeadFinder)Class.forName(hf).newInstance();\n        System.err.println(\"Using \"+hf);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Fail to use HeadFinder: \"+hf);\n    }\n\n\n    if (args.length == 0) {\n      System.err.printf(\"Usage:\\n\\t%s [optional flags] -treeFile treeFile\\n\\nOr:\\n\\t%s [optional flags] -sentFile sentFile\\n\", ChineseGrammaticalStructure.class.getName(), ChineseGrammaticalStructure.class.getName());\n      System.err.println(\"\\nOptional flags:\");\n      System.err.println(\"\\t-parseTree  : print phrase-structure parse tree\");\n      System.err.println(\"\\t-basic : basic non-collapsed dependencies preserving a tree structure\");\n      System.err.println(\"\\t-collapsed : collapsed dependencies\");\n      System.err.println(\"\\t-conllx : conllx formatted dependencies, can be used with either basic\\n\\t or collaped dependencies, but basic is recommended\");\n\n    } else {\n      if (treeDirname != null && treeFileName != null) {\n        throw new RuntimeException(\"Only one of treeDirname or treeFileName should be set\");\n      }\n      if (treeDirname != null) {\n        File dir = new File(treeDirname);\n        String[] files = dir.list();\n        for (String file : files) {\n          AddTreesFromFile(treeDirname+\"/\"+file, encoding, tb);\n        }\n      } else if (treeFileName != null) {\n        AddTreesFromFile(treeFileName, encoding, tb);\n      } else if (sentFileName != null) {\n        // Load parser by reflection, so that this class doesn't require parser for runtime use\n        // LexicalizedParser lp = new LexicalizedParser(parserModel);\n        ViterbiParserWithOptions lp;\n        try {\n          Class<?>[] classes = new Class<?>[]{String.class};\n          Constructor<?> constr = Class.forName(\"edu.stanford.nlp.parser.lexparser.LexicalizedParser\").getConstructor(classes);\n          String[] opts = {\"-retainTmpSubcategories\"};\n          lp = (ViterbiParserWithOptions) constr.newInstance(parserModel);\n          lp.setOptionFlags(opts);\n        } catch (Exception cnfe) {\n          cnfe.printStackTrace();\n          return;\n        }\n        BufferedReader reader = null;\n        try {\n          reader = new BufferedReader(new FileReader(sentFileName));\n        } catch (FileNotFoundException e) {\n          System.err.println(\"Cannot find \" + sentFileName);\n          System.exit(1);\n        }\n        try {\n          System.out.println(\"Processing sentence file \" + sentFileName);\n          String line;\n          while ((line = reader.readLine()) != null) {\n            CHTBTokenizer chtb = new CHTBTokenizer(new StringReader(line));\n            List words = chtb.tokenize();\n            lp.parse(words);\n            Tree tree = lp.getBestParse();\n            tb.add(tree);\n          }\n          reader.close();\n        } catch (Exception e) {\n          throw new RuntimeException(\"Exception reading key file \" + sentFileName, e);\n        }\n      }\n    }\n\n\n    for (Tree t : tb) {\n      Filter<String> puncFilter;\n\n      if (keepPunct) {\n        puncFilter = Filters.acceptFilter();\n      } else {\n        puncFilter = new ChineseTreebankLanguagePack().punctuationWordRejectFilter();\n      }\n\n      GrammaticalStructure gs = new ChineseGrammaticalStructure(t, puncFilter);\n\n      if (parseTree) {\n        System.out.println(\"============= parse tree =======================\");\n        t.pennPrint();\n      }\n      //System.out.println(\"----------------------------\");\n      //TreeGraph tg = new TreeGraph(t);\n      //System.out.println(tg);\n\n      //System.out.println(\"----------------------------\");\n      //System.out.println(gs);\n\n      if (basic) {\n        if (collapsed) {\n          System.out.println(\"------------- basic dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(true), t, conllx, false);\n      }\n\n      // TODO: add a non-collapsed which uses the extra dependencies\n      // basic dependencies should be without extras\n\n      if (collapsed) {\n        if (basic) {\n          System.out.println(\"----------- collapsed dependencies -----------\");\n        }\n        printDependencies(gs, gs.typedDependenciesCollapsed(true), t, conllx, false);\n      }\n\n      //gs.printTypedDependencies(\"xml\");\n    }\n  }","id":20849,"modified_method":"/**\n   * Tests generation of Chinese grammatical relations from a file.\n   * Default encoding is utf-8.\n   *\n   * TODO: remove this main method and use the one in the abstract class GrammaticalStructure. Making this\n   * change is non-trivial due to some of the English specific assumptions in the code currently invoked by\n   * GrammaticalStructure#main.\n   *\n   * Usage: <br> <code>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -treeFile [treeFile] <br>\n   * java edu.stanford.nlp.trees.international.pennchinese.ChineseGrammaticalStructure -sentFile [sentenceFile] <\/code>\n   *\n   * @param args Command line args as above\n   */\n  public static void main(String[] args) {\n\n    // System.out.print(\"GrammaticalRelations under DEPENDENT:\");\n    // System.out.println(DEPENDENT.toPrettyString());\n\n    Treebank tb = new MemoryTreebank();\n    Properties props = StringUtils.argsToProperties(args);\n\n    String encoding = props.getProperty(\"encoding\", \"utf-8\");\n    try {\n      System.setOut(new PrintStream(System.out, true, encoding));\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n\n    String treeFileName = props.getProperty(\"treeFile\");\n    String treeDirname = props.getProperty(\"treeDir\");\n    String sentFileName = props.getProperty(\"sentFile\");\n    boolean conllx = props.getProperty(\"conllx\") != null;\n    boolean basic = props.getProperty(\"basic\") != null;\n    boolean nonCollapsed = props.getProperty(\"nonCollapsed\") != null;\n    boolean collapsed = props.getProperty(\"collapsed\") != null;\n    boolean parseTree = props.getProperty(\"parseTree\") != null;\n    boolean keepPunct = props.getProperty(\"keepPunct\") != null;\n\n    // force keepPunct, if conllx is turned on\n    if (conllx) {\n      keepPunct = true;\n    }\n\n    String hf = props.getProperty(\"hf\");\n    String parserModel = props.getProperty(\"parserModel\", \"/u/nlp/data/lexparser/chineseFactored.ser.gz\");\n\n    if (!basic && !collapsed) {\n      if (conllx) {\n        basic = true;     // default to basic dependencies for conllx\n      } else {\n        collapsed = true; // otherwise, default to collapsed dependencies\n      }\n    }\n\n    try {\n      if (hf != null) {\n        shf = (HeadFinder)Class.forName(hf).newInstance();\n        System.err.println(\"Using \"+hf);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Fail to use HeadFinder: \"+hf);\n    }\n\n\n    if (args.length == 0) {\n      System.err.printf(\"Usage:\\n\\t%s [optional flags] -treeFile treeFile\\n\\nOr:\\n\\t%s [optional flags] -sentFile sentFile\\n\", ChineseGrammaticalStructure.class.getName(), ChineseGrammaticalStructure.class.getName());\n      System.err.println(\"\\nOptional flags:\");\n      System.err.println(\"\\t-parseTree  : print phrase-structure parse tree\");\n      System.err.println(\"\\t-basic : basic non-collapsed dependencies preserving a tree structure\");\n      System.err.println(\"\\t-collapsed : collapsed dependencies\");\n      System.err.println(\"\\t-conllx : conllx formatted dependencies, can be used with either basic\\n\\t or collaped dependencies, but basic is recommended\");\n\n    } else {\n      if (treeDirname != null && treeFileName != null) {\n        throw new RuntimeException(\"Only one of treeDirname or treeFileName should be set\");\n      }\n      if (treeDirname != null) {\n        File dir = new File(treeDirname);\n        String[] files = dir.list();\n        for (String file : files) {\n          AddTreesFromFile(treeDirname+\"/\"+file, encoding, tb);\n        }\n      } else if (treeFileName != null) {\n        AddTreesFromFile(treeFileName, encoding, tb);\n      } else if (sentFileName != null) {\n        // Load parser by reflection, so that this class doesn't require parser for runtime use\n        // LexicalizedParser lp = new LexicalizedParser(parserModel);\n        ViterbiParserWithOptions lp;\n        try {\n          Class<?>[] classes = new Class<?>[]{String.class};\n          Constructor<?> constr = Class.forName(\"edu.stanford.nlp.parser.lexparser.LexicalizedParser\").getConstructor(classes);\n          String[] opts = {\"-retainTmpSubcategories\"};\n          lp = (ViterbiParserWithOptions) constr.newInstance(parserModel);\n          lp.setOptionFlags(opts);\n        } catch (Exception cnfe) {\n          cnfe.printStackTrace();\n          return;\n        }\n        BufferedReader reader = null;\n        try {\n          reader = new BufferedReader(new FileReader(sentFileName));\n        } catch (FileNotFoundException e) {\n          System.err.println(\"Cannot find \" + sentFileName);\n          System.exit(1);\n        }\n        try {\n          System.out.println(\"Processing sentence file \" + sentFileName);\n          String line;\n          while ((line = reader.readLine()) != null) {\n            CHTBTokenizer chtb = new CHTBTokenizer(new StringReader(line));\n            List words = chtb.tokenize();\n            lp.parse(words);\n            Tree tree = lp.getBestParse();\n            tb.add(tree);\n          }\n          reader.close();\n        } catch (Exception e) {\n          throw new RuntimeException(\"Exception reading key file \" + sentFileName, e);\n        }\n      }\n    }\n\n\n    for (Tree t : tb) {\n      Filter<String> puncFilter;\n\n      if (keepPunct) {\n        puncFilter = Filters.acceptFilter();\n      } else {\n        puncFilter = new ChineseTreebankLanguagePack().punctuationWordRejectFilter();\n      }\n\n      GrammaticalStructure gs = new ChineseGrammaticalStructure(t, puncFilter);\n\n      if (parseTree) {\n        System.out.println(\"============= parse tree =======================\");\n        t.pennPrint();\n      }\n      //System.out.println(\"----------------------------\");\n      //TreeGraph tg = new TreeGraph(t);\n      //System.out.println(tg);\n\n      //System.out.println(\"----------------------------\");\n      //System.out.println(gs);\n\n      if (basic) {\n        if (collapsed || nonCollapsed) {\n          System.out.println(\"------------- basic dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(false), t, conllx, false);\n      }\n\n      if (nonCollapsed) {\n        if (basic || collapsed) {\n          System.out.println(\"------------- noncollapsed dependencies ---------------\");\n        }\n        printDependencies(gs, gs.typedDependencies(true), t, conllx, false);\n      }\n\n      if (collapsed) {\n        if (basic || nonCollapsed) {\n          System.out.println(\"----------- collapsed dependencies -----------\");\n        }\n        printDependencies(gs, gs.typedDependenciesCollapsed(true), t, conllx, false);\n      }\n\n      //gs.printTypedDependencies(\"xml\");\n    }\n  }","commit_id":"a182eecbbacefbe3499dd2d1165ffb28e544e5c5","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String reportType = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (reportType == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String reportIdString = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int reportId = 0;\n        if (reportIdString != null) {\n            reportId = WebSecurityUtils.safeParseInt(reportIdString);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String overrideTimespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        if (\"null\".equals(overrideTimespan) || \"none\".equals(overrideTimespan)) {\n            overrideTimespan = null;\n        }\n\n        String overrideGraphType = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if (\"null\".equals(overrideGraphType) || \"none\".equals(overrideGraphType)) {\n            overrideGraphType = null;\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(reportType)) {\n            report = getKscReportService().buildNodeReport(reportId);\n        } else if (\"domain\".equals(reportType)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(reportType)) {\n            report = m_kscReportFactory.getReportByIndex(reportId);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + reportType + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Get the list of available prefabricated graph options \n        Set<PrefabGraph> prefabGraphs = new TreeSet<PrefabGraph>();\n        if (!report.getGraphCollection().isEmpty()) {\n            for (Graph graph : report.getGraphCollection()) {\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                if (resource == null) {\n                    log().debug(\"Could not get resource for graph \" + graph + \" in report \" + report.getTitle());\n                } else {\n                    prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n                }\n            }\n      \n            // Get default graph type from first element of graph_options\n            // XXX Do we care about the tests on reportType?\n            if ((\"node\".equals(reportType) || \"domain\".equals(reportType))\n                    && overrideGraphType == null\n                    && !prefabGraphs.isEmpty()) {\n                // Get the name of the first item.  prefabGraphs is sorted.\n                overrideGraphType = prefabGraphs.iterator().next().getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \" + overrideGraphType);\n                }\n            }\n        }\n        \n        List<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (Graph graph : report.getGraphCollection()) {\n            OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n            if (resource != null) {\n                promoteResourceAttributesIfNecessary(resource);\n            }\n\n            String displayGraphType;\n            if (overrideGraphType == null) {\n                displayGraphType = graph.getGraphtype();\n            } else {\n                displayGraphType = overrideGraphType;\n            }\n            \n            PrefabGraph displayGraph;\n            try {\n                displayGraph = getResourceService().getPrefabGraph(displayGraphType);\n            } catch (ObjectRetrievalFailureException e) {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"The prefabricated graph '\" + displayGraphType + \"' does not exist: \" + e, e);\n                }\n                displayGraph = null;\n            }\n            \n            boolean foundGraph = false;\n            if (resource != null) {\n                for (PrefabGraph availableGraph : getResourceService().findPrefabGraphsForResource(resource)) {\n                    if (availableGraph.equals(displayGraph)) {\n                        foundGraph = true;\n                        break;\n                    }\n                }\n            }\n            \n            if (!foundGraph) {\n                displayGraph = null;\n            }\n            \n            // gather start/stop time information\n            String displayTimespan = null;\n            if (overrideTimespan == null) {\n                displayTimespan = graph.getTimespan();\n            } else {\n                displayTimespan = overrideTimespan;\n            }\n            Calendar beginTime = Calendar.getInstance();\n            Calendar endTime = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(displayTimespan, beginTime, endTime);\n            \n            KscResultSet resultSet = new KscResultSet(graph.getTitle(), beginTime.getTime(), endTime.getTime(), resource, displayGraph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", reportType);\n        if (report != null) {\n            modelAndView.addObject(\"report\", reportIdString);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (overrideTimespan == null || !getKscReportService().getTimeSpans(true).containsKey(overrideTimespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", overrideTimespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graphOption : prefabGraphs) {\n                graphTypes.put(graphOption.getName(), graphOption.getName());\n            }\n            \n            if (overrideGraphType == null || !graphTypes.containsKey(overrideGraphType)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", overrideGraphType);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","id":20850,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String reportType = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (reportType == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String reportIdString = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int reportId = 0;\n        if (reportIdString != null) {\n            reportId = WebSecurityUtils.safeParseInt(reportIdString);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String overrideTimespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        if (\"null\".equals(overrideTimespan) || \"none\".equals(overrideTimespan)) {\n            overrideTimespan = null;\n        }\n\n        String overrideGraphType = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if (\"null\".equals(overrideGraphType) || \"none\".equals(overrideGraphType)) {\n            overrideGraphType = null;\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(reportType)) {\n            report = getKscReportService().buildNodeReport(reportId);\n        } else if (\"domain\".equals(reportType)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(reportType)) {\n            report = m_kscReportFactory.getReportByIndex(reportId);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + reportType + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Get the list of available prefabricated graph options \n        HashMap<String, OnmsResource> resourceMap = new HashMap<String, OnmsResource>();\n        Set<PrefabGraph> prefabGraphs = new TreeSet<PrefabGraph>();\n        List<Graph> graphCollection = report.getGraphCollection();\n        if (!graphCollection.isEmpty()) {\n            List<OnmsResource> resources = getKscReportService().getResourcesFromGraphs(graphCollection);\n            for (int i = 0; i < graphCollection.size(); i++) {\n                Graph graph = graphCollection.get(i);\n                OnmsResource resource = resources.get(i);\n                resourceMap.put(graph.toString(), resource);\n                if (resource == null) {\n                    log().debug(\"Could not get resource for graph \" + graph + \" in report \" + report.getTitle());\n                } else {\n                    prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n                }\n            }\n      \n            // Get default graph type from first element of graph_options\n            // XXX Do we care about the tests on reportType?\n            if ((\"node\".equals(reportType) || \"domain\".equals(reportType))\n                    && overrideGraphType == null\n                    && !prefabGraphs.isEmpty()) {\n                // Get the name of the first item.  prefabGraphs is sorted.\n                overrideGraphType = prefabGraphs.iterator().next().getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \" + overrideGraphType);\n                }\n            }\n        }\n        \n        List<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (Graph graph : graphCollection) {\n            OnmsResource resource = resourceMap.get(graph.toString());\n            if (resource != null) {\n                promoteResourceAttributesIfNecessary(resource);\n            }\n\n            String displayGraphType;\n            if (overrideGraphType == null) {\n                displayGraphType = graph.getGraphtype();\n            } else {\n                displayGraphType = overrideGraphType;\n            }\n            \n            PrefabGraph displayGraph;\n            try {\n                displayGraph = getResourceService().getPrefabGraph(displayGraphType);\n            } catch (ObjectRetrievalFailureException e) {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"The prefabricated graph '\" + displayGraphType + \"' does not exist: \" + e, e);\n                }\n                displayGraph = null;\n            }\n            \n            boolean foundGraph = false;\n            if (resource != null) {\n                for (PrefabGraph availableGraph : getResourceService().findPrefabGraphsForResource(resource)) {\n                    if (availableGraph.equals(displayGraph)) {\n                        foundGraph = true;\n                        break;\n                    }\n                }\n            }\n            \n            if (!foundGraph) {\n                displayGraph = null;\n            }\n            \n            // gather start/stop time information\n            String displayTimespan = null;\n            if (overrideTimespan == null) {\n                displayTimespan = graph.getTimespan();\n            } else {\n                displayTimespan = overrideTimespan;\n            }\n            Calendar beginTime = Calendar.getInstance();\n            Calendar endTime = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(displayTimespan, beginTime, endTime);\n            \n            KscResultSet resultSet = new KscResultSet(graph.getTitle(), beginTime.getTime(), endTime.getTime(), resource, displayGraph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", reportType);\n        if (report != null) {\n            modelAndView.addObject(\"report\", reportIdString);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (overrideTimespan == null || !getKscReportService().getTimeSpans(true).containsKey(overrideTimespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", overrideTimespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graphOption : prefabGraphs) {\n                graphTypes.put(graphOption.getName(), graphOption.getName());\n            }\n            \n            if (overrideGraphType == null || !graphTypes.containsKey(overrideGraphType)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", overrideGraphType);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","commit_id":"4c91fd69aeeb243e0b7b8bb3dfd145ab54a5d5dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public GraphResults findResults(String[] resourceIds,\n            String[] reports, long start, long end, String relativeTime) {\n        if (resourceIds == null) {\n            throw new IllegalArgumentException(\"resourceIds argument cannot be null\");\n        }\n        if (reports == null) {\n            throw new IllegalArgumentException(\"reports argument cannot be null\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"end time cannot be before start time\");\n        }\n\n        GraphResults graphResults = new GraphResults();\n        graphResults.setStart(new Date(start));\n        graphResults.setEnd(new Date(end));\n        graphResults.setRelativeTime(relativeTime);\n        graphResults.setRelativeTimePeriods(m_periods);\n        graphResults.setReports(reports);\n\n        for (String resourceId : resourceIds) {\n            graphResults.addGraphResultSet(createGraphResultSet(resourceId, reports, graphResults));\n        }\n        \n        graphResults.setGraphTopOffsetWithText(m_rrdDao.getGraphTopOffsetWithText());\n        graphResults.setGraphLeftOffset(m_rrdDao.getGraphLeftOffset());\n        graphResults.setGraphRightOffset(m_rrdDao.getGraphRightOffset());\n        \n        return graphResults;\n    }","id":20851,"modified_method":"public GraphResults findResults(String[] resourceIds,\n            String[] reports, long start, long end, String relativeTime) {\n        if (resourceIds == null) {\n            throw new IllegalArgumentException(\"resourceIds argument cannot be null\");\n        }\n        if (reports == null) {\n            throw new IllegalArgumentException(\"reports argument cannot be null\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"end time cannot be before start time\");\n        }\n\n        GraphResults graphResults = new GraphResults();\n        graphResults.setStart(new Date(start));\n        graphResults.setEnd(new Date(end));\n        graphResults.setRelativeTime(relativeTime);\n        graphResults.setRelativeTimePeriods(m_periods);\n        graphResults.setReports(reports);\n\n        HashMap<String, List<OnmsResource>> resourcesMap = new HashMap<String, List<OnmsResource>>();\n        \n        for (String resourceId : resourceIds) {\n            String parent = resourceId.substring(0, resourceId.indexOf(\"]\") + 1);\n            String child = resourceId.substring(resourceId.indexOf(\"]\") + 2);\n            String childType = child.substring(0, child.indexOf(\"[\"));\n            String childName = child.substring(child.indexOf(\"[\") + 1, child.indexOf(\"]\"));\n            OnmsResource resource = null;\n            if (!resourcesMap.containsKey(parent)) {\n                List<OnmsResource> resourceList = m_resourceDao.getResourceListById(resourceId);\n                resourcesMap.put(parent, resourceList);\n                log().debug(\"findResults: add resourceList to map for \" + parent);\n            }\n            for (OnmsResource r : resourcesMap.get(parent)) {\n                if (childType.equals(r.getResourceType().getName())\n                        && childName.equals(r.getName())) {\n                    resource = r;\n                    log().debug(\"findResults: found resource in map\" + r.toString());\n                    break;\n                }\n            }\n            graphResults.addGraphResultSet(createGraphResultSet(resourceId, resource, reports, graphResults));\n        }\n        \n        graphResults.setGraphTopOffsetWithText(m_rrdDao.getGraphTopOffsetWithText());\n        graphResults.setGraphLeftOffset(m_rrdDao.getGraphLeftOffset());\n        graphResults.setGraphRightOffset(m_rrdDao.getGraphRightOffset());\n        \n        return graphResults;\n    }","commit_id":"4c91fd69aeeb243e0b7b8bb3dfd145ab54a5d5dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public GraphResultSet createGraphResultSet(String resourceId, String[] reports, GraphResults graphResults) {\n        OnmsResource resource = m_resourceDao.loadResourceById(resourceId);\n        GraphResultSet rs = graphResults.new GraphResultSet();\n        rs.setResource(resource);\n        \n        if (reports.length == 1 && \"all\".equals(reports[0])) {\n            PrefabGraph[] queries = m_graphDao.getPrefabGraphsForResource(resource);\n            List<String> queryNames = new ArrayList<String>(queries.length);\n            for (PrefabGraph query : queries) {\n                queryNames.add(query.getName());\n            }\n\n            reports = queryNames.toArray(new String[queryNames.size()]);\n        }\n\n        List<Graph> graphs = new ArrayList<Graph>(reports.length);\n\n        List<String> filesToPromote = new LinkedList<String>();\n        for (String report : reports) {\n            PrefabGraph prefabGraph = m_graphDao.getPrefabGraph(report);\n            Graph graph = new Graph(prefabGraph, resource, graphResults.getStart(), graphResults.getEnd());\n            getAttributeFiles(graph, filesToPromote);\n            graphs.add(graph);\n        }\n\n        \n        \n        sendEvent(filesToPromote);\n        \n        \n        /*\n         * Sort the graphs by their order in the properties file.\n         * PrefabGraph implements the Comparable interface.\n         */\n        Collections.sort(graphs);\n\n        rs.setGraphs(graphs);\n        \n        return rs;\n    }","id":20852,"modified_method":"public GraphResultSet createGraphResultSet(String resourceId, OnmsResource resource, String[] reports, GraphResults graphResults) {\n        if (resource == null) {\n            resource = m_resourceDao.loadResourceById(resourceId);\n        }\n         GraphResultSet rs = graphResults.new GraphResultSet();\n        rs.setResource(resource);\n        \n        if (reports.length == 1 && \"all\".equals(reports[0])) {\n            PrefabGraph[] queries = m_graphDao.getPrefabGraphsForResource(resource);\n            List<String> queryNames = new ArrayList<String>(queries.length);\n            for (PrefabGraph query : queries) {\n                queryNames.add(query.getName());\n            }\n\n            reports = queryNames.toArray(new String[queryNames.size()]);\n        }\n\n        List<Graph> graphs = new ArrayList<Graph>(reports.length);\n\n        List<String> filesToPromote = new LinkedList<String>();\n        for (String report : reports) {\n            PrefabGraph prefabGraph = m_graphDao.getPrefabGraph(report);\n            Graph graph = new Graph(prefabGraph, resource, graphResults.getStart(), graphResults.getEnd());\n            getAttributeFiles(graph, filesToPromote);\n            graphs.add(graph);\n        }\n\n        \n        \n        sendEvent(filesToPromote);\n        \n        \n        /*\n         * Sort the graphs by their order in the properties file.\n         * PrefabGraph implements the Comparable interface.\n         */\n        Collections.sort(graphs);\n\n        rs.setGraphs(graphs);\n        \n        return rs;\n    }","commit_id":"4c91fd69aeeb243e0b7b8bb3dfd145ab54a5d5dd","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String reportType = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (reportType == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String reportIdString = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int reportId = 0;\n        if (reportIdString != null) {\n            reportId = WebSecurityUtils.safeParseInt(reportIdString);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String overrideTimespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        if (\"null\".equals(overrideTimespan) || \"none\".equals(overrideTimespan)) {\n            overrideTimespan = null;\n        }\n\n        String overrideGraphType = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if (\"null\".equals(overrideGraphType) || \"none\".equals(overrideGraphType)) {\n            overrideGraphType = null;\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(reportType)) {\n            report = getKscReportService().buildNodeReport(reportId);\n        } else if (\"domain\".equals(reportType)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(reportType)) {\n            report = m_kscReportFactory.getReportByIndex(reportId);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + reportType + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Get the list of available prefabricated graph options \n        Set<PrefabGraph> prefabGraphs = new TreeSet<PrefabGraph>();\n        if (!report.getGraphCollection().isEmpty()) {\n            for (Graph graph : report.getGraphCollection()) {\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                if (resource == null) {\n                    log().debug(\"Could not get resource for graph \" + graph + \" in report \" + report.getTitle());\n                } else {\n                    prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n                }\n            }\n      \n            // Get default graph type from first element of graph_options\n            // XXX Do we care about the tests on reportType?\n            if ((\"node\".equals(reportType) || \"domain\".equals(reportType))\n                    && overrideGraphType == null\n                    && !prefabGraphs.isEmpty()) {\n                // Get the name of the first item.  prefabGraphs is sorted.\n                overrideGraphType = prefabGraphs.iterator().next().getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \" + overrideGraphType);\n                }\n            }\n        }\n        \n        List<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (Graph graph : report.getGraphCollection()) {\n            OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n            if (resource != null) {\n                promoteResourceAttributesIfNecessary(resource);\n            }\n\n            String displayGraphType;\n            if (overrideGraphType == null) {\n                displayGraphType = graph.getGraphtype();\n            } else {\n                displayGraphType = overrideGraphType;\n            }\n            \n            PrefabGraph displayGraph;\n            try {\n                displayGraph = getResourceService().getPrefabGraph(displayGraphType);\n            } catch (ObjectRetrievalFailureException e) {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"The prefabricated graph '\" + displayGraphType + \"' does not exist: \" + e, e);\n                }\n                displayGraph = null;\n            }\n            \n            boolean foundGraph = false;\n            if (resource != null) {\n                for (PrefabGraph availableGraph : getResourceService().findPrefabGraphsForResource(resource)) {\n                    if (availableGraph.equals(displayGraph)) {\n                        foundGraph = true;\n                        break;\n                    }\n                }\n            }\n            \n            if (!foundGraph) {\n                displayGraph = null;\n            }\n            \n            // gather start/stop time information\n            String displayTimespan = null;\n            if (overrideTimespan == null) {\n                displayTimespan = graph.getTimespan();\n            } else {\n                displayTimespan = overrideTimespan;\n            }\n            Calendar beginTime = Calendar.getInstance();\n            Calendar endTime = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(displayTimespan, beginTime, endTime);\n            \n            KscResultSet resultSet = new KscResultSet(graph.getTitle(), beginTime.getTime(), endTime.getTime(), resource, displayGraph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", reportType);\n        if (report != null) {\n            modelAndView.addObject(\"report\", reportIdString);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (overrideTimespan == null || !getKscReportService().getTimeSpans(true).containsKey(overrideTimespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", overrideTimespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graphOption : prefabGraphs) {\n                graphTypes.put(graphOption.getName(), graphOption.getName());\n            }\n            \n            if (overrideGraphType == null || !graphTypes.containsKey(overrideGraphType)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", overrideGraphType);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","id":20853,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String reportType = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (reportType == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String reportIdString = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int reportId = 0;\n        if (reportIdString != null) {\n            reportId = WebSecurityUtils.safeParseInt(reportIdString);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String overrideTimespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        if (\"null\".equals(overrideTimespan) || \"none\".equals(overrideTimespan)) {\n            overrideTimespan = null;\n        }\n\n        String overrideGraphType = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if (\"null\".equals(overrideGraphType) || \"none\".equals(overrideGraphType)) {\n            overrideGraphType = null;\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(reportType)) {\n            report = getKscReportService().buildNodeReport(reportId);\n        } else if (\"domain\".equals(reportType)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(reportType)) {\n            report = m_kscReportFactory.getReportByIndex(reportId);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + reportType + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Get the list of available prefabricated graph options \n        HashMap<String, OnmsResource> resourceMap = new HashMap<String, OnmsResource>();\n        Set<PrefabGraph> prefabGraphs = new TreeSet<PrefabGraph>();\n        List<Graph> graphCollection = report.getGraphCollection();\n        if (!graphCollection.isEmpty()) {\n            List<OnmsResource> resources = getKscReportService().getResourcesFromGraphs(graphCollection);\n            for (int i = 0; i < graphCollection.size(); i++) {\n                Graph graph = graphCollection.get(i);\n                OnmsResource resource = resources.get(i);\n                resourceMap.put(graph.toString(), resource);\n                if (resource == null) {\n                    log().debug(\"Could not get resource for graph \" + graph + \" in report \" + report.getTitle());\n                } else {\n                    prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n                }\n            }\n      \n            // Get default graph type from first element of graph_options\n            // XXX Do we care about the tests on reportType?\n            if ((\"node\".equals(reportType) || \"domain\".equals(reportType))\n                    && overrideGraphType == null\n                    && !prefabGraphs.isEmpty()) {\n                // Get the name of the first item.  prefabGraphs is sorted.\n                overrideGraphType = prefabGraphs.iterator().next().getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \" + overrideGraphType);\n                }\n            }\n        }\n        \n        List<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (Graph graph : graphCollection) {\n            OnmsResource resource = resourceMap.get(graph.toString());\n            if (resource != null) {\n                promoteResourceAttributesIfNecessary(resource);\n            }\n\n            String displayGraphType;\n            if (overrideGraphType == null) {\n                displayGraphType = graph.getGraphtype();\n            } else {\n                displayGraphType = overrideGraphType;\n            }\n            \n            PrefabGraph displayGraph;\n            try {\n                displayGraph = getResourceService().getPrefabGraph(displayGraphType);\n            } catch (ObjectRetrievalFailureException e) {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"The prefabricated graph '\" + displayGraphType + \"' does not exist: \" + e, e);\n                }\n                displayGraph = null;\n            }\n            \n            boolean foundGraph = false;\n            if (resource != null) {\n                for (PrefabGraph availableGraph : getResourceService().findPrefabGraphsForResource(resource)) {\n                    if (availableGraph.equals(displayGraph)) {\n                        foundGraph = true;\n                        break;\n                    }\n                }\n            }\n            \n            if (!foundGraph) {\n                displayGraph = null;\n            }\n            \n            // gather start/stop time information\n            String displayTimespan = null;\n            if (overrideTimespan == null) {\n                displayTimespan = graph.getTimespan();\n            } else {\n                displayTimespan = overrideTimespan;\n            }\n            Calendar beginTime = Calendar.getInstance();\n            Calendar endTime = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(displayTimespan, beginTime, endTime);\n            \n            KscResultSet resultSet = new KscResultSet(graph.getTitle(), beginTime.getTime(), endTime.getTime(), resource, displayGraph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", reportType);\n        if (report != null) {\n            modelAndView.addObject(\"report\", reportIdString);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (overrideTimespan == null || !getKscReportService().getTimeSpans(true).containsKey(overrideTimespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", overrideTimespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graphOption : prefabGraphs) {\n                graphTypes.put(graphOption.getName(), graphOption.getName());\n            }\n            \n            if (overrideGraphType == null || !graphTypes.containsKey(overrideGraphType)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", overrideGraphType);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","commit_id":"1f24342680cd729434db34871e89bd4f2aa72495","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public GraphResults findResults(String[] resourceIds,\n            String[] reports, long start, long end, String relativeTime) {\n        if (resourceIds == null) {\n            throw new IllegalArgumentException(\"resourceIds argument cannot be null\");\n        }\n        if (reports == null) {\n            throw new IllegalArgumentException(\"reports argument cannot be null\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"end time cannot be before start time\");\n        }\n\n        GraphResults graphResults = new GraphResults();\n        graphResults.setStart(new Date(start));\n        graphResults.setEnd(new Date(end));\n        graphResults.setRelativeTime(relativeTime);\n        graphResults.setRelativeTimePeriods(m_periods);\n        graphResults.setReports(reports);\n\n        for (String resourceId : resourceIds) {\n            graphResults.addGraphResultSet(createGraphResultSet(resourceId, reports, graphResults));\n        }\n        \n        graphResults.setGraphTopOffsetWithText(m_rrdDao.getGraphTopOffsetWithText());\n        graphResults.setGraphLeftOffset(m_rrdDao.getGraphLeftOffset());\n        graphResults.setGraphRightOffset(m_rrdDao.getGraphRightOffset());\n        \n        return graphResults;\n    }","id":20854,"modified_method":"public GraphResults findResults(String[] resourceIds,\n            String[] reports, long start, long end, String relativeTime) {\n        if (resourceIds == null) {\n            throw new IllegalArgumentException(\"resourceIds argument cannot be null\");\n        }\n        if (reports == null) {\n            throw new IllegalArgumentException(\"reports argument cannot be null\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"end time cannot be before start time\");\n        }\n\n        GraphResults graphResults = new GraphResults();\n        graphResults.setStart(new Date(start));\n        graphResults.setEnd(new Date(end));\n        graphResults.setRelativeTime(relativeTime);\n        graphResults.setRelativeTimePeriods(m_periods);\n        graphResults.setReports(reports);\n\n        HashMap<String, List<OnmsResource>> resourcesMap = new HashMap<String, List<OnmsResource>>();\n        \n        for (String resourceId : resourceIds) {\n            String parent = resourceId.substring(0, resourceId.indexOf(\"]\") + 1);\n            String child = resourceId.substring(resourceId.indexOf(\"]\") + 2);\n            String childType = child.substring(0, child.indexOf(\"[\"));\n            String childName = child.substring(child.indexOf(\"[\") + 1, child.indexOf(\"]\"));\n            OnmsResource resource = null;\n            if (!resourcesMap.containsKey(parent)) {\n                List<OnmsResource> resourceList = m_resourceDao.getResourceListById(resourceId);\n                resourcesMap.put(parent, resourceList);\n                log().debug(\"findResults: add resourceList to map for \" + parent);\n            }\n            for (OnmsResource r : resourcesMap.get(parent)) {\n                if (childType.equals(r.getResourceType().getName())\n                        && childName.equals(r.getName())) {\n                    resource = r;\n                    log().debug(\"findResults: found resource in map\" + r.toString());\n                    break;\n                }\n            }\n            graphResults.addGraphResultSet(createGraphResultSet(resourceId, resource, reports, graphResults));\n        }\n        \n        graphResults.setGraphTopOffsetWithText(m_rrdDao.getGraphTopOffsetWithText());\n        graphResults.setGraphLeftOffset(m_rrdDao.getGraphLeftOffset());\n        graphResults.setGraphRightOffset(m_rrdDao.getGraphRightOffset());\n        \n        return graphResults;\n    }","commit_id":"1f24342680cd729434db34871e89bd4f2aa72495","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public GraphResultSet createGraphResultSet(String resourceId, String[] reports, GraphResults graphResults) {\n        OnmsResource resource = m_resourceDao.loadResourceById(resourceId);\n        GraphResultSet rs = graphResults.new GraphResultSet();\n        rs.setResource(resource);\n        \n        if (reports.length == 1 && \"all\".equals(reports[0])) {\n            PrefabGraph[] queries = m_graphDao.getPrefabGraphsForResource(resource);\n            List<String> queryNames = new ArrayList<String>(queries.length);\n            for (PrefabGraph query : queries) {\n                queryNames.add(query.getName());\n            }\n\n            reports = queryNames.toArray(new String[queryNames.size()]);\n        }\n\n        List<Graph> graphs = new ArrayList<Graph>(reports.length);\n\n        List<String> filesToPromote = new LinkedList<String>();\n        for (String report : reports) {\n            PrefabGraph prefabGraph = m_graphDao.getPrefabGraph(report);\n            Graph graph = new Graph(prefabGraph, resource, graphResults.getStart(), graphResults.getEnd());\n            getAttributeFiles(graph, filesToPromote);\n            graphs.add(graph);\n        }\n\n        \n        \n        sendEvent(filesToPromote);\n        \n        \n        /*\n         * Sort the graphs by their order in the properties file.\n         * PrefabGraph implements the Comparable interface.\n         */\n        Collections.sort(graphs);\n\n        rs.setGraphs(graphs);\n        \n        return rs;\n    }","id":20855,"modified_method":"public GraphResultSet createGraphResultSet(String resourceId, OnmsResource resource, String[] reports, GraphResults graphResults) {\n        if (resource == null) {\n            resource = m_resourceDao.loadResourceById(resourceId);\n        }\n         GraphResultSet rs = graphResults.new GraphResultSet();\n        rs.setResource(resource);\n        \n        if (reports.length == 1 && \"all\".equals(reports[0])) {\n            PrefabGraph[] queries = m_graphDao.getPrefabGraphsForResource(resource);\n            List<String> queryNames = new ArrayList<String>(queries.length);\n            for (PrefabGraph query : queries) {\n                queryNames.add(query.getName());\n            }\n\n            reports = queryNames.toArray(new String[queryNames.size()]);\n        }\n\n        List<Graph> graphs = new ArrayList<Graph>(reports.length);\n\n        List<String> filesToPromote = new LinkedList<String>();\n        for (String report : reports) {\n            PrefabGraph prefabGraph = m_graphDao.getPrefabGraph(report);\n            Graph graph = new Graph(prefabGraph, resource, graphResults.getStart(), graphResults.getEnd());\n            getAttributeFiles(graph, filesToPromote);\n            graphs.add(graph);\n        }\n\n        \n        \n        sendEvent(filesToPromote);\n        \n        \n        /*\n         * Sort the graphs by their order in the properties file.\n         * PrefabGraph implements the Comparable interface.\n         */\n        Collections.sort(graphs);\n\n        rs.setGraphs(graphs);\n        \n        return rs;\n    }","commit_id":"1f24342680cd729434db34871e89bd4f2aa72495","url":"https://github.com/OpenNMS/opennms"},{"original_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String reportType = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (reportType == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String reportIdString = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int reportId = 0;\n        if (reportIdString != null) {\n            reportId = WebSecurityUtils.safeParseInt(reportIdString);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String overrideTimespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        if (\"null\".equals(overrideTimespan) || \"none\".equals(overrideTimespan)) {\n            overrideTimespan = null;\n        }\n\n        String overrideGraphType = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if (\"null\".equals(overrideGraphType) || \"none\".equals(overrideGraphType)) {\n            overrideGraphType = null;\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(reportType)) {\n            report = getKscReportService().buildNodeReport(reportId);\n        } else if (\"domain\".equals(reportType)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(reportType)) {\n            report = m_kscReportFactory.getReportByIndex(reportId);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + reportType + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Get the list of available prefabricated graph options \n        Set<PrefabGraph> prefabGraphs = new TreeSet<PrefabGraph>();\n        if (!report.getGraphCollection().isEmpty()) {\n            for (Graph graph : report.getGraphCollection()) {\n                OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n                if (resource == null) {\n                    log().debug(\"Could not get resource for graph \" + graph + \" in report \" + report.getTitle());\n                } else {\n                    prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n                }\n            }\n      \n            // Get default graph type from first element of graph_options\n            // XXX Do we care about the tests on reportType?\n            if ((\"node\".equals(reportType) || \"domain\".equals(reportType))\n                    && overrideGraphType == null\n                    && !prefabGraphs.isEmpty()) {\n                // Get the name of the first item.  prefabGraphs is sorted.\n                overrideGraphType = prefabGraphs.iterator().next().getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \" + overrideGraphType);\n                }\n            }\n        }\n        \n        List<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (Graph graph : report.getGraphCollection()) {\n            OnmsResource resource = getKscReportService().getResourceFromGraph(graph);\n            if (resource != null) {\n                promoteResourceAttributesIfNecessary(resource);\n            }\n\n            String displayGraphType;\n            if (overrideGraphType == null) {\n                displayGraphType = graph.getGraphtype();\n            } else {\n                displayGraphType = overrideGraphType;\n            }\n            \n            PrefabGraph displayGraph;\n            try {\n                displayGraph = getResourceService().getPrefabGraph(displayGraphType);\n            } catch (ObjectRetrievalFailureException e) {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"The prefabricated graph '\" + displayGraphType + \"' does not exist: \" + e, e);\n                }\n                displayGraph = null;\n            }\n            \n            boolean foundGraph = false;\n            if (resource != null) {\n                for (PrefabGraph availableGraph : getResourceService().findPrefabGraphsForResource(resource)) {\n                    if (availableGraph.equals(displayGraph)) {\n                        foundGraph = true;\n                        break;\n                    }\n                }\n            }\n            \n            if (!foundGraph) {\n                displayGraph = null;\n            }\n            \n            // gather start/stop time information\n            String displayTimespan = null;\n            if (overrideTimespan == null) {\n                displayTimespan = graph.getTimespan();\n            } else {\n                displayTimespan = overrideTimespan;\n            }\n            Calendar beginTime = Calendar.getInstance();\n            Calendar endTime = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(displayTimespan, beginTime, endTime);\n            \n            KscResultSet resultSet = new KscResultSet(graph.getTitle(), beginTime.getTime(), endTime.getTime(), resource, displayGraph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", reportType);\n        if (report != null) {\n            modelAndView.addObject(\"report\", reportIdString);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (overrideTimespan == null || !getKscReportService().getTimeSpans(true).containsKey(overrideTimespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", overrideTimespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graphOption : prefabGraphs) {\n                graphTypes.put(graphOption.getName(), graphOption.getName());\n            }\n            \n            if (overrideGraphType == null || !graphTypes.containsKey(overrideGraphType)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", overrideGraphType);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","id":20856,"modified_method":"@Override\n    protected ModelAndView handleRequestInternal(HttpServletRequest request, HttpServletResponse response) throws Exception {\n        String[] requiredParameters = new String[] { \"report or domain\", \"type\" };\n      \n        // Get Form Variable\n        String reportType = WebSecurityUtils.sanitizeString(request.getParameter(\"type\"));\n        if (reportType == null) {\n            throw new MissingParameterException(\"type\", requiredParameters);\n        }\n      \n        String reportIdString = WebSecurityUtils.sanitizeString(request.getParameter(\"report\"));\n        String domain = WebSecurityUtils.sanitizeString(request.getParameter(\"domain\"));\n        int reportId = 0;\n        if (reportIdString != null) {\n            reportId = WebSecurityUtils.safeParseInt(reportIdString);\n        } else if (domain == null) {\n            throw new MissingParameterException(\"report or domain\", requiredParameters);\n        }\n      \n        String overrideTimespan = WebSecurityUtils.sanitizeString(request.getParameter(\"timespan\"));\n        if (\"null\".equals(overrideTimespan) || \"none\".equals(overrideTimespan)) {\n            overrideTimespan = null;\n        }\n\n        String overrideGraphType = WebSecurityUtils.sanitizeString(request.getParameter(\"graphtype\"));\n        if (\"null\".equals(overrideGraphType) || \"none\".equals(overrideGraphType)) {\n            overrideGraphType = null;\n        }\n      \n        // Load report to view \n        Report report = null;\n        if (\"node\".equals(reportType)) {\n            report = getKscReportService().buildNodeReport(reportId);\n        } else if (\"domain\".equals(reportType)) {\n            report = getKscReportService().buildDomainReport(domain);\n        } else if (\"custom\".equals(reportType)) {\n            report = m_kscReportFactory.getReportByIndex(reportId);\n        } else {\n            throw new IllegalArgumentException(\"value to 'type' parameter of '\" + reportType + \"' is not supported.  Must be one of: node, domain, or custom\");\n        }\n      \n        if (report == null) {\n            throw new ServletException(\"Report does not exist\");\n        }\n      \n        // Get the list of available prefabricated graph options \n        HashMap<String, OnmsResource> resourceMap = new HashMap<String, OnmsResource>();\n        Set<PrefabGraph> prefabGraphs = new TreeSet<PrefabGraph>();\n        List<Graph> graphCollection = report.getGraphCollection();\n        if (!graphCollection.isEmpty()) {\n            List<OnmsResource> resources = getKscReportService().getResourcesFromGraphs(graphCollection);\n            for (int i = 0; i < graphCollection.size(); i++) {\n                Graph graph = graphCollection.get(i);\n                OnmsResource resource = resources.get(i);\n                resourceMap.put(graph.toString(), resource);\n                if (resource == null) {\n                    log().debug(\"Could not get resource for graph \" + graph + \" in report \" + report.getTitle());\n                } else {\n                    prefabGraphs.addAll(Arrays.asList(getResourceService().findPrefabGraphsForResource(resource)));\n                }\n            }\n      \n            // Get default graph type from first element of graph_options\n            // XXX Do we care about the tests on reportType?\n            if ((\"node\".equals(reportType) || \"domain\".equals(reportType))\n                    && overrideGraphType == null\n                    && !prefabGraphs.isEmpty()) {\n                // Get the name of the first item.  prefabGraphs is sorted.\n                overrideGraphType = prefabGraphs.iterator().next().getName();\n                if (log().isDebugEnabled()) {\n                    log().debug(\"custom_view: setting default graph type to \" + overrideGraphType);\n                }\n            }\n        }\n        \n        List<KscResultSet> resultSets = new ArrayList<KscResultSet>(report.getGraphCount());\n        for (Graph graph : graphCollection) {\n            OnmsResource resource = resourceMap.get(graph.toString());\n            if (resource != null) {\n                promoteResourceAttributesIfNecessary(resource);\n            }\n\n            String displayGraphType;\n            if (overrideGraphType == null) {\n                displayGraphType = graph.getGraphtype();\n            } else {\n                displayGraphType = overrideGraphType;\n            }\n            \n            PrefabGraph displayGraph;\n            try {\n                displayGraph = getResourceService().getPrefabGraph(displayGraphType);\n            } catch (ObjectRetrievalFailureException e) {\n                if (log().isDebugEnabled()) {\n                    log().debug(\"The prefabricated graph '\" + displayGraphType + \"' does not exist: \" + e, e);\n                }\n                displayGraph = null;\n            }\n            \n            boolean foundGraph = false;\n            if (resource != null) {\n                for (PrefabGraph availableGraph : getResourceService().findPrefabGraphsForResource(resource)) {\n                    if (availableGraph.equals(displayGraph)) {\n                        foundGraph = true;\n                        break;\n                    }\n                }\n            }\n            \n            if (!foundGraph) {\n                displayGraph = null;\n            }\n            \n            // gather start/stop time information\n            String displayTimespan = null;\n            if (overrideTimespan == null) {\n                displayTimespan = graph.getTimespan();\n            } else {\n                displayTimespan = overrideTimespan;\n            }\n            Calendar beginTime = Calendar.getInstance();\n            Calendar endTime = Calendar.getInstance();\n            KSC_PerformanceReportFactory.getBeginEndTime(displayTimespan, beginTime, endTime);\n            \n            KscResultSet resultSet = new KscResultSet(graph.getTitle(), beginTime.getTime(), endTime.getTime(), resource, displayGraph);\n            resultSets.add(resultSet);\n        }\n        \n        ModelAndView modelAndView = new ModelAndView(\"KSC/customView\");\n\n        modelAndView.addObject(\"loggedIn\", request.getRemoteUser() != null);\n        modelAndView.addObject(\"reportType\", reportType);\n        if (report != null) {\n            modelAndView.addObject(\"report\", reportIdString);\n        }\n        if (domain != null) {\n            modelAndView.addObject(\"domain\", domain);\n        }\n        \n        modelAndView.addObject(\"title\", report.getTitle());\n        modelAndView.addObject(\"resultSets\", resultSets);\n        \n        if (report.getShow_timespan_button()) {\n            if (overrideTimespan == null || !getKscReportService().getTimeSpans(true).containsKey(overrideTimespan)) {\n                modelAndView.addObject(\"timeSpan\", \"none\");\n            } else {\n                modelAndView.addObject(\"timeSpan\", overrideTimespan);\n            }\n            modelAndView.addObject(\"timeSpans\", getKscReportService().getTimeSpans(true));\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"timeSpan\", null);\n        }\n\n        if (report.getShow_graphtype_button()) {\n            LinkedHashMap<String, String> graphTypes = new LinkedHashMap<String, String>();\n            graphTypes.put(\"none\", \"none\");\n            for (PrefabGraph graphOption : prefabGraphs) {\n                graphTypes.put(graphOption.getName(), graphOption.getName());\n            }\n            \n            if (overrideGraphType == null || !graphTypes.containsKey(overrideGraphType)) {\n                modelAndView.addObject(\"graphType\", \"none\");\n            } else {\n                modelAndView.addObject(\"graphType\", overrideGraphType);\n            }\n            modelAndView.addObject(\"graphTypes\", graphTypes);\n        } else {\n            // Make sure it's null so the pulldown list isn't shown\n            modelAndView.addObject(\"graphType\", null);\n        }\n        \n        modelAndView.addObject(\"showCustomizeButton\", !request.isUserInRole(Authentication.READONLY_ROLE) && (request.getRemoteUser() != null));\n\n        if (report.getGraphs_per_line() > 0) {\n            modelAndView.addObject(\"graphsPerLine\", report.getGraphs_per_line());\n        } else {\n            modelAndView.addObject(\"graphsPerLine\", getDefaultGraphsPerLine());\n        }\n        \n        return modelAndView;\n    }","commit_id":"0ef0d747f989a560a7d27973eea45950b1eed383","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public GraphResults findResults(String[] resourceIds,\n            String[] reports, long start, long end, String relativeTime) {\n        if (resourceIds == null) {\n            throw new IllegalArgumentException(\"resourceIds argument cannot be null\");\n        }\n        if (reports == null) {\n            throw new IllegalArgumentException(\"reports argument cannot be null\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"end time cannot be before start time\");\n        }\n\n        GraphResults graphResults = new GraphResults();\n        graphResults.setStart(new Date(start));\n        graphResults.setEnd(new Date(end));\n        graphResults.setRelativeTime(relativeTime);\n        graphResults.setRelativeTimePeriods(m_periods);\n        graphResults.setReports(reports);\n\n        for (String resourceId : resourceIds) {\n            graphResults.addGraphResultSet(createGraphResultSet(resourceId, reports, graphResults));\n        }\n        \n        graphResults.setGraphTopOffsetWithText(m_rrdDao.getGraphTopOffsetWithText());\n        graphResults.setGraphLeftOffset(m_rrdDao.getGraphLeftOffset());\n        graphResults.setGraphRightOffset(m_rrdDao.getGraphRightOffset());\n        \n        return graphResults;\n    }","id":20857,"modified_method":"public GraphResults findResults(String[] resourceIds,\n            String[] reports, long start, long end, String relativeTime) {\n        if (resourceIds == null) {\n            throw new IllegalArgumentException(\"resourceIds argument cannot be null\");\n        }\n        if (reports == null) {\n            throw new IllegalArgumentException(\"reports argument cannot be null\");\n        }\n        if (end < start) {\n            throw new IllegalArgumentException(\"end time cannot be before start time\");\n        }\n\n        GraphResults graphResults = new GraphResults();\n        graphResults.setStart(new Date(start));\n        graphResults.setEnd(new Date(end));\n        graphResults.setRelativeTime(relativeTime);\n        graphResults.setRelativeTimePeriods(m_periods);\n        graphResults.setReports(reports);\n\n        HashMap<String, List<OnmsResource>> resourcesMap = new HashMap<String, List<OnmsResource>>();\n        \n        for (String resourceId : resourceIds) {\n            String parent = resourceId.substring(0, resourceId.indexOf(\"]\") + 1);\n            String child = resourceId.substring(resourceId.indexOf(\"]\") + 2);\n            String childType = child.substring(0, child.indexOf(\"[\"));\n            String childName = child.substring(child.indexOf(\"[\") + 1, child.indexOf(\"]\"));\n            OnmsResource resource = null;\n            if (!resourcesMap.containsKey(parent)) {\n                List<OnmsResource> resourceList = m_resourceDao.getResourceListById(resourceId);\n                resourcesMap.put(parent, resourceList);\n                log().debug(\"findResults: add resourceList to map for \" + parent);\n            }\n            for (OnmsResource r : resourcesMap.get(parent)) {\n                if (childType.equals(r.getResourceType().getName())\n                        && childName.equals(r.getName())) {\n                    resource = r;\n                    log().debug(\"findResults: found resource in map\" + r.toString());\n                    break;\n                }\n            }\n            graphResults.addGraphResultSet(createGraphResultSet(resourceId, resource, reports, graphResults));\n        }\n        \n        graphResults.setGraphTopOffsetWithText(m_rrdDao.getGraphTopOffsetWithText());\n        graphResults.setGraphLeftOffset(m_rrdDao.getGraphLeftOffset());\n        graphResults.setGraphRightOffset(m_rrdDao.getGraphRightOffset());\n        \n        return graphResults;\n    }","commit_id":"0ef0d747f989a560a7d27973eea45950b1eed383","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public GraphResultSet createGraphResultSet(String resourceId, String[] reports, GraphResults graphResults) {\n        OnmsResource resource = m_resourceDao.loadResourceById(resourceId);\n        GraphResultSet rs = graphResults.new GraphResultSet();\n        rs.setResource(resource);\n        \n        if (reports.length == 1 && \"all\".equals(reports[0])) {\n            PrefabGraph[] queries = m_graphDao.getPrefabGraphsForResource(resource);\n            List<String> queryNames = new ArrayList<String>(queries.length);\n            for (PrefabGraph query : queries) {\n                queryNames.add(query.getName());\n            }\n\n            reports = queryNames.toArray(new String[queryNames.size()]);\n        }\n\n        List<Graph> graphs = new ArrayList<Graph>(reports.length);\n\n        List<String> filesToPromote = new LinkedList<String>();\n        for (String report : reports) {\n            PrefabGraph prefabGraph = m_graphDao.getPrefabGraph(report);\n            Graph graph = new Graph(prefabGraph, resource, graphResults.getStart(), graphResults.getEnd());\n            getAttributeFiles(graph, filesToPromote);\n            graphs.add(graph);\n        }\n\n        \n        \n        sendEvent(filesToPromote);\n        \n        \n        /*\n         * Sort the graphs by their order in the properties file.\n         * PrefabGraph implements the Comparable interface.\n         */\n        Collections.sort(graphs);\n\n        rs.setGraphs(graphs);\n        \n        return rs;\n    }","id":20858,"modified_method":"public GraphResultSet createGraphResultSet(String resourceId, OnmsResource resource, String[] reports, GraphResults graphResults) {\n        if (resource == null) {\n            resource = m_resourceDao.loadResourceById(resourceId);\n        }\n         GraphResultSet rs = graphResults.new GraphResultSet();\n        rs.setResource(resource);\n        \n        if (reports.length == 1 && \"all\".equals(reports[0])) {\n            PrefabGraph[] queries = m_graphDao.getPrefabGraphsForResource(resource);\n            List<String> queryNames = new ArrayList<String>(queries.length);\n            for (PrefabGraph query : queries) {\n                queryNames.add(query.getName());\n            }\n\n            reports = queryNames.toArray(new String[queryNames.size()]);\n        }\n\n        List<Graph> graphs = new ArrayList<Graph>(reports.length);\n\n        List<String> filesToPromote = new LinkedList<String>();\n        for (String report : reports) {\n            PrefabGraph prefabGraph = m_graphDao.getPrefabGraph(report);\n            Graph graph = new Graph(prefabGraph, resource, graphResults.getStart(), graphResults.getEnd());\n            getAttributeFiles(graph, filesToPromote);\n            graphs.add(graph);\n        }\n\n        \n        \n        sendEvent(filesToPromote);\n        \n        \n        /*\n         * Sort the graphs by their order in the properties file.\n         * PrefabGraph implements the Comparable interface.\n         */\n        Collections.sort(graphs);\n\n        rs.setGraphs(graphs);\n        \n        return rs;\n    }","commit_id":"0ef0d747f989a560a7d27973eea45950b1eed383","url":"https://github.com/OpenNMS/opennms"},{"original_method":"public void handleEvent(TokenRenewerParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenRenewerParameters params = event.getTokenParameters();\n            HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n            map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n            map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n            map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                    getMessageContext().get(\"org.apache.cxf.request.url\"));\n            map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            if (params.getTokenRequirements().getRenewTarget() != null) {\n                map.put(KEYS.RENEW_PRINCIPAL.name(), \n                        params.getTokenRequirements().getRenewTarget().getPrincipal().getName());\n            }\n            if (params.getPrincipal() != null) {\n                map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n            }\n            map.put(KEYS.REALM.name(), params.getRealm());\n            map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                if (this.isLogStacktrace()) {\n                    final Writer result = new StringWriter();\n                    final PrintWriter printWriter = new PrintWriter(result);\n                    ex.printStackTrace(printWriter);\n                    map.put(KEYS.EXCEPTION.name(), result.toString());\n                } else {\n                    map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }        \n    }","id":20859,"modified_method":"public void handleEvent(TokenRenewerParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenRenewerParameters params = event.getTokenParameters();\n            HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n            map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n            map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n            map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                    getMessageContext().get(\"org.apache.cxf.request.url\"));\n            map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            if (params.getTokenRequirements().getRenewTarget() != null) {\n                map.put(KEYS.RENEW_PRINCIPAL.name(), \n                        params.getTokenRequirements().getRenewTarget().getPrincipal().getName());\n            }\n            if (params.getPrincipal() != null) {\n                map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n            }\n            map.put(KEYS.REALM.name(), params.getRealm());\n            map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                if (this.isLogStacktrace() && stacktraceFormatter != null) {\n                    map.put(KEYS.STACKTRACE.name(), stacktraceFormatter.format(ex));\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }        \n    }","commit_id":"eeb54d7aed207717fd2243f6975f0dc432c4035d","url":"https://github.com/apache/cxf"},{"original_method":"public void handleEvent(TokenProviderParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenProviderParameters params = event.getTokenParameters();\n            try {\n                HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                    getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n                map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n                map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n                map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                        getMessageContext().get(\"org.apache.cxf.request.url\"));\n            } catch (NullPointerException ex) {\n                map.put(KEYS.REMOTE_HOST.name(), \"N.A.\");\n                map.put(KEYS.REMOTE_PORT.name(), \"N.A.\");\n                map.put(KEYS.URL.name(), \"N.A.\");\n            }\n            \n            try {\n                map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            } catch (NullPointerException ex) {\n                map.put(KEYS.TOKENTYPE.name(), \"N.A.\");\n            }\n            \n            try {\n                if (params.getTokenRequirements().getOnBehalfOf() != null) {\n                    map.put(KEYS.ONBEHALFOF_PRINCIPAL.name(),\n                            params.getTokenRequirements().getOnBehalfOf().getPrincipal().getName());\n                }\n                if (params.getTokenRequirements().getActAs() != null) {\n                    map.put(KEYS.ACTAS_PRINCIPAL.name(),\n                            params.getTokenRequirements().getActAs().getPrincipal().getName());\n                }\n                if (params.getPrincipal() != null) {\n                    map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n                }\n            } catch (NullPointerException ex) {\n                //Principal could be null\n            }\n            map.put(KEYS.REALM.name(), params.getRealm());\n            map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            \n            if (params.getRequestedPrimaryClaims() != null\n                    && fieldOrder.indexOf(KEYS.CLAIMS_PRIMARY.name()) != -1) {\n                List<String> claims = new ArrayList<String>();\n                for (RequestClaim claim : params.getRequestedPrimaryClaims()) {\n                    claims.add(claim.getClaimType().toString());\n                }\n                map.put(KEYS.CLAIMS_PRIMARY.name(), claims.toString());\n            }\n            if (params.getRequestedSecondaryClaims() != null\n                    && fieldOrder.indexOf(KEYS.CLAIMS_SECONDARY.name()) != -1) {\n                List<String> claims = new ArrayList<String>();\n                for (RequestClaim claim : params.getRequestedSecondaryClaims()) {\n                    claims.add(claim.getClaimType().toString());\n                }\n                map.put(KEYS.CLAIMS_SECONDARY.name(), claims.toString());\n            }\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                if (this.isLogStacktrace()) {\n                    final Writer result = new StringWriter();\n                    final PrintWriter printWriter = new PrintWriter(result);\n                    ex.printStackTrace(printWriter);\n                    map.put(KEYS.EXCEPTION.name(), result.toString());\n                } else {\n                    map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }\n    }","id":20860,"modified_method":"public void handleEvent(TokenProviderParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenProviderParameters params = event.getTokenParameters();\n            try {\n                HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                    getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n                map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n                map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n                map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                        getMessageContext().get(\"org.apache.cxf.request.url\"));\n            } catch (NullPointerException ex) {\n                map.put(KEYS.REMOTE_HOST.name(), \"N.A.\");\n                map.put(KEYS.REMOTE_PORT.name(), \"N.A.\");\n                map.put(KEYS.URL.name(), \"N.A.\");\n            }\n            \n            try {\n                map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            } catch (NullPointerException ex) {\n                map.put(KEYS.TOKENTYPE.name(), \"N.A.\");\n            }\n            \n            try {\n                if (params.getTokenRequirements().getOnBehalfOf() != null) {\n                    map.put(KEYS.ONBEHALFOF_PRINCIPAL.name(),\n                            params.getTokenRequirements().getOnBehalfOf().getPrincipal().getName());\n                }\n                if (params.getTokenRequirements().getActAs() != null) {\n                    map.put(KEYS.ACTAS_PRINCIPAL.name(),\n                            params.getTokenRequirements().getActAs().getPrincipal().getName());\n                }\n                if (params.getPrincipal() != null) {\n                    map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n                }\n            } catch (NullPointerException ex) {\n                //Principal could be null\n            }\n            map.put(KEYS.REALM.name(), params.getRealm());\n            map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            \n            if (params.getRequestedPrimaryClaims() != null\n                    && fieldOrder.indexOf(KEYS.CLAIMS_PRIMARY.name()) != -1) {\n                List<String> claims = new ArrayList<String>();\n                for (RequestClaim claim : params.getRequestedPrimaryClaims()) {\n                    claims.add(claim.getClaimType().toString());\n                }\n                map.put(KEYS.CLAIMS_PRIMARY.name(), claims.toString());\n            }\n            if (params.getRequestedSecondaryClaims() != null\n                    && fieldOrder.indexOf(KEYS.CLAIMS_SECONDARY.name()) != -1) {\n                List<String> claims = new ArrayList<String>();\n                for (RequestClaim claim : params.getRequestedSecondaryClaims()) {\n                    claims.add(claim.getClaimType().toString());\n                }\n                map.put(KEYS.CLAIMS_SECONDARY.name(), claims.toString());\n            }\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                if (this.isLogStacktrace() && stacktraceFormatter != null) {\n                    map.put(KEYS.STACKTRACE.name(), stacktraceFormatter.format(ex));\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }\n    }","commit_id":"eeb54d7aed207717fd2243f6975f0dc432c4035d","url":"https://github.com/apache/cxf"},{"original_method":"public LoggerListener() {\n        fieldOrder.add(KEYS.TIME.name());\n        fieldOrder.add(KEYS.STATUS.name());\n        fieldOrder.add(KEYS.DURATION.name());\n        fieldOrder.add(KEYS.REMOTE_HOST.name());\n        fieldOrder.add(KEYS.REMOTE_PORT.name());\n        fieldOrder.add(KEYS.OPERATION.name());\n        fieldOrder.add(KEYS.URL.name());\n        fieldOrder.add(KEYS.REALM.name());\n        fieldOrder.add(KEYS.WS_SEC_PRINCIPAL.name());\n        fieldOrder.add(KEYS.ONBEHALFOF_PRINCIPAL.name());\n        fieldOrder.add(KEYS.ACTAS_PRINCIPAL.name());\n        fieldOrder.add(KEYS.VALIDATE_PRINCIPAL.name());\n        fieldOrder.add(KEYS.CANCEL_PRINCIPAL.name());\n        fieldOrder.add(KEYS.RENEW_PRINCIPAL.name());\n        fieldOrder.add(KEYS.TOKENTYPE.name());\n        fieldOrder.add(KEYS.APPLIESTO.name());\n        fieldOrder.add(KEYS.CLAIMS_PRIMARY.name());\n        fieldOrder.add(KEYS.CLAIMS_SECONDARY.name());\n        fieldOrder.add(KEYS.EXCEPTION.name());\n    }","id":20861,"modified_method":"public LoggerListener() {\n        fieldOrder.add(KEYS.TIME.name());\n        fieldOrder.add(KEYS.STATUS.name());\n        fieldOrder.add(KEYS.DURATION.name());\n        fieldOrder.add(KEYS.REMOTE_HOST.name());\n        fieldOrder.add(KEYS.REMOTE_PORT.name());\n        fieldOrder.add(KEYS.OPERATION.name());\n        fieldOrder.add(KEYS.URL.name());\n        fieldOrder.add(KEYS.REALM.name());\n        fieldOrder.add(KEYS.WS_SEC_PRINCIPAL.name());\n        fieldOrder.add(KEYS.ONBEHALFOF_PRINCIPAL.name());\n        fieldOrder.add(KEYS.ACTAS_PRINCIPAL.name());\n        fieldOrder.add(KEYS.VALIDATE_PRINCIPAL.name());\n        fieldOrder.add(KEYS.CANCEL_PRINCIPAL.name());\n        fieldOrder.add(KEYS.RENEW_PRINCIPAL.name());\n        fieldOrder.add(KEYS.TOKENTYPE.name());\n        fieldOrder.add(KEYS.APPLIESTO.name());\n        fieldOrder.add(KEYS.CLAIMS_PRIMARY.name());\n        fieldOrder.add(KEYS.CLAIMS_SECONDARY.name());\n        fieldOrder.add(KEYS.EXCEPTION.name());\n        fieldOrder.add(KEYS.STACKTRACE.name());\n    }","commit_id":"eeb54d7aed207717fd2243f6975f0dc432c4035d","url":"https://github.com/apache/cxf"},{"original_method":"public void handleEvent(TokenValidatorParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenValidatorParameters params = event.getTokenParameters();\n            HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n            map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n            map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n            map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                    getMessageContext().get(\"org.apache.cxf.request.url\"));\n            map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            if (params.getTokenRequirements().getActAs() != null) {\n                map.put(KEYS.VALIDATE_PRINCIPAL.name(), \n                        params.getTokenRequirements().getValidateTarget().getPrincipal().getName());\n            }\n            if (params.getPrincipal() != null) {\n                map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n            }\n            map.put(KEYS.REALM.name(), params.getRealm());\n            //map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                if (this.isLogStacktrace()) {\n                    final Writer result = new StringWriter();\n                    final PrintWriter printWriter = new PrintWriter(result);\n                    ex.printStackTrace(printWriter);\n                    map.put(KEYS.EXCEPTION.name(), result.toString());\n                } else {\n                    map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }        \n    }","id":20862,"modified_method":"public void handleEvent(TokenValidatorParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenValidatorParameters params = event.getTokenParameters();\n            HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n            map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n            map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n            map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                    getMessageContext().get(\"org.apache.cxf.request.url\"));\n            map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            if (params.getTokenRequirements().getActAs() != null) {\n                map.put(KEYS.VALIDATE_PRINCIPAL.name(), \n                        params.getTokenRequirements().getValidateTarget().getPrincipal().getName());\n            }\n            if (params.getPrincipal() != null) {\n                map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n            }\n            map.put(KEYS.REALM.name(), params.getRealm());\n            //map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                if (this.isLogStacktrace() && stacktraceFormatter != null) {\n                    map.put(KEYS.STACKTRACE.name(), stacktraceFormatter.format(ex));\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }        \n    }","commit_id":"eeb54d7aed207717fd2243f6975f0dc432c4035d","url":"https://github.com/apache/cxf"},{"original_method":"public void handleEvent(TokenCancellerParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenCancellerParameters params = event.getTokenParameters();\n            HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n            map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n            map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n            map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                    getMessageContext().get(\"org.apache.cxf.request.url\"));\n            map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            if (params.getTokenRequirements().getActAs() != null) {\n                map.put(KEYS.CANCEL_PRINCIPAL.name(), \n                        params.getTokenRequirements().getCancelTarget().getPrincipal().getName());\n            }\n            if (params.getPrincipal() != null) {\n                map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n            }\n            //map.put(KEYS.REALM.name(), params.getRealm());\n            //map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                if (this.isLogStacktrace()) {\n                    final Writer result = new StringWriter();\n                    final PrintWriter printWriter = new PrintWriter(result);\n                    ex.printStackTrace(printWriter);\n                    map.put(KEYS.EXCEPTION.name(), result.toString());\n                } else {\n                    map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }        \n    }","id":20863,"modified_method":"public void handleEvent(TokenCancellerParametersSupport event) {\n        try {\n            Map<String, String> map = new HashMap<String, String>();\n            AbstractSTSEvent baseEvent = (AbstractSTSEvent)event;\n            map.put(KEYS.TIME.name(), this.dateFormat.format(new Date(baseEvent.getTimestamp())));\n            map.put(KEYS.OPERATION.name(), baseEvent.getOperation());\n            map.put(KEYS.DURATION.name(), String.valueOf(baseEvent.getDuration()) + \"ms\");\n            \n            TokenCancellerParameters params = event.getTokenParameters();\n            HttpServletRequest req = (HttpServletRequest)params.getWebServiceContext().\n                getMessageContext().get(AbstractHTTPDestination.HTTP_REQUEST);\n            map.put(KEYS.REMOTE_HOST.name(), req.getRemoteHost());\n            map.put(KEYS.REMOTE_PORT.name(), String.valueOf(req.getRemotePort()));\n            map.put(KEYS.URL.name(), (String)params.getWebServiceContext().\n                    getMessageContext().get(\"org.apache.cxf.request.url\"));\n            map.put(KEYS.TOKENTYPE.name(), params.getTokenRequirements().getTokenType());\n            if (params.getTokenRequirements().getActAs() != null) {\n                map.put(KEYS.CANCEL_PRINCIPAL.name(), \n                        params.getTokenRequirements().getCancelTarget().getPrincipal().getName());\n            }\n            if (params.getPrincipal() != null) {\n                map.put(KEYS.WS_SEC_PRINCIPAL.name(), params.getPrincipal().getName());\n            }\n            //map.put(KEYS.REALM.name(), params.getRealm());\n            //map.put(KEYS.APPLIESTO.name(), params.getAppliesToAddress());\n            if (event instanceof AbstractSTSFailureEvent) {\n                map.put(KEYS.STATUS.name(), \"FAILURE\");\n                Exception ex = ((AbstractSTSFailureEvent)event).getException();\n                map.put(KEYS.EXCEPTION.name(), ex.getMessage());\n                if (this.isLogStacktrace() && stacktraceFormatter != null) {\n                    map.put(KEYS.STACKTRACE.name(), stacktraceFormatter.format(ex));\n                }\n            } else {\n                map.put(KEYS.STATUS.name(), \"SUCCESS\");\n            }\n            writeLog(map);\n        } catch (Exception ex) {\n            LOG.log(Level.WARNING, \"Failed to capture or write logging details\", ex);\n        }        \n    }","commit_id":"eeb54d7aed207717fd2243f6975f0dc432c4035d","url":"https://github.com/apache/cxf"},{"original_method":"@Test\n    public void testCrossContextDispatch() throws Exception\n    {\n        String contextA = \"/contextA\";\n        String contextB = \"/contextB\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server = createServer(0);\n        TestServletA servletA = new TestServletA();\n        ServletHolder holderA = new ServletHolder(servletA);\n        ServletContextHandler ctxA = server.addContext(contextA);\n        ctxA.addServlet(holderA, servletMapping);\n        ServletContextHandler ctxB = server.addContext(contextB);\n        TestServletB servletB = new TestServletB();\n        ServletHolder holderB = new ServletHolder(servletB);\n        ctxB.addServlet(holderB, servletMapping);\n        server.start();\n        int port = server.getPort();\n        \n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                // Perform a request to contextA\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextA + servletMapping);\n                ContentResponse response = future.get();\n\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                // Perform a request to contextB with the same session cookie\n                Request request = client.newRequest(\"http://localhost:\" + port + contextB + servletMapping);\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                ContentResponse responseB = future.get();\n                assertEquals(HttpServletResponse.SC_OK,responseB.status());\n                assertEquals(servletA.sessionId, servletB.sessionId);\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","id":20864,"modified_method":"@Test\n    public void testCrossContextDispatch() throws Exception\n    {\n        String contextA = \"/contextA\";\n        String contextB = \"/contextB\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server = createServer(0);\n        TestServletA servletA = new TestServletA();\n        ServletHolder holderA = new ServletHolder(servletA);\n        ServletContextHandler ctxA = server.addContext(contextA);\n        ctxA.addServlet(holderA, servletMapping);\n        ServletContextHandler ctxB = server.addContext(contextB);\n        TestServletB servletB = new TestServletB();\n        ServletHolder holderB = new ServletHolder(servletB);\n        ctxB.addServlet(holderB, servletMapping);\n        server.start();\n        int port = server.getPort();\n        \n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                // Perform a request to contextA\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextA + servletMapping);\n                ContentResponse response = future.get();\n\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                // Perform a request to contextB with the same session cookie\n                Request request = client.newRequest(\"http://localhost:\" + port + contextB + servletMapping);\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                ContentResponse responseB = future.get();\n                assertEquals(HttpServletResponse.SC_OK,responseB.getStatus());\n                assertEquals(servletA.sessionId, servletB.sessionId);\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testImmortalSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 2;\n        //turn off session expiry by setting maxInactiveInterval to -1\n        AbstractTestServer server = createServer(0, -1, scavengePeriod);\n        server.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        \n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                int value = 42; \n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=set&value=\" + value);\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                String resp = response.contentAsString();\n                assertEquals(resp.trim(),String.valueOf(value));\n\n                // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                Thread.sleep(scavengePeriod * 2500L);\n\n                // Be sure the session is still there \n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=get\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                resp = response.contentAsString();\n                assertEquals(String.valueOf(value),resp.trim());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","id":20865,"modified_method":"@Test\n    public void testImmortalSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 2;\n        //turn off session expiry by setting maxInactiveInterval to -1\n        AbstractTestServer server = createServer(0, -1, scavengePeriod);\n        server.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        \n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                int value = 42; \n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=set&value=\" + value);\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                String resp = response.getContentAsString();\n                assertEquals(resp.trim(),String.valueOf(value));\n\n                // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                Thread.sleep(scavengePeriod * 2500L);\n\n                // Be sure the session is still there \n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=get\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                resp = response.getContentAsString();\n                assertEquals(String.valueOf(value),resp.trim());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testInvalidation() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server1 = createServer(0);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        System.err.println(\"Port1=\"+port1);\n        try\n        {\n            AbstractTestServer server2 = createServer(0);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2=server2.getPort();\n            System.err.println(\"port2=\"+port2);\n            try\n            {\n                HttpClient client = new HttpClient();\n                QueuedThreadPool executor = new QueuedThreadPool();\n                client.setExecutor(executor);\n                client.start();\n                try\n                {\n                    String[] urls = new String[2];\n                    urls[0] = \"http://localhost:\" + port1 + contextPath + servletMapping;\n                    urls[1] = \"http://localhost:\" + port2 + contextPath + servletMapping;\n\n                    // Create the session on node1\n                    Future<ContentResponse> future = client.GET(urls[0] + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    \n                    assertEquals(HttpServletResponse.SC_OK,response1.status());\n                    String sessionCookie = response1.headers().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Be sure the session is also present in node2\n                   \n                    Request request2 = client.newRequest(urls[1] + \"?action=increment\");\n                    request2.header(\"Cookie\", sessionCookie);       \n                    future = request2.send();\n                    ContentResponse response2 = future.get();                   \n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n\n                    // Invalidate on node1\n                    Request request1 = client.newRequest(urls[0] + \"?action=invalidate\");\n                    request1.header(\"Cookie\", sessionCookie);\n                    future = request1.send();\n                    assertEquals(HttpServletResponse.SC_OK, response1.status());\n\n                    pause();\n                    \n                    // Be sure on node2 we don't see the session anymore\n                    request2 = client.newRequest(urls[1] + \"?action=test\");\n                    request2.header(\"Cookie\", sessionCookie);\n                    future = request2.send();\n                    response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20866,"modified_method":"@Test\n    public void testInvalidation() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server1 = createServer(0);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        System.err.println(\"Port1=\"+port1);\n        try\n        {\n            AbstractTestServer server2 = createServer(0);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2=server2.getPort();\n            System.err.println(\"port2=\"+port2);\n            try\n            {\n                HttpClient client = new HttpClient();\n                QueuedThreadPool executor = new QueuedThreadPool();\n                client.setExecutor(executor);\n                client.start();\n                try\n                {\n                    String[] urls = new String[2];\n                    urls[0] = \"http://localhost:\" + port1 + contextPath + servletMapping;\n                    urls[1] = \"http://localhost:\" + port2 + contextPath + servletMapping;\n\n                    // Create the session on node1\n                    Future<ContentResponse> future = client.GET(urls[0] + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    \n                    assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n                    String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Be sure the session is also present in node2\n                   \n                    Request request2 = client.newRequest(urls[1] + \"?action=increment\");\n                    request2.header(\"Cookie\", sessionCookie);       \n                    future = request2.send();\n                    ContentResponse response2 = future.get();                   \n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n\n                    // Invalidate on node1\n                    Request request1 = client.newRequest(urls[0] + \"?action=invalidate\");\n                    request1.header(\"Cookie\", sessionCookie);\n                    future = request1.send();\n                    assertEquals(HttpServletResponse.SC_OK, response1.getStatus());\n\n                    pause();\n                    \n                    // Be sure on node2 we don't see the session anymore\n                    request2 = client.newRequest(urls[1] + \"?action=test\");\n                    request2.header(\"Cookie\", sessionCookie);\n                    future = request2.send();\n                    response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLastAccessTime() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int maxInactivePeriod = 8; //session will timeout after 8 seconds\n        int scavengePeriod = 2; //scavenging occurs every 2 seconds\n        AbstractTestServer server1 = createServer(0, maxInactivePeriod, scavengePeriod);\n        TestServlet servlet1 = new TestServlet();\n        ServletHolder holder1 = new ServletHolder(servlet1);\n        ServletContextHandler context = server1.addContext(contextPath);\n        TestSessionListener listener1 = new TestSessionListener();\n        context.addEventListener(listener1);\n        context.addServlet(holder1, servletMapping);\n        server1.start();\n        int port1=server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0, maxInactivePeriod, scavengePeriod);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2=server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Perform one request to server1 to create a session\n                    Future<ContentResponse> future = client.GET(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK, response1.status());\n                    assertEquals(\"test\", response1.contentAsString());\n                    String sessionCookie = response1.headers().getStringField(\"Set-Cookie\");\n                    assertTrue( sessionCookie != null );\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform some request to server2 using the session cookie from the previous request\n                    // This should migrate the session from server1 to server2, and leave server1's\n                    // session in a very stale state, while server2 has a very fresh session.\n                    // We want to test that optimizations done to the saving of the shared lastAccessTime\n                    // do not break the correct working\n                    int requestInterval = 500;\n                    for (int i = 0; i < maxInactivePeriod * (1000 / requestInterval); ++i)\n                    {\n                        Request request = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping);\n                        request.header(\"Cookie\", sessionCookie);\n                        future = request.send();\n                        ContentResponse response2 = future.get();\n                        assertEquals(HttpServletResponse.SC_OK , response2.status());\n                        assertEquals(\"test\", response2.contentAsString());\n\n                        String setCookie = response2.headers().getStringField(\"Set-Cookie\");\n                        if (setCookie!=null)                    \n                            sessionCookie = setCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n                        \n                        Thread.sleep(requestInterval);\n                    }\n\n                    // At this point, session1 should be eligible for expiration.\n                    // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                    Thread.sleep(scavengePeriod * 2500L);\n\n                    //check that the session was not scavenged over on server1 by ensuring that the SessionListener destroy method wasn't called\n                    assertTrue (listener1.destroyed == false);          \n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20867,"modified_method":"@Test\n    public void testLastAccessTime() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int maxInactivePeriod = 8; //session will timeout after 8 seconds\n        int scavengePeriod = 2; //scavenging occurs every 2 seconds\n        AbstractTestServer server1 = createServer(0, maxInactivePeriod, scavengePeriod);\n        TestServlet servlet1 = new TestServlet();\n        ServletHolder holder1 = new ServletHolder(servlet1);\n        ServletContextHandler context = server1.addContext(contextPath);\n        TestSessionListener listener1 = new TestSessionListener();\n        context.addEventListener(listener1);\n        context.addServlet(holder1, servletMapping);\n        server1.start();\n        int port1=server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0, maxInactivePeriod, scavengePeriod);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2=server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Perform one request to server1 to create a session\n                    Future<ContentResponse> future = client.GET(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK, response1.getStatus());\n                    assertEquals(\"test\", response1.getContentAsString());\n                    String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                    assertTrue( sessionCookie != null );\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform some request to server2 using the session cookie from the previous request\n                    // This should migrate the session from server1 to server2, and leave server1's\n                    // session in a very stale state, while server2 has a very fresh session.\n                    // We want to test that optimizations done to the saving of the shared lastAccessTime\n                    // do not break the correct working\n                    int requestInterval = 500;\n                    for (int i = 0; i < maxInactivePeriod * (1000 / requestInterval); ++i)\n                    {\n                        Request request = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping);\n                        request.header(\"Cookie\", sessionCookie);\n                        future = request.send();\n                        ContentResponse response2 = future.get();\n                        assertEquals(HttpServletResponse.SC_OK , response2.getStatus());\n                        assertEquals(\"test\", response2.getContentAsString());\n\n                        String setCookie = response2.getHeaders().getStringField(\"Set-Cookie\");\n                        if (setCookie!=null)                    \n                            sessionCookie = setCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n                        \n                        Thread.sleep(requestInterval);\n                    }\n\n                    // At this point, session1 should be eligible for expiration.\n                    // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                    Thread.sleep(scavengePeriod * 2500L);\n\n                    //check that the session was not scavenged over on server1 by ensuring that the SessionListener destroy method wasn't called\n                    assertTrue (listener1.destroyed == false);          \n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLightLoad()\n        throws Exception\n    {\n        if ( _stress )\n        {\n            String contextPath = \"\";\n            String servletMapping = \"/server\";\n            AbstractTestServer server1 = createServer( 0 );\n            server1.addContext( contextPath ).addServlet( TestServlet.class, servletMapping );\n            server1.start();\n            int port1 = server1.getPort();\n            try\n            {\n                AbstractTestServer server2 = createServer( 0 );\n                server2.addContext( contextPath ).addServlet( TestServlet.class, servletMapping );\n                server2.start();\n                int port2=server2.getPort();\n                try\n                {\n                    HttpClient client = new HttpClient();\n                    client.start();\n                    try\n                    {\n                        String[] urls = new String[2];\n                        urls[0] = \"http://localhost:\" + port1 + contextPath + servletMapping;\n                        urls[1] = \"http://localhost:\" + port2 + contextPath + servletMapping;\n\n                        Future<ContentResponse> future = client.GET( urls[0] + \"?action=init\" );\n                        ContentResponse response1 = future.get();\n                        assertEquals(HttpServletResponse.SC_OK,response1.status());\n                        String sessionCookie = response1.headers().getStringField( \"Set-Cookie\" );\n                        assertTrue(sessionCookie != null);\n                        // Mangle the cookie, replacing Path with $Path, etc.\n                        sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                        ExecutorService executor = Executors.newCachedThreadPool();\n                        int clientsCount = 50;\n                        CyclicBarrier barrier = new CyclicBarrier( clientsCount + 1 );\n                        int requestsCount = 100;\n                        Worker[] workers = new Worker[clientsCount];\n                        for ( int i = 0; i < clientsCount; ++i )\n                        {\n                            workers[i] = new Worker( barrier, requestsCount, sessionCookie, urls );\n                            workers[i].start();\n                            executor.execute( workers[i] );\n                        }\n                        // Wait for all workers to be ready\n                        barrier.await();\n                        long start = System.nanoTime();\n\n                        // Wait for all workers to be done\n                        barrier.await();\n                        long end = System.nanoTime();\n                        long elapsed = TimeUnit.NANOSECONDS.toMillis( end - start );\n                        System.out.println( \"elapsed ms: \" + elapsed );\n\n                        for ( Worker worker : workers )\n                            worker.stop();\n                        executor.shutdownNow();\n\n                        // Perform one request to get the result\n                        Request request = client.newRequest( urls[0] + \"?action=result\" );\n                        request.header(\"Cookie\", sessionCookie);\n                        future = request.send();\n                        ContentResponse response2 = future.get();\n                        assertEquals(HttpServletResponse.SC_OK,response2.status());\n                        String response = response2.contentAsString();\n                        System.out.println( \"get = \" + response );\n                        assertEquals(response.trim(), String.valueOf( clientsCount * requestsCount ) );\n                    }\n                    finally\n                    {\n                        client.stop();\n                    }\n                }\n                finally\n                {\n                    server2.stop();\n                }\n            }\n            finally\n            {\n                server1.stop();\n            }\n        }\n    }","id":20868,"modified_method":"@Test\n    public void testLightLoad()\n        throws Exception\n    {\n        if ( _stress )\n        {\n            String contextPath = \"\";\n            String servletMapping = \"/server\";\n            AbstractTestServer server1 = createServer( 0 );\n            server1.addContext( contextPath ).addServlet( TestServlet.class, servletMapping );\n            server1.start();\n            int port1 = server1.getPort();\n            try\n            {\n                AbstractTestServer server2 = createServer( 0 );\n                server2.addContext( contextPath ).addServlet( TestServlet.class, servletMapping );\n                server2.start();\n                int port2=server2.getPort();\n                try\n                {\n                    HttpClient client = new HttpClient();\n                    client.start();\n                    try\n                    {\n                        String[] urls = new String[2];\n                        urls[0] = \"http://localhost:\" + port1 + contextPath + servletMapping;\n                        urls[1] = \"http://localhost:\" + port2 + contextPath + servletMapping;\n\n                        Future<ContentResponse> future = client.GET( urls[0] + \"?action=init\" );\n                        ContentResponse response1 = future.get();\n                        assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n                        String sessionCookie = response1.getHeaders().getStringField( \"Set-Cookie\" );\n                        assertTrue(sessionCookie != null);\n                        // Mangle the cookie, replacing Path with $Path, etc.\n                        sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                        ExecutorService executor = Executors.newCachedThreadPool();\n                        int clientsCount = 50;\n                        CyclicBarrier barrier = new CyclicBarrier( clientsCount + 1 );\n                        int requestsCount = 100;\n                        Worker[] workers = new Worker[clientsCount];\n                        for ( int i = 0; i < clientsCount; ++i )\n                        {\n                            workers[i] = new Worker( barrier, requestsCount, sessionCookie, urls );\n                            workers[i].start();\n                            executor.execute( workers[i] );\n                        }\n                        // Wait for all workers to be ready\n                        barrier.await();\n                        long start = System.nanoTime();\n\n                        // Wait for all workers to be done\n                        barrier.await();\n                        long end = System.nanoTime();\n                        long elapsed = TimeUnit.NANOSECONDS.toMillis( end - start );\n                        System.out.println( \"elapsed ms: \" + elapsed );\n\n                        for ( Worker worker : workers )\n                            worker.stop();\n                        executor.shutdownNow();\n\n                        // Perform one request to get the result\n                        Request request = client.newRequest( urls[0] + \"?action=result\" );\n                        request.header(\"Cookie\", sessionCookie);\n                        future = request.send();\n                        ContentResponse response2 = future.get();\n                        assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n                        String response = response2.getContentAsString();\n                        System.out.println( \"get = \" + response );\n                        assertEquals(response.trim(), String.valueOf( clientsCount * requestsCount ) );\n                    }\n                    finally\n                    {\n                        client.stop();\n                    }\n                }\n                finally\n                {\n                    server2.stop();\n                }\n            }\n            finally\n            {\n                server1.stop();\n            }\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void run()\n        {\n            try\n            {\n                // Wait for all workers to be ready\n                barrier.await();\n\n                Random random = new Random( System.nanoTime() );\n                \n                for ( int i = 0; i < requestsCount; ++i )\n                {\n                    int urlIndex = random.nextInt( urls.length );\n                    Request request = client.newRequest(urls[urlIndex] + \"?action=increment\");\n                    request.header(\"Cookie\", sessionCookie);\n                    Future<ContentResponse> future = request.send();\n                    ContentResponse response = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response.status());\n                }\n\n                // Wait for all workers to be done\n                barrier.await();\n            }\n            catch ( Exception x )\n            {\n                throw new RuntimeException( x );\n            }\n        }","id":20869,"modified_method":"public void run()\n        {\n            try\n            {\n                // Wait for all workers to be ready\n                barrier.await();\n\n                Random random = new Random( System.nanoTime() );\n                \n                for ( int i = 0; i < requestsCount; ++i )\n                {\n                    int urlIndex = random.nextInt( urls.length );\n                    Request request = client.newRequest(urls[urlIndex] + \"?action=increment\");\n                    request.header(\"Cookie\", sessionCookie);\n                    Future<ContentResponse> future = request.send();\n                    ContentResponse response = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                }\n\n                // Wait for all workers to be done\n                barrier.await();\n            }\n            catch ( Exception x )\n            {\n                throw new RuntimeException( x );\n            }\n        }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testLocalSessionsScavenging() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 1;\n        int scavengePeriod = 2;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, scavengePeriod);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0, inactivePeriod, scavengePeriod * 3);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2 = server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    String[] urls = new String[2];\n                    urls[0] = \"http://localhost:\" + port1 + contextPath + servletMapping;\n                    urls[1] = \"http://localhost:\" + port2 + contextPath + servletMapping;\n\n                    // Create the session on node1\n                    Future<ContentResponse> future = client.GET(urls[0] + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.status());\n                    String sessionCookie = response1.headers().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Be sure the session is also present in node2                    \n                    org.eclipse.jetty.client.api.Request request = client.newRequest(urls[1] + \"?action=test\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    ContentResponse response2 = future.get();            \n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n                    \n                    \n                    // Wait for the scavenger to run on node1, waiting 2.5 times the scavenger period\n                    pause(scavengePeriod);\n                    \n                    // Check that node1 does not have any local session cached\n                    request = client.newRequest(urls[0] + \"?action=check\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.status());\n\n\n                    // Wait for the scavenger to run on node2, waiting 2 times the scavenger period\n                    // This ensures that the scavenger on node2 runs at least once.\n                    pause(scavengePeriod);\n\n                    // Check that node2 does not have any local session cached\n                    request = client.newRequest(urls[1] + \"?action=check\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20870,"modified_method":"@Test\n    public void testLocalSessionsScavenging() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 1;\n        int scavengePeriod = 2;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, scavengePeriod);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0, inactivePeriod, scavengePeriod * 3);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2 = server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    String[] urls = new String[2];\n                    urls[0] = \"http://localhost:\" + port1 + contextPath + servletMapping;\n                    urls[1] = \"http://localhost:\" + port2 + contextPath + servletMapping;\n\n                    // Create the session on node1\n                    Future<ContentResponse> future = client.GET(urls[0] + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n                    String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Be sure the session is also present in node2                    \n                    org.eclipse.jetty.client.api.Request request = client.newRequest(urls[1] + \"?action=test\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    ContentResponse response2 = future.get();            \n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n                    \n                    \n                    // Wait for the scavenger to run on node1, waiting 2.5 times the scavenger period\n                    pause(scavengePeriod);\n                    \n                    // Check that node1 does not have any local session cached\n                    request = client.newRequest(urls[0] + \"?action=check\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n\n\n                    // Wait for the scavenger to run on node2, waiting 2 times the scavenger period\n                    // This ensures that the scavenger on node2 runs at least once.\n                    pause(scavengePeriod);\n\n                    // Check that node2 does not have any local session cached\n                    request = client.newRequest(urls[1] + \"?action=check\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testNewSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                pause(scavengePeriod);\n\n                // The session is not there anymore, but we present an old cookie\n                // The server creates a new session, we must ensure we released all locks\n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=old-create\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n\n    }","id":20871,"modified_method":"@Test\n    public void testNewSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                pause(scavengePeriod);\n\n                // The session is not there anymore, but we present an old cookie\n                // The server creates a new session, we must ensure we released all locks\n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=old-create\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"/**\n     * If nodeA creates a session, and just afterwards crashes, it is the only node that knows about the session.\n     * We want to test that the session data is gone after scavenging.\n     */\n    @Test\n    public void testOrphanedSession() throws Exception\n    {\n        // Disable scavenging for the first server, so that we simulate its \"crash\".\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 5;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, -1);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n            int scavengePeriod = 2;\n            AbstractTestServer server2 = createServer(0, inactivePeriod, scavengePeriod);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2 = server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Connect to server1 to create a session and get its session cookie\n                    Future<ContentResponse> future = client.GET(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.status());\n                    String sessionCookie = response1.headers().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Wait for the session to expire.\n                    // The first node does not do any scavenging, but the session\n                    // must be removed by scavenging done in the other node.\n                    Thread.sleep(TimeUnit.SECONDS.toMillis(inactivePeriod + 2L * scavengePeriod));\n\n                    // Perform one request to server2 to be sure that the session has been expired\n                    Request request = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping + \"?action=check\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    ContentResponse response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20872,"modified_method":"/**\n     * If nodeA creates a session, and just afterwards crashes, it is the only node that knows about the session.\n     * We want to test that the session data is gone after scavenging.\n     */\n    @Test\n    public void testOrphanedSession() throws Exception\n    {\n        // Disable scavenging for the first server, so that we simulate its \"crash\".\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 5;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, -1);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n            int scavengePeriod = 2;\n            AbstractTestServer server2 = createServer(0, inactivePeriod, scavengePeriod);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2 = server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Connect to server1 to create a session and get its session cookie\n                    Future<ContentResponse> future = client.GET(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n                    String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Wait for the session to expire.\n                    // The first node does not do any scavenging, but the session\n                    // must be removed by scavenging done in the other node.\n                    Thread.sleep(TimeUnit.SECONDS.toMillis(inactivePeriod + 2L * scavengePeriod));\n\n                    // Perform one request to server2 to be sure that the session has been expired\n                    Request request = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping + \"?action=check\");\n                    request.header(\"Cookie\", sessionCookie);\n                    future = request.send();\n                    ContentResponse response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testReentrantRequestSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server = createServer(0);\n        server.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port = server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=reenter&port=\" + port + \"&path=\" + contextPath + servletMapping);\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","id":20873,"modified_method":"@Test\n    public void testReentrantRequestSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server = createServer(0);\n        server.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port = server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=reenter&port=\" + port + \"&path=\" + contextPath + servletMapping);\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Override\n        protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\n        {\n            HttpSession session = request.getSession(false);\n\n            String action = request.getParameter(\"action\");\n            if (\"reenter\".equals(action))\n            {\n                if (session == null) \n                    session = request.getSession(true);\n                int port = Integer.parseInt(request.getParameter(\"port\"));\n                String path = request.getParameter(\"path\");\n\n                // We want to make another request \n                // while this request is still pending, to see if the locking is\n                // fine grained (per session at least).\n                try\n                {\n                    HttpClient client = new HttpClient();\n                    client.start();\n                    try\n                    {\n                        Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + path + \";jsessionid=\"+session.getId()+\"?action=none\");\n                        ContentResponse resp = future.get();\n                        assertEquals(HttpServletResponse.SC_OK,resp.status());\n                        assertEquals(\"true\",session.getAttribute(\"reentrant\"));\n                    }\n                    finally\n                    {\n                        client.stop();\n                    }\n                }\n                catch (Exception x)\n                {\n                    throw new ServletException(x);\n                }\n            }\n            else\n            {\n                assertTrue(session!=null);\n                session.setAttribute(\"reentrant\",\"true\");\n            }\n        }","id":20874,"modified_method":"@Override\n        protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException\n        {\n            HttpSession session = request.getSession(false);\n\n            String action = request.getParameter(\"action\");\n            if (\"reenter\".equals(action))\n            {\n                if (session == null) \n                    session = request.getSession(true);\n                int port = Integer.parseInt(request.getParameter(\"port\"));\n                String path = request.getParameter(\"path\");\n\n                // We want to make another request \n                // while this request is still pending, to see if the locking is\n                // fine grained (per session at least).\n                try\n                {\n                    HttpClient client = new HttpClient();\n                    client.start();\n                    try\n                    {\n                        Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + path + \";jsessionid=\"+session.getId()+\"?action=none\");\n                        ContentResponse resp = future.get();\n                        assertEquals(HttpServletResponse.SC_OK,resp.getStatus());\n                        assertEquals(\"true\",session.getAttribute(\"reentrant\"));\n                    }\n                    finally\n                    {\n                        client.stop();\n                    }\n                }\n                catch (Exception x)\n                {\n                    throw new ServletException(x);\n                }\n            }\n            else\n            {\n                assertTrue(session!=null);\n                session.setAttribute(\"reentrant\",\"true\");\n            }\n        }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testRemoveSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        TestEventListener testListener = new TestEventListener();\n        context.getSessionHandler().addEventListener(testListener);\n        server.start();\n        int port = server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n                //ensure sessionCreated listener is called\n                assertTrue (testListener.isCreated());\n\n                //now delete the session       \n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=delete\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                //ensure sessionDestroyed listener is called\n                assertTrue(testListener.isDestroyed());\n                \n                \n                // The session is not there anymore, but we present an old cookie\n                // The server creates a new session, we must ensure we released all locks\n                request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=check\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n\n    }","id":20875,"modified_method":"@Test\n    public void testRemoveSession() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        TestEventListener testListener = new TestEventListener();\n        context.getSessionHandler().addEventListener(testListener);\n        server.start();\n        int port = server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n                //ensure sessionCreated listener is called\n                assertTrue (testListener.isCreated());\n\n                //now delete the session       \n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=delete\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                //ensure sessionDestroyed listener is called\n                assertTrue(testListener.isDestroyed());\n                \n                \n                // The session is not there anymore, but we present an old cookie\n                // The server creates a new session, we must ensure we released all locks\n                request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=check\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testCrossContextDispatch() throws Exception\n    {\n        String contextA = \"/contextA\";\n        String contextB = \"/contextB\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server = createServer(0);\n        ServletContextHandler ctxA = server.addContext(contextA);\n        ctxA.addServlet(TestServletA.class, servletMapping);\n        ServletContextHandler ctxB = server.addContext(contextB);\n        ctxB.addServlet(TestServletB.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                // Perform a request, on server side a cross context dispatch will be done\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextA + servletMapping);\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","id":20876,"modified_method":"@Test\n    public void testCrossContextDispatch() throws Exception\n    {\n        String contextA = \"/contextA\";\n        String contextB = \"/contextB\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server = createServer(0);\n        ServletContextHandler ctxA = server.addContext(contextA);\n        ctxA.addServlet(TestServletA.class, servletMapping);\n        ServletContextHandler ctxB = server.addContext(contextB);\n        ctxB.addServlet(TestServletB.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                // Perform a request, on server side a cross context dispatch will be done\n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextA + servletMapping);\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    @Ignore(\"failing because an http cookie with null value is coming over as \\\"null\\\"\")\n    public void testSessionCookie() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n              \n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                \n                String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                //sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                //pause(scavengePeriod); \n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=check-cookie\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                \n                assertEquals(HttpServletResponse.SC_OK,response.status());\n                \n                request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=null-cookie\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n\n    }","id":20877,"modified_method":"@Test\n    @Ignore(\"failing because an http cookie with null value is coming over as \\\"null\\\"\")\n    public void testSessionCookie() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n              \n                Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                \n                String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                //sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                // Let's wait for the scavenger to run, waiting 2.5 times the scavenger period\n                //pause(scavengePeriod); \n                Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=check-cookie\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                \n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n                \n                request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=null-cookie\");\n                request.header(\"Cookie\", sessionCookie);\n                future = request.send();\n                response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSessionNotExpired() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 10;\n        int scavengePeriod = 10;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, scavengePeriod);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        server1.addContext(contextPath).addServlet(holder, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.setConnectorType(HttpClient.CONNECTOR_SOCKET);\n            client.start();\n            String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n            //make a request to set up a session on the server\n            ContentExchange exchange1 = new ContentExchange(true);\n            exchange1.setMethod(HttpMethods.GET);\n            exchange1.setURL(url + \"?action=init\");\n            client.send(exchange1);\n            exchange1.waitForDone();\n            assertEquals(HttpServletResponse.SC_OK,exchange1.getResponseStatus());\n            String sessionCookie = exchange1.getResponseFields().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n            // Mangle the cookie, replacing Path with $Path, etc.\n            sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n            \n            //now stop the server\n            server1.stop();\n            \n            //start the server again, before the session times out\n            server1.start();            \n            port1 = server1.getPort();\n            url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n            \n            //make another request, the session should not have expired\n            ContentExchange exchange2 = new ContentExchange(true);\n            exchange2.setMethod(HttpMethods.GET);\n            exchange2.setURL(url + \"?action=notexpired\");\n            exchange2.getRequestFields().add(\"Cookie\", sessionCookie);\n            client.send(exchange2);\n            exchange2.waitForDone();\n            assertEquals(HttpServletResponse.SC_OK,exchange2.getResponseStatus());\n\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20878,"modified_method":"@Test\n    public void testSessionNotExpired() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 10;\n        int scavengePeriod = 10;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, scavengePeriod);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        server1.addContext(contextPath).addServlet(holder, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n            //make a request to set up a session on the server\n            Future<ContentResponse> future = client.GET(url + \"?action=init\");\n            ContentResponse response = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n            String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n            // Mangle the cookie, replacing Path with $Path, etc.\n            sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n            \n            //now stop the server\n            server1.stop();\n            \n            //start the server again, before the session times out\n            server1.start();            \n            port1 = server1.getPort();\n            url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n            \n            //make another request, the session should not have expired            \n            Request request = client.newRequest(url + \"?action=notexpired\");\n            request.getHeaders().add(\"Cookie\", sessionCookie);\n            future = request.send();\n            ContentResponse response2 = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSessionExpiry() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 2;\n        int scavengePeriod = 10;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, scavengePeriod);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        server1.addContext(contextPath).addServlet(holder, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.setConnectorType(HttpClient.CONNECTOR_SOCKET);\n            client.start();\n            String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n            //make a request to set up a session on the server\n            ContentExchange exchange1 = new ContentExchange(true);\n            exchange1.setMethod(HttpMethods.GET);\n            exchange1.setURL(url + \"?action=init\");\n            client.send(exchange1);\n            exchange1.waitForDone();\n            assertEquals(HttpServletResponse.SC_OK,exchange1.getResponseStatus());\n            String sessionCookie = exchange1.getResponseFields().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n            // Mangle the cookie, replacing Path with $Path, etc.\n            sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n            \n            //now stop the server\n            server1.stop();\n            \n            //and wait until the expiry time has passed\n            pause(inactivePeriod);\n            \n            //restart the server\n            server1.start();            \n            port1 = server1.getPort();\n            url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n            \n            //make another request, the session should have expired\n            ContentExchange exchange2 = new ContentExchange(true);\n            exchange2.setMethod(HttpMethods.GET);\n            exchange2.setURL(url + \"?action=test\");\n            exchange2.getRequestFields().add(\"Cookie\", sessionCookie);\n            client.send(exchange2);\n            exchange2.waitForDone();\n            assertEquals(HttpServletResponse.SC_OK,exchange2.getResponseStatus());\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20879,"modified_method":"@Test\n    public void testSessionExpiry() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 2;\n        int scavengePeriod = 10;\n        AbstractTestServer server1 = createServer(0, inactivePeriod, scavengePeriod);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        server1.addContext(contextPath).addServlet(holder, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n            //make a request to set up a session on the server\n            Future<ContentResponse> future = client.GET(url + \"?action=init\");\n            ContentResponse response1 = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n            String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n            // Mangle the cookie, replacing Path with $Path, etc.\n            sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n            \n            //now stop the server\n            server1.stop();\n            \n            //and wait until the expiry time has passed\n            pause(inactivePeriod);\n            \n            //restart the server\n            server1.start();            \n            port1 = server1.getPort();\n            url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n            \n            //make another request, the session should have expired\n            Request request = client.newRequest(url + \"?action=test\");\n            request.getHeaders().add(\"Cookie\", sessionCookie);\n            future = request.send();\n            ContentResponse response2 = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSessionScavenge() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 1;\n        int scavengePeriod = 2;\n        AbstractTestServer server = createServer(0, inactivePeriod, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        context.addServlet(holder, servletMapping);\n        MySessionListener listener = new MySessionListener();\n        context.getSessionHandler().addEventListener(listener);\n        server.start();\n        int port1 = server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n\n                // Create the session\n                Future<ContentResponse> future = client.GET(url + \"?action=init\");\n                ContentResponse response1 = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response1.status());\n                String sessionCookie = response1.headers().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n\n                // Make a request which will invalidate the existing session and create a new one\n                Request request2 = client.newRequest(url + \"?action=test\");\n                request2.header(\"Cookie\", sessionCookie);\n                future = request2.send();\n                ContentResponse response2 = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response2.status());\n\n                // Wait for the scavenger to run, waiting 2.5 times the scavenger period\n                pause(scavengePeriod);\n\n                //test that the session created in the last test is scavenged:\n                //the HttpSessionListener should have been called when session1 was invalidated and session2 was scavenged\n                assertTrue(listener.destroys.contains(\"session1\"));\n                assertTrue(listener.destroys.contains(\"session2\"));\n                //session2's HttpSessionBindingListener should have been called when it was scavenged\n                assertTrue(servlet.unbound);\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","id":20880,"modified_method":"@Test\n    public void testSessionScavenge() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 1;\n        int scavengePeriod = 2;\n        AbstractTestServer server = createServer(0, inactivePeriod, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        context.addServlet(holder, servletMapping);\n        MySessionListener listener = new MySessionListener();\n        context.getSessionHandler().addEventListener(listener);\n        server.start();\n        int port1 = server.getPort();\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n\n                // Create the session\n                Future<ContentResponse> future = client.GET(url + \"?action=init\");\n                ContentResponse response1 = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n                String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n\n                // Make a request which will invalidate the existing session and create a new one\n                Request request2 = client.newRequest(url + \"?action=test\");\n                request2.header(\"Cookie\", sessionCookie);\n                future = request2.send();\n                ContentResponse response2 = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n\n                // Wait for the scavenger to run, waiting 2.5 times the scavenger period\n                pause(scavengePeriod);\n\n                //test that the session created in the last test is scavenged:\n                //the HttpSessionListener should have been called when session1 was invalidated and session2 was scavenged\n                assertTrue(listener.destroys.contains(\"session1\"));\n                assertTrue(listener.destroys.contains(\"session2\"));\n                //session2's HttpSessionBindingListener should have been called when it was scavenged\n                assertTrue(servlet.unbound);\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSessionMigration() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server1 = createServer(0);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1=server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2=server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Perform one request to server1 to create a session\n                    int value = 1;\n                    Request request1 = client.POST(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=set&value=\" + value);\n                    Future<ContentResponse> future = request1.send();\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.status());\n                    String sessionCookie = response1.headers().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform a request to server2 using the session cookie from the previous request\n                    // This should migrate the session from server1 to server2.\n                    Request request2 = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping + \"?action=get\");\n                    request2.header(\"Cookie\", sessionCookie);\n                    future = request2.send();\n                    ContentResponse response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n                    String response = response2.contentAsString();\n                    assertEquals(response.trim(),String.valueOf(value));               }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20881,"modified_method":"@Test\n    public void testSessionMigration() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        AbstractTestServer server1 = createServer(0);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1=server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0);\n            server2.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n            server2.start();\n            int port2=server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Perform one request to server1 to create a session\n                    int value = 1;\n                    Request request1 = client.POST(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=set&value=\" + value);\n                    Future<ContentResponse> future = request1.send();\n                    ContentResponse response1 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response1.getStatus());\n                    String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform a request to server2 using the session cookie from the previous request\n                    // This should migrate the session from server1 to server2.\n                    Request request2 = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping + \"?action=get\");\n                    request2.header(\"Cookie\", sessionCookie);\n                    future = request2.send();\n                    ContentResponse response2 = future.get();\n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n                    String response = response2.getContentAsString();\n                    assertEquals(response.trim(),String.valueOf(value));               }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"public void testSessionRenewal() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n\n        HttpClient client = new HttpClient();\n        try\n        {\n            client.start();\n\n            //make a request to create a session\n            Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n            ContentResponse response = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response.status());\n\n            String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n\n            //make a request to change the sessionid\n            Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=renew\");\n            request.header(\"Cookie\", sessionCookie);\n            future = request.send();\n            ContentResponse renewResponse = future.get();\n            assertEquals(HttpServletResponse.SC_OK,renewResponse.status());\n            String renewSessionCookie = renewResponse.headers().getStringField(\"Set-Cookie\");\n            assertNotNull(renewSessionCookie);\n            assertNotSame(sessionCookie, renewSessionCookie);\n        }\n        finally \n        {\n            client.stop();\n        }\n    }","id":20882,"modified_method":"public void testSessionRenewal() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int scavengePeriod = 3;\n        AbstractTestServer server = createServer(0, 1, scavengePeriod);\n        ServletContextHandler context = server.addContext(contextPath);\n        context.addServlet(TestServlet.class, servletMapping);\n        server.start();\n        int port=server.getPort();\n\n        HttpClient client = new HttpClient();\n        try\n        {\n            client.start();\n\n            //make a request to create a session\n            Future<ContentResponse> future = client.GET(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=create\");\n            ContentResponse response = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n\n            String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n\n            //make a request to change the sessionid\n            Request request = client.newRequest(\"http://localhost:\" + port + contextPath + servletMapping + \"?action=renew\");\n            request.header(\"Cookie\", sessionCookie);\n            future = request.send();\n            ContentResponse renewResponse = future.get();\n            assertEquals(HttpServletResponse.SC_OK,renewResponse.getStatus());\n            String renewSessionCookie = renewResponse.getHeaders().getStringField(\"Set-Cookie\");\n            assertNotNull(renewSessionCookie);\n            assertNotSame(sessionCookie, renewSessionCookie);\n        }\n        finally \n        {\n            client.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSessionValueSaving() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int maxInactivePeriod = 10000;\n        int scavengePeriod = 20000;\n        AbstractTestServer server1 = createServer(0, maxInactivePeriod, scavengePeriod);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1=server1.getPort();\n        try\n        {\n            \n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    long sessionTestValue = 0;\n\n                    // Perform one request to server1 to create a session\n                    Future<ContentResponse> future = client.GET(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    \n                    assertEquals(HttpServletResponse.SC_OK, response1.status());                   \n                    assertTrue(sessionTestValue < Long.parseLong(response1.contentAsString()));\n                   \n                    sessionTestValue = Long.parseLong(response1.contentAsString());\n                    \n                    String sessionCookie = response1.headers().getStringField(\"Set-Cookie\");\n                    assertTrue( sessionCookie != null );\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform some request to server2 using the session cookie from the previous request\n                    // This should migrate the session from server1 to server2, and leave server1's\n                    // session in a very stale state, while server2 has a very fresh session.\n                    // We want to test that optimizations done to the saving of the shared lastAccessTime\n                    // do not break the correct working\n                    int requestInterval = 500;\n                    \n                    \n                    for (int i = 0; i < 10; ++i)\n                    {\n                        Request request2 = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping);\n                        request2.header(\"Cookie\", sessionCookie);\n                        future = request2.send();\n                        ContentResponse response2 = future.get();\n                        \n                        assertEquals(HttpServletResponse.SC_OK , response2.status());                     \n                        assertTrue(sessionTestValue < Long.parseLong(response2.contentAsString()));\n                        sessionTestValue = Long.parseLong(response2.contentAsString());\n                        \n                        String setCookie = response1.headers().getStringField(\"Set-Cookie\");\n                        if (setCookie!=null)                    \n                            sessionCookie = setCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n                        \n                        Thread.sleep(requestInterval);\n                    }\n\n                }\n                finally\n                {\n                    client.stop();\n                }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20883,"modified_method":"@Test\n    public void testSessionValueSaving() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int maxInactivePeriod = 10000;\n        int scavengePeriod = 20000;\n        AbstractTestServer server1 = createServer(0, maxInactivePeriod, scavengePeriod);\n        server1.addContext(contextPath).addServlet(TestServlet.class, servletMapping);\n        server1.start();\n        int port1=server1.getPort();\n        try\n        {\n            \n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    long sessionTestValue = 0;\n\n                    // Perform one request to server1 to create a session\n                    Future<ContentResponse> future = client.GET(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                    ContentResponse response1 = future.get();\n                    \n                    assertEquals(HttpServletResponse.SC_OK, response1.getStatus());                   \n                    assertTrue(sessionTestValue < Long.parseLong(response1.getContentAsString()));\n                   \n                    sessionTestValue = Long.parseLong(response1.getContentAsString());\n                    \n                    String sessionCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                    assertTrue( sessionCookie != null );\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform some request to server2 using the session cookie from the previous request\n                    // This should migrate the session from server1 to server2, and leave server1's\n                    // session in a very stale state, while server2 has a very fresh session.\n                    // We want to test that optimizations done to the saving of the shared lastAccessTime\n                    // do not break the correct working\n                    int requestInterval = 500;\n                    \n                    \n                    for (int i = 0; i < 10; ++i)\n                    {\n                        Request request2 = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping);\n                        request2.header(\"Cookie\", sessionCookie);\n                        future = request2.send();\n                        ContentResponse response2 = future.get();\n                        \n                        assertEquals(HttpServletResponse.SC_OK , response2.getStatus());                     \n                        assertTrue(sessionTestValue < Long.parseLong(response2.getContentAsString()));\n                        sessionTestValue = Long.parseLong(response2.getContentAsString());\n                        \n                        String setCookie = response1.getHeaders().getStringField(\"Set-Cookie\");\n                        if (setCookie!=null)                    \n                            sessionCookie = setCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n                        \n                        Thread.sleep(requestInterval);\n                    }\n\n                }\n                finally\n                {\n                    client.stop();\n                }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testWebappObjectInSession() throws Exception\n    {\n        String contextName = \"webappObjectInSessionTest\";\n        String contextPath = \"/\" + contextName;\n        String servletMapping = \"/server\";\n\n        File targetDir = new File(System.getProperty(\"basedir\"), \"target\");\n        File warDir = new File(targetDir, contextName);\n        warDir.mkdir();\n        File webInfDir = new File(warDir, \"WEB-INF\");\n        webInfDir.mkdir();\n        // Write web.xml\n        File webXml = new File(webInfDir, \"web.xml\");\n        String xml =\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                \"<web-app xmlns=\\\"http://java.sun.com/xml/ns/j2ee\\\"\\n\" +\n                \"         xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n\" +\n                \"         xsi:schemaLocation=\\\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\\\"\\n\" +\n                \"         version=\\\"2.4\\\">\\n\" +\n                \"\\n\" +\n                \"<\/web-app>\";\n        FileWriter w = new FileWriter(webXml);\n        w.write(xml);\n        w.close();\n        File classesDir = new File(webInfDir, \"classes\");\n        classesDir.mkdir();\n        String packageName = WebAppObjectInSessionServlet.class.getPackage().getName();\n        File packageDirs = new File(classesDir, packageName.replace('.', File.separatorChar));\n        packageDirs.mkdirs();\n\n        String resourceName = WebAppObjectInSessionServlet.class.getSimpleName() + \".class\";\n        Resource resource = Resource.newResource(getClass().getResource(resourceName));\n\n        //File sourceFile = new File(getClass().getClassLoader().getResource(resourceName).toURI());\n        File targetFile = new File(packageDirs, resourceName);\n        //copy(sourceFile, targetFile);\n        IO.copy(resource.getInputStream(), new FileOutputStream(targetFile));\n\n        resourceName = WebAppObjectInSessionServlet.class.getSimpleName() + \"$\" + WebAppObjectInSessionServlet.TestSharedStatic.class.getSimpleName() + \".class\";\n        resource = Resource.newResource(getClass().getResource(resourceName));\n        //sourceFile = new File(getClass().getClassLoader().getResource(resourceName).toURI());\n        targetFile = new File(packageDirs, resourceName);\n        //copy(sourceFile, targetFile);\n        IO.copy(resource.getInputStream(), new FileOutputStream(targetFile));\n\n        AbstractTestServer server1 = createServer(0);\n        server1.addWebAppContext(warDir.getCanonicalPath(), contextPath).addServlet(WebAppObjectInSessionServlet.class.getName(), servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0);\n            server2.addWebAppContext(warDir.getCanonicalPath(), contextPath).addServlet(WebAppObjectInSessionServlet.class.getName(), servletMapping);\n            server2.start();\n            int port2 = server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Perform one request to server1 to create a session\n                    Request request = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=set\");\n                    request.method(HttpMethod.GET);\n                    \n                    Future<ContentResponse> future = request.send();\n                    ContentResponse response = future.get();\n                    assertEquals( HttpServletResponse.SC_OK, response.status());\n                    String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform a request to server2 using the session cookie from the previous request\n                    Request request2 = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping + \"?action=get\");\n                    request2.method(HttpMethod.GET);\n                    request2.header(\"Cookie\", sessionCookie);\n                    future = request2.send();\n                    ContentResponse response2 = future.get();\n\n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20884,"modified_method":"@Test\n    public void testWebappObjectInSession() throws Exception\n    {\n        String contextName = \"webappObjectInSessionTest\";\n        String contextPath = \"/\" + contextName;\n        String servletMapping = \"/server\";\n\n        File targetDir = new File(System.getProperty(\"basedir\"), \"target\");\n        File warDir = new File(targetDir, contextName);\n        warDir.mkdir();\n        File webInfDir = new File(warDir, \"WEB-INF\");\n        webInfDir.mkdir();\n        // Write web.xml\n        File webXml = new File(webInfDir, \"web.xml\");\n        String xml =\n                \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" +\n                \"<web-app xmlns=\\\"http://java.sun.com/xml/ns/j2ee\\\"\\n\" +\n                \"         xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\"\\n\" +\n                \"         xsi:schemaLocation=\\\"http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd\\\"\\n\" +\n                \"         version=\\\"2.4\\\">\\n\" +\n                \"\\n\" +\n                \"<\/web-app>\";\n        FileWriter w = new FileWriter(webXml);\n        w.write(xml);\n        w.close();\n        File classesDir = new File(webInfDir, \"classes\");\n        classesDir.mkdir();\n        String packageName = WebAppObjectInSessionServlet.class.getPackage().getName();\n        File packageDirs = new File(classesDir, packageName.replace('.', File.separatorChar));\n        packageDirs.mkdirs();\n\n        String resourceName = WebAppObjectInSessionServlet.class.getSimpleName() + \".class\";\n        Resource resource = Resource.newResource(getClass().getResource(resourceName));\n\n        //File sourceFile = new File(getClass().getClassLoader().getResource(resourceName).toURI());\n        File targetFile = new File(packageDirs, resourceName);\n        //copy(sourceFile, targetFile);\n        IO.copy(resource.getInputStream(), new FileOutputStream(targetFile));\n\n        resourceName = WebAppObjectInSessionServlet.class.getSimpleName() + \"$\" + WebAppObjectInSessionServlet.TestSharedStatic.class.getSimpleName() + \".class\";\n        resource = Resource.newResource(getClass().getResource(resourceName));\n        //sourceFile = new File(getClass().getClassLoader().getResource(resourceName).toURI());\n        targetFile = new File(packageDirs, resourceName);\n        //copy(sourceFile, targetFile);\n        IO.copy(resource.getInputStream(), new FileOutputStream(targetFile));\n\n        AbstractTestServer server1 = createServer(0);\n        server1.addWebAppContext(warDir.getCanonicalPath(), contextPath).addServlet(WebAppObjectInSessionServlet.class.getName(), servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n            AbstractTestServer server2 = createServer(0);\n            server2.addWebAppContext(warDir.getCanonicalPath(), contextPath).addServlet(WebAppObjectInSessionServlet.class.getName(), servletMapping);\n            server2.start();\n            int port2 = server2.getPort();\n            try\n            {\n                HttpClient client = new HttpClient();\n                client.start();\n                try\n                {\n                    // Perform one request to server1 to create a session\n                    Request request = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=set\");\n                    request.method(HttpMethod.GET);\n                    \n                    Future<ContentResponse> future = request.send();\n                    ContentResponse response = future.get();\n                    assertEquals( HttpServletResponse.SC_OK, response.getStatus());\n                    String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n                    assertTrue(sessionCookie != null);\n                    // Mangle the cookie, replacing Path with $Path, etc.\n                    sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n                    // Perform a request to server2 using the session cookie from the previous request\n                    Request request2 = client.newRequest(\"http://localhost:\" + port2 + contextPath + servletMapping + \"?action=get\");\n                    request2.method(HttpMethod.GET);\n                    request2.header(\"Cookie\", sessionCookie);\n                    future = request2.send();\n                    ContentResponse response2 = future.get();\n\n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n                }\n                finally\n                {\n                    client.stop();\n                }\n            }\n            finally\n            {\n                server2.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private String sendRequest( JdbcTestServer server ) throws Exception {\n\n        int port=server.getPort();\n\n        //Log.getLog().setDebugEnabled(true);\n        Request request = client.newRequest(\"http://localhost:\" + port + \"\" + \"/test\");\n        if (sessionCookie != null)\n            request.header(\"Cookie\", sessionCookie);\n        Future<ContentResponse> future = request.send();\n        ContentResponse response = future.get();\n        assertEquals(HttpServletResponse.SC_OK, response.status());\n\n        sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n        assertTrue( sessionCookie != null );\n        // Mangle the cookie, replacing Path with $Path, etc.\n        sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n        return response.contentAsString();\n    }","id":20885,"modified_method":"private String sendRequest( JdbcTestServer server ) throws Exception {\n\n        int port=server.getPort();\n\n        //Log.getLog().setDebugEnabled(true);\n        Request request = client.newRequest(\"http://localhost:\" + port + \"\" + \"/test\");\n        if (sessionCookie != null)\n            request.header(\"Cookie\", sessionCookie);\n        Future<ContentResponse> future = request.send();\n        ContentResponse response = future.get();\n        assertEquals(HttpServletResponse.SC_OK, response.getStatus());\n\n        sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n        assertTrue( sessionCookie != null );\n        // Mangle the cookie, replacing Path with $Path, etc.\n        sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n        return response.getContentAsString();\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    //@Ignore (\"requires mongodb server\")\n    public void testSessionValueSaving() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int maxInactivePeriod = 10000;\n        int scavengePeriod = 20000;\n        AbstractTestServer server1 = createServer(0,maxInactivePeriod,scavengePeriod);\n        server1.addContext(contextPath).addServlet(TestServlet.class,servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                String[] sessionTestValue = new String[]\n                { \"0\", \"null\" };\n\n                // Perform one request to server1 to create a session\n                Request request = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                Future<ContentResponse> future = request.send();\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.status());\n\n                String[] sessionTestResponse = response.contentAsString().split(\"/\");\n                assertTrue(Long.parseLong(sessionTestValue[0]) < Long.parseLong(sessionTestResponse[0]));\n\n                sessionTestValue = sessionTestResponse;\n\n                String sessionCookie = response.headers().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\",\"$1\\\\$Path=\");\n\n                // Perform some request to server2 using the session cookie from the previous request\n                // This should migrate the session from server1 to server2, and leave server1's\n                // session in a very stale state, while server2 has a very fresh session.\n                // We want to test that optimizations done to the saving of the shared lastAccessTime\n                // do not break the correct working\n                int requestInterval = 500;\n\n                for (int i = 0; i < 10; ++i)\n                {\n                    Request request2 = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping);\n                    request2.header(\"Cookie\",sessionCookie);\n                    Future<ContentResponse> future2 = request2.send();\n                    ContentResponse response2 = future2.get();\n         \n                    assertEquals(HttpServletResponse.SC_OK,response2.status());\n\n                    sessionTestResponse = response2.contentAsString().split(\"/\");\n\n                    assertTrue(Long.parseLong(sessionTestValue[0]) < Long.parseLong(sessionTestResponse[0]));\n                    assertTrue(Long.parseLong(sessionTestValue[1]) < Long.parseLong(sessionTestResponse[1]));\n\n                    sessionTestValue = sessionTestResponse;\n\n                    String setCookie = response2.headers().getStringField(\"Set-Cookie\");\n                    if (setCookie != null)\n                        sessionCookie = setCookie.replaceFirst(\"(\\\\W)(P|p)ath=\",\"$1\\\\$Path=\");\n\n                    Thread.sleep(requestInterval);\n                }\n\n //               Thread.sleep(320000);\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","id":20886,"modified_method":"@Test\n    //@Ignore (\"requires mongodb server\")\n    public void testSessionValueSaving() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int maxInactivePeriod = 10000;\n        int scavengePeriod = 20000;\n        AbstractTestServer server1 = createServer(0,maxInactivePeriod,scavengePeriod);\n        server1.addContext(contextPath).addServlet(TestServlet.class,servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n        try\n        {\n\n            HttpClient client = new HttpClient();\n            client.start();\n            try\n            {\n                String[] sessionTestValue = new String[]\n                { \"0\", \"null\" };\n\n                // Perform one request to server1 to create a session\n                Request request = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping + \"?action=init\");\n                Future<ContentResponse> future = request.send();\n                ContentResponse response = future.get();\n                assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n\n                String[] sessionTestResponse = response.getContentAsString().split(\"/\");\n                assertTrue(Long.parseLong(sessionTestValue[0]) < Long.parseLong(sessionTestResponse[0]));\n\n                sessionTestValue = sessionTestResponse;\n\n                String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n                assertTrue(sessionCookie != null);\n                // Mangle the cookie, replacing Path with $Path, etc.\n                sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\",\"$1\\\\$Path=\");\n\n                // Perform some request to server2 using the session cookie from the previous request\n                // This should migrate the session from server1 to server2, and leave server1's\n                // session in a very stale state, while server2 has a very fresh session.\n                // We want to test that optimizations done to the saving of the shared lastAccessTime\n                // do not break the correct working\n                int requestInterval = 500;\n\n                for (int i = 0; i < 10; ++i)\n                {\n                    Request request2 = client.newRequest(\"http://localhost:\" + port1 + contextPath + servletMapping);\n                    request2.header(\"Cookie\",sessionCookie);\n                    Future<ContentResponse> future2 = request2.send();\n                    ContentResponse response2 = future2.get();\n         \n                    assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n\n                    sessionTestResponse = response2.getContentAsString().split(\"/\");\n\n                    assertTrue(Long.parseLong(sessionTestValue[0]) < Long.parseLong(sessionTestResponse[0]));\n                    assertTrue(Long.parseLong(sessionTestValue[1]) < Long.parseLong(sessionTestResponse[1]));\n\n                    sessionTestValue = sessionTestResponse;\n\n                    String setCookie = response2.getHeaders().getStringField(\"Set-Cookie\");\n                    if (setCookie != null)\n                        sessionCookie = setCookie.replaceFirst(\"(\\\\W)(P|p)ath=\",\"$1\\\\$Path=\");\n\n                    Thread.sleep(requestInterval);\n                }\n\n //               Thread.sleep(320000);\n            }\n            finally\n            {\n                client.stop();\n            }\n        }\n        finally\n        {\n            server1.stop();\n        }\n    }","commit_id":"0473a8003b375856290be2b8f7c993010a9e1afc","url":"https://github.com/eclipse/jetty.project"},{"original_method":"@Test\n    public void testSessionIdle() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 200;\n        int scavengePeriod = 3;\n        int idlePeriod = 5;\n\n        File storeDir = new File (System.getProperty(\"java.io.tmpdir\"), \"idle-test\");\n        storeDir.deleteOnExit();\n\n        HashTestServer server1 = createServer(0, inactivePeriod, scavengePeriod, idlePeriod, storeDir);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        ServletContextHandler contextHandler = server1.addContext(contextPath);\n        contextHandler.addServlet(holder, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.setConnectorType(HttpClient.CONNECTOR_SOCKET);\n            client.start();\n            String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n            //make a request to set up a session on the server\n            ContentExchange exchange1 = new ContentExchange(true);\n            exchange1.setMethod(HttpMethods.GET);\n            exchange1.setURL(url + \"?action=init\");\n            client.send(exchange1);\n            exchange1.waitForDone();\n            assertEquals(HttpServletResponse.SC_OK,exchange1.getResponseStatus());\n            String sessionCookie = exchange1.getResponseFields().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n            // Mangle the cookie, replacing Path with $Path, etc.\n            sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n            //and wait until the session should be idled out\n            pause(scavengePeriod * 2);\n\n            //check that the file exists\n            checkSessionIdled(storeDir);\n\n            //make another request to de-idle the session\n            ContentExchange exchange2 = new ContentExchange(true);\n            exchange2.setMethod(HttpMethods.GET);\n            exchange2.setURL(url + \"?action=test\");\n            exchange2.getRequestFields().add(\"Cookie\", sessionCookie);\n            client.send(exchange2);\n            exchange2.waitForDone();\n            assertEquals(HttpServletResponse.SC_OK,exchange2.getResponseStatus());\n\n            //check session de-idled\n            checkSessionDeIdled(storeDir);\n\n        }\n        finally\n        {\n            server1.stop();\n            IO.delete(storeDir);\n        }\n    }","id":20887,"modified_method":"@Test\n    public void testSessionIdle() throws Exception\n    {\n        String contextPath = \"\";\n        String servletMapping = \"/server\";\n        int inactivePeriod = 200;\n        int scavengePeriod = 3;\n        int idlePeriod = 5;\n\n        File storeDir = new File (System.getProperty(\"java.io.tmpdir\"), \"idle-test\");\n        storeDir.deleteOnExit();\n\n        HashTestServer server1 = createServer(0, inactivePeriod, scavengePeriod, idlePeriod, storeDir);\n        TestServlet servlet = new TestServlet();\n        ServletHolder holder = new ServletHolder(servlet);\n        ServletContextHandler contextHandler = server1.addContext(contextPath);\n        contextHandler.addServlet(holder, servletMapping);\n        server1.start();\n        int port1 = server1.getPort();\n\n        try\n        {\n            HttpClient client = new HttpClient();\n            client.start();\n            String url = \"http://localhost:\" + port1 + contextPath + servletMapping;\n\n            //make a request to set up a session on the server\n            Future<ContentResponse> future = client.GET(url + \"?action=init\");\n            ContentResponse response = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n            String sessionCookie = response.getHeaders().getStringField(\"Set-Cookie\");\n            assertTrue(sessionCookie != null);\n            // Mangle the cookie, replacing Path with $Path, etc.\n            sessionCookie = sessionCookie.replaceFirst(\"(\\\\W)(P|p)ath=\", \"$1\\\\$Path=\");\n\n            //and wait until the session should be idled out\n            pause(scavengePeriod * 2);\n\n            //check that the file exists\n            checkSessionIdled(storeDir);\n\n            //make another request to de-idle the session\n            Request request = client.newRequest(url + \"?action=test\");\n            request.getHeaders().add(\"Cookie\", sessionCookie);\n            future = request.send();\n            ContentResponse response2 = future.get();\n            assertEquals(HttpServletResponse.SC_OK,response2.getStatus());\n\n            //check session de-idled\n            checkSessionDeIdled(storeDir);\n\n        }\n        finally\n        {\n            server1.stop();\n            IO.delete(storeDir);\n        }\n    }","commit_id":"11704ab98635c8d03c168813ddc05c5b2997e4c1","url":"https://github.com/eclipse/jetty.project"},{"original_method":"private String checkSymmetricBinding(\n        AssertionInfoMap aim, String action, SoapMessage message\n    ) {\n        Collection<AssertionInfo> ais = aim.get(SP12Constants.SYMMETRIC_BINDING);\n        if (ais == null || ais.isEmpty()) {\n            return action;\n        }\n        \n        action = addToAction(action, \"Signature\", true);\n        action = addToAction(action, \"Encrypt\", true);\n        Object s = message.getContextualProperty(SecurityConstants.SIGNATURE_PROPERTIES);\n        Object e = message.getContextualProperty(SecurityConstants.ENCRYPT_PROPERTIES);\n        if (e != null && s == null) {\n            s = e;\n        } else if (s != null && e == null) {\n            e = s;\n        }\n        \n        if (isRequestor(message)) {\n            if (e != null) {\n                URL propsURL = getPropertiesFileURL(e, message);\n                String propsKey = e.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n                message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n            }\n            if (s != null) {\n                URL propsURL = getPropertiesFileURL(s, message);\n                String propsKey = s.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n                message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n            }\n        } else {\n            if (s != null) {\n                URL propsURL = getPropertiesFileURL(s, message);\n                String propsKey = s.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n                message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n            }\n            if (e != null) {\n                URL propsURL = getPropertiesFileURL(e, message);\n                String propsKey = e.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n                message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n            }\n        }\n        \n        return action;\n    }","id":20888,"modified_method":"private String checkSymmetricBinding(\n        AssertionInfoMap aim, String action, SoapMessage message\n    ) {\n        Collection<AssertionInfo> ais = aim.get(SP12Constants.SYMMETRIC_BINDING);\n        if (ais == null || ais.isEmpty()) {\n            return action;\n        }\n        \n        action = addToAction(action, \"Signature\", true);\n        action = addToAction(action, \"Encrypt\", true);\n        Object s = message.getContextualProperty(SecurityConstants.SIGNATURE_CRYPTO);\n        if (s == null) {\n            s = message.getContextualProperty(SecurityConstants.SIGNATURE_PROPERTIES);\n        }\n        Object e = message.getContextualProperty(SecurityConstants.ENCRYPT_CRYPTO);\n        if (e == null) {\n            e = message.getContextualProperty(SecurityConstants.ENCRYPT_PROPERTIES);\n        }\n        \n        if (e != null && s == null) {\n            s = e;\n        } else if (s != null && e == null) {\n            e = s;\n        }\n        \n        if (isRequestor(message)) {\n            if (e != null) {\n                URL propsURL = getPropertiesFileURL(e, message);\n                String propsKey = e.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n                if (e instanceof Crypto) {\n                    message.put(\"RefId-\" + propsKey, (Crypto)e);\n                } else {\n                    message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n                }\n            }\n            if (s != null) {\n                URL propsURL = getPropertiesFileURL(s, message);\n                String propsKey = s.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n                if (s instanceof Crypto) {\n                    message.put(\"RefId-\" + propsKey, (Crypto)s);\n                } else {\n                    message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n                }\n            }\n        } else {\n            if (s != null) {\n                URL propsURL = getPropertiesFileURL(s, message);\n                String propsKey = s.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n                if (s instanceof Crypto) {\n                    message.put(\"RefId-\" + propsKey, (Crypto)s);\n                } else {\n                    message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n                }\n            }\n            if (e != null) {\n                URL propsURL = getPropertiesFileURL(e, message);\n                String propsKey = e.toString();\n                if (propsURL != null) {\n                    propsKey = propsURL.getPath();\n                }\n                message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n                if (e instanceof Crypto) {\n                    message.put(\"RefId-\" + propsKey, (Crypto)e);\n                } else {\n                    message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n                }\n            }\n        }\n        \n        return action;\n    }","commit_id":"1e545594d0cacd4674ff0f83a7bd5666bf261bf6","url":"https://github.com/apache/cxf"},{"original_method":"private String checkAsymmetricBinding(\n        AssertionInfoMap aim, String action, SoapMessage message\n    ) {\n        Collection<AssertionInfo> ais = aim.get(SP12Constants.ASYMMETRIC_BINDING);\n        if (ais == null || ais.isEmpty()) {\n            return action;\n        }\n        \n        action = addToAction(action, \"Signature\", true);\n        action = addToAction(action, \"Encrypt\", true);\n        Object s = message.getContextualProperty(SecurityConstants.SIGNATURE_PROPERTIES);\n        Object e = message.getContextualProperty(SecurityConstants.ENCRYPT_PROPERTIES);\n        if (s != null) {\n            URL propsURL = getPropertiesFileURL(s, message);\n            String propsKey = s.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n            message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n            if (e == null) {\n                e = s;\n            }\n        }\n        if (e != null) {\n            URL propsURL = getPropertiesFileURL(e, message);\n            String propsKey = e.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n            message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n        }\n     \n        return action;\n    }","id":20889,"modified_method":"private String checkAsymmetricBinding(\n        AssertionInfoMap aim, String action, SoapMessage message\n    ) {\n        Collection<AssertionInfo> ais = aim.get(SP12Constants.ASYMMETRIC_BINDING);\n        if (ais == null || ais.isEmpty()) {\n            return action;\n        }\n        \n        action = addToAction(action, \"Signature\", true);\n        action = addToAction(action, \"Encrypt\", true);\n        Object s = message.getContextualProperty(SecurityConstants.SIGNATURE_CRYPTO);\n        if (s == null) {\n            s = message.getContextualProperty(SecurityConstants.SIGNATURE_PROPERTIES);\n        }\n        Object e = message.getContextualProperty(SecurityConstants.ENCRYPT_CRYPTO);\n        if (e == null) {\n            e = message.getContextualProperty(SecurityConstants.ENCRYPT_PROPERTIES);\n        }\n        \n        if (s != null) {\n            URL propsURL = getPropertiesFileURL(s, message);\n            String propsKey = s.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n            if (s instanceof Crypto) {\n                message.put(\"RefId-\" + propsKey, (Crypto)s);\n            } else {\n                message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n            }\n            if (e == null) {\n                e = s;\n            }\n        }\n        if (e != null) {\n            URL propsURL = getPropertiesFileURL(e, message);\n            String propsKey = e.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n            if (e instanceof Crypto) {\n                message.put(\"RefId-\" + propsKey, (Crypto)e);\n            } else {\n                message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n            }\n        }\n     \n        return action;\n    }","commit_id":"1e545594d0cacd4674ff0f83a7bd5666bf261bf6","url":"https://github.com/apache/cxf"},{"original_method":"private String checkTransportBinding(\n        AssertionInfoMap aim, String action, SoapMessage message\n    ) {\n        Collection<AssertionInfo> ais = aim.get(SP12Constants.TRANSPORT_BINDING);\n        if (ais == null || ais.isEmpty()) {\n            return action;\n        }\n        \n        action = addToAction(action, \"Signature\", true);\n        action = addToAction(action, \"Encrypt\", true);\n        Object s = message.getContextualProperty(SecurityConstants.SIGNATURE_PROPERTIES);\n        Object e = message.getContextualProperty(SecurityConstants.ENCRYPT_PROPERTIES);\n        if (s != null) {\n            URL propsURL = getPropertiesFileURL(s, message);\n            String propsKey = s.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n            message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n            if (e == null) {\n                e = s;\n            }\n        }\n        if (e != null) {\n            URL propsURL = getPropertiesFileURL(e, message);\n            String propsKey = e.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n            message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n        }\n\n        return action;\n    }","id":20890,"modified_method":"private String checkTransportBinding(\n        AssertionInfoMap aim, String action, SoapMessage message\n    ) {\n        Collection<AssertionInfo> ais = aim.get(SP12Constants.TRANSPORT_BINDING);\n        if (ais == null || ais.isEmpty()) {\n            return action;\n        }\n        \n        action = addToAction(action, \"Signature\", true);\n        action = addToAction(action, \"Encrypt\", true);\n        Object s = message.getContextualProperty(SecurityConstants.SIGNATURE_CRYPTO);\n        if (s == null) {\n            s = message.getContextualProperty(SecurityConstants.SIGNATURE_PROPERTIES);\n        }\n        Object e = message.getContextualProperty(SecurityConstants.ENCRYPT_CRYPTO);\n        if (e == null) {\n            e = message.getContextualProperty(SecurityConstants.ENCRYPT_PROPERTIES);\n        }\n        \n        if (s != null) {\n            URL propsURL = getPropertiesFileURL(s, message);\n            String propsKey = s.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.DEC_PROP_REF_ID, \"RefId-\" + propsKey);\n            if (s instanceof Crypto) {\n                message.put(\"RefId-\" + propsKey, (Crypto)s);\n            } else {\n                message.put(\"RefId-\" + propsKey, getProps(s, propsKey, propsURL, message));\n            }\n            if (e == null) {\n                e = s;\n            }\n        }\n        if (e != null) {\n            URL propsURL = getPropertiesFileURL(e, message);\n            String propsKey = e.toString();\n            if (propsURL != null) {\n                propsKey = propsURL.getPath();\n            }\n            message.put(WSHandlerConstants.SIG_PROP_REF_ID, \"RefId-\" + propsKey);\n            if (e instanceof Crypto) {\n                message.put(\"RefId-\" + propsKey, (Crypto)e);\n            } else {\n                message.put(\"RefId-\" + propsKey, getProps(e, propsKey, propsURL, message));\n            }\n        }\n\n        return action;\n    }","commit_id":"1e545594d0cacd4674ff0f83a7bd5666bf261bf6","url":"https://github.com/apache/cxf"},{"original_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    double[][] weights = to2D(x);\n    return new LinearCliquePotentialFunction(weights);\n  }","id":20891,"modified_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    // double[][] weights = to2D(x);\n    to2D(x, weights);\n    return new LinearCliquePotentialFunction(weights);\n  }","commit_id":"5b0996d309a7fded4953a30ff769dded24e44b40","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (multiThreadGrad == 0)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","id":20892,"modified_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (prior == DROPOUT_PRIOR)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","commit_id":"5b0996d309a7fded4953a30ff769dded24e44b40","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    final double[][] weights = to2D(x);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    double[][] E = empty2D();\n    double[][] dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n\n    if (multiThreadGrad == 0) {\n      for (int m = 0; m < data.length; m++) {\n        prob += expectedCountsAndValueForADoc(weights, E, m);\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, threadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","id":20893,"modified_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    // final double[][] weights = to2D(x);\n    to2D(x, weights);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    // double[][] E = empty2D();\n    clear2D(E);\n\n    // double[][] dropoutPriorGrad = null;\n    // if (prior == DROPOUT_PRIOR)\n    //   dropoutPriorGrad = empty2D();\n\n    if (prior != DROPOUT_PRIOR) {\n      if (multiThreadGrad == 1) {\n        for (int m = 0; m < data.length; m++) {\n          prob += expectedCountsAndValueForADoc(weights, E, m);\n        }\n      } else {\n        MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>> wrapper =\n          new MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>>(multiThreadGrad, threadProcessor); \n\n        int batchSize = totalData.length / multiThreadGrad;\n        int index = 0;\n        for (int tCount = 0; tCount < multiThreadGrad; tCount++) {\n          int endIndex = index + batchSize;\n          if (tCount == multiThreadGrad - 1)\n            endIndex = totalData.length;\n          List<Integer> docIndices = new ArrayList<Integer>(endIndex - index);\n          for (int ind = index; ind < endIndex; ind++)\n            docIndices.add(ind);\n          wrapper.put(new Pair<Integer, List<Integer>>(tCount, docIndices));\n\n          while (wrapper.peek()) {\n            Pair<Integer, Double> result = wrapper.poll();\n            int doneTCount = result.first();\n            double batchProb = result.second();\n            prob += batchProb;\n            combine2DArr(E, batchE[doneTCount]);\n          }\n          index = endIndex;\n        }\n        wrapper.join();\n        while (wrapper.peek()) {\n          Pair<Integer, Double> result = wrapper.poll();\n          int doneTCount = result.first();\n          double batchProb = result.second();\n          prob += batchProb;\n          combine2DArr(E, batchE[doneTCount]);\n        }\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, dropoutPriorThreadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","commit_id":"5b0996d309a7fded4953a30ff769dded24e44b40","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n        }\n        if (dropoutApprox)\n          EForADocPos.add(EForADocPosAtI);\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","id":20894,"modified_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n          EForADocPos.add(EForADocPosAtI);\n        }\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","commit_id":"5b0996d309a7fded4953a30ff769dded24e44b40","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    initEdgeLabels();\n    if (multiThreadGrad > 0)\n      initializeDataFeatureHash();\n  }","id":20895,"modified_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    E = empty2D();\n    if (multiThreadGrad > 1 && prior != DROPOUT_PRIOR) {\n      batchE = new double[multiThreadGrad][][];\n      for (int t = 0; t < multiThreadGrad; t++)\n        batchE[t] = empty2D();\n    }\n    weights = empty2D();\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    if (prior == DROPOUT_PRIOR) {\n      initEdgeLabels();\n      initializeDataFeatureHash();\n    }\n  }","commit_id":"5b0996d309a7fded4953a30ff769dded24e44b40","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (multiThreadGrad == 0)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","id":20896,"modified_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (prior == DROPOUT_PRIOR)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","commit_id":"a314fcef9b024c5c39743043c0d299c37d42741d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n        }\n        if (dropoutApprox)\n          EForADocPos.add(EForADocPosAtI);\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","id":20897,"modified_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n          EForADocPos.add(EForADocPosAtI);\n        }\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","commit_id":"a314fcef9b024c5c39743043c0d299c37d42741d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    final double[][] weights = to2D(x);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    double[][] E = empty2D();\n    double[][] dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n\n    if (multiThreadGrad == 0) {\n      for (int m = 0; m < data.length; m++) {\n        prob += expectedCountsAndValueForADoc(weights, E, m);\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, threadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","id":20898,"modified_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    // final double[][] weights = to2D(x);\n    to2D(x, weights);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    // double[][] E = empty2D();\n    clear2D(E);\n\n    // double[][] dropoutPriorGrad = null;\n    // if (prior == DROPOUT_PRIOR)\n    //   dropoutPriorGrad = empty2D();\n\n    if (prior != DROPOUT_PRIOR) {\n      if (multiThreadGrad == 1) {\n        for (int m = 0; m < data.length; m++) {\n          prob += expectedCountsAndValueForADoc(weights, E, m);\n        }\n      } else {\n        MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>> wrapper =\n          new MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>>(multiThreadGrad, threadProcessor); \n\n        int batchSize = totalData.length / multiThreadGrad;\n        int index = 0;\n        for (int tCount = 0; tCount < multiThreadGrad; tCount++) {\n          int endIndex = index + batchSize;\n          if (tCount == multiThreadGrad - 1)\n            endIndex = totalData.length;\n          List<Integer> docIndices = new ArrayList<Integer>(endIndex - index);\n          for (int ind = index; ind < endIndex; ind++)\n            docIndices.add(ind);\n          wrapper.put(new Pair<Integer, List<Integer>>(tCount, docIndices));\n\n          while (wrapper.peek()) {\n            Pair<Integer, Double> result = wrapper.poll();\n            int doneTCount = result.first();\n            double batchProb = result.second();\n            prob += batchProb;\n            combine2DArr(E, batchE[doneTCount]);\n          }\n          index = endIndex;\n        }\n        wrapper.join();\n        while (wrapper.peek()) {\n          Pair<Integer, Double> result = wrapper.poll();\n          int doneTCount = result.first();\n          double batchProb = result.second();\n          prob += batchProb;\n          combine2DArr(E, batchE[doneTCount]);\n        }\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, dropoutPriorThreadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","commit_id":"a314fcef9b024c5c39743043c0d299c37d42741d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    double[][] weights = to2D(x);\n    return new LinearCliquePotentialFunction(weights);\n  }","id":20899,"modified_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    // double[][] weights = to2D(x);\n    to2D(x, weights);\n    return new LinearCliquePotentialFunction(weights);\n  }","commit_id":"a314fcef9b024c5c39743043c0d299c37d42741d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    initEdgeLabels();\n    if (multiThreadGrad > 0)\n      initializeDataFeatureHash();\n  }","id":20900,"modified_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    E = empty2D();\n    if (multiThreadGrad > 1 && prior != DROPOUT_PRIOR) {\n      batchE = new double[multiThreadGrad][][];\n      for (int t = 0; t < multiThreadGrad; t++)\n        batchE[t] = empty2D();\n    }\n    weights = empty2D();\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    if (prior == DROPOUT_PRIOR) {\n      initEdgeLabels();\n      initializeDataFeatureHash();\n    }\n  }","commit_id":"a314fcef9b024c5c39743043c0d299c37d42741d","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (multiThreadGrad == 0)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","id":20901,"modified_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (prior == DROPOUT_PRIOR)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","commit_id":"3c3149fa704ca4991815c625b2f459af45ec0d45","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    initEdgeLabels();\n    if (multiThreadGrad > 0)\n      initializeDataFeatureHash();\n  }","id":20902,"modified_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    E = empty2D();\n    if (multiThreadGrad > 1 && prior != DROPOUT_PRIOR) {\n      batchE = new double[multiThreadGrad][][];\n      for (int t = 0; t < multiThreadGrad; t++)\n        batchE[t] = empty2D();\n    }\n    weights = empty2D();\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    if (prior == DROPOUT_PRIOR) {\n      initEdgeLabels();\n      initializeDataFeatureHash();\n    }\n  }","commit_id":"3c3149fa704ca4991815c625b2f459af45ec0d45","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    final double[][] weights = to2D(x);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    double[][] E = empty2D();\n    double[][] dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n\n    if (multiThreadGrad == 0) {\n      for (int m = 0; m < data.length; m++) {\n        prob += expectedCountsAndValueForADoc(weights, E, m);\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, threadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","id":20903,"modified_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    // final double[][] weights = to2D(x);\n    to2D(x, weights);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    // double[][] E = empty2D();\n    clear2D(E);\n\n    // double[][] dropoutPriorGrad = null;\n    // if (prior == DROPOUT_PRIOR)\n    //   dropoutPriorGrad = empty2D();\n\n    if (prior != DROPOUT_PRIOR) {\n      if (multiThreadGrad == 1) {\n        for (int m = 0; m < data.length; m++) {\n          prob += expectedCountsAndValueForADoc(weights, E, m);\n        }\n      } else {\n        MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>> wrapper =\n          new MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>>(multiThreadGrad, threadProcessor); \n\n        int batchSize = totalData.length / multiThreadGrad;\n        int index = 0;\n        for (int tCount = 0; tCount < multiThreadGrad; tCount++) {\n          int endIndex = index + batchSize;\n          if (tCount == multiThreadGrad - 1)\n            endIndex = totalData.length;\n          List<Integer> docIndices = new ArrayList<Integer>(endIndex - index);\n          for (int ind = index; ind < endIndex; ind++)\n            docIndices.add(ind);\n          wrapper.put(new Pair<Integer, List<Integer>>(tCount, docIndices));\n\n          while (wrapper.peek()) {\n            Pair<Integer, Double> result = wrapper.poll();\n            int doneTCount = result.first();\n            double batchProb = result.second();\n            prob += batchProb;\n            combine2DArr(E, batchE[doneTCount]);\n          }\n          index = endIndex;\n        }\n        wrapper.join();\n        while (wrapper.peek()) {\n          Pair<Integer, Double> result = wrapper.poll();\n          int doneTCount = result.first();\n          double batchProb = result.second();\n          prob += batchProb;\n          combine2DArr(E, batchE[doneTCount]);\n        }\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, dropoutPriorThreadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","commit_id":"3c3149fa704ca4991815c625b2f459af45ec0d45","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    double[][] weights = to2D(x);\n    return new LinearCliquePotentialFunction(weights);\n  }","id":20904,"modified_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    // double[][] weights = to2D(x);\n    to2D(x, weights);\n    return new LinearCliquePotentialFunction(weights);\n  }","commit_id":"3c3149fa704ca4991815c625b2f459af45ec0d45","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n        }\n        if (dropoutApprox)\n          EForADocPos.add(EForADocPosAtI);\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","id":20905,"modified_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n          EForADocPos.add(EForADocPosAtI);\n        }\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","commit_id":"3c3149fa704ca4991815c625b2f459af45ec0d45","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (multiThreadGrad == 0)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","id":20906,"modified_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (prior == DROPOUT_PRIOR)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","commit_id":"36d0ddb08af4eee0fae4ea6379bea13210f01f52","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    double[][] weights = to2D(x);\n    return new LinearCliquePotentialFunction(weights);\n  }","id":20907,"modified_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    // double[][] weights = to2D(x);\n    to2D(x, weights);\n    return new LinearCliquePotentialFunction(weights);\n  }","commit_id":"36d0ddb08af4eee0fae4ea6379bea13210f01f52","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    final double[][] weights = to2D(x);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    double[][] E = empty2D();\n    double[][] dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n\n    if (multiThreadGrad == 0) {\n      for (int m = 0; m < data.length; m++) {\n        prob += expectedCountsAndValueForADoc(weights, E, m);\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, threadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","id":20908,"modified_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    // final double[][] weights = to2D(x);\n    to2D(x, weights);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    // double[][] E = empty2D();\n    clear2D(E);\n\n    // double[][] dropoutPriorGrad = null;\n    // if (prior == DROPOUT_PRIOR)\n    //   dropoutPriorGrad = empty2D();\n\n    if (prior != DROPOUT_PRIOR) {\n      if (multiThreadGrad == 1) {\n        for (int m = 0; m < data.length; m++) {\n          prob += expectedCountsAndValueForADoc(weights, E, m);\n        }\n      } else {\n        MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>> wrapper =\n          new MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>>(multiThreadGrad, threadProcessor); \n\n        int batchSize = totalData.length / multiThreadGrad;\n        int index = 0;\n        for (int tCount = 0; tCount < multiThreadGrad; tCount++) {\n          int endIndex = index + batchSize;\n          if (tCount == multiThreadGrad - 1)\n            endIndex = totalData.length;\n          List<Integer> docIndices = new ArrayList<Integer>(endIndex - index);\n          for (int ind = index; ind < endIndex; ind++)\n            docIndices.add(ind);\n          wrapper.put(new Pair<Integer, List<Integer>>(tCount, docIndices));\n\n          while (wrapper.peek()) {\n            Pair<Integer, Double> result = wrapper.poll();\n            int doneTCount = result.first();\n            double batchProb = result.second();\n            prob += batchProb;\n            combine2DArr(E, batchE[doneTCount]);\n          }\n          index = endIndex;\n        }\n        wrapper.join();\n        while (wrapper.peek()) {\n          Pair<Integer, Double> result = wrapper.poll();\n          int doneTCount = result.first();\n          double batchProb = result.second();\n          prob += batchProb;\n          combine2DArr(E, batchE[doneTCount]);\n        }\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, dropoutPriorThreadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","commit_id":"36d0ddb08af4eee0fae4ea6379bea13210f01f52","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    initEdgeLabels();\n    if (multiThreadGrad > 0)\n      initializeDataFeatureHash();\n  }","id":20909,"modified_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    E = empty2D();\n    if (multiThreadGrad > 1 && prior != DROPOUT_PRIOR) {\n      batchE = new double[multiThreadGrad][][];\n      for (int t = 0; t < multiThreadGrad; t++)\n        batchE[t] = empty2D();\n    }\n    weights = empty2D();\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    if (prior == DROPOUT_PRIOR) {\n      initEdgeLabels();\n      initializeDataFeatureHash();\n    }\n  }","commit_id":"36d0ddb08af4eee0fae4ea6379bea13210f01f52","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n        }\n        if (dropoutApprox)\n          EForADocPos.add(EForADocPosAtI);\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","id":20910,"modified_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n          EForADocPos.add(EForADocPosAtI);\n        }\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","commit_id":"36d0ddb08af4eee0fae4ea6379bea13210f01f52","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    initEdgeLabels();\n    if (multiThreadGrad > 0)\n      initializeDataFeatureHash();\n  }","id":20911,"modified_method":"CRFLogConditionalObjectiveFunction(int[][][][] data, int[][] labels, int window, Index<String> classIndex, List<Index<CRFLabel>> labelIndices, int[] map, String priorType, String backgroundSymbol, double sigma, double[][][][] featureVal, double delta, double dropoutScale, int multiThreadGrad, boolean dropoutApprox, double unsupDropoutScale, int[][][][] unsupDropoutData) {\n    this.window = window;\n    this.classIndex = classIndex;\n    this.numClasses = classIndex.size();\n    this.labelIndices = labelIndices;\n    this.map = map;\n    this.data = data;\n    this.featureVal = featureVal;\n    this.labels = labels;\n    this.prior = getPriorType(priorType);\n    this.backgroundSymbol = backgroundSymbol;\n    this.sigma = sigma;\n    this.delta = delta;\n    this.dropoutScale = dropoutScale;\n    this.dropoutApprox = dropoutApprox;\n    this.multiThreadGrad = multiThreadGrad;\n    // takes docIndex, returns Triple<prob, E, dropoutGrad>\n    Ehat = empty2D();\n    E = empty2D();\n    if (multiThreadGrad > 1 && prior != DROPOUT_PRIOR) {\n      batchE = new double[multiThreadGrad][][];\n      for (int t = 0; t < multiThreadGrad; t++)\n        batchE[t] = empty2D();\n    }\n    weights = empty2D();\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n    empiricalCounts(Ehat);\n    int myDomainDimension = 0;\n    for (int dim : map) {\n      myDomainDimension += labelIndices.get(dim).size();\n    }\n    this.unsupDropoutStartIndex = data.length;\n    this.unsupDropoutScale = unsupDropoutScale;\n    if (unsupDropoutData != null) {\n      this.totalData = new int[data.length + unsupDropoutData.length][][][];\n      for (int i=0; i<data.length; i++) {\n        this.totalData[i] = data[i];\n      }\n      for (int i=0; i<unsupDropoutData.length; i++) {\n        this.totalData[i+unsupDropoutStartIndex] = unsupDropoutData[i];\n      }\n    } else {\n      this.totalData = data;\n    }\n    domainDimension = myDomainDimension;\n    if (prior == DROPOUT_PRIOR) {\n      initEdgeLabels();\n      initializeDataFeatureHash();\n    }\n  }","commit_id":"75fa302a5c0d2d31aec5e080b2ebe29e1ea08a66","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    double[][] weights = to2D(x);\n    return new LinearCliquePotentialFunction(weights);\n  }","id":20912,"modified_method":"@Override\n  public CliquePotentialFunction getCliquePotentialFunction(double[] x) {\n    // double[][] weights = to2D(x);\n    to2D(x, weights);\n    return new LinearCliquePotentialFunction(weights);\n  }","commit_id":"75fa302a5c0d2d31aec5e080b2ebe29e1ea08a66","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    final double[][] weights = to2D(x);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    double[][] E = empty2D();\n    double[][] dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR)\n      dropoutPriorGrad = empty2D();\n\n    if (multiThreadGrad == 0) {\n      for (int m = 0; m < data.length; m++) {\n        prob += expectedCountsAndValueForADoc(weights, E, m);\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, threadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","id":20913,"modified_method":"/**\n   * Calculates both value and partial derivatives at the point x, and save them internally.\n   */\n  @Override\n  public void calculate(double[] x) {\n\n    double prob = 0.0; // the log prob of the sequence given the model, which is the negation of value at this point\n    // final double[][] weights = to2D(x);\n    to2D(x, weights);\n\n    if (prior == DROPOUT_PRIOR) {\n      if (weightSquare == null) {\n        weightSquare = new double[weights.length][];\n        for (int i = 0; i < weights.length; i++)\n          weightSquare[i] = new double[weights[i].length];\n      }\n      double w = 0;\n      for (int i = 0; i < weights.length; i++) {\n        for (int j=0; j < weights[i].length; j++) {\n          w = weights[i][j];\n          weightSquare[i][j] = w * w;\n        }\n      }\n    }\n\n    // the expectations over counts\n    // first index is feature index, second index is of possible labeling\n    // double[][] E = empty2D();\n    clear2D(E);\n\n    // double[][] dropoutPriorGrad = null;\n    // if (prior == DROPOUT_PRIOR)\n    //   dropoutPriorGrad = empty2D();\n\n    if (prior != DROPOUT_PRIOR) {\n      if (multiThreadGrad == 1) {\n        for (int m = 0; m < data.length; m++) {\n          prob += expectedCountsAndValueForADoc(weights, E, m);\n        }\n      } else {\n        MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>> wrapper =\n          new MulticoreWrapper<Pair<Integer, List<Integer>>, Pair<Integer, Double>>(multiThreadGrad, threadProcessor); \n\n        int batchSize = totalData.length / multiThreadGrad;\n        int index = 0;\n        for (int tCount = 0; tCount < multiThreadGrad; tCount++) {\n          int endIndex = index + batchSize;\n          if (tCount == multiThreadGrad - 1)\n            endIndex = totalData.length;\n          List<Integer> docIndices = new ArrayList<Integer>(endIndex - index);\n          for (int ind = index; ind < endIndex; ind++)\n            docIndices.add(ind);\n          wrapper.put(new Pair<Integer, List<Integer>>(tCount, docIndices));\n\n          while (wrapper.peek()) {\n            Pair<Integer, Double> result = wrapper.poll();\n            int doneTCount = result.first();\n            double batchProb = result.second();\n            prob += batchProb;\n            combine2DArr(E, batchE[doneTCount]);\n          }\n          index = endIndex;\n        }\n        wrapper.join();\n        while (wrapper.peek()) {\n          Pair<Integer, Double> result = wrapper.poll();\n          int doneTCount = result.first();\n          double batchProb = result.second();\n          prob += batchProb;\n          combine2DArr(E, batchE[doneTCount]);\n        }\n      }\n    } else {\n      MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>> wrapper =\n        new MulticoreWrapper<Triple<Integer,Boolean, double[][]>, Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>>(multiThreadGrad, dropoutPriorThreadProcessor); \n      // supervised part\n      for (int m = 0; m < totalData.length; m++) {\n        boolean submitIsUnsup = (m >= unsupDropoutStartIndex);\n        wrapper.put(new Triple<Integer, Boolean, double[][]>(m, submitIsUnsup, weights));\n        while (wrapper.peek()) {\n          Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n          int docIndex = result.first();\n          boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n          if (isUnsup) {\n            prob += unsupDropoutScale * result.second();\n          } else {\n            prob += result.second();\n          }\n\n          Map<Integer, double[]> partialDropout = result.fourth();\n          if (partialDropout != null) {\n            if (isUnsup) {\n              combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n            } else {\n              combine2DArr(dropoutPriorGrad, partialDropout);\n            }\n          }\n\n          if (!isUnsup) {\n            Map<Integer, double[]> partialE = result.third();\n            if (partialE != null)\n              combine2DArr(E, partialE);\n          }\n        }\n      }\n      wrapper.join();\n      while (wrapper.peek()) {\n        Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> result = wrapper.poll();\n        int docIndex = result.first();\n        boolean isUnsup = docIndex >= unsupDropoutStartIndex;\n        if (isUnsup) {\n          prob += unsupDropoutScale * result.second();\n        } else {\n          prob += result.second();\n        }\n\n        Map<Integer, double[]> partialDropout = result.fourth();\n        if (partialDropout != null) {\n          if (isUnsup) {\n            combine2DArr(dropoutPriorGrad, partialDropout, unsupDropoutScale);\n          } else {\n            combine2DArr(dropoutPriorGrad, partialDropout);\n          }\n        }\n\n        if (!isUnsup) {\n          Map<Integer, double[]> partialE = result.third();\n          if (partialE != null)\n            combine2DArr(E, partialE);\n        }\n      }\n    }\n\n    if (Double.isNaN(prob)) { // shouldn't be the case\n      throw new RuntimeException(\"Got NaN for prob in CRFLogConditionalObjectiveFunction.calculate()\" +\n              \" - this may well indicate numeric underflow due to overly long documents.\");\n    }\n\n    // because we minimize -L(\\theta)\n    value = -prob;\n    if (VERBOSE) {\n      System.err.println(\"value is \" + Math.exp(-value));\n    }\n\n    // compute the partial derivative for each feature by comparing expected counts to empirical counts\n    int index = 0;\n    for (int i = 0; i < E.length; i++) {\n      for (int j = 0; j < E[i].length; j++) {\n        // because we minimize -L(\\theta)\n        derivative[index] = (E[i][j] - Ehat[i][j]);\n        if (prior == DROPOUT_PRIOR) {\n          derivative[index] += dropoutScale * dropoutPriorGrad[i][j];\n        }\n        if (VERBOSE) {\n          System.err.println(\"deriv(\" + i + \",\" + j + \") = \" + E[i][j] + \" - \" + Ehat[i][j] + \" = \" + derivative[index]);\n        }\n        index++;\n      }\n    }\n\n    applyPrior(x, 1.0);\n  }","commit_id":"75fa302a5c0d2d31aec5e080b2ebe29e1ea08a66","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (multiThreadGrad == 0)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","id":20914,"modified_method":"public double valueForADoc(double[][] weights, int docIndex) {\n    if (prior == DROPOUT_PRIOR)\n      return expectedCountsAndValueForADoc(weights, null, docIndex, true, false);\n    else\n      return expectedCountsAndValueForADoc(weights, docIndex, true, false).second();\n  }","commit_id":"75fa302a5c0d2d31aec5e080b2ebe29e1ea08a66","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n        }\n        if (dropoutApprox)\n          EForADocPos.add(EForADocPosAtI);\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","id":20915,"modified_method":"private Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>> expectedCountsAndValueForADoc(double[][] weights, int docIndex, \n      boolean skipExpectedCountCalc, boolean skipValCalc) {\n    \n    int[] activeFeatures = dataFeatureHashByDoc[docIndex];\n    List<Set<Integer>> docDataHash = dataFeatureHash.get(docIndex);\n    Map<Integer, List<Integer>> condensedFeaturesMap = condensedMap.get(docIndex);\n\n    double prob = 0;\n    int[][][] docData = totalData[docIndex];\n    int[] docLabels = null;\n    if (docIndex < labels.length)\n      docLabels = labels[docIndex];\n\n    Timing timer = new Timing();\n    double[][][] featureVal3DArr = null;\n    if (featureVal != null)\n      featureVal3DArr = featureVal[docIndex];\n\n    CliquePotentialFunction cliquePotentialFunc = new LinearCliquePotentialFunction(weights);\n    // make a clique tree for this document\n    CRFCliqueTree cliqueTree = CRFCliqueTree.getCalibratedCliqueTree(docData, labelIndices, numClasses, classIndex, backgroundSymbol, cliquePotentialFunc, featureVal3DArr);\n\n    if (!skipValCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the log probability of the document given the model with the parameters x\n      int[] given = new int[window - 1];\n      Arrays.fill(given, classIndex.indexOf(backgroundSymbol));\n      if (docLabels.length>docData.length) { // only true for self-training\n        // fill the given array with the extra docLabels\n        System.arraycopy(docLabels, 0, given, 0, given.length);\n        // shift the docLabels array left\n        int[] newDocLabels = new int[docData.length];\n        System.arraycopy(docLabels, docLabels.length-newDocLabels.length, newDocLabels, 0, newDocLabels.length);\n        docLabels = newDocLabels;\n      }\n\n      double startPosLogProb = cliqueTree.logProbStartPos();\n      if (VERBOSE)\n        System.err.printf(\"P_-1(Background) = % 5.3f\\n\", startPosLogProb);\n      prob += startPosLogProb;\n\n      // iterate over the positions in this document\n      for (int i = 0; i < docData.length; i++) {\n        int label = docLabels[i];\n        double p = cliqueTree.condLogProbGivenPrevious(i, label, given);\n        if (VERBOSE) {\n          System.err.println(\"P(\" + label + \"|\" + ArrayMath.toString(given) + \")=\" + Math.exp(p));\n        }\n        prob += p;\n        System.arraycopy(given, 1, given, 0, given.length - 1);\n        given[given.length - 1] = label;\n      }\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Calculate objective took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> EForADoc = sparseE(activeFeatures);\n    List<Map<Integer, double[]>> EForADocPos = null;\n    if (dropoutApprox) {\n      EForADocPos = new ArrayList<Map<Integer, double[]>>(docData.length);\n    }\n      \n    if (!skipExpectedCountCalc) {\n      if (TIMED)\n        timer.start();\n      // compute the expected counts for this document, which we will need to compute the derivative\n      // iterate over the positions in this document\n      double fVal = 1.0;\n      for (int i = 0; i < docData.length; i++) {\n        Set<Integer> docDataHashI = docDataHash.get(i);\n        Map<Integer, double[]> EForADocPosAtI = null;\n        if (dropoutApprox)\n          EForADocPosAtI = sparseE(docDataHashI);\n\n        for (int fIndex: docDataHashI) {\n          int j= map[fIndex];\n          Index<CRFLabel> labelIndex = labelIndices.get(j);\n          // for each possible labeling for that clique\n          for (int k = 0; k < labelIndex.size(); k++) {\n            int[] label = labelIndex.get(k).getLabel();\n            double p = cliqueTree.prob(i, label); // probability of these labels occurring in this clique with these features\n            if (dropoutApprox)\n              increScore(EForADocPosAtI, fIndex, k, fVal * p);\n            increScore(EForADoc, fIndex, k, fVal * p);\n          }\n        }\n        if (dropoutApprox) {\n          for (int fIndex: docDataHashI) {\n            if (condensedFeaturesMap.containsKey(fIndex)) {\n              List<Integer> aList = condensedFeaturesMap.get(fIndex);\n              for (int toCopyInto: aList) {\n                double[] arr = EForADocPosAtI.get(fIndex);\n                double[] targetArr = new double[arr.length];\n                for (int q=0; q < arr.length; q++)\n                  targetArr[q] = arr[q];\n                EForADocPosAtI.put(toCopyInto, targetArr);  \n              }\n            }\n          }\n          EForADocPos.add(EForADocPosAtI);\n        }\n      }\n\n      // copy for condensedFeaturesMap\n      for (Map.Entry<Integer, List<Integer>> entry: condensedFeaturesMap.entrySet()) {\n        int key = entry.getKey();\n        List<Integer> aList = entry.getValue();\n        for (int toCopyInto: aList) {\n          double[] arr = EForADoc.get(key);\n          double[] targetArr = new double[arr.length];\n          for (int i=0; i < arr.length; i++)\n            targetArr[i] = arr[i];\n          EForADoc.put(toCopyInto, targetArr);  \n        }\n      }\n\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Expected count took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    Map<Integer, double[]> dropoutPriorGrad = null;\n    if (prior == DROPOUT_PRIOR) {\n      if (TIMED)\n        timer.start();\n      // we can optimize this, this is too large, don't need this big\n      dropoutPriorGrad = sparseE(activeFeatures);\n\n      // System.err.print(\"computing dropout prior for doc \" + docIndex + \" ... \");\n      prob -= getDropoutPrior(weights, cliqueTree, docData, EForADoc, docDataHash, activeFeatures, dropoutPriorGrad, condensedFeaturesMap, EForADocPos);\n      // System.err.println(\" done!\");\n      if (TIMED) {\n        long elapsedMs = timer.stop();\n        System.err.println(\"Dropout took: \" + Timing.toMilliSecondsString(elapsedMs) + \" ms\");\n      }\n    }\n\n    return new Quadruple<Integer, Double, Map<Integer, double[]>, Map<Integer, double[]>>(docIndex, prob, EForADoc, dropoutPriorGrad);\n  }","commit_id":"75fa302a5c0d2d31aec5e080b2ebe29e1ea08a66","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"protected static String makeFilename(File directory, final String keyspace, final String columnFamily, final SSTableFormat.Type fmt)\n    {\n        final Set<Descriptor> existing = new HashSet<Descriptor>();\n        directory.list(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                Pair<Descriptor, Component> p = SSTable.tryComponentFromFilename(dir, name);\n                Descriptor desc = p == null ? null : p.left;\n                if (desc == null)\n                    return false;\n\n                if (desc.cfname.equals(columnFamily))\n                    existing.add(desc);\n\n                return false;\n            }\n        });\n        int maxGen = 0;\n        for (Descriptor desc : existing)\n            maxGen = Math.max(maxGen, desc.generation);\n        return new Descriptor(directory, keyspace, columnFamily, maxGen + 1, Descriptor.Type.TEMP, fmt).filenameFor(Component.DATA);\n    }","id":20916,"modified_method":"protected static String makeFilename(File directory, final String keyspace, final String columnFamily, final SSTableFormat.Type fmt)\n    {\n        final Set<Descriptor> existing = new HashSet<Descriptor>();\n        directory.list(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                Pair<Descriptor, Component> p = SSTable.tryComponentFromFilename(dir, name);\n                Descriptor desc = p == null ? null : p.left;\n                if (desc == null)\n                    return false;\n\n                if (desc.cfname.equals(columnFamily))\n                    existing.add(desc);\n\n                return false;\n            }\n        });\n        int maxGen = generation.getAndIncrement();\n        for (Descriptor desc : existing)\n        {\n            while (desc.generation > maxGen)\n            {\n                maxGen = generation.getAndIncrement();\n            }\n        }\n\n        return new Descriptor(directory, keyspace, columnFamily, maxGen + 1, Descriptor.Type.TEMP, fmt).filenameFor(Component.DATA);\n    }","commit_id":"fbb6b8abfa359be3475ba55912d939096637b8f8","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n         * The schema (CREATE TABLE statement) for the table for which sstable are to be created.\n         * <p>\n         * Please note that the provided CREATE TABLE statement <b>must<\/b> use a fully-qualified\n         * table name, one that include the keyspace name.\n         * <p>\n         * This is a mandatory option.\n         *\n         * @param schema the schema of the table for which sstables are to be created.\n         * @return this builder.\n         *\n         * @throws IllegalArgumentException if {@code schema} is not a valid CREATE TABLE statement\n         * or does not have a fully-qualified table name.\n         */\n        public Builder forTable(String schema)\n        {\n            try\n            {\n                this.schema = getStatement(schema, CreateTableStatement.class, \"CREATE TABLE\").left.getCFMetaData().rebuild();\n\n                // We need to register the keyspace/table metadata through Schema, otherwise we won't be able to properly\n                // build the insert statement in using().\n                if (Schema.instance.getKSMetaData(this.schema.ksName) == null)\n                {\n                    KSMetaData ksm = KSMetaData.newKeyspace(this.schema.ksName,\n                                                            AbstractReplicationStrategy.getClass(\"org.apache.cassandra.locator.SimpleStrategy\"),\n                                                            ImmutableMap.of(\"replication_factor\", \"1\"),\n                                                            true,\n                                                            Collections.singleton(this.schema));\n                    Schema.instance.load(ksm);\n                }\n                else if (Schema.instance.getCFMetaData(this.schema.ksName, this.schema.cfName) == null)\n                {\n                    Schema.instance.load(this.schema);\n                }\n\n                return this;\n            }\n            catch (RequestValidationException e)\n            {\n                throw new IllegalArgumentException(e.getMessage(), e);\n            }\n        }","id":20917,"modified_method":"/**\n         * The schema (CREATE TABLE statement) for the table for which sstable are to be created.\n         * <p>\n         * Please note that the provided CREATE TABLE statement <b>must<\/b> use a fully-qualified\n         * table name, one that include the keyspace name.\n         * <p>\n         * This is a mandatory option.\n         *\n         * @param schema the schema of the table for which sstables are to be created.\n         * @return this builder.\n         *\n         * @throws IllegalArgumentException if {@code schema} is not a valid CREATE TABLE statement\n         * or does not have a fully-qualified table name.\n         */\n        public Builder forTable(String schema)\n        {\n            try\n            {\n                synchronized (CQLSSTableWriter.class)\n                {\n                    this.schema = getStatement(schema, CreateTableStatement.class, \"CREATE TABLE\").left.getCFMetaData().rebuild();\n\n                    // We need to register the keyspace/table metadata through Schema, otherwise we won't be able to properly\n                    // build the insert statement in using().\n                    KSMetaData ksm = Schema.instance.getKSMetaData(this.schema.ksName);\n                    if (ksm == null)\n                    {\n                        ksm = KSMetaData.newKeyspace(this.schema.ksName,\n                                AbstractReplicationStrategy.getClass(\"org.apache.cassandra.locator.SimpleStrategy\"),\n                                ImmutableMap.of(\"replication_factor\", \"1\"),\n                                true,\n                                Collections.singleton(this.schema));\n                        Schema.instance.load(ksm);\n                    }\n                    else if (Schema.instance.getCFMetaData(this.schema.ksName, this.schema.cfName) == null)\n                    {\n                        Schema.instance.load(this.schema);\n                        ksm = KSMetaData.cloneWith(ksm, Iterables.concat(ksm.cfMetaData().values(), Collections.singleton(this.schema)));\n                        Schema.instance.setKeyspaceDefinition(ksm);\n                        Keyspace.open(ksm.name).initCf(this.schema.cfId, this.schema.cfName, false);\n                    }\n                    return this;\n                }\n            }\n            catch (RequestValidationException e)\n            {\n                throw new IllegalArgumentException(e.getMessage(), e);\n            }\n        }","commit_id":"fbb6b8abfa359be3475ba55912d939096637b8f8","url":"https://github.com/apache/cassandra"},{"original_method":"protected static String makeFilename(File directory, final String keyspace, final String columnFamily)\n    {\n        final Set<Descriptor> existing = new HashSet<Descriptor>();\n        directory.list(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                Pair<Descriptor, Component> p = SSTable.tryComponentFromFilename(dir, name);\n                Descriptor desc = p == null ? null : p.left;\n                if (desc == null)\n                    return false;\n\n                if (desc.cfname.equals(columnFamily))\n                    existing.add(desc);\n\n                return false;\n            }\n        });\n        int maxGen = 0;\n        for (Descriptor desc : existing)\n            maxGen = Math.max(maxGen, desc.generation);\n        return new Descriptor(directory, keyspace, columnFamily, maxGen + 1, true).filenameFor(Component.DATA);\n    }","id":20918,"modified_method":"protected static String makeFilename(File directory, final String keyspace, final String columnFamily)\n    {\n        final Set<Descriptor> existing = new HashSet<Descriptor>();\n        directory.list(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                Pair<Descriptor, Component> p = SSTable.tryComponentFromFilename(dir, name);\n                Descriptor desc = p == null ? null : p.left;\n                if (desc == null)\n                    return false;\n\n                if (desc.cfname.equals(columnFamily))\n                    existing.add(desc);\n\n                return false;\n            }\n        });\n        int maxGen = generation.getAndIncrement();\n        for (Descriptor desc : existing)\n        {\n            while (desc.generation > maxGen)\n            {\n                maxGen = generation.getAndIncrement();\n            }\n        }\n\n        return new Descriptor(directory, keyspace, columnFamily, maxGen + 1, true).filenameFor(Component.DATA);\n    }","commit_id":"f13ce558cc410f959634a6f0d31fcf7bd69be85d","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n         * The schema (CREATE TABLE statement) for the table for which sstable are to be created.\n         * <p>\n         * Please note that the provided CREATE TABLE statement <b>must<\/b> use a fully-qualified\n         * table name, one that include the keyspace name.\n         * <p>\n         * This is a mandatory option.\n         *\n         * @param schema the schema of the table for which sstables are to be created.\n         * @return this builder.\n         *\n         * @throws IllegalArgumentException if {@code schema} is not a valid CREATE TABLE statement\n         * or does not have a fully-qualified table name.\n         */\n        public Builder forTable(String schema)\n        {\n            try\n            {\n                this.schema = getStatement(schema, CreateTableStatement.class, \"CREATE TABLE\").left.getCFMetaData().rebuild();\n\n                // We need to register the keyspace/table metadata through Schema, otherwise we won't be able to properly\n                // build the insert statement in using().\n                KSMetaData ksm = KSMetaData.newKeyspace(this.schema.ksName,\n                                                        AbstractReplicationStrategy.getClass(\"org.apache.cassandra.locator.SimpleStrategy\"),\n                                                        ImmutableMap.of(\"replication_factor\", \"1\"),\n                                                        true,\n                                                        Collections.singleton(this.schema));\n\n                Schema.instance.load(ksm);\n                return this;\n            }\n            catch (RequestValidationException e)\n            {\n                throw new IllegalArgumentException(e.getMessage(), e);\n            }\n        }","id":20919,"modified_method":"/**\n         * The schema (CREATE TABLE statement) for the table for which sstable are to be created.\n         * <p>\n         * Please note that the provided CREATE TABLE statement <b>must<\/b> use a fully-qualified\n         * table name, one that include the keyspace name.\n         * <p>\n         * This is a mandatory option.\n         *\n         * @param schema the schema of the table for which sstables are to be created.\n         * @return this builder.\n         *\n         * @throws IllegalArgumentException if {@code schema} is not a valid CREATE TABLE statement\n         * or does not have a fully-qualified table name.\n         */\n        public Builder forTable(String schema)\n        {\n            try\n            {\n                synchronized (CQLSSTableWriter.class)\n                {\n                    this.schema = getStatement(schema, CreateTableStatement.class, \"CREATE TABLE\").left.getCFMetaData().rebuild();\n\n                    // We need to register the keyspace/table metadata through Schema, otherwise we won't be able to properly\n                    // build the insert statement in using().\n                    KSMetaData ksm = Schema.instance.getKSMetaData(this.schema.ksName);\n                    if (ksm == null)\n                    {\n                        ksm = KSMetaData.newKeyspace(this.schema.ksName,\n                                AbstractReplicationStrategy.getClass(\"org.apache.cassandra.locator.SimpleStrategy\"),\n                                ImmutableMap.of(\"replication_factor\", \"1\"),\n                                true,\n                                Collections.singleton(this.schema));\n                        Schema.instance.load(ksm);\n                    }\n                    else if (Schema.instance.getCFMetaData(this.schema.ksName, this.schema.cfName) == null)\n                    {\n                        Schema.instance.load(this.schema);\n                        ksm = KSMetaData.cloneWith(ksm, Iterables.concat(ksm.cfMetaData().values(), Collections.singleton(this.schema)));\n                        Schema.instance.setKeyspaceDefinition(ksm);\n                        Keyspace.open(ksm.name).initCf(this.schema.cfId, this.schema.cfName, false);\n                    }\n                    return this;\n                }\n            }\n            catch (RequestValidationException e)\n            {\n                throw new IllegalArgumentException(e.getMessage(), e);\n            }\n        }","commit_id":"f13ce558cc410f959634a6f0d31fcf7bd69be85d","url":"https://github.com/apache/cassandra"},{"original_method":"protected static String makeFilename(File directory, final String keyspace, final String columnFamily)\n    {\n        final Set<Descriptor> existing = new HashSet<Descriptor>();\n        directory.list(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                Pair<Descriptor, Component> p = SSTable.tryComponentFromFilename(dir, name);\n                Descriptor desc = p == null ? null : p.left;\n                if (desc == null)\n                    return false;\n\n                if (desc.cfname.equals(columnFamily))\n                    existing.add(desc);\n\n                return false;\n            }\n        });\n        int maxGen = 0;\n        for (Descriptor desc : existing)\n            maxGen = Math.max(maxGen, desc.generation);\n        return new Descriptor(directory, keyspace, columnFamily, maxGen + 1, Descriptor.Type.TEMP).filenameFor(Component.DATA);\n    }","id":20920,"modified_method":"protected static String makeFilename(File directory, final String keyspace, final String columnFamily)\n    {\n        final Set<Descriptor> existing = new HashSet<Descriptor>();\n        directory.list(new FilenameFilter()\n        {\n            public boolean accept(File dir, String name)\n            {\n                Pair<Descriptor, Component> p = SSTable.tryComponentFromFilename(dir, name);\n                Descriptor desc = p == null ? null : p.left;\n                if (desc == null)\n                    return false;\n\n                if (desc.cfname.equals(columnFamily))\n                    existing.add(desc);\n\n                return false;\n            }\n        });\n        int maxGen = generation.getAndIncrement();\n        for (Descriptor desc : existing)\n        {\n            while (desc.generation > maxGen)\n            {\n                maxGen = generation.getAndIncrement();\n            }\n        }\n\n        return new Descriptor(directory, keyspace, columnFamily, maxGen + 1, Descriptor.Type.TEMP).filenameFor(Component.DATA);\n    }","commit_id":"84bc49e900772b04cda4c21e48f23b84f0e0b2cd","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n         * The schema (CREATE TABLE statement) for the table for which sstable are to be created.\n         * <p>\n         * Please note that the provided CREATE TABLE statement <b>must<\/b> use a fully-qualified\n         * table name, one that include the keyspace name.\n         * <p>\n         * This is a mandatory option.\n         *\n         * @param schema the schema of the table for which sstables are to be created.\n         * @return this builder.\n         *\n         * @throws IllegalArgumentException if {@code schema} is not a valid CREATE TABLE statement\n         * or does not have a fully-qualified table name.\n         */\n        public Builder forTable(String schema)\n        {\n            try\n            {\n                this.schema = getStatement(schema, CreateTableStatement.class, \"CREATE TABLE\").left.getCFMetaData().rebuild();\n\n                // We need to register the keyspace/table metadata through Schema, otherwise we won't be able to properly\n                // build the insert statement in using().\n                if (Schema.instance.getKSMetaData(this.schema.ksName) == null)\n                {\n                    KSMetaData ksm = KSMetaData.newKeyspace(this.schema.ksName,\n                                                            AbstractReplicationStrategy.getClass(\"org.apache.cassandra.locator.SimpleStrategy\"),\n                                                            ImmutableMap.of(\"replication_factor\", \"1\"),\n                                                            true,\n                                                            Collections.singleton(this.schema));\n                    Schema.instance.load(ksm);\n                }\n                else if (Schema.instance.getCFMetaData(this.schema.ksName, this.schema.cfName) == null)\n                {\n                    Schema.instance.load(this.schema);\n                }\n\n                return this;\n            }\n            catch (RequestValidationException e)\n            {\n                throw new IllegalArgumentException(e.getMessage(), e);\n            }\n        }","id":20921,"modified_method":"/**\n         * The schema (CREATE TABLE statement) for the table for which sstable are to be created.\n         * <p>\n         * Please note that the provided CREATE TABLE statement <b>must<\/b> use a fully-qualified\n         * table name, one that include the keyspace name.\n         * <p>\n         * This is a mandatory option.\n         *\n         * @param schema the schema of the table for which sstables are to be created.\n         * @return this builder.\n         *\n         * @throws IllegalArgumentException if {@code schema} is not a valid CREATE TABLE statement\n         * or does not have a fully-qualified table name.\n         */\n        public Builder forTable(String schema)\n        {\n            try\n            {\n                synchronized (CQLSSTableWriter.class)\n                {\n                    this.schema = getStatement(schema, CreateTableStatement.class, \"CREATE TABLE\").left.getCFMetaData().rebuild();\n\n                    // We need to register the keyspace/table metadata through Schema, otherwise we won't be able to properly\n                    // build the insert statement in using().\n                    KSMetaData ksm = Schema.instance.getKSMetaData(this.schema.ksName);\n                    if (ksm == null)\n                    {\n                        ksm = KSMetaData.newKeyspace(this.schema.ksName,\n                                AbstractReplicationStrategy.getClass(\"org.apache.cassandra.locator.SimpleStrategy\"),\n                                ImmutableMap.of(\"replication_factor\", \"1\"),\n                                true,\n                                Collections.singleton(this.schema));\n                        Schema.instance.load(ksm);\n                    }\n                    else if (Schema.instance.getCFMetaData(this.schema.ksName, this.schema.cfName) == null)\n                    {\n                        Schema.instance.load(this.schema);\n                        ksm = KSMetaData.cloneWith(ksm, Iterables.concat(ksm.cfMetaData().values(), Collections.singleton(this.schema)));\n                        Schema.instance.setKeyspaceDefinition(ksm);\n                        Keyspace.open(ksm.name).initCf(this.schema.cfId, this.schema.cfName, false);\n                    }\n                    return this;\n                }\n            }\n            catch (RequestValidationException e)\n            {\n                throw new IllegalArgumentException(e.getMessage(), e);\n            }\n        }","commit_id":"84bc49e900772b04cda4c21e48f23b84f0e0b2cd","url":"https://github.com/apache/cassandra"},{"original_method":"/**\n     * Extract images from docx format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromDocx(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        XWPFDocument docx = null;\n        try {\n            docx = new XWPFDocument(new ReadContentInputStream(af));\n        } catch (Throwable ex) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.docxContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n        List<XWPFPictureData> listOfAllPictures = docx.getAllPictures();\n\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n        listOfExtractedImages = new ArrayList<>();\n        for (XWPFPictureData xwpfPicture : listOfAllPictures) {\n            String fileName = xwpfPicture.getFileName();\n            writeExtractedImage(Paths.get(outputFolderPath, fileName).toString(), xwpfPicture.getData());\n            listOfExtractedImages.add(new ExtractedImage(fileName, getFileRelativePath(fileName), xwpfPicture.getData().length, af));\n        }\n        return listOfExtractedImages;\n    }","id":20922,"modified_method":"/**\n     * Extract images from docx format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromDocx(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        XWPFDocument docx = null;\n        try {\n            docx = new XWPFDocument(new ReadContentInputStream(af));\n        } catch (Throwable ignore) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.docxContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n        List<XWPFPictureData> listOfAllPictures = null;\n        try {\n            listOfAllPictures = docx.getAllPictures();\n        } catch (Exception ignore) {\n            // log internal Java and Apache errors as WARNING\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n            return null;            \n        }\n\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n        listOfExtractedImages = new ArrayList<>();\n        byte[] data = null;\n        for (XWPFPictureData xwpfPicture : listOfAllPictures) {\n            String fileName = xwpfPicture.getFileName();\n            try {\n                data = xwpfPicture.getData();\n            } catch (Exception ignore) {\n                // log internal Java and Apache errors as WARNING\n                logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n                return null;\n            }\n            writeExtractedImage(Paths.get(outputFolderPath, fileName).toString(), data);\n            listOfExtractedImages.add(new ExtractedImage(fileName, getFileRelativePath(fileName), xwpfPicture.getData().length, af));\n        }\n        return listOfExtractedImages;\n    }","commit_id":"25bd98d8e9c5fe4627ac488d2ea46777ebcd6cdd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Extract images from doc format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromDoc(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        HWPFDocument doc = null;\n        try {\n            doc = new HWPFDocument(new ReadContentInputStream(af));\n        } catch (Throwable ex) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.docContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n        PicturesTable pictureTable = doc.getPicturesTable();\n        List<org.apache.poi.hwpf.usermodel.Picture> listOfAllPictures = pictureTable.getAllPictures();\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            return null;\n        }\n        listOfExtractedImages = new ArrayList<>();\n        for (org.apache.poi.hwpf.usermodel.Picture picture : listOfAllPictures) {\n            String fileName = picture.suggestFullFileName();\n            writeExtractedImage(Paths.get(outputFolderPath, fileName).toString(), picture.getContent());\n            // TODO Extract more info from the Picture viz ctime, crtime, atime, mtime\n            listOfExtractedImages.add(new ExtractedImage(fileName, getFileRelativePath(fileName), picture.getSize(), af));\n        }\n\n        return listOfExtractedImages;\n    }","id":20923,"modified_method":"/**\n     * Extract images from doc format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromDoc(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        HWPFDocument doc = null;\n        try {\n            doc = new HWPFDocument(new ReadContentInputStream(af));\n        } catch (Throwable ignore) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.docContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n        \n        PicturesTable pictureTable = null;\n        List<org.apache.poi.hwpf.usermodel.Picture> listOfAllPictures = null;\n        try {\n            pictureTable = doc.getPicturesTable();\n            listOfAllPictures = pictureTable.getAllPictures();            \n        } catch (Exception ignore) {\n            // log internal Java and Apache errors as WARNING\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n            return null;            \n        }\n\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            return null;\n        }\n        listOfExtractedImages = new ArrayList<>();\n        byte[] data = null;\n        for (org.apache.poi.hwpf.usermodel.Picture picture : listOfAllPictures) {\n            String fileName = picture.suggestFullFileName();\n            try {\n                data = picture.getContent();\n            } catch (Exception ignore) {\n                // log internal Java and Apache errors as WARNING\n                logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n                return null;\n            }\n            writeExtractedImage(Paths.get(outputFolderPath, fileName).toString(), data);\n            // TODO Extract more info from the Picture viz ctime, crtime, atime, mtime\n            listOfExtractedImages.add(new ExtractedImage(fileName, getFileRelativePath(fileName), picture.getSize(), af));\n        }\n\n        return listOfExtractedImages;\n    }","commit_id":"25bd98d8e9c5fe4627ac488d2ea46777ebcd6cdd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Extract images from xlsx format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromXlsx(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        Workbook xlsx;\n        try {\n            xlsx = new XSSFWorkbook(new ReadContentInputStream(af));\n        } catch (Throwable ex) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.xlsxContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        List<? extends org.apache.poi.ss.usermodel.PictureData> listOfAllPictures = xlsx.getAllPictures();\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        int i = 0;\n        listOfExtractedImages = new ArrayList<>();\n        for (org.apache.poi.ss.usermodel.PictureData pictureData : listOfAllPictures) {\n            String imageName = UNKNOWN_NAME_PREFIX + i + \".\" + pictureData.suggestFileExtension();\n            writeExtractedImage(Paths.get(outputFolderPath, imageName).toString(), pictureData.getData());\n            listOfExtractedImages.add(new ExtractedImage(imageName, getFileRelativePath(imageName), pictureData.getData().length, af));\n            i++;\n        }\n        return listOfExtractedImages;\n\n    }","id":20924,"modified_method":"/**\n     * Extract images from xlsx format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromXlsx(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        Workbook xlsx;\n        try {\n            xlsx = new XSSFWorkbook(new ReadContentInputStream(af));\n        } catch (Throwable ignore) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.xlsxContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        List<? extends org.apache.poi.ss.usermodel.PictureData> listOfAllPictures = null;\n        try {\n            listOfAllPictures = xlsx.getAllPictures();\n        } catch (Exception ignore) {\n            // log internal Java and Apache errors as WARNING\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n            return null;            \n        }\n        \n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        int i = 0;\n        listOfExtractedImages = new ArrayList<>();\n        byte[] data = null;\n        for (org.apache.poi.ss.usermodel.PictureData pictureData : listOfAllPictures) {\n            String imageName = UNKNOWN_NAME_PREFIX + i + \".\" + pictureData.suggestFileExtension();\n            try {\n                data = pictureData.getData();\n            } catch (Exception ignore) {\n                // log internal Java and Apache errors as WARNING\n                logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n                return null;\n            }\n            writeExtractedImage(Paths.get(outputFolderPath, imageName).toString(), data);\n            listOfExtractedImages.add(new ExtractedImage(imageName, getFileRelativePath(imageName), pictureData.getData().length, af));\n            i++;\n        }\n        return listOfExtractedImages;\n\n    }","commit_id":"25bd98d8e9c5fe4627ac488d2ea46777ebcd6cdd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Extract images from ppt format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromPpt(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        SlideShow ppt = null;\n        try {\n            ppt = new SlideShow(new ReadContentInputStream(af));\n        } catch (Throwable ex) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.pptContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        //extract all pictures contained in the presentation\n        PictureData[] listOfAllPictures = ppt.getPictureData();\n\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.length == 0) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        // extract the images to the above initialized outputFolder.\n        // extraction path - outputFolder/image_number.ext\n        int i = 0;\n        listOfExtractedImages = new ArrayList<>();\n        for (PictureData pictureData : listOfAllPictures) {\n\n            // Get image extension, generate image name, write image to the module\n            // output folder, add it to the listOfExtractedImageAbstractFiles\n            int type = pictureData.getType();\n            String ext;\n            switch (type) {\n                case Picture.JPEG:\n                    ext = \".jpg\"; //NON-NLS\n                    break;\n                case Picture.PNG:\n                    ext = \".png\"; //NON-NLS\n                    break;\n                case Picture.WMF:\n                    ext = \".wmf\"; //NON-NLS\n                    break;\n                case Picture.EMF:\n                    ext = \".emf\"; //NON-NLS\n                    break;\n                case Picture.PICT:\n                    ext = \".pict\"; //NON-NLS\n                    break;\n                default:\n                    continue;\n            }\n            String imageName = UNKNOWN_NAME_PREFIX + i + ext; //NON-NLS\n            writeExtractedImage(Paths.get(outputFolderPath, imageName).toString(), pictureData.getData());\n            listOfExtractedImages.add(new ExtractedImage(imageName, getFileRelativePath(imageName), pictureData.getData().length, af));\n            i++;\n        }\n        return listOfExtractedImages;\n    }","id":20925,"modified_method":"/**\n     * Extract images from ppt format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromPpt(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        SlideShow ppt = null;\n        try {\n            ppt = new SlideShow(new ReadContentInputStream(af));\n        } catch (Throwable ignore) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.pptContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        //extract all pictures contained in the presentation\n        PictureData[] listOfAllPictures = null;\n        try {\n            listOfAllPictures = ppt.getPictureData();\n        } catch (Exception ignore) {\n            // log internal Java and Apache errors as WARNING\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n            return null;            \n        }\n\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.length == 0) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        // extract the images to the above initialized outputFolder.\n        // extraction path - outputFolder/image_number.ext\n        int i = 0;\n        listOfExtractedImages = new ArrayList<>();\n        byte[] data = null;\n        for (PictureData pictureData : listOfAllPictures) {\n\n            // Get image extension, generate image name, write image to the module\n            // output folder, add it to the listOfExtractedImageAbstractFiles\n            int type = pictureData.getType();\n            String ext;\n            switch (type) {\n                case Picture.JPEG:\n                    ext = \".jpg\"; //NON-NLS\n                    break;\n                case Picture.PNG:\n                    ext = \".png\"; //NON-NLS\n                    break;\n                case Picture.WMF:\n                    ext = \".wmf\"; //NON-NLS\n                    break;\n                case Picture.EMF:\n                    ext = \".emf\"; //NON-NLS\n                    break;\n                case Picture.PICT:\n                    ext = \".pict\"; //NON-NLS\n                    break;\n                default:\n                    continue;\n            }\n            String imageName = UNKNOWN_NAME_PREFIX + i + ext; //NON-NLS\n            try {\n                data = pictureData.getData();\n            } catch (Exception ignore) {\n                // log internal Java and Apache errors as WARNING\n                logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n                return null;\n            }\n            writeExtractedImage(Paths.get(outputFolderPath, imageName).toString(), data);\n            listOfExtractedImages.add(new ExtractedImage(imageName, getFileRelativePath(imageName), pictureData.getData().length, af));\n            i++;\n        }\n        return listOfExtractedImages;\n    }","commit_id":"25bd98d8e9c5fe4627ac488d2ea46777ebcd6cdd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Extract images from pptx format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromPptx(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        XMLSlideShow pptx;\n        try {\n            pptx = new XMLSlideShow(new ReadContentInputStream(af));\n        } catch (Throwable ex) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.pptxContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n        List<XSLFPictureData> listOfAllPictures = pptx.getAllPictures();\n\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        listOfExtractedImages = new ArrayList<>();\n        for (XSLFPictureData xslsPicture : listOfAllPictures) {\n\n            // get image file name, write it to the module outputFolder, and add\n            // it to the listOfExtractedImageAbstractFiles.\n            String fileName = xslsPicture.getFileName();\n            writeExtractedImage(Paths.get(outputFolderPath, fileName).toString(), xslsPicture.getData());\n            listOfExtractedImages.add(new ExtractedImage(fileName, getFileRelativePath(fileName), xslsPicture.getData().length, af));\n\n        }\n\n        return listOfExtractedImages;\n\n    }","id":20926,"modified_method":"/**\n     * Extract images from pptx format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromPptx(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n        XMLSlideShow pptx;\n        try {\n            pptx = new XMLSlideShow(new ReadContentInputStream(af));\n        } catch (Throwable ignore) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.pptxContainer.init.err\", af.getName())); //NON-NLS\n            return null;\n        }\n        List<XSLFPictureData> listOfAllPictures = null;\n        try {\n            listOfAllPictures = pptx.getAllPictures();\n        } catch (Exception ignore) {\n            // log internal Java and Apache errors as WARNING\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n            return null;            \n        }\n\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        listOfExtractedImages = new ArrayList<>();\n        byte[] data = null;\n        for (XSLFPictureData xslsPicture : listOfAllPictures) {\n\n            // get image file name, write it to the module outputFolder, and add\n            // it to the listOfExtractedImageAbstractFiles.\n            String fileName = xslsPicture.getFileName();\n            try {\n                data = xslsPicture.getData();\n            } catch (Exception ignore) {\n                // log internal Java and Apache errors as WARNING\n                logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n                return null;\n            }\n            writeExtractedImage(Paths.get(outputFolderPath, fileName).toString(), data);\n            listOfExtractedImages.add(new ExtractedImage(fileName, getFileRelativePath(fileName), xslsPicture.getData().length, af));\n\n        }\n\n        return listOfExtractedImages;\n\n    }","commit_id":"25bd98d8e9c5fe4627ac488d2ea46777ebcd6cdd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * Extract images from xls format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromXls(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n\n        Workbook xls;\n        try {\n            xls = new HSSFWorkbook(new ReadContentInputStream(af));\n        } catch (Throwable ex) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.xlsContainer.init.err\", af.getName()) + af.getName()); //NON-NLS\n            return null;\n        }\n\n        List<? extends org.apache.poi.ss.usermodel.PictureData> listOfAllPictures = xls.getAllPictures();\n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        int i = 0;\n        listOfExtractedImages = new ArrayList<>();\n        for (org.apache.poi.ss.usermodel.PictureData pictureData : listOfAllPictures) {\n            String imageName = UNKNOWN_NAME_PREFIX + i + \".\" + pictureData.suggestFileExtension(); //NON-NLS\n            writeExtractedImage(Paths.get(outputFolderPath, imageName).toString(), pictureData.getData());\n            listOfExtractedImages.add(new ExtractedImage(imageName, getFileRelativePath(imageName), pictureData.getData().length, af));\n            i++;\n        }\n        return listOfExtractedImages;\n\n    }","id":20927,"modified_method":"/**\n     * Extract images from xls format files.\n     *\n     * @param af the file from which images are to be extracted.\n     *\n     * @return list of extracted images. Returns null in case no images were\n     *         extracted.\n     */\n    private List<ExtractedImage> extractImagesFromXls(AbstractFile af) {\n        List<ExtractedImage> listOfExtractedImages;\n\n        Workbook xls;\n        try {\n            xls = new HSSFWorkbook(new ReadContentInputStream(af));\n        } catch (Throwable ignore) {\n            // instantiating POI containers throw RuntimeExceptions\n            logger.log(Level.WARNING, \"{0}{1}\", new Object[]{NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.xlsContainer.init.err\", af.getName()), af.getName()}); //NON-NLS\n            return null;\n        }\n\n        List<? extends org.apache.poi.ss.usermodel.PictureData> listOfAllPictures = null;\n        try {\n            listOfAllPictures = xls.getAllPictures();\n        } catch (Exception ignore) {\n            // log internal Java and Apache errors as WARNING\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n            return null;            \n        }\n        \n        // if no images are extracted from the PPT, return null, else initialize\n        // the output folder for image extraction.\n        String outputFolderPath;\n        if (listOfAllPictures.isEmpty()) {\n            return null;\n        } else {\n            outputFolderPath = getOutputFolderPath(this.parentFileName);\n        }\n        if (outputFolderPath == null) {\n            logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.extractImageFrom.outputPath.exception.msg\", af.getName())); //NON-NLS\n            return null;\n        }\n\n        int i = 0;\n        listOfExtractedImages = new ArrayList<>();\n        byte[] data = null;\n        for (org.apache.poi.ss.usermodel.PictureData pictureData : listOfAllPictures) {\n            String imageName = UNKNOWN_NAME_PREFIX + i + \".\" + pictureData.suggestFileExtension(); //NON-NLS\n            try {\n                data = pictureData.getData();\n            } catch (Exception ignore) {\n                // log internal Java and Apache errors as WARNING\n                logger.log(Level.WARNING, NbBundle.getMessage(this.getClass(), \"EmbeddedFileExtractorIngestModule.ImageExtractor.processing.err\", af.getName())); //NON-NLS\n                return null;\n            }\n            writeExtractedImage(Paths.get(outputFolderPath, imageName).toString(), data);\n            listOfExtractedImages.add(new ExtractedImage(imageName, getFileRelativePath(imageName), pictureData.getData().length, af));\n            i++;\n        }\n        return listOfExtractedImages;\n\n    }","commit_id":"25bd98d8e9c5fe4627ac488d2ea46777ebcd6cdd","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public AnalysisModule(Settings settings) {\n        this.settings = settings;\n        processors.add(new DefaultProcessor());\n        try {\n            processors.add(new ExtendedProcessor());\n        } catch (Throwable t) {\n            // ignore. no extended ones\n        }\n    }","id":20928,"modified_method":"public AnalysisModule(Settings settings) {\n        this(settings, null);\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void configure() {\n        MapBinder<String, TokenFilterFactoryFactory> tokenFilterBinder\n                = MapBinder.newMapBinder(binder(), String.class, TokenFilterFactoryFactory.class);\n\n        Map<String, Settings> tokenFiltersSettings = settings.getGroups(\"index.analysis.filter\");\n        for (Map.Entry<String, Settings> entry : tokenFiltersSettings.entrySet()) {\n            String tokenFilterName = entry.getKey();\n            Settings tokenFilterSettings = entry.getValue();\n\n            Class<? extends TokenFilterFactory> type = tokenFilterSettings.getAsClass(\"type\", null, \"org.elasticsearch.index.analysis.\", \"TokenFilterFactory\");\n            if (type == null) {\n                throw new IllegalArgumentException(\"Token Filter [\" + tokenFilterName + \"] must have a type associated with it\");\n            }\n            tokenFilterBinder.addBinding(tokenFilterName).toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class, type)).in(Scopes.SINGLETON);\n        }\n\n        for (AnalysisBinderProcessor processor : processors) {\n            processor.processTokenFilters(tokenFilterBinder, tokenFiltersSettings);\n        }\n\n        MapBinder<String, TokenizerFactoryFactory> tokenizerBinder\n                = MapBinder.newMapBinder(binder(), String.class, TokenizerFactoryFactory.class);\n\n        Map<String, Settings> tokenizersSettings = settings.getGroups(\"index.analysis.tokenizer\");\n        for (Map.Entry<String, Settings> entry : tokenizersSettings.entrySet()) {\n            String tokenizerName = entry.getKey();\n            Settings tokenizerSettings = entry.getValue();\n\n            Class<? extends TokenizerFactory> type = tokenizerSettings.getAsClass(\"type\", null, \"org.elasticsearch.index.analysis.\", \"TokenizerFactory\");\n            if (type == null) {\n                throw new IllegalArgumentException(\"Tokenizer [\" + tokenizerName + \"] must have a type associated with it\");\n            }\n            tokenizerBinder.addBinding(tokenizerName).toProvider(FactoryProvider.newFactory(TokenizerFactoryFactory.class, type)).in(Scopes.SINGLETON);\n        }\n\n        for (AnalysisBinderProcessor processor : processors) {\n            processor.processTokenizers(tokenizerBinder, tokenizersSettings);\n        }\n\n        MapBinder<String, AnalyzerProviderFactory> analyzerBinder\n                = MapBinder.newMapBinder(binder(), String.class, AnalyzerProviderFactory.class);\n\n        Map<String, Settings> analyzersSettings = settings.getGroups(\"index.analysis.analyzer\");\n        for (Map.Entry<String, Settings> entry : analyzersSettings.entrySet()) {\n            String analyzerName = entry.getKey();\n            Settings analyzerSettings = entry.getValue();\n            Class<? extends AnalyzerProvider> type = analyzerSettings.getAsClass(\"type\", null, \"org.elasticsearch.index.analysis.\", \"AnalyzerProvider\");\n            if (type == null) {\n                // no specific type, check if it has a tokenizer associated with it\n                String tokenizerName = analyzerSettings.get(\"tokenizer\");\n                if (tokenizerName != null) {\n                    // we have a tokenizer, use the CustomAnalyzer\n                    type = CustomAnalyzerProvider.class;\n                } else {\n                    throw new IllegalArgumentException(\"Analyzer [\" + analyzerName + \"] must have a type associated with it or a tokenizer\");\n                }\n            }\n            analyzerBinder.addBinding(analyzerName).toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class, type)).in(Scopes.SINGLETON);\n        }\n\n        for (AnalysisBinderProcessor processor : processors) {\n            processor.processAnalyzers(analyzerBinder, analyzersSettings);\n        }\n\n        bind(AnalysisService.class).in(Scopes.SINGLETON);\n    }","id":20929,"modified_method":"@Override protected void configure() {\n        MapBinder<String, TokenFilterFactoryFactory> tokenFilterBinder\n                = MapBinder.newMapBinder(binder(), String.class, TokenFilterFactoryFactory.class);\n\n        Map<String, Settings> tokenFiltersSettings = settings.getGroups(\"index.analysis.filter\");\n        for (Map.Entry<String, Settings> entry : tokenFiltersSettings.entrySet()) {\n            String tokenFilterName = entry.getKey();\n            Settings tokenFilterSettings = entry.getValue();\n\n            Class<? extends TokenFilterFactory> type = tokenFilterSettings.getAsClass(\"type\", null, \"org.elasticsearch.index.analysis.\", \"TokenFilterFactory\");\n            if (type == null) {\n                throw new IllegalArgumentException(\"Token Filter [\" + tokenFilterName + \"] must have a type associated with it\");\n            }\n            tokenFilterBinder.addBinding(tokenFilterName).toProvider(FactoryProvider.newFactory(TokenFilterFactoryFactory.class, type)).in(Scopes.SINGLETON);\n        }\n\n        AnalysisBinderProcessor.TokenFiltersBindings tokenFiltersBindings = new AnalysisBinderProcessor.TokenFiltersBindings(tokenFilterBinder, tokenFiltersSettings);\n        for (AnalysisBinderProcessor processor : processors) {\n            processor.processTokenFilters(tokenFiltersBindings);\n        }\n\n        MapBinder<String, TokenizerFactoryFactory> tokenizerBinder\n                = MapBinder.newMapBinder(binder(), String.class, TokenizerFactoryFactory.class);\n\n        Map<String, Settings> tokenizersSettings = settings.getGroups(\"index.analysis.tokenizer\");\n        for (Map.Entry<String, Settings> entry : tokenizersSettings.entrySet()) {\n            String tokenizerName = entry.getKey();\n            Settings tokenizerSettings = entry.getValue();\n\n            Class<? extends TokenizerFactory> type = tokenizerSettings.getAsClass(\"type\", null, \"org.elasticsearch.index.analysis.\", \"TokenizerFactory\");\n            if (type == null) {\n                throw new IllegalArgumentException(\"Tokenizer [\" + tokenizerName + \"] must have a type associated with it\");\n            }\n            tokenizerBinder.addBinding(tokenizerName).toProvider(FactoryProvider.newFactory(TokenizerFactoryFactory.class, type)).in(Scopes.SINGLETON);\n        }\n\n        AnalysisBinderProcessor.TokenizersBindings tokenizersBindings = new AnalysisBinderProcessor.TokenizersBindings(tokenizerBinder, tokenizersSettings);\n        for (AnalysisBinderProcessor processor : processors) {\n            processor.processTokenizers(tokenizersBindings);\n        }\n\n        MapBinder<String, AnalyzerProviderFactory> analyzerBinder\n                = MapBinder.newMapBinder(binder(), String.class, AnalyzerProviderFactory.class);\n\n        Map<String, Settings> analyzersSettings = settings.getGroups(\"index.analysis.analyzer\");\n        for (Map.Entry<String, Settings> entry : analyzersSettings.entrySet()) {\n            String analyzerName = entry.getKey();\n            Settings analyzerSettings = entry.getValue();\n            Class<? extends AnalyzerProvider> type = analyzerSettings.getAsClass(\"type\", null, \"org.elasticsearch.index.analysis.\", \"AnalyzerProvider\");\n            if (type == null) {\n                // no specific type, check if it has a tokenizer associated with it\n                String tokenizerName = analyzerSettings.get(\"tokenizer\");\n                if (tokenizerName != null) {\n                    // we have a tokenizer, use the CustomAnalyzer\n                    type = CustomAnalyzerProvider.class;\n                } else {\n                    throw new IllegalArgumentException(\"Analyzer [\" + analyzerName + \"] must have a type associated with it or a tokenizer\");\n                }\n            }\n            analyzerBinder.addBinding(analyzerName).toProvider(FactoryProvider.newFactory(AnalyzerProviderFactory.class, type)).in(Scopes.SINGLETON);\n        }\n\n        AnalysisBinderProcessor.AnalyzersBindings analyzersBindings = new AnalysisBinderProcessor.AnalyzersBindings(analyzerBinder, analyzersSettings, indicesAnalysisService);\n        for (AnalysisBinderProcessor processor : processors) {\n            processor.processAnalyzers(analyzersBindings);\n        }\n\n        bind(AnalysisService.class).in(Scopes.SINGLETON);\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public AnalysisService(Index index, @IndexSettings Settings indexSettings,\n                                   @Nullable Map<String, AnalyzerProviderFactory> analyzerFactoryFactories,\n                                   @Nullable Map<String, TokenizerFactoryFactory> tokenizerFactoryFactories,\n                                   @Nullable Map<String, TokenFilterFactoryFactory> tokenFilterFactoryFactories) {\n        super(index, indexSettings);\n\n        Map<String, AnalyzerProvider> analyzerProviders = newHashMap();\n        if (analyzerFactoryFactories != null) {\n            Map<String, Settings> analyzersSettings = indexSettings.getGroups(\"index.analysis.analyzer\");\n            for (Map.Entry<String, AnalyzerProviderFactory> entry : analyzerFactoryFactories.entrySet()) {\n                String analyzerName = entry.getKey();\n                AnalyzerProviderFactory analyzerFactoryFactory = entry.getValue();\n\n                Settings analyzerSettings = analyzersSettings.get(analyzerName);\n                if (analyzerSettings == null) {\n                    analyzerSettings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n                }\n\n                AnalyzerProvider analyzerFactory = analyzerFactoryFactory.create(analyzerName, analyzerSettings);\n                analyzerProviders.put(analyzerName, analyzerFactory);\n            }\n        }\n\n        if (!analyzerProviders.containsKey(\"default\")) {\n            analyzerProviders.put(\"default\", new StandardAnalyzerProvider(index, indexSettings, \"default\", ImmutableSettings.Builder.EMPTY_SETTINGS));\n        }\n        if (!analyzerProviders.containsKey(\"default_index\")) {\n            analyzerProviders.put(\"default_index\", analyzerProviders.get(\"default\"));\n        }\n        if (!analyzerProviders.containsKey(\"default_search\")) {\n            analyzerProviders.put(\"default_search\", analyzerProviders.get(\"default\"));\n        }\n\n        Map<String, NamedAnalyzer> analyzers = newHashMap();\n        for (AnalyzerProvider analyzerFactory : analyzerProviders.values()) {\n            analyzers.put(analyzerFactory.name(), new NamedAnalyzer(analyzerFactory.name(), analyzerFactory.get()));\n        }\n        this.analyzers = ImmutableMap.copyOf(analyzers);\n\n        Map<String, TokenizerFactory> tokenizers = newHashMap();\n        if (tokenizerFactoryFactories != null) {\n            Map<String, Settings> tokenizersSettings = indexSettings.getGroups(\"index.analysis.tokenizer\");\n            for (Map.Entry<String, TokenizerFactoryFactory> entry : tokenizerFactoryFactories.entrySet()) {\n                String tokenizerName = entry.getKey();\n                TokenizerFactoryFactory tokenizerFactoryFactory = entry.getValue();\n\n                Settings tokenizerSettings = tokenizersSettings.get(tokenizerName);\n                if (tokenizerSettings == null) {\n                    tokenizerSettings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n                }\n\n                TokenizerFactory tokenizerFactory = tokenizerFactoryFactory.create(tokenizerName, tokenizerSettings);\n                tokenizers.put(tokenizerName, tokenizerFactory);\n            }\n        }\n        this.tokenizers = ImmutableMap.copyOf(tokenizers);\n\n        Map<String, TokenFilterFactory> tokenFilters = newHashMap();\n        if (tokenFilterFactoryFactories != null) {\n            Map<String, Settings> tokenFiltersSettings = indexSettings.getGroups(\"index.analysis.filter\");\n            for (Map.Entry<String, TokenFilterFactoryFactory> entry : tokenFilterFactoryFactories.entrySet()) {\n                String tokenFilterName = entry.getKey();\n                TokenFilterFactoryFactory tokenFilterFactoryFactory = entry.getValue();\n\n                Settings tokenFilterSettings = tokenFiltersSettings.get(tokenFilterName);\n                if (tokenFilterSettings == null) {\n                    tokenFilterSettings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n                }\n\n                TokenFilterFactory tokenFilterFactory = tokenFilterFactoryFactory.create(tokenFilterName, tokenFilterSettings);\n                tokenFilters.put(tokenFilterName, tokenFilterFactory);\n            }\n        }\n        this.tokenFilters = ImmutableMap.copyOf(tokenFilters);\n    }","id":20930,"modified_method":"@Inject public AnalysisService(Index index, @IndexSettings Settings indexSettings,\n                                   @Nullable Map<String, AnalyzerProviderFactory> analyzerFactoryFactories,\n                                   @Nullable Map<String, TokenizerFactoryFactory> tokenizerFactoryFactories,\n                                   @Nullable Map<String, TokenFilterFactoryFactory> tokenFilterFactoryFactories) {\n        super(index, indexSettings);\n\n        Map<String, AnalyzerProvider> analyzerProviders = newHashMap();\n        if (analyzerFactoryFactories != null) {\n            Map<String, Settings> analyzersSettings = indexSettings.getGroups(\"index.analysis.analyzer\");\n            for (Map.Entry<String, AnalyzerProviderFactory> entry : analyzerFactoryFactories.entrySet()) {\n                String analyzerName = entry.getKey();\n                AnalyzerProviderFactory analyzerFactoryFactory = entry.getValue();\n\n                Settings analyzerSettings = analyzersSettings.get(analyzerName);\n                if (analyzerSettings == null) {\n                    analyzerSettings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n                }\n\n                AnalyzerProvider analyzerFactory = analyzerFactoryFactory.create(analyzerName, analyzerSettings);\n                analyzerProviders.put(analyzerName, analyzerFactory);\n            }\n        }\n\n        if (!analyzerProviders.containsKey(\"default\")) {\n            analyzerProviders.put(\"default\", new StandardAnalyzerProvider(index, indexSettings, \"default\", ImmutableSettings.Builder.EMPTY_SETTINGS));\n        }\n        if (!analyzerProviders.containsKey(\"default_index\")) {\n            analyzerProviders.put(\"default_index\", analyzerProviders.get(\"default\"));\n        }\n        if (!analyzerProviders.containsKey(\"default_search\")) {\n            analyzerProviders.put(\"default_search\", analyzerProviders.get(\"default\"));\n        }\n\n        Map<String, NamedAnalyzer> analyzers = newHashMap();\n        for (AnalyzerProvider analyzerFactory : analyzerProviders.values()) {\n            analyzers.put(analyzerFactory.name(), new NamedAnalyzer(analyzerFactory.name(), analyzerFactory.scope(), analyzerFactory.get()));\n        }\n        this.analyzers = ImmutableMap.copyOf(analyzers);\n\n        Map<String, TokenizerFactory> tokenizers = newHashMap();\n        if (tokenizerFactoryFactories != null) {\n            Map<String, Settings> tokenizersSettings = indexSettings.getGroups(\"index.analysis.tokenizer\");\n            for (Map.Entry<String, TokenizerFactoryFactory> entry : tokenizerFactoryFactories.entrySet()) {\n                String tokenizerName = entry.getKey();\n                TokenizerFactoryFactory tokenizerFactoryFactory = entry.getValue();\n\n                Settings tokenizerSettings = tokenizersSettings.get(tokenizerName);\n                if (tokenizerSettings == null) {\n                    tokenizerSettings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n                }\n\n                TokenizerFactory tokenizerFactory = tokenizerFactoryFactory.create(tokenizerName, tokenizerSettings);\n                tokenizers.put(tokenizerName, tokenizerFactory);\n            }\n        }\n        this.tokenizers = ImmutableMap.copyOf(tokenizers);\n\n        Map<String, TokenFilterFactory> tokenFilters = newHashMap();\n        if (tokenFilterFactoryFactories != null) {\n            Map<String, Settings> tokenFiltersSettings = indexSettings.getGroups(\"index.analysis.filter\");\n            for (Map.Entry<String, TokenFilterFactoryFactory> entry : tokenFilterFactoryFactories.entrySet()) {\n                String tokenFilterName = entry.getKey();\n                TokenFilterFactoryFactory tokenFilterFactoryFactory = entry.getValue();\n\n                Settings tokenFilterSettings = tokenFiltersSettings.get(tokenFilterName);\n                if (tokenFilterSettings == null) {\n                    tokenFilterSettings = ImmutableSettings.Builder.EMPTY_SETTINGS;\n                }\n\n                TokenFilterFactory tokenFilterFactory = tokenFilterFactoryFactory.create(tokenFilterName, tokenFilterSettings);\n                tokenFilters.put(tokenFilterName, tokenFilterFactory);\n            }\n        }\n        this.tokenFilters = ImmutableMap.copyOf(tokenFilters);\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public void close() {\n        for (Analyzer analyzer : analyzers.values()) {\n            analyzer.close();\n        }\n    }","id":20931,"modified_method":"public void close() {\n        for (NamedAnalyzer analyzer : analyzers.values()) {\n            if (analyzer.scope() == AnalyzerScope.INDEX) {\n                analyzer.close();\n            }\n        }\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void configure() {\n        bind(IndicesLifecycle.class).to(InternalIndicesLifecycle.class).asEagerSingleton();\n        bind(IndicesService.class).to(InternalIndicesService.class).asEagerSingleton();\n        bind(RecoveryThrottler.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(IndicesMemoryCleaner.class).asEagerSingleton();\n    }","id":20932,"modified_method":"@Override protected void configure() {\n        bind(IndicesLifecycle.class).to(InternalIndicesLifecycle.class).asEagerSingleton();\n        bind(IndicesService.class).to(InternalIndicesService.class).asEagerSingleton();\n        bind(RecoveryThrottler.class).asEagerSingleton();\n        bind(IndicesClusterStateService.class).asEagerSingleton();\n        bind(IndicesMemoryCleaner.class).asEagerSingleton();\n        bind(IndicesAnalysisService.class).asEagerSingleton();\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Inject public InternalIndicesService(Settings settings, IndicesClusterStateService clusterStateService, IndicesLifecycle indicesLifecycle, Injector injector) {\n        super(settings);\n        this.clusterStateService = clusterStateService;\n        this.indicesLifecycle = (InternalIndicesLifecycle) indicesLifecycle;\n        this.injector = injector;\n\n        this.pluginsService = injector.getInstance(PluginsService.class);\n    }","id":20933,"modified_method":"@Inject public InternalIndicesService(Settings settings, IndicesClusterStateService clusterStateService,\n                                          IndicesLifecycle indicesLifecycle, IndicesAnalysisService indicesAnalysisService, Injector injector) {\n        super(settings);\n        this.clusterStateService = clusterStateService;\n        this.indicesLifecycle = (InternalIndicesLifecycle) indicesLifecycle;\n        this.indicesAnalysisService = indicesAnalysisService;\n        this.injector = injector;\n\n        this.pluginsService = injector.getInstance(PluginsService.class);\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"@Override protected void doClose() throws ElasticSearchException {\n        clusterStateService.close();\n    }","id":20934,"modified_method":"@Override protected void doClose() throws ElasticSearchException {\n        clusterStateService.close();\n        indicesAnalysisService.close();\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public synchronized IndexService createIndex(String sIndexName, Settings settings, String localNodeId) throws ElasticSearchException {\n        Index index = new Index(sIndexName);\n        if (indicesInjectors.containsKey(index.name())) {\n            throw new IndexAlreadyExistsException(index);\n        }\n\n        indicesLifecycle.beforeIndexCreated(index);\n\n        logger.debug(\"Creating Index [{}], shards [{}]/[{}]\", new Object[]{sIndexName, settings.get(SETTING_NUMBER_OF_SHARDS), settings.get(SETTING_NUMBER_OF_REPLICAS)});\n\n        Settings indexSettings = settingsBuilder()\n                .put(\"settingsType\", \"index\")\n                .put(this.settings)\n                .put(settings)\n                .classLoader(settings.getClassLoader())\n                .globalSettings(settings.getGlobalSettings())\n                .build();\n\n        ArrayList<Module> modules = new ArrayList<Module>();\n        modules.add(new IndexNameModule(index));\n        modules.add(new LocalNodeIdModule(localNodeId));\n        modules.add(new IndexSettingsModule(indexSettings));\n        modules.add(new IndicesPluginsModule(indexSettings, pluginsService));\n        modules.add(new IndexEngineModule(indexSettings));\n        modules.add(new AnalysisModule(indexSettings));\n        modules.add(new SimilarityModule(indexSettings));\n        modules.add(new IndexCacheModule(indexSettings));\n        modules.add(new IndexQueryParserModule(indexSettings));\n        modules.add(new MapperServiceModule());\n        modules.add(new IndexGatewayModule(indexSettings, injector.getInstance(Gateway.class)));\n        modules.add(new OperationRoutingModule(indexSettings));\n        modules.add(new IndexModule());\n\n        pluginsService.processModules(modules);\n\n        Injector indexInjector = injector.createChildInjector(modules);\n\n        indicesInjectors.put(index.name(), indexInjector);\n\n        IndexService indexService = indexInjector.getInstance(IndexService.class);\n\n        indicesLifecycle.afterIndexCreated(indexService);\n\n        indices = newMapBuilder(indices).put(index.name(), indexService).immutableMap();\n\n        return indexService;\n    }","id":20935,"modified_method":"public synchronized IndexService createIndex(String sIndexName, Settings settings, String localNodeId) throws ElasticSearchException {\n        Index index = new Index(sIndexName);\n        if (indicesInjectors.containsKey(index.name())) {\n            throw new IndexAlreadyExistsException(index);\n        }\n\n        indicesLifecycle.beforeIndexCreated(index);\n\n        logger.debug(\"Creating Index [{}], shards [{}]/[{}]\", new Object[]{sIndexName, settings.get(SETTING_NUMBER_OF_SHARDS), settings.get(SETTING_NUMBER_OF_REPLICAS)});\n\n        Settings indexSettings = settingsBuilder()\n                .put(\"settingsType\", \"index\")\n                .put(this.settings)\n                .put(settings)\n                .classLoader(settings.getClassLoader())\n                .globalSettings(settings.getGlobalSettings())\n                .build();\n\n        ArrayList<Module> modules = new ArrayList<Module>();\n        modules.add(new IndexNameModule(index));\n        modules.add(new LocalNodeIdModule(localNodeId));\n        modules.add(new IndexSettingsModule(indexSettings));\n        modules.add(new IndicesPluginsModule(indexSettings, pluginsService));\n        modules.add(new IndexEngineModule(indexSettings));\n        modules.add(new AnalysisModule(indexSettings, indicesAnalysisService));\n        modules.add(new SimilarityModule(indexSettings));\n        modules.add(new IndexCacheModule(indexSettings));\n        modules.add(new IndexQueryParserModule(indexSettings));\n        modules.add(new MapperServiceModule());\n        modules.add(new IndexGatewayModule(indexSettings, injector.getInstance(Gateway.class)));\n        modules.add(new OperationRoutingModule(indexSettings));\n        modules.add(new IndexModule());\n\n        pluginsService.processModules(modules);\n\n        Injector indexInjector = injector.createChildInjector(modules);\n\n        indicesInjectors.put(index.name(), indexInjector);\n\n        IndexService indexService = indexInjector.getInstance(IndexService.class);\n\n        indicesLifecycle.afterIndexCreated(indexService);\n\n        indices = newMapBuilder(indices).put(index.name(), indexService).immutableMap();\n\n        return indexService;\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public NamedAnalyzer(String name, Analyzer analyzer) {\n        this.name = name;\n        this.analyzer = analyzer;\n    }","id":20936,"modified_method":"public NamedAnalyzer(String name, Analyzer analyzer) {\n        this(name, AnalyzerScope.INDEX, analyzer);\n    }","commit_id":"a8a4bbc30ee91d9cf68367d23c33583d224cf968","url":"https://github.com/elastic/elasticsearch"},{"original_method":"public static void resolveAndInvokePropertyMethod(Object obj, Method method, Map<String,String> props) throws Exception {\n    \tString methodName=method.getName();\n    \tif(method.isAnnotationPresent(Property.class) && isSetPropertyMethod(method)) {\n    \t\tString propertyName=PropertyHelper.getPropertyName(method) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(method.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n\n    \t\tif(propertyValue != null) {\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, method, props, propertyValue, true);\n    \t\t\t\tmethod.invoke(obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Could not assign property \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \", method is \" + methodName + \", converted value is \" + converted, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","id":20937,"modified_method":"public static void resolveAndInvokePropertyMethod(Object obj, Method method, Map<String,String> props) throws Exception {\n    \tString methodName=method.getName();\n        Property annotation=method.getAnnotation(Property.class);\n    \tif(annotation != null && isSetPropertyMethod(method)) {\n    \t\tString propertyName=PropertyHelper.getPropertyName(method) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(method.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n\n            if(propertyName != null && propertyValue != null) {\n                String deprecated_msg=annotation.deprecatedMessage();\n                if(deprecated_msg != null && deprecated_msg.length() > 0) {\n                    log.warn(method.getDeclaringClass().getSimpleName() + \".\" + methodName + \": \" + deprecated_msg);\n                }\n            }\n\n    \t\tif(propertyValue != null) {\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, method, props, propertyValue, true);\n    \t\t\t\tmethod.invoke(obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Could not assign property \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \", method is \" + methodName + \", converted value is \" + converted, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","commit_id":"7c0815f608f923bc97b8e9c1060c145498813dcb","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void resolveAndAssignField(Object obj, Field field, Map<String,String> props) throws Exception {\n    \tif(field.isAnnotationPresent(Property.class)) {\n    \t\tString propertyName = PropertyHelper.getPropertyName(field, props) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(field.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n            \n    \t\tif(propertyValue != null || !PropertyHelper.usesDefaultConverter(field)){\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, field, props, propertyValue, true);\n    \t\t\t\tif(converted != null)\n    \t\t\t\t\tsetField(field, obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Property assignment of \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \" with original property value \" + propertyValue + \" and converted to \" + converted \n    \t\t\t\t\t\t+ \" could not be assigned. Exception is \" +e, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","id":20938,"modified_method":"public static void resolveAndAssignField(Object obj, Field field, Map<String,String> props) throws Exception {\n        Property annotation=field.getAnnotation(Property.class);\n    \tif(annotation != null) {\n    \t\tString propertyName = PropertyHelper.getPropertyName(field, props) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(field.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n\n            if(propertyName != null && propertyValue != null) {\n                String deprecated_msg=annotation.deprecatedMessage();\n                if(deprecated_msg != null && deprecated_msg.length() > 0) {\n                    log.warn(field.getDeclaringClass().getSimpleName() + \".\" + field.getName() + \": \" + deprecated_msg);\n                }\n            }\n            \n    \t\tif(propertyValue != null || !PropertyHelper.usesDefaultConverter(field)){\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, field, props, propertyValue, true);\n    \t\t\t\tif(converted != null)\n    \t\t\t\t\tsetField(field, obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Property assignment of \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \" with original property value \" + propertyValue + \" and converted to \" + converted \n    \t\t\t\t\t\t+ \" could not be assigned. Exception is \" +e, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","commit_id":"7c0815f608f923bc97b8e9c1060c145498813dcb","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void resolveAndAssignField(Object obj, Field field, Map<String,String> props) throws Exception {\n    \tif(field.isAnnotationPresent(Property.class)) {\n    \t\tString propertyName = PropertyHelper.getPropertyName(field, props) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(field.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n            \n    \t\tif(propertyValue != null || !PropertyHelper.usesDefaultConverter(field)){\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, field, props, propertyValue, true);\n    \t\t\t\tif(converted != null)\n    \t\t\t\t\tsetField(field, obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Property assignment of \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \" with original property value \" + propertyValue + \" and converted to \" + converted \n    \t\t\t\t\t\t+ \" could not be assigned. Exception is \" +e, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","id":20939,"modified_method":"public static void resolveAndAssignField(Object obj, Field field, Map<String,String> props) throws Exception {\n        Property annotation=field.getAnnotation(Property.class);\n    \tif(annotation != null) {\n    \t\tString propertyName = PropertyHelper.getPropertyName(field, props) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(field.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n\n            if(propertyName != null && propertyValue != null) {\n                String deprecated_msg=annotation.deprecatedMessage();\n                if(deprecated_msg != null && deprecated_msg.length() > 0) {\n                    log.warn(field.getDeclaringClass().getSimpleName() + \".\" + field.getName() + \": \" + deprecated_msg);\n                }\n            }\n            \n    \t\tif(propertyValue != null || !PropertyHelper.usesDefaultConverter(field)){\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, field, props, propertyValue, true);\n    \t\t\t\tif(converted != null)\n    \t\t\t\t\tsetField(field, obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Property assignment of \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \" with original property value \" + propertyValue + \" and converted to \" + converted \n    \t\t\t\t\t\t+ \" could not be assigned. Exception is \" +e, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","commit_id":"90ff2c0fcba493f1eeb75f65a1b094a78bc47bae","url":"https://github.com/belaban/JGroups"},{"original_method":"public static void resolveAndInvokePropertyMethod(Object obj, Method method, Map<String,String> props) throws Exception {\n    \tString methodName=method.getName();\n    \tif(method.isAnnotationPresent(Property.class) && isSetPropertyMethod(method)) {\n    \t\tString propertyName=PropertyHelper.getPropertyName(method) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(method.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n\n    \t\tif(propertyValue != null) {\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, method, props, propertyValue, true);\n    \t\t\t\tmethod.invoke(obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Could not assign property \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \", method is \" + methodName + \", converted value is \" + converted, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","id":20940,"modified_method":"public static void resolveAndInvokePropertyMethod(Object obj, Method method, Map<String,String> props) throws Exception {\n    \tString methodName=method.getName();\n        Property annotation=method.getAnnotation(Property.class);\n    \tif(annotation != null && isSetPropertyMethod(method)) {\n    \t\tString propertyName=PropertyHelper.getPropertyName(method) ;\n    \t\tString propertyValue=props.get(propertyName);\n\n            // if there is a systemProperty attribute defined in the annotation, set the property value from the system property\n            String tmp=grabSystemProp(method.getAnnotation(Property.class));\n            if(tmp != null)\n                propertyValue=tmp;\n\n            if(propertyName != null && propertyValue != null) {\n                String deprecated_msg=annotation.deprecatedMessage();\n                if(deprecated_msg != null && deprecated_msg.length() > 0) {\n                    log.warn(method.getDeclaringClass().getSimpleName() + \".\" + methodName + \": \" + deprecated_msg);\n                }\n            }\n\n    \t\tif(propertyValue != null) {\n    \t\t\tObject converted=null;\n    \t\t\ttry {\n    \t\t\t\tconverted=PropertyHelper.getConvertedValue(obj, method, props, propertyValue, true);\n    \t\t\t\tmethod.invoke(obj, converted);\n    \t\t\t}\n    \t\t\tcatch(Exception e) {\n    \t\t\t\tString name=obj instanceof Protocol? ((Protocol)obj).getName() : obj.getClass().getName();\n    \t\t\t\tthrow new Exception(\"Could not assign property \" + propertyName + \" in \"\n    \t\t\t\t\t\t+ name + \", method is \" + methodName + \", converted value is \" + converted, e);\n    \t\t\t}\n    \t\t}\n\n            props.remove(propertyName);\n    \t}\n    }","commit_id":"90ff2c0fcba493f1eeb75f65a1b094a78bc47bae","url":"https://github.com/belaban/JGroups"},{"original_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","id":20941,"modified_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"cd7012ac90457dc907e4678eb69bea1d17aaa22b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3750];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","id":20942,"modified_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3775];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"cd7012ac90457dc907e4678eb69bea1d17aaa22b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","id":20943,"modified_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"cd7012ac90457dc907e4678eb69bea1d17aaa22b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","id":20944,"modified_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"cd7012ac90457dc907e4678eb69bea1d17aaa22b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 4: \n          { System.out.print(yytext());\n          }\n        case 19: break;\n        case 8: \n          { //System.err.println(\"Transitioning to SRCID\");\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 20: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 21: break;\n        case 14: \n          { //System.err.println(\"Transitioning to DOCTYPE\");\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 22: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 23: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 24: break;\n        case 5: \n          { //System.err.println(\"Transitioning to DATETIME\");\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 25: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 26: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 28: break;\n        case 7: \n          { // System.err.println(\"Transitioning to DOCNO\");\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 31: break;\n        case 15: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 32: break;\n        case 16: \n          { yybegin(PREAMBLE); return IGNORE;\n          }\n        case 33: break;\n        case 1: \n          { return ACCEPT;\n          }\n        case 34: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 35: break;\n        case 11: \n          { //System.err.println(\"Transitioning to HEADER\");\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":20945,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 1: \n          { if (DBG) System.err.printf(\"Accepting |%s|, staying in YYINITIAL%n\", yytext());\n                          return ACCEPT;\n          }\n        case 19: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 20: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 21: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 22: break;\n        case 8: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to SRCID%n\", yytext());\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 23: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 24: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 25: break;\n        case 15: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCTYPE%n\", yytext());\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 26: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 4: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, staying in YYINITIAL%n\", yytext());\n                          return IGNORE;\n          }\n        case 28: break;\n        case 11: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to HEADER%n\", yytext());\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 7: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCNO%n\", yytext());\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 31: break;\n        case 16: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to PREAMBLE%n\", yytext());\n                          yybegin(PREAMBLE); return IGNORE;\n          }\n        case 32: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 33: break;\n        case 14: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 34: break;\n        case 5: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DATETIME%n\", yytext());\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 35: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"cd7012ac90457dc907e4678eb69bea1d17aaa22b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"ROOT\") && subtree.firstChild().isLeaf() && \"CP\".equals(subtree.firstChild().value())) {\n        EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n        List<Tree> children = subtree.getChildrenAsList();\n        children = children.subList(1,children.size() - 1);\n        subtree.setChildren(children);\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","id":20946,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"CP\") && subtree.numChildren() == 1) {\n        Tree subsubtree = subtree.firstChild();\n        if (subsubtree.value().equals(\"ROOT\")) {\n          if (subsubtree.firstChild().isLeaf() && \"CP\".equals(subsubtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n            List<Tree> children = subsubtree.getChildrenAsList();\n            children = children.subList(1,children.size());\n            subtree.setChildren(children);\n            EncodingPrintWriter.err.println(\"  Corrected as:                                     \" + newTree, ChineseTreebankLanguagePack.ENCODING); // spaced to align with above\n          }\n        }\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","commit_id":"cd7012ac90457dc907e4678eb69bea1d17aaa22b","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","id":20947,"modified_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"aeabdfa745742e1081fd997b301d3cf4959ec91e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","id":20948,"modified_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"aeabdfa745742e1081fd997b301d3cf4959ec91e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3750];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","id":20949,"modified_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3775];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"aeabdfa745742e1081fd997b301d3cf4959ec91e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 4: \n          { System.out.print(yytext());\n          }\n        case 19: break;\n        case 8: \n          { //System.err.println(\"Transitioning to SRCID\");\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 20: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 21: break;\n        case 14: \n          { //System.err.println(\"Transitioning to DOCTYPE\");\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 22: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 23: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 24: break;\n        case 5: \n          { //System.err.println(\"Transitioning to DATETIME\");\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 25: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 26: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 28: break;\n        case 7: \n          { // System.err.println(\"Transitioning to DOCNO\");\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 31: break;\n        case 15: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 32: break;\n        case 16: \n          { yybegin(PREAMBLE); return IGNORE;\n          }\n        case 33: break;\n        case 1: \n          { return ACCEPT;\n          }\n        case 34: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 35: break;\n        case 11: \n          { //System.err.println(\"Transitioning to HEADER\");\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":20950,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 1: \n          { if (DBG) System.err.printf(\"Accepting |%s|, staying in YYINITIAL%n\", yytext());\n                          return ACCEPT;\n          }\n        case 19: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 20: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 21: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 22: break;\n        case 8: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to SRCID%n\", yytext());\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 23: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 24: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 25: break;\n        case 15: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCTYPE%n\", yytext());\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 26: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 4: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, staying in YYINITIAL%n\", yytext());\n                          return IGNORE;\n          }\n        case 28: break;\n        case 11: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to HEADER%n\", yytext());\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 7: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCNO%n\", yytext());\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 31: break;\n        case 16: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to PREAMBLE%n\", yytext());\n                          yybegin(PREAMBLE); return IGNORE;\n          }\n        case 32: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 33: break;\n        case 14: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 34: break;\n        case 5: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DATETIME%n\", yytext());\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 35: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"aeabdfa745742e1081fd997b301d3cf4959ec91e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","id":20951,"modified_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"aeabdfa745742e1081fd997b301d3cf4959ec91e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"ROOT\") && subtree.firstChild().isLeaf() && \"CP\".equals(subtree.firstChild().value())) {\n        EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n        List<Tree> children = subtree.getChildrenAsList();\n        children = children.subList(1,children.size() - 1);\n        subtree.setChildren(children);\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","id":20952,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"CP\") && subtree.numChildren() == 1) {\n        Tree subsubtree = subtree.firstChild();\n        if (subsubtree.value().equals(\"ROOT\")) {\n          if (subsubtree.firstChild().isLeaf() && \"CP\".equals(subsubtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n            List<Tree> children = subsubtree.getChildrenAsList();\n            children = children.subList(1,children.size());\n            subtree.setChildren(children);\n            EncodingPrintWriter.err.println(\"  Corrected as:                                     \" + newTree, ChineseTreebankLanguagePack.ENCODING); // spaced to align with above\n          }\n        }\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","commit_id":"aeabdfa745742e1081fd997b301d3cf4959ec91e","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","id":20953,"modified_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"1a46be15c38c52c0857b644177721cef92ae31ec","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","id":20954,"modified_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"1a46be15c38c52c0857b644177721cef92ae31ec","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3750];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","id":20955,"modified_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3775];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"1a46be15c38c52c0857b644177721cef92ae31ec","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 4: \n          { System.out.print(yytext());\n          }\n        case 19: break;\n        case 8: \n          { //System.err.println(\"Transitioning to SRCID\");\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 20: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 21: break;\n        case 14: \n          { //System.err.println(\"Transitioning to DOCTYPE\");\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 22: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 23: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 24: break;\n        case 5: \n          { //System.err.println(\"Transitioning to DATETIME\");\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 25: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 26: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 28: break;\n        case 7: \n          { // System.err.println(\"Transitioning to DOCNO\");\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 31: break;\n        case 15: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 32: break;\n        case 16: \n          { yybegin(PREAMBLE); return IGNORE;\n          }\n        case 33: break;\n        case 1: \n          { return ACCEPT;\n          }\n        case 34: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 35: break;\n        case 11: \n          { //System.err.println(\"Transitioning to HEADER\");\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":20956,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 1: \n          { if (DBG) System.err.printf(\"Accepting |%s|, staying in YYINITIAL%n\", yytext());\n                          return ACCEPT;\n          }\n        case 19: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 20: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 21: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 22: break;\n        case 8: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to SRCID%n\", yytext());\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 23: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 24: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 25: break;\n        case 15: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCTYPE%n\", yytext());\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 26: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 4: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, staying in YYINITIAL%n\", yytext());\n                          return IGNORE;\n          }\n        case 28: break;\n        case 11: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to HEADER%n\", yytext());\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 7: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCNO%n\", yytext());\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 31: break;\n        case 16: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to PREAMBLE%n\", yytext());\n                          yybegin(PREAMBLE); return IGNORE;\n          }\n        case 32: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 33: break;\n        case 14: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 34: break;\n        case 5: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DATETIME%n\", yytext());\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 35: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"1a46be15c38c52c0857b644177721cef92ae31ec","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","id":20957,"modified_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"1a46be15c38c52c0857b644177721cef92ae31ec","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"ROOT\") && subtree.firstChild().isLeaf() && \"CP\".equals(subtree.firstChild().value())) {\n        EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n        List<Tree> children = subtree.getChildrenAsList();\n        children = children.subList(1,children.size() - 1);\n        subtree.setChildren(children);\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","id":20958,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"CP\") && subtree.numChildren() == 1) {\n        Tree subsubtree = subtree.firstChild();\n        if (subsubtree.value().equals(\"ROOT\")) {\n          if (subsubtree.firstChild().isLeaf() && \"CP\".equals(subsubtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n            List<Tree> children = subsubtree.getChildrenAsList();\n            children = children.subList(1,children.size());\n            subtree.setChildren(children);\n            EncodingPrintWriter.err.println(\"  Corrected as:                                     \" + newTree, ChineseTreebankLanguagePack.ENCODING); // spaced to align with above\n          }\n        }\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","commit_id":"1a46be15c38c52c0857b644177721cef92ae31ec","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","id":20959,"modified_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"ac7ab7f4e73bcbeae363ebac7a0f9b0557759787","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","id":20960,"modified_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"ac7ab7f4e73bcbeae363ebac7a0f9b0557759787","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","id":20961,"modified_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"ac7ab7f4e73bcbeae363ebac7a0f9b0557759787","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3750];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","id":20962,"modified_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3775];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"ac7ab7f4e73bcbeae363ebac7a0f9b0557759787","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 4: \n          { System.out.print(yytext());\n          }\n        case 19: break;\n        case 8: \n          { //System.err.println(\"Transitioning to SRCID\");\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 20: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 21: break;\n        case 14: \n          { //System.err.println(\"Transitioning to DOCTYPE\");\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 22: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 23: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 24: break;\n        case 5: \n          { //System.err.println(\"Transitioning to DATETIME\");\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 25: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 26: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 28: break;\n        case 7: \n          { // System.err.println(\"Transitioning to DOCNO\");\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 31: break;\n        case 15: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 32: break;\n        case 16: \n          { yybegin(PREAMBLE); return IGNORE;\n          }\n        case 33: break;\n        case 1: \n          { return ACCEPT;\n          }\n        case 34: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 35: break;\n        case 11: \n          { //System.err.println(\"Transitioning to HEADER\");\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":20963,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 1: \n          { if (DBG) System.err.printf(\"Accepting |%s|, staying in YYINITIAL%n\", yytext());\n                          return ACCEPT;\n          }\n        case 19: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 20: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 21: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 22: break;\n        case 8: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to SRCID%n\", yytext());\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 23: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 24: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 25: break;\n        case 15: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCTYPE%n\", yytext());\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 26: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 4: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, staying in YYINITIAL%n\", yytext());\n                          return IGNORE;\n          }\n        case 28: break;\n        case 11: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to HEADER%n\", yytext());\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 7: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCNO%n\", yytext());\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 31: break;\n        case 16: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to PREAMBLE%n\", yytext());\n                          yybegin(PREAMBLE); return IGNORE;\n          }\n        case 32: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 33: break;\n        case 14: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 34: break;\n        case 5: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DATETIME%n\", yytext());\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 35: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"ac7ab7f4e73bcbeae363ebac7a0f9b0557759787","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"ROOT\") && subtree.firstChild().isLeaf() && \"CP\".equals(subtree.firstChild().value())) {\n        EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n        List<Tree> children = subtree.getChildrenAsList();\n        children = children.subList(1,children.size() - 1);\n        subtree.setChildren(children);\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","id":20964,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"CP\") && subtree.numChildren() == 1) {\n        Tree subsubtree = subtree.firstChild();\n        if (subsubtree.value().equals(\"ROOT\")) {\n          if (subsubtree.firstChild().isLeaf() && \"CP\".equals(subsubtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n            List<Tree> children = subsubtree.getChildrenAsList();\n            children = children.subList(1,children.size());\n            subtree.setChildren(children);\n            EncodingPrintWriter.err.println(\"  Corrected as:                                     \" + newTree, ChineseTreebankLanguagePack.ENCODING); // spaced to align with above\n          }\n        }\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","commit_id":"ac7ab7f4e73bcbeae363ebac7a0f9b0557759787","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","id":20965,"modified_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"71e75ae36a2d7422325cb3bb7648d517b6de4c9c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3750];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","id":20966,"modified_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3775];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"71e75ae36a2d7422325cb3bb7648d517b6de4c9c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","id":20967,"modified_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"71e75ae36a2d7422325cb3bb7648d517b6de4c9c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","id":20968,"modified_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"71e75ae36a2d7422325cb3bb7648d517b6de4c9c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 4: \n          { System.out.print(yytext());\n          }\n        case 19: break;\n        case 8: \n          { //System.err.println(\"Transitioning to SRCID\");\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 20: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 21: break;\n        case 14: \n          { //System.err.println(\"Transitioning to DOCTYPE\");\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 22: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 23: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 24: break;\n        case 5: \n          { //System.err.println(\"Transitioning to DATETIME\");\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 25: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 26: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 28: break;\n        case 7: \n          { // System.err.println(\"Transitioning to DOCNO\");\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 31: break;\n        case 15: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 32: break;\n        case 16: \n          { yybegin(PREAMBLE); return IGNORE;\n          }\n        case 33: break;\n        case 1: \n          { return ACCEPT;\n          }\n        case 34: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 35: break;\n        case 11: \n          { //System.err.println(\"Transitioning to HEADER\");\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":20969,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 1: \n          { if (DBG) System.err.printf(\"Accepting |%s|, staying in YYINITIAL%n\", yytext());\n                          return ACCEPT;\n          }\n        case 19: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 20: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 21: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 22: break;\n        case 8: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to SRCID%n\", yytext());\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 23: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 24: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 25: break;\n        case 15: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCTYPE%n\", yytext());\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 26: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 4: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, staying in YYINITIAL%n\", yytext());\n                          return IGNORE;\n          }\n        case 28: break;\n        case 11: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to HEADER%n\", yytext());\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 7: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCNO%n\", yytext());\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 31: break;\n        case 16: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to PREAMBLE%n\", yytext());\n                          yybegin(PREAMBLE); return IGNORE;\n          }\n        case 32: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 33: break;\n        case 14: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 34: break;\n        case 5: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DATETIME%n\", yytext());\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 35: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"71e75ae36a2d7422325cb3bb7648d517b6de4c9c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"ROOT\") && subtree.firstChild().isLeaf() && \"CP\".equals(subtree.firstChild().value())) {\n        EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n        List<Tree> children = subtree.getChildrenAsList();\n        children = children.subList(1,children.size() - 1);\n        subtree.setChildren(children);\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","id":20970,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"CP\") && subtree.numChildren() == 1) {\n        Tree subsubtree = subtree.firstChild();\n        if (subsubtree.value().equals(\"ROOT\")) {\n          if (subsubtree.firstChild().isLeaf() && \"CP\".equals(subsubtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n            List<Tree> children = subsubtree.getChildrenAsList();\n            children = children.subList(1,children.size());\n            subtree.setChildren(children);\n            EncodingPrintWriter.err.println(\"  Corrected as:                                     \" + newTree, ChineseTreebankLanguagePack.ENCODING); // spaced to align with above\n          }\n        }\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","commit_id":"71e75ae36a2d7422325cb3bb7648d517b6de4c9c","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","id":20971,"modified_method":"private static int [] zzUnpackAttribute() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"f466a35b65d1d755937f8dc7d8a50c7de20100c3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3750];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","id":20972,"modified_method":"private static int [] zzUnpackTrans() {\n    int [] result = new int[3775];\n    int offset = 0;\n    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"f466a35b65d1d755937f8dc7d8a50c7de20100c3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","id":20973,"modified_method":"private static int [] zzUnpackRowMap() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"f466a35b65d1d755937f8dc7d8a50c7de20100c3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 4: \n          { System.out.print(yytext());\n          }\n        case 19: break;\n        case 8: \n          { //System.err.println(\"Transitioning to SRCID\");\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 20: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 21: break;\n        case 14: \n          { //System.err.println(\"Transitioning to DOCTYPE\");\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 22: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 23: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 24: break;\n        case 5: \n          { //System.err.println(\"Transitioning to DATETIME\");\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 25: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 26: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 28: break;\n        case 7: \n          { // System.err.println(\"Transitioning to DOCNO\");\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 31: break;\n        case 15: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 32: break;\n        case 16: \n          { yybegin(PREAMBLE); return IGNORE;\n          }\n        case 33: break;\n        case 1: \n          { return ACCEPT;\n          }\n        case 34: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 35: break;\n        case 11: \n          { //System.err.println(\"Transitioning to HEADER\");\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","id":20974,"modified_method":"/**\n   * Resumes scanning until the next regular expression is matched,\n   * the end of input is encountered or an I/O-Error occurs.\n   *\n   * @return      the next token\n   * @exception   java.io.IOException  if any I/O-Error occurs\n   */\n  public int yylex() throws java.io.IOException {\n    int zzInput;\n    int zzAction;\n\n    // cached fields:\n    int zzCurrentPosL;\n    int zzMarkedPosL;\n    int zzEndReadL = zzEndRead;\n    char [] zzBufferL = zzBuffer;\n    char [] zzCMapL = ZZ_CMAP;\n\n    int [] zzTransL = ZZ_TRANS;\n    int [] zzRowMapL = ZZ_ROWMAP;\n    int [] zzAttrL = ZZ_ATTRIBUTE;\n\n    while (true) {\n      zzMarkedPosL = zzMarkedPos;\n\n      zzAction = -1;\n\n      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;\n  \n      zzState = ZZ_LEXSTATE[zzLexicalState];\n\n\n      zzForAction: {\n        while (true) {\n    \n          if (zzCurrentPosL < zzEndReadL)\n            zzInput = zzBufferL[zzCurrentPosL++];\n          else if (zzAtEOF) {\n            zzInput = YYEOF;\n            break zzForAction;\n          }\n          else {\n            // store back cached positions\n            zzCurrentPos  = zzCurrentPosL;\n            zzMarkedPos   = zzMarkedPosL;\n            boolean eof = zzRefill();\n            // get translated positions and possibly new buffer\n            zzCurrentPosL  = zzCurrentPos;\n            zzMarkedPosL   = zzMarkedPos;\n            zzBufferL      = zzBuffer;\n            zzEndReadL     = zzEndRead;\n            if (eof) {\n              zzInput = YYEOF;\n              break zzForAction;\n            }\n            else {\n              zzInput = zzBufferL[zzCurrentPosL++];\n            }\n          }\n          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];\n          if (zzNext == -1) break zzForAction;\n          zzState = zzNext;\n\n          int zzAttributes = zzAttrL[zzState];\n          if ( (zzAttributes & 1) == 1 ) {\n            zzAction = zzState;\n            zzMarkedPosL = zzCurrentPosL;\n            if ( (zzAttributes & 8) == 8 ) break zzForAction;\n          }\n\n        }\n      }\n\n      // store back cached position\n      zzMarkedPos = zzMarkedPosL;\n\n      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {\n        case 1: \n          { if (DBG) System.err.printf(\"Accepting |%s|, staying in YYINITIAL%n\", yytext());\n                          return ACCEPT;\n          }\n        case 19: break;\n        case 10: \n          { yybegin(HEADER); return IGNORE;\n          }\n        case 20: break;\n        case 9: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                   yybegin(YYINITIAL); return IGNORE;\n          }\n        case 21: break;\n        case 17: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 22: break;\n        case 8: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to SRCID%n\", yytext());\n                          yybegin(SRCID); return IGNORE;\n          }\n        case 23: break;\n        case 6: \n          { yybegin(DATEINHEADER); return IGNORE;\n          }\n        case 24: break;\n        case 12: \n          { // System.err.println(\"Transitioning to YYINITIAL\");\n                  yybegin(YYINITIAL); return IGNORE;\n          }\n        case 25: break;\n        case 15: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCTYPE%n\", yytext());\n                          yybegin(DOCTYPE); return IGNORE;\n          }\n        case 26: break;\n        case 18: \n          { yybegin(YYINITIAL); return IGNORE;\n          }\n        case 27: break;\n        case 4: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, staying in YYINITIAL%n\", yytext());\n                          return IGNORE;\n          }\n        case 28: break;\n        case 11: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to HEADER%n\", yytext());\n                          yybegin(HEADER); return IGNORE;\n          }\n        case 29: break;\n        case 2: \n          { return IGNORE;\n          }\n        case 30: break;\n        case 7: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DOCNO%n\", yytext());\n                          yybegin(DOCNO); return IGNORE;\n          }\n        case 31: break;\n        case 16: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to PREAMBLE%n\", yytext());\n                          yybegin(PREAMBLE); return IGNORE;\n          }\n        case 32: break;\n        case 13: \n          { //System.err.println(\"In SRCID; Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 33: break;\n        case 14: \n          { //System.err.println(\"Transitioning to YYINITIAL\");\n                yybegin(YYINITIAL); return IGNORE;\n          }\n        case 34: break;\n        case 5: \n          { if (DBG) System.err.printf(\"Ignoring |%s|, moving to DATETIME%n\", yytext());\n                          yybegin(DATETIME); return IGNORE;\n          }\n        case 35: break;\n        case 3: \n          { reportError(yytext());\n          }\n        case 36: break;\n        default: \n          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {\n            zzAtEOF = true;\n            return YYEOF;\n          } \n          else {\n            zzScanError(ZZ_NO_MATCH);\n          }\n      }\n    }\n  }","commit_id":"f466a35b65d1d755937f8dc7d8a50c7de20100c3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[166];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","id":20975,"modified_method":"private static int [] zzUnpackAction() {\n    int [] result = new int[169];\n    int offset = 0;\n    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);\n    return result;\n  }","commit_id":"f466a35b65d1d755937f8dc7d8a50c7de20100c3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"ROOT\") && subtree.firstChild().isLeaf() && \"CP\".equals(subtree.firstChild().value())) {\n        EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n        List<Tree> children = subtree.getChildrenAsList();\n        children = children.subList(1,children.size() - 1);\n        subtree.setChildren(children);\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","id":20976,"modified_method":"@Override\n  public Tree normalizeWholeTree(Tree tree, TreeFactory tf) {\n    Tree newTree = tree.prune(chineseEmptyFilter, tf).spliceOut(aOverAFilter);\n\n    // Report non-unary initial rewrites & fix 'obvious ones'\n    Tree[] kids = newTree.children();\n    if (kids.length > 1) {\n    /* -------------- don't do this as probably shouldn't for test set (and doesn't help anyway)\n      if (kids.length == 2 &&\n          \"PU\".equals(kids[kids.length - 1].value()) &&\n          kids[0].isPhrasal()) {\n        printlnErr(\"Correcting error: non-unary initial rewrite fixed by tucking punctuation inside constituent: \" + newTree.localTree());\n        List kidkids = kids[0].getChildrenAsList();\n        kidkids.add(kids[1]);\n        Tree bigger = tf.newTreeNode(kids[0].label(), kidkids);\n        newTree = tf.newTreeNode(newTree.label(), Collections.singletonList(bigger));\n      } else {\n    -------------------- */\n      EncodingPrintWriter.err.println(\"Possible error: non-unary initial rewrite: \" +\n                             newTree.localTree(), ChineseTreebankLanguagePack.ENCODING);\n      // }\n    } else {\n      if (kids.length > 0) {\n        Tree child = kids[0];\n        if ( ! child.isPhrasal()) {\n          EncodingPrintWriter.err.println(\"Correcting error: treebank tree is not phrasal; wrapping in FRAG: \" + child, ChineseTreebankLanguagePack.ENCODING);\n          Tree added = tf.newTreeNode(\"FRAG\", Arrays.asList(kids));\n          newTree.setChild(0, added);\n        }\n      } else {\n        EncodingPrintWriter.err.println(\"Error: tree with no children: \" + tree, ChineseTreebankLanguagePack.ENCODING);\n      }\n    }\n    // note that there's also at least 1 tree that is an IP with no surrounding ROOT node\n\n    // there are also several places where \"NP\" is used as a preterminal tag\n    // and presumably should be \"NN\"\n    // a couple of other random errors are corrected here\n    for (Tree subtree : newTree) {\n      if (subtree.value().equals(\"CP\") && subtree.numChildren() == 1) {\n        Tree subsubtree = subtree.firstChild();\n        if (subsubtree.value().equals(\"ROOT\")) {\n          if (subsubtree.firstChild().isLeaf() && \"CP\".equals(subsubtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: seriously messed up tree in CTB6: \" + newTree, ChineseTreebankLanguagePack.ENCODING);\n            List<Tree> children = subsubtree.getChildrenAsList();\n            children = children.subList(1,children.size());\n            subtree.setChildren(children);\n            EncodingPrintWriter.err.println(\"  Corrected as:                                     \" + newTree, ChineseTreebankLanguagePack.ENCODING); // spaced to align with above\n          }\n        }\n      }\n      if (subtree.isPreTerminal()) {\n        if (subtree.value().matches(\"NP\")) {\n          if (ChineseTreebankLanguagePack.chineseDouHaoAcceptFilter().accept(subtree.firstChild().value())) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal over douhao; preterminal changed to PU: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PU\");\n          } else if (subtree.parent(newTree).value().matches(\"NP\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/ NP parent; preterminal changed to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else {\n            EncodingPrintWriter.err.println(\"Correcting error: NP preterminal w/o NP parent, changing preterminal to NN: \" + subtree.parent(newTree), ChineseTreebankLanguagePack.ENCODING);\n            // Tree newChild = tf.newTreeNode(\"NN\", Collections.singletonList(subtree.firstChild()));\n            // subtree.setChildren(Collections.singletonList(newChild));\n            subtree.setValue(\"NN\");\n          }\n        } else if (subtree.value().matches(\"PU\")) {\n          if (subtree.firstChild().value().matches(\"\\u4ed6\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\\u4ed6\\\" under PU tag; tag changed to PN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"PN\");\n          } else if (subtree.firstChild().value().matches(\"tw|\\u534A\\u7A74\\u5F0F\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"\" + subtree.firstChild().value() + \"\\\" under PU tag; tag changed to NN: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"NN\");\n          } else if (subtree.firstChild().value().matches(\"33\")) {\n            EncodingPrintWriter.err.println(\"Correcting error: \\\"33\\\" under PU tag; tag changed to CD: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n            subtree.setValue(\"CD\");\n          }\n        }\n      } else if (subtree.value().matches(\"NN\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: NN phrasal tag changed to NP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"NP\");\n      } else if (subtree.value().matches(\"MSP\")) {\n        EncodingPrintWriter.err.println(\"Correcting error: MSP phrasal tag changed to VP: \" + subtree, ChineseTreebankLanguagePack.ENCODING);\n        subtree.setValue(\"VP\");\n      }\n    }\n\n    if (tagExtender != null) {\n      newTree = tagExtender.transformTree(newTree);\n    }\n    return newTree;\n  }","commit_id":"f466a35b65d1d755937f8dc7d8a50c7de20100c3","url":"https://github.com/stanfordnlp/CoreNLP"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        mimePanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        mimeTable = new javax.swing.JTable();\n        userTypeTextField = new javax.swing.JTextField();\n        addTypeButton = new javax.swing.JButton();\n        removeTypeButton = new javax.swing.JButton();\n        mimeErrLabel = new javax.swing.JLabel();\n        extensionPanel = new javax.swing.JPanel();\n        userExtTextField = new javax.swing.JTextField();\n        addExtButton = new javax.swing.JButton();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        extTable = new javax.swing.JTable();\n        removeExtButton = new javax.swing.JButton();\n        extHeaderLabel = new javax.swing.JLabel();\n        extErrorLabel = new javax.swing.JLabel();\n\n        jScrollPane1.setBorder(null);\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(687, 450));\n\n        jSplitPane1.setDividerLocation(430);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.jLabel1.text\")); // NOI18N\n\n        mimeTable.setModel(mimeTableModel);\n        jScrollPane2.setViewportView(mimeTable);\n\n        userTypeTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userTypeTextField.text\")); // NOI18N\n        userTypeTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userTypeTextFieldFocusGained(evt);\n            }\n        });\n\n        addTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        addTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addTypeButton.text\")); // NOI18N\n        addTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addTypeButtonActionPerformed(evt);\n            }\n        });\n\n        removeTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.text\")); // NOI18N\n        removeTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeTypeButtonActionPerformed(evt);\n            }\n        });\n\n        mimeErrLabel.setForeground(new java.awt.Color(255, 0, 0));\n        mimeErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.mimeErrLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout mimePanelLayout = new javax.swing.GroupLayout(mimePanel);\n        mimePanel.setLayout(mimePanelLayout);\n        mimePanelLayout.setHorizontalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(mimePanelLayout.createSequentialGroup()\n                        .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(jLabel1)\n                            .addGroup(mimePanelLayout.createSequentialGroup()\n                                .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(addTypeButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(removeTypeButton)))\n                        .addGap(0, 0, Short.MAX_VALUE))\n                    .addComponent(mimeErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addContainerGap())\n        );\n        mimePanelLayout.setVerticalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(removeTypeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(addTypeButton)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(mimeErrLabel)\n                .addContainerGap())\n        );\n\n        jSplitPane1.setLeftComponent(mimePanel);\n\n        userExtTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userExtTextField.text\")); // NOI18N\n        userExtTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userExtTextFieldFocusGained(evt);\n            }\n        });\n\n        addExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        addExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addExtButton.text\")); // NOI18N\n        addExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addExtButtonActionPerformed(evt);\n            }\n        });\n\n        extTable.setModel(extTableModel);\n        jScrollPane3.setViewportView(extTable);\n\n        removeExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeExtButton.text\")); // NOI18N\n        removeExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeExtButtonActionPerformed(evt);\n            }\n        });\n\n        extHeaderLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extHeaderLabel.text\")); // NOI18N\n\n        extErrorLabel.setForeground(new java.awt.Color(255, 0, 0));\n        extErrorLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extErrorLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout extensionPanelLayout = new javax.swing.GroupLayout(extensionPanel);\n        extensionPanel.setLayout(extensionPanelLayout);\n        extensionPanelLayout.setHorizontalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(extensionPanelLayout.createSequentialGroup()\n                        .addComponent(extHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addContainerGap(37, Short.MAX_VALUE))\n                    .addComponent(extErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                        .addComponent(userExtTextField)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(addExtButton)\n                        .addGap(4, 4, 4)\n                        .addComponent(removeExtButton))))\n        );\n        extensionPanelLayout.setVerticalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(extHeaderLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(userExtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(addExtButton)\n                    .addComponent(removeExtButton))\n                .addGap(5, 5, 5)\n                .addComponent(extErrorLabel)\n                .addContainerGap())\n        );\n\n        jSplitPane1.setRightComponent(extensionPanel);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(31, 31, 31))\n        );\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(18, Short.MAX_VALUE))\n        );\n    }","id":20977,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jSplitPane1 = new javax.swing.JSplitPane();\n        mimePanel = new javax.swing.JPanel();\n        jLabel1 = new javax.swing.JLabel();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        mimeTable = new javax.swing.JTable();\n        userTypeTextField = new javax.swing.JTextField();\n        addTypeButton = new javax.swing.JButton();\n        removeTypeButton = new javax.swing.JButton();\n        mimeErrLabel = new javax.swing.JLabel();\n        extensionPanel = new javax.swing.JPanel();\n        userExtTextField = new javax.swing.JTextField();\n        addExtButton = new javax.swing.JButton();\n        jScrollPane3 = new javax.swing.JScrollPane();\n        extTable = new javax.swing.JTable();\n        removeExtButton = new javax.swing.JButton();\n        extHeaderLabel = new javax.swing.JLabel();\n        extErrorLabel = new javax.swing.JLabel();\n\n        jScrollPane1.setBorder(null);\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(687, 450));\n\n        jSplitPane1.setDividerLocation(430);\n\n        jLabel1.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.jLabel1.text\")); // NOI18N\n\n        mimeTable.setModel(mimeTableModel);\n        jScrollPane2.setViewportView(mimeTable);\n\n        userTypeTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userTypeTextField.text\")); // NOI18N\n        userTypeTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userTypeTextFieldFocusGained(evt);\n            }\n        });\n\n        addTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        addTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addTypeButton.text\")); // NOI18N\n        addTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addTypeButtonActionPerformed(evt);\n            }\n        });\n\n        removeTypeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeTypeButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeTypeButton.text\")); // NOI18N\n        removeTypeButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeTypeButtonActionPerformed(evt);\n            }\n        });\n\n        mimeErrLabel.setForeground(new java.awt.Color(255, 0, 0));\n        mimeErrLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.mimeErrLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout mimePanelLayout = new javax.swing.GroupLayout(mimePanel);\n        mimePanel.setLayout(mimePanelLayout);\n        mimePanelLayout.setHorizontalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)\n                    .addGroup(mimePanelLayout.createSequentialGroup()\n                        .addComponent(jLabel1)\n                        .addGap(0, 0, Short.MAX_VALUE))\n                    .addGroup(mimePanelLayout.createSequentialGroup()\n                        .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(addTypeButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(removeTypeButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(mimeErrLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        mimePanelLayout.setVerticalGroup(\n            mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(mimePanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jLabel1)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane2)\n                .addGap(18, 18, 18)\n                .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(mimeErrLabel)\n                    .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                        .addComponent(removeTypeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGroup(mimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(userTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(addTypeButton))))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setLeftComponent(mimePanel);\n\n        userExtTextField.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.userExtTextField.text\")); // NOI18N\n        userExtTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n            public void focusGained(java.awt.event.FocusEvent evt) {\n                userExtTextFieldFocusGained(evt);\n            }\n        });\n\n        addExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        addExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.addExtButton.text\")); // NOI18N\n        addExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addExtButtonActionPerformed(evt);\n            }\n        });\n\n        extTable.setModel(extTableModel);\n        jScrollPane3.setViewportView(extTable);\n\n        removeExtButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        removeExtButton.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.removeExtButton.text\")); // NOI18N\n        removeExtButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                removeExtButtonActionPerformed(evt);\n            }\n        });\n\n        extHeaderLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extHeaderLabel.text\")); // NOI18N\n\n        extErrorLabel.setForeground(new java.awt.Color(255, 0, 0));\n        extErrorLabel.setText(org.openide.util.NbBundle.getMessage(FileExtMismatchSettingsPanel.class, \"FileExtMismatchSettingsPanel.extErrorLabel.text\")); // NOI18N\n\n        javax.swing.GroupLayout extensionPanelLayout = new javax.swing.GroupLayout(extensionPanel);\n        extensionPanel.setLayout(extensionPanelLayout);\n        extensionPanelLayout.setHorizontalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(extensionPanelLayout.createSequentialGroup()\n                        .addComponent(extHeaderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(extensionPanelLayout.createSequentialGroup()\n                        .addComponent(userExtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(addExtButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(removeExtButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(extErrorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))\n        );\n        extensionPanelLayout.setVerticalGroup(\n            extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, extensionPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(extHeaderLabel)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(jScrollPane3)\n                .addGap(18, 18, 18)\n                .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(extErrorLabel)\n                    .addGroup(extensionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                        .addComponent(userExtTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addComponent(addExtButton)\n                        .addComponent(removeExtButton)))\n                .addContainerGap())\n        );\n\n        jSplitPane1.setRightComponent(extensionPanel);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)\n                .addContainerGap())\n        );\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)\n                .addGap(0, 0, 0))\n        );\n    }","commit_id":"318c44276cb18ce91b0b988d4f6ff05d83a304ca","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jLabel2 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jLabel6 = new javax.swing.JLabel();\n        jButton3 = new javax.swing.JButton();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        ingestWarningLabel = new javax.swing.JLabel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        hashSetTable = new HashSetTable();\n        deleteDatabaseButton = new javax.swing.JButton();\n        importDatabaseButton = new javax.swing.JButton();\n        hashDatabasesLabel = new javax.swing.JLabel();\n        nameLabel = new javax.swing.JLabel();\n        hashDbNameLabel = new javax.swing.JLabel();\n        hashDbLocationLabel = new javax.swing.JLabel();\n        locationLabel = new javax.swing.JLabel();\n        typeLabel = new javax.swing.JLabel();\n        hashDbTypeLabel = new javax.swing.JLabel();\n        hashDbIndexStatusLabel = new javax.swing.JLabel();\n        indexLabel = new javax.swing.JLabel();\n        indexButton = new javax.swing.JButton();\n        sendIngestMessagesCheckBox = new javax.swing.JCheckBox();\n        informationLabel = new javax.swing.JLabel();\n        optionsLabel = new javax.swing.JLabel();\n        informationSeparator = new javax.swing.JSeparator();\n        optionsSeparator = new javax.swing.JSeparator();\n        createDatabaseButton = new javax.swing.JButton();\n        indexPathLabelLabel = new javax.swing.JLabel();\n        indexPathLabel = new javax.swing.JLabel();\n        addHashesToDatabaseButton = new javax.swing.JButton();\n\n        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel2.text\")); // NOI18N\n\n        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel4.text\")); // NOI18N\n\n        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel6.text\")); // NOI18N\n\n        jButton3.setFont(jButton3.getFont().deriveFont(jButton3.getFont().getStyle() & ~java.awt.Font.BOLD, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jButton3.text\")); // NOI18N\n\n        setMinimumSize(new java.awt.Dimension(700, 430));\n        setPreferredSize(new java.awt.Dimension(700, 430));\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(671, 430));\n\n        ingestWarningLabel.setFont(ingestWarningLabel.getFont().deriveFont(ingestWarningLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        ingestWarningLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/warning16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(ingestWarningLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.ingestWarningLabel.text\")); // NOI18N\n\n        hashSetTable.setFont(hashSetTable.getFont().deriveFont(hashSetTable.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        hashSetTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        hashSetTable.setShowHorizontalLines(false);\n        hashSetTable.setShowVerticalLines(false);\n        hashSetTable.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                hashSetTableKeyPressed(evt);\n            }\n        });\n        jScrollPane1.setViewportView(hashSetTable);\n\n        deleteDatabaseButton.setFont(deleteDatabaseButton.getFont().deriveFont(deleteDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.deleteDatabaseButton.text\")); // NOI18N\n        deleteDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        importDatabaseButton.setFont(importDatabaseButton.getFont().deriveFont(importDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        importDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/import16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(importDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.importDatabaseButton.text\")); // NOI18N\n        importDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                importDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        hashDatabasesLabel.setFont(hashDatabasesLabel.getFont().deriveFont(hashDatabasesLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDatabasesLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDatabasesLabel.text\")); // NOI18N\n\n        nameLabel.setFont(nameLabel.getFont().deriveFont(nameLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.nameLabel.text\")); // NOI18N\n\n        hashDbNameLabel.setFont(hashDbNameLabel.getFont().deriveFont(hashDbNameLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbNameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbNameLabel.text\")); // NOI18N\n\n        hashDbLocationLabel.setFont(hashDbLocationLabel.getFont().deriveFont(hashDbLocationLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbLocationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbLocationLabel.text\")); // NOI18N\n\n        locationLabel.setFont(locationLabel.getFont().deriveFont(locationLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(locationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.locationLabel.text\")); // NOI18N\n\n        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(typeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.typeLabel.text\")); // NOI18N\n\n        hashDbTypeLabel.setFont(hashDbTypeLabel.getFont().deriveFont(hashDbTypeLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbTypeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbTypeLabel.text\")); // NOI18N\n\n        hashDbIndexStatusLabel.setFont(hashDbIndexStatusLabel.getFont().deriveFont(hashDbIndexStatusLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbIndexStatusLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbIndexStatusLabel.text\")); // NOI18N\n\n        indexLabel.setFont(indexLabel.getFont().deriveFont(indexLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexLabel.text\")); // NOI18N\n\n        indexButton.setFont(indexButton.getFont().deriveFont(indexButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexButton.text\")); // NOI18N\n        indexButton.setEnabled(false);\n        indexButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                indexButtonActionPerformed(evt);\n            }\n        });\n\n        sendIngestMessagesCheckBox.setFont(sendIngestMessagesCheckBox.getFont().deriveFont(sendIngestMessagesCheckBox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(sendIngestMessagesCheckBox, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.sendIngestMessagesCheckBox.text\")); // NOI18N\n        sendIngestMessagesCheckBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                sendIngestMessagesCheckBoxActionPerformed(evt);\n            }\n        });\n\n        informationLabel.setFont(informationLabel.getFont().deriveFont(informationLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(informationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.informationLabel.text\")); // NOI18N\n\n        optionsLabel.setFont(optionsLabel.getFont().deriveFont(optionsLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(optionsLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.optionsLabel.text\")); // NOI18N\n\n        createDatabaseButton.setFont(createDatabaseButton.getFont().deriveFont(createDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        createDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/new16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(createDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.createDatabaseButton.text\")); // NOI18N\n        createDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                createDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        indexPathLabelLabel.setFont(indexPathLabelLabel.getFont().deriveFont(indexPathLabelLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabelLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabelLabel.text\")); // NOI18N\n\n        indexPathLabel.setFont(indexPathLabel.getFont().deriveFont(indexPathLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabel.text\")); // NOI18N\n\n        addHashesToDatabaseButton.setFont(addHashesToDatabaseButton.getFont().deriveFont(addHashesToDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(addHashesToDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.addHashesToDatabaseButton.text\")); // NOI18N\n        addHashesToDatabaseButton.setEnabled(false);\n        addHashesToDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addHashesToDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(10, 10, 10)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addGroup(jPanel1Layout.createSequentialGroup()\n                                        .addComponent(informationLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(informationSeparator))\n                                    .addComponent(ingestWarningLabel)\n                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                                        .addGap(10, 10, 10)\n                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(locationLabel)\n                                                    .addComponent(indexButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(typeLabel)\n                                                    .addComponent(indexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(indexPathLabelLabel))\n                                                .addGap(10, 10, 10)\n                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(hashDbTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(hashDbLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(indexPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(hashDbIndexStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addGroup(jPanel1Layout.createSequentialGroup()\n                                                        .addComponent(addHashesToDatabaseButton)\n                                                        .addGap(0, 0, Short.MAX_VALUE))))\n                                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                                .addComponent(nameLabel)\n                                                .addGap(53, 53, 53)\n                                                .addComponent(hashDbNameLabel)\n                                                .addGap(0, 0, Short.MAX_VALUE))))\n                                    .addGroup(jPanel1Layout.createSequentialGroup()\n                                        .addComponent(optionsLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(23, 23, 23)\n                                .addComponent(sendIngestMessagesCheckBox)\n                                .addGap(0, 0, Short.MAX_VALUE))))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(hashDatabasesLabel)\n                            .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(hashDatabasesLabel)\n                .addGap(6, 6, 6)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(informationLabel)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(7, 7, 7)\n                                .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                        .addGap(7, 7, 7)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(nameLabel)\n                            .addComponent(hashDbNameLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(typeLabel)\n                            .addComponent(hashDbTypeLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(locationLabel)\n                            .addComponent(hashDbLocationLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexPathLabelLabel)\n                            .addComponent(indexPathLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexLabel)\n                            .addComponent(hashDbIndexStatusLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexButton)\n                            .addComponent(addHashesToDatabaseButton))\n                        .addGap(18, 18, 18)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(optionsLabel)\n                            .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(18, 18, 18)\n                        .addComponent(sendIngestMessagesCheckBox)\n                        .addGap(18, 18, 18)\n                        .addComponent(ingestWarningLabel))\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(33, Short.MAX_VALUE))\n        );\n\n        jScrollPane2.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n    }","id":20978,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        jLabel2 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jLabel6 = new javax.swing.JLabel();\n        jButton3 = new javax.swing.JButton();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        ingestWarningLabel = new javax.swing.JLabel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        hashSetTable = new HashSetTable();\n        deleteDatabaseButton = new javax.swing.JButton();\n        importDatabaseButton = new javax.swing.JButton();\n        hashDatabasesLabel = new javax.swing.JLabel();\n        nameLabel = new javax.swing.JLabel();\n        hashDbNameLabel = new javax.swing.JLabel();\n        hashDbLocationLabel = new javax.swing.JLabel();\n        locationLabel = new javax.swing.JLabel();\n        typeLabel = new javax.swing.JLabel();\n        hashDbTypeLabel = new javax.swing.JLabel();\n        hashDbIndexStatusLabel = new javax.swing.JLabel();\n        indexLabel = new javax.swing.JLabel();\n        indexButton = new javax.swing.JButton();\n        sendIngestMessagesCheckBox = new javax.swing.JCheckBox();\n        informationLabel = new javax.swing.JLabel();\n        optionsLabel = new javax.swing.JLabel();\n        informationSeparator = new javax.swing.JSeparator();\n        optionsSeparator = new javax.swing.JSeparator();\n        createDatabaseButton = new javax.swing.JButton();\n        indexPathLabelLabel = new javax.swing.JLabel();\n        indexPathLabel = new javax.swing.JLabel();\n        addHashesToDatabaseButton = new javax.swing.JButton();\n\n        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel2.text\")); // NOI18N\n\n        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel4.text\")); // NOI18N\n\n        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jLabel6.text\")); // NOI18N\n\n        jButton3.setFont(jButton3.getFont().deriveFont(jButton3.getFont().getStyle() & ~java.awt.Font.BOLD, 14));\n        org.openide.awt.Mnemonics.setLocalizedText(jButton3, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.jButton3.text\")); // NOI18N\n\n        setMinimumSize(new java.awt.Dimension(700, 430));\n        setPreferredSize(new java.awt.Dimension(700, 430));\n\n        jPanel1.setPreferredSize(new java.awt.Dimension(671, 430));\n\n        ingestWarningLabel.setFont(ingestWarningLabel.getFont().deriveFont(ingestWarningLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        ingestWarningLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/warning16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(ingestWarningLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.ingestWarningLabel.text\")); // NOI18N\n\n        hashSetTable.setFont(hashSetTable.getFont().deriveFont(hashSetTable.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        hashSetTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        hashSetTable.setShowHorizontalLines(false);\n        hashSetTable.setShowVerticalLines(false);\n        hashSetTable.addKeyListener(new java.awt.event.KeyAdapter() {\n            public void keyPressed(java.awt.event.KeyEvent evt) {\n                hashSetTableKeyPressed(evt);\n            }\n        });\n        jScrollPane1.setViewportView(hashSetTable);\n\n        deleteDatabaseButton.setFont(deleteDatabaseButton.getFont().deriveFont(deleteDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.deleteDatabaseButton.text\")); // NOI18N\n        deleteDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        deleteDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        importDatabaseButton.setFont(importDatabaseButton.getFont().deriveFont(importDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        importDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/import16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(importDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.importDatabaseButton.text\")); // NOI18N\n        importDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        importDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                importDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        hashDatabasesLabel.setFont(hashDatabasesLabel.getFont().deriveFont(hashDatabasesLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDatabasesLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDatabasesLabel.text\")); // NOI18N\n\n        nameLabel.setFont(nameLabel.getFont().deriveFont(nameLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(nameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.nameLabel.text\")); // NOI18N\n\n        hashDbNameLabel.setFont(hashDbNameLabel.getFont().deriveFont(hashDbNameLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbNameLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbNameLabel.text\")); // NOI18N\n\n        hashDbLocationLabel.setFont(hashDbLocationLabel.getFont().deriveFont(hashDbLocationLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbLocationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbLocationLabel.text\")); // NOI18N\n\n        locationLabel.setFont(locationLabel.getFont().deriveFont(locationLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(locationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.locationLabel.text\")); // NOI18N\n\n        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(typeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.typeLabel.text\")); // NOI18N\n\n        hashDbTypeLabel.setFont(hashDbTypeLabel.getFont().deriveFont(hashDbTypeLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbTypeLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbTypeLabel.text\")); // NOI18N\n\n        hashDbIndexStatusLabel.setFont(hashDbIndexStatusLabel.getFont().deriveFont(hashDbIndexStatusLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(hashDbIndexStatusLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.hashDbIndexStatusLabel.text\")); // NOI18N\n\n        indexLabel.setFont(indexLabel.getFont().deriveFont(indexLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexLabel.text\")); // NOI18N\n\n        indexButton.setFont(indexButton.getFont().deriveFont(indexButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexButton.text\")); // NOI18N\n        indexButton.setEnabled(false);\n        indexButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                indexButtonActionPerformed(evt);\n            }\n        });\n\n        sendIngestMessagesCheckBox.setFont(sendIngestMessagesCheckBox.getFont().deriveFont(sendIngestMessagesCheckBox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(sendIngestMessagesCheckBox, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.sendIngestMessagesCheckBox.text\")); // NOI18N\n        sendIngestMessagesCheckBox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                sendIngestMessagesCheckBoxActionPerformed(evt);\n            }\n        });\n\n        informationLabel.setFont(informationLabel.getFont().deriveFont(informationLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(informationLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.informationLabel.text\")); // NOI18N\n\n        optionsLabel.setFont(optionsLabel.getFont().deriveFont(optionsLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(optionsLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.optionsLabel.text\")); // NOI18N\n\n        createDatabaseButton.setFont(createDatabaseButton.getFont().deriveFont(createDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        createDatabaseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/modules/hashdatabase/new16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(createDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.createDatabaseButton.text\")); // NOI18N\n        createDatabaseButton.setMaximumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setMinimumSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.setPreferredSize(new java.awt.Dimension(140, 25));\n        createDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                createDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        indexPathLabelLabel.setFont(indexPathLabelLabel.getFont().deriveFont(indexPathLabelLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabelLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabelLabel.text\")); // NOI18N\n\n        indexPathLabel.setFont(indexPathLabel.getFont().deriveFont(indexPathLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(indexPathLabel, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.indexPathLabel.text\")); // NOI18N\n\n        addHashesToDatabaseButton.setFont(addHashesToDatabaseButton.getFont().deriveFont(addHashesToDatabaseButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(addHashesToDatabaseButton, org.openide.util.NbBundle.getMessage(HashLookupSettingsPanel.class, \"HashLookupSettingsPanel.addHashesToDatabaseButton.text\")); // NOI18N\n        addHashesToDatabaseButton.setEnabled(false);\n        addHashesToDatabaseButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                addHashesToDatabaseButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(0, 0, Short.MAX_VALUE))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(1, 1, 1)\n                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(10, 10, 10)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addGroup(jPanel1Layout.createSequentialGroup()\n                                        .addComponent(informationLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(informationSeparator))\n                                    .addComponent(ingestWarningLabel)\n                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                                        .addGap(10, 10, 10)\n                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(locationLabel)\n                                                    .addComponent(indexButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(typeLabel)\n                                                    .addComponent(indexLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                                    .addComponent(indexPathLabelLabel))\n                                                .addGap(10, 10, 10)\n                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                                    .addComponent(hashDbTypeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(hashDbLocationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(indexPathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addComponent(hashDbIndexStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                                    .addGroup(jPanel1Layout.createSequentialGroup()\n                                                        .addComponent(addHashesToDatabaseButton)\n                                                        .addGap(0, 0, Short.MAX_VALUE))))\n                                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                                .addComponent(nameLabel)\n                                                .addGap(53, 53, 53)\n                                                .addComponent(hashDbNameLabel)\n                                                .addGap(0, 0, Short.MAX_VALUE))))\n                                    .addGroup(jPanel1Layout.createSequentialGroup()\n                                        .addComponent(optionsLabel)\n                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                        .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(23, 23, 23)\n                                .addComponent(sendIngestMessagesCheckBox)\n                                .addGap(0, 0, Short.MAX_VALUE))))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(hashDatabasesLabel)\n                            .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(0, 0, Short.MAX_VALUE)))\n                .addContainerGap())\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(hashDatabasesLabel)\n                .addGap(6, 6, 6)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(informationLabel)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGap(7, 7, 7)\n                                .addComponent(informationSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                        .addGap(7, 7, 7)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(nameLabel)\n                            .addComponent(hashDbNameLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(typeLabel)\n                            .addComponent(hashDbTypeLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(locationLabel)\n                            .addComponent(hashDbLocationLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexPathLabelLabel)\n                            .addComponent(indexPathLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexLabel)\n                            .addComponent(hashDbIndexStatusLabel))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(indexButton)\n                            .addComponent(addHashesToDatabaseButton))\n                        .addGap(18, 18, 18)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(optionsLabel)\n                            .addComponent(optionsSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(18, 18, 18)\n                        .addComponent(sendIngestMessagesCheckBox)\n                        .addGap(18, 18, 18)\n                        .addComponent(ingestWarningLabel))\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(importDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(createDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(deleteDatabaseButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(33, 33, 33))\n        );\n\n        jScrollPane2.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)\n                .addGap(9, 9, 9))\n        );\n    }","commit_id":"318c44276cb18ce91b0b988d4f6ff05d83a304ca","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        fileNameButtonGroup = new javax.swing.ButtonGroup();\n        typeButtonGroup = new javax.swing.ButtonGroup();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jLabel6 = new javax.swing.JLabel();\n        newRuleButton = new javax.swing.JButton();\n        filesRadioButton = new javax.swing.JRadioButton();\n        editRuleButton = new javax.swing.JButton();\n        rulesListLabel = new javax.swing.JLabel();\n        rulesListScrollPane = new javax.swing.JScrollPane();\n        rulesList = new javax.swing.JList<FilesSet.Rule>();\n        setDescScrollPanel = new javax.swing.JScrollPane();\n        setDescriptionTextArea = new javax.swing.JTextArea();\n        editSetButton = new javax.swing.JButton();\n        setsListScrollPane = new javax.swing.JScrollPane();\n        setsList = new javax.swing.JList<FilesSet>();\n        fileNameExtensionRadioButton = new javax.swing.JRadioButton();\n        jLabel3 = new javax.swing.JLabel();\n        fileNameTextField = new javax.swing.JTextField();\n        jLabel5 = new javax.swing.JLabel();\n        fileNameRadioButton = new javax.swing.JRadioButton();\n        rulePathConditionTextField = new javax.swing.JTextField();\n        ignoreKnownFilesCheckbox = new javax.swing.JCheckBox();\n        fileNameRegexCheckbox = new javax.swing.JCheckBox();\n        separator = new javax.swing.JSeparator();\n        setsListLabel = new javax.swing.JLabel();\n        bothRadioButton = new javax.swing.JRadioButton();\n        deleteSetButton = new javax.swing.JButton();\n        deleteRuleButton = new javax.swing.JButton();\n        newSetButton = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n        dirsRadioButton = new javax.swing.JRadioButton();\n        jLabel1 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        rulePathConditionRegexCheckBox = new javax.swing.JCheckBox();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n        jLabel7 = new javax.swing.JLabel();\n        mimeTypeComboBox = new javax.swing.JComboBox<String>();\n        jLabel8 = new javax.swing.JLabel();\n        equalitySignComboBox = new javax.swing.JComboBox<String>();\n        jSpinner1 = new javax.swing.JSpinner();\n        fileSizeUnitComboBox = new javax.swing.JComboBox<String>();\n\n        setFont(getFont().deriveFont(getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jScrollPane1.setFont(jScrollPane1.getFont().deriveFont(jScrollPane1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jPanel1.setFont(jPanel1.getFont().deriveFont(jPanel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel6.text\")); // NOI18N\n\n        newRuleButton.setFont(newRuleButton.getFont().deriveFont(newRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newRuleButton.text\")); // NOI18N\n        newRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newRuleButtonActionPerformed(evt);\n            }\n        });\n\n        typeButtonGroup.add(filesRadioButton);\n        filesRadioButton.setFont(filesRadioButton.getFont().deriveFont(filesRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        filesRadioButton.setSelected(true);\n        org.openide.awt.Mnemonics.setLocalizedText(filesRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.filesRadioButton.text\")); // NOI18N\n        filesRadioButton.setEnabled(false);\n\n        editRuleButton.setFont(editRuleButton.getFont().deriveFont(editRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editRuleButton.text\")); // NOI18N\n        editRuleButton.setEnabled(false);\n        editRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editRuleButtonActionPerformed(evt);\n            }\n        });\n\n        rulesListLabel.setFont(rulesListLabel.getFont().deriveFont(rulesListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulesListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulesListLabel.text\")); // NOI18N\n\n        rulesListScrollPane.setFont(rulesListScrollPane.getFont().deriveFont(rulesListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        rulesList.setFont(rulesList.getFont().deriveFont(rulesList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        rulesListScrollPane.setViewportView(rulesList);\n\n        setDescScrollPanel.setFont(setDescScrollPanel.getFont().deriveFont(setDescScrollPanel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setDescriptionTextArea.setEditable(false);\n        setDescriptionTextArea.setBackground(new java.awt.Color(240, 240, 240));\n        setDescriptionTextArea.setColumns(20);\n        setDescriptionTextArea.setFont(setDescriptionTextArea.getFont().deriveFont(setDescriptionTextArea.getFont().getStyle() & ~java.awt.Font.BOLD, 13));\n        setDescriptionTextArea.setLineWrap(true);\n        setDescriptionTextArea.setRows(2);\n        setDescScrollPanel.setViewportView(setDescriptionTextArea);\n\n        editSetButton.setFont(editSetButton.getFont().deriveFont(editSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editSetButton.text\")); // NOI18N\n        editSetButton.setEnabled(false);\n        editSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editSetButtonActionPerformed(evt);\n            }\n        });\n\n        setsListScrollPane.setFont(setsListScrollPane.getFont().deriveFont(setsListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setsList.setFont(setsList.getFont().deriveFont(setsList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        setsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        setsListScrollPane.setViewportView(setsList);\n\n        fileNameButtonGroup.add(fileNameExtensionRadioButton);\n        fileNameExtensionRadioButton.setFont(fileNameExtensionRadioButton.getFont().deriveFont(fileNameExtensionRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameExtensionRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameExtensionRadioButton.text\")); // NOI18N\n        fileNameExtensionRadioButton.setEnabled(false);\n\n        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel3.text\")); // NOI18N\n\n        fileNameTextField.setEditable(false);\n        fileNameTextField.setFont(fileNameTextField.getFont().deriveFont(fileNameTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        fileNameTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameTextField.text\")); // NOI18N\n        fileNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                fileNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel5.text\")); // NOI18N\n\n        fileNameButtonGroup.add(fileNameRadioButton);\n        fileNameRadioButton.setFont(fileNameRadioButton.getFont().deriveFont(fileNameRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRadioButton.text\")); // NOI18N\n        fileNameRadioButton.setEnabled(false);\n\n        rulePathConditionTextField.setEditable(false);\n        rulePathConditionTextField.setFont(rulePathConditionTextField.getFont().deriveFont(rulePathConditionTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulePathConditionTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionTextField.text\")); // NOI18N\n\n        ignoreKnownFilesCheckbox.setFont(ignoreKnownFilesCheckbox.getFont().deriveFont(ignoreKnownFilesCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(ignoreKnownFilesCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.ignoreKnownFilesCheckbox.text\")); // NOI18N\n        ignoreKnownFilesCheckbox.setEnabled(false);\n        ignoreKnownFilesCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ignoreKnownFilesCheckboxActionPerformed(evt);\n            }\n        });\n\n        fileNameRegexCheckbox.setFont(fileNameRegexCheckbox.getFont().deriveFont(fileNameRegexCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRegexCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRegexCheckbox.text\")); // NOI18N\n        fileNameRegexCheckbox.setEnabled(false);\n\n        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);\n\n        setsListLabel.setFont(setsListLabel.getFont().deriveFont(setsListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(setsListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.setsListLabel.text\")); // NOI18N\n\n        typeButtonGroup.add(bothRadioButton);\n        bothRadioButton.setFont(bothRadioButton.getFont().deriveFont(bothRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(bothRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.bothRadioButton.text\")); // NOI18N\n        bothRadioButton.setEnabled(false);\n\n        deleteSetButton.setFont(deleteSetButton.getFont().deriveFont(deleteSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteSetButton.text\")); // NOI18N\n        deleteSetButton.setEnabled(false);\n        deleteSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteSetButtonActionPerformed(evt);\n            }\n        });\n\n        deleteRuleButton.setFont(deleteRuleButton.getFont().deriveFont(deleteRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteRuleButton.text\")); // NOI18N\n        deleteRuleButton.setEnabled(false);\n        deleteRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteRuleButtonActionPerformed(evt);\n            }\n        });\n\n        newSetButton.setFont(newSetButton.getFont().deriveFont(newSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newSetButton.text\")); // NOI18N\n        newSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newSetButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel2.text\")); // NOI18N\n\n        typeButtonGroup.add(dirsRadioButton);\n        dirsRadioButton.setFont(dirsRadioButton.getFont().deriveFont(dirsRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(dirsRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.dirsRadioButton.text\")); // NOI18N\n        dirsRadioButton.setEnabled(false);\n        dirsRadioButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                dirsRadioButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel1.text\")); // NOI18N\n\n        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel4.text\")); // NOI18N\n\n        rulePathConditionRegexCheckBox.setFont(rulePathConditionRegexCheckBox.getFont().deriveFont(rulePathConditionRegexCheckBox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulePathConditionRegexCheckBox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionRegexCheckBox.text\")); // NOI18N\n        rulePathConditionRegexCheckBox.setEnabled(false);\n\n        jScrollPane2.setFont(jScrollPane2.getFont().deriveFont(jScrollPane2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jTextArea1.setEditable(false);\n        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));\n        jTextArea1.setColumns(20);\n        jTextArea1.setFont(jTextArea1.getFont().deriveFont(jTextArea1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        jTextArea1.setLineWrap(true);\n        jTextArea1.setRows(3);\n        jTextArea1.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jTextArea1.text\")); // NOI18N\n        jTextArea1.setWrapStyleWord(true);\n        jScrollPane2.setViewportView(jTextArea1);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel7.text\")); // NOI18N\n\n        mimeTypeComboBox.setEditable(true);\n        mimeTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] {\"\"}));\n        mimeTypeComboBox.setEnabled(false);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel8.text\")); // NOI18N\n\n        equalitySignComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { \"=\", \">\", \"≥\", \"<\", \"≤\" }));\n        equalitySignComboBox.setEnabled(false);\n\n        jSpinner1.setEnabled(false);\n\n        fileSizeUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { Bundle.InterestingItemDefsPanel_bytes(), Bundle.InterestingItemDefsPanel_kiloBytes(), Bundle.InterestingItemDefsPanel_megaBytes(), Bundle.InterestingItemDefsPanel_gigaBytes() }));\n        fileSizeUnitComboBox.setEnabled(false);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(setsListLabel)\n                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                        .addComponent(setsListScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)\n                        .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(newSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(editSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(deleteSetButton)))\n                .addGap(18, 18, 18)\n                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(12, 12, 12)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(jLabel1)\n                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(jLabel2)\n                        .addGap(27, 27, 27)\n                        .addComponent(filesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(dirsRadioButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(bothRadioButton)\n                        .addGap(27, 27, 27))))\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(380, 380, 380)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(jLabel3)\n                                    .addComponent(jLabel7)\n                                    .addComponent(jLabel8))\n                                .addGap(6, 6, 6))\n                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel4)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 245, Short.MAX_VALUE)\n                            .addComponent(fileNameTextField)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(rulesListLabel))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel5))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(ignoreKnownFilesCheckbox))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(setDescScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel6))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(rulesListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(newRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(editRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(deleteRuleButton))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(456, 456, 456)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(fileNameRadioButton)\n                                .addGap(4, 4, 4)\n                                .addComponent(fileNameExtensionRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(fileNameRegexCheckbox))\n                            .addComponent(rulePathConditionRegexCheckBox))))\n                .addGap(20, 20, 20))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(separator)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(setsListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newSetButton)\n                                    .addComponent(editSetButton)\n                                    .addComponent(deleteSetButton)))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel6)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel5)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setDescScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(ignoreKnownFilesCheckbox)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(rulesListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(rulesListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newRuleButton)\n                                    .addComponent(editRuleButton)\n                                    .addComponent(deleteRuleButton))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel1)\n                                .addGap(2, 2, 2)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel2)\n                                    .addComponent(filesRadioButton)\n                                    .addComponent(dirsRadioButton)\n                                    .addComponent(bothRadioButton))\n                                .addGap(16, 16, 16)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel3)\n                                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(fileNameRadioButton)\n                                    .addComponent(fileNameExtensionRadioButton)\n                                    .addComponent(fileNameRegexCheckbox))))\n                        .addGap(14, 14, 14)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel4)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(rulePathConditionRegexCheckBox)\n                        .addGap(10, 10, 10)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel7)\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(16, 16, 16)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel8)\n                            .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))\n                .addContainerGap())\n        );\n\n        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deleteRuleButton, deleteSetButton, editRuleButton, editSetButton, newRuleButton, newSetButton});\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(0, 34, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)\n        );\n    }","id":20979,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        fileNameButtonGroup = new javax.swing.ButtonGroup();\n        typeButtonGroup = new javax.swing.ButtonGroup();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        jPanel1 = new javax.swing.JPanel();\n        jLabel6 = new javax.swing.JLabel();\n        newRuleButton = new javax.swing.JButton();\n        filesRadioButton = new javax.swing.JRadioButton();\n        editRuleButton = new javax.swing.JButton();\n        rulesListLabel = new javax.swing.JLabel();\n        rulesListScrollPane = new javax.swing.JScrollPane();\n        rulesList = new javax.swing.JList<>();\n        setDescScrollPanel = new javax.swing.JScrollPane();\n        setDescriptionTextArea = new javax.swing.JTextArea();\n        editSetButton = new javax.swing.JButton();\n        setsListScrollPane = new javax.swing.JScrollPane();\n        setsList = new javax.swing.JList<>();\n        fileNameExtensionRadioButton = new javax.swing.JRadioButton();\n        jLabel3 = new javax.swing.JLabel();\n        fileNameTextField = new javax.swing.JTextField();\n        jLabel5 = new javax.swing.JLabel();\n        fileNameRadioButton = new javax.swing.JRadioButton();\n        rulePathConditionTextField = new javax.swing.JTextField();\n        ignoreKnownFilesCheckbox = new javax.swing.JCheckBox();\n        fileNameRegexCheckbox = new javax.swing.JCheckBox();\n        separator = new javax.swing.JSeparator();\n        setsListLabel = new javax.swing.JLabel();\n        bothRadioButton = new javax.swing.JRadioButton();\n        deleteSetButton = new javax.swing.JButton();\n        deleteRuleButton = new javax.swing.JButton();\n        newSetButton = new javax.swing.JButton();\n        jLabel2 = new javax.swing.JLabel();\n        dirsRadioButton = new javax.swing.JRadioButton();\n        jLabel1 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        rulePathConditionRegexCheckBox = new javax.swing.JCheckBox();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        jTextArea1 = new javax.swing.JTextArea();\n        jLabel7 = new javax.swing.JLabel();\n        mimeTypeComboBox = new javax.swing.JComboBox<>();\n        jLabel8 = new javax.swing.JLabel();\n        equalitySignComboBox = new javax.swing.JComboBox<String>();\n        jSpinner1 = new javax.swing.JSpinner();\n        fileSizeUnitComboBox = new javax.swing.JComboBox<String>();\n\n        setFont(getFont().deriveFont(getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jScrollPane1.setFont(jScrollPane1.getFont().deriveFont(jScrollPane1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jPanel1.setFont(jPanel1.getFont().deriveFont(jPanel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jLabel6.setFont(jLabel6.getFont().deriveFont(jLabel6.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel6.text\")); // NOI18N\n\n        newRuleButton.setFont(newRuleButton.getFont().deriveFont(newRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newRuleButton.text\")); // NOI18N\n        newRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newRuleButtonActionPerformed(evt);\n            }\n        });\n\n        typeButtonGroup.add(filesRadioButton);\n        filesRadioButton.setFont(filesRadioButton.getFont().deriveFont(filesRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        filesRadioButton.setSelected(true);\n        org.openide.awt.Mnemonics.setLocalizedText(filesRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.filesRadioButton.text\")); // NOI18N\n        filesRadioButton.setEnabled(false);\n\n        editRuleButton.setFont(editRuleButton.getFont().deriveFont(editRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editRuleButton.text\")); // NOI18N\n        editRuleButton.setEnabled(false);\n        editRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editRuleButtonActionPerformed(evt);\n            }\n        });\n\n        rulesListLabel.setFont(rulesListLabel.getFont().deriveFont(rulesListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulesListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulesListLabel.text\")); // NOI18N\n\n        rulesListScrollPane.setFont(rulesListScrollPane.getFont().deriveFont(rulesListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        rulesList.setFont(rulesList.getFont().deriveFont(rulesList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        rulesListScrollPane.setViewportView(rulesList);\n\n        setDescScrollPanel.setFont(setDescScrollPanel.getFont().deriveFont(setDescScrollPanel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setDescriptionTextArea.setEditable(false);\n        setDescriptionTextArea.setBackground(new java.awt.Color(240, 240, 240));\n        setDescriptionTextArea.setColumns(20);\n        setDescriptionTextArea.setFont(setDescriptionTextArea.getFont().deriveFont(setDescriptionTextArea.getFont().getStyle() & ~java.awt.Font.BOLD, 13));\n        setDescriptionTextArea.setLineWrap(true);\n        setDescriptionTextArea.setRows(2);\n        setDescriptionTextArea.setMinimumSize(new java.awt.Dimension(10, 22));\n        setDescriptionTextArea.setPreferredSize(new java.awt.Dimension(14, 40));\n        setDescScrollPanel.setViewportView(setDescriptionTextArea);\n\n        editSetButton.setFont(editSetButton.getFont().deriveFont(editSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        editSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/edit16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(editSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.editSetButton.text\")); // NOI18N\n        editSetButton.setEnabled(false);\n        editSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                editSetButtonActionPerformed(evt);\n            }\n        });\n\n        setsListScrollPane.setFont(setsListScrollPane.getFont().deriveFont(setsListScrollPane.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        setsList.setFont(setsList.getFont().deriveFont(setsList.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        setsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);\n        setsListScrollPane.setViewportView(setsList);\n\n        fileNameButtonGroup.add(fileNameExtensionRadioButton);\n        fileNameExtensionRadioButton.setFont(fileNameExtensionRadioButton.getFont().deriveFont(fileNameExtensionRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameExtensionRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameExtensionRadioButton.text\")); // NOI18N\n        fileNameExtensionRadioButton.setEnabled(false);\n\n        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel3.text\")); // NOI18N\n\n        fileNameTextField.setEditable(false);\n        fileNameTextField.setFont(fileNameTextField.getFont().deriveFont(fileNameTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        fileNameTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameTextField.text\")); // NOI18N\n        fileNameTextField.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                fileNameTextFieldActionPerformed(evt);\n            }\n        });\n\n        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel5.text\")); // NOI18N\n\n        fileNameButtonGroup.add(fileNameRadioButton);\n        fileNameRadioButton.setFont(fileNameRadioButton.getFont().deriveFont(fileNameRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRadioButton.text\")); // NOI18N\n        fileNameRadioButton.setEnabled(false);\n\n        rulePathConditionTextField.setEditable(false);\n        rulePathConditionTextField.setFont(rulePathConditionTextField.getFont().deriveFont(rulePathConditionTextField.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        rulePathConditionTextField.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionTextField.text\")); // NOI18N\n\n        ignoreKnownFilesCheckbox.setFont(ignoreKnownFilesCheckbox.getFont().deriveFont(ignoreKnownFilesCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(ignoreKnownFilesCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.ignoreKnownFilesCheckbox.text\")); // NOI18N\n        ignoreKnownFilesCheckbox.setEnabled(false);\n        ignoreKnownFilesCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                ignoreKnownFilesCheckboxActionPerformed(evt);\n            }\n        });\n\n        fileNameRegexCheckbox.setFont(fileNameRegexCheckbox.getFont().deriveFont(fileNameRegexCheckbox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(fileNameRegexCheckbox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.fileNameRegexCheckbox.text\")); // NOI18N\n        fileNameRegexCheckbox.setEnabled(false);\n\n        separator.setOrientation(javax.swing.SwingConstants.VERTICAL);\n\n        setsListLabel.setFont(setsListLabel.getFont().deriveFont(setsListLabel.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(setsListLabel, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.setsListLabel.text\")); // NOI18N\n\n        typeButtonGroup.add(bothRadioButton);\n        bothRadioButton.setFont(bothRadioButton.getFont().deriveFont(bothRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(bothRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.bothRadioButton.text\")); // NOI18N\n        bothRadioButton.setEnabled(false);\n\n        deleteSetButton.setFont(deleteSetButton.getFont().deriveFont(deleteSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteSetButton.text\")); // NOI18N\n        deleteSetButton.setEnabled(false);\n        deleteSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteSetButtonActionPerformed(evt);\n            }\n        });\n\n        deleteRuleButton.setFont(deleteRuleButton.getFont().deriveFont(deleteRuleButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        deleteRuleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/delete16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(deleteRuleButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.deleteRuleButton.text\")); // NOI18N\n        deleteRuleButton.setEnabled(false);\n        deleteRuleButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                deleteRuleButtonActionPerformed(evt);\n            }\n        });\n\n        newSetButton.setFont(newSetButton.getFont().deriveFont(newSetButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        newSetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/org/sleuthkit/autopsy/images/add16.png\"))); // NOI18N\n        org.openide.awt.Mnemonics.setLocalizedText(newSetButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.newSetButton.text\")); // NOI18N\n        newSetButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                newSetButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel2.text\")); // NOI18N\n\n        typeButtonGroup.add(dirsRadioButton);\n        dirsRadioButton.setFont(dirsRadioButton.getFont().deriveFont(dirsRadioButton.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(dirsRadioButton, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.dirsRadioButton.text\")); // NOI18N\n        dirsRadioButton.setEnabled(false);\n        dirsRadioButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                dirsRadioButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel1.text\")); // NOI18N\n\n        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel4.text\")); // NOI18N\n\n        rulePathConditionRegexCheckBox.setFont(rulePathConditionRegexCheckBox.getFont().deriveFont(rulePathConditionRegexCheckBox.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        org.openide.awt.Mnemonics.setLocalizedText(rulePathConditionRegexCheckBox, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.rulePathConditionRegexCheckBox.text\")); // NOI18N\n        rulePathConditionRegexCheckBox.setEnabled(false);\n\n        jScrollPane2.setFont(jScrollPane2.getFont().deriveFont(jScrollPane2.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n\n        jTextArea1.setEditable(false);\n        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));\n        jTextArea1.setColumns(20);\n        jTextArea1.setFont(jTextArea1.getFont().deriveFont(jTextArea1.getFont().getStyle() & ~java.awt.Font.BOLD, 11));\n        jTextArea1.setLineWrap(true);\n        jTextArea1.setRows(3);\n        jTextArea1.setText(org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jTextArea1.text\")); // NOI18N\n        jTextArea1.setWrapStyleWord(true);\n        jScrollPane2.setViewportView(jTextArea1);\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel7.text\")); // NOI18N\n\n        mimeTypeComboBox.setEditable(true);\n        mimeTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] {\"\"}));\n        mimeTypeComboBox.setEnabled(false);\n        mimeTypeComboBox.setMinimumSize(new java.awt.Dimension(0, 20));\n        mimeTypeComboBox.setPreferredSize(new java.awt.Dimension(12, 20));\n\n        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(InterestingItemDefsPanel.class, \"InterestingItemDefsPanel.jLabel8.text\")); // NOI18N\n\n        equalitySignComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { \"=\", \">\", \"≥\", \"<\", \"≤\" }));\n        equalitySignComboBox.setEnabled(false);\n\n        jSpinner1.setEnabled(false);\n        jSpinner1.setMinimumSize(new java.awt.Dimension(2, 20));\n\n        fileSizeUnitComboBox.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { Bundle.InterestingItemDefsPanel_bytes(), Bundle.InterestingItemDefsPanel_kiloBytes(), Bundle.InterestingItemDefsPanel_megaBytes(), Bundle.InterestingItemDefsPanel_gigaBytes() }));\n        fileSizeUnitComboBox.setEnabled(false);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(setsListLabel)\n                    .addComponent(setsListScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(newSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(editSetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(deleteSetButton)))\n                .addGap(18, 18, 18)\n                .addComponent(separator, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(12, 12, 12)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                        .addGap(92, 92, 92)\n                        .addComponent(filesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(dirsRadioButton)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(bothRadioButton)))\n                .addGap(27, 27, 27))\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(380, 380, 380)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                                    .addComponent(jLabel3)\n                                    .addComponent(jLabel7)\n                                    .addComponent(jLabel8)\n                                    .addComponent(jLabel2))\n                                .addGap(6, 6, 6))\n                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel4)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()\n                                .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jSpinner1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(8, 8, 8))\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                            .addComponent(fileNameTextField)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(rulesListLabel))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel5))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(ignoreKnownFilesCheckbox))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(jLabel6))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addComponent(newRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(editRuleButton)\n                        .addGap(18, 18, 18)\n                        .addComponent(deleteRuleButton))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(456, 456, 456)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(fileNameRadioButton)\n                                .addGap(4, 4, 4)\n                                .addComponent(fileNameExtensionRadioButton)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(fileNameRegexCheckbox))\n                            .addComponent(rulePathConditionRegexCheckBox)))\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGap(360, 360, 360)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addComponent(setDescScrollPanel)\n                            .addComponent(rulesListScrollPane))\n                        .addGap(7, 7, 7)))\n                .addGap(23, 23, 23))\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(separator)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addGap(18, 18, 18)\n                                .addComponent(setsListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setsListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newSetButton)\n                                    .addComponent(editSetButton)\n                                    .addComponent(deleteSetButton))\n                                .addGap(13, 13, 13))\n                            .addGroup(jPanel1Layout.createSequentialGroup()\n                                .addComponent(jLabel6)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel5)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(setDescScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(ignoreKnownFilesCheckbox)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                                .addComponent(rulesListLabel)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(rulesListScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(newRuleButton)\n                                    .addComponent(editRuleButton)\n                                    .addComponent(deleteRuleButton))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addComponent(jLabel1)\n                                .addGap(2, 2, 2)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel2)\n                                    .addComponent(filesRadioButton)\n                                    .addComponent(dirsRadioButton)\n                                    .addComponent(bothRadioButton))\n                                .addGap(16, 16, 16)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(jLabel3)\n                                    .addComponent(fileNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                                    .addComponent(fileNameRadioButton)\n                                    .addComponent(fileNameExtensionRadioButton)\n                                    .addComponent(fileNameRegexCheckbox))))\n                        .addGap(14, 14, 14)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel4)\n                            .addComponent(rulePathConditionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(rulePathConditionRegexCheckBox)\n                        .addGap(10, 10, 10)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel7)\n                            .addComponent(mimeTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(16, 16, 16)\n                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                            .addComponent(jLabel8)\n                            .addComponent(equalitySignComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                            .addComponent(fileSizeUnitComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))\n                        .addGap(19, 19, 19)))\n                .addContainerGap())\n        );\n\n        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {deleteRuleButton, deleteSetButton, editRuleButton, editSetButton, newRuleButton, newSetButton});\n\n        jScrollPane1.setViewportView(jPanel1);\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addComponent(jScrollPane1)\n                .addGap(34, 34, 34))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jScrollPane1)\n        );\n    }","commit_id":"318c44276cb18ce91b0b988d4f6ff05d83a304ca","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        timeGroup = new javax.swing.ButtonGroup();\n        modulesScrollPane = new javax.swing.JScrollPane();\n        modulesTable = new javax.swing.JTable();\n        jPanel1 = new javax.swing.JPanel();\n        advancedButton = new javax.swing.JButton();\n        jSeparator2 = new javax.swing.JSeparator();\n        descriptionLabel = new javax.swing.JLabel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        simplePanel = new javax.swing.JPanel();\n        processUnallocPanel = new javax.swing.JPanel();\n        processUnallocCheckbox = new javax.swing.JCheckBox();\n        jButtonSelectAll = new javax.swing.JButton();\n        jButtonDeselectAll = new javax.swing.JButton();\n\n        setMaximumSize(new java.awt.Dimension(5750, 3000));\n        setMinimumSize(new java.awt.Dimension(522, 257));\n        setPreferredSize(new java.awt.Dimension(575, 300));\n\n        modulesScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));\n        modulesScrollPane.setPreferredSize(new java.awt.Dimension(160, 160));\n\n        modulesTable.setBackground(new java.awt.Color(240, 240, 240));\n        modulesTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        modulesTable.setShowHorizontalLines(false);\n        modulesTable.setShowVerticalLines(false);\n        modulesScrollPane.setViewportView(modulesTable);\n\n        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));\n        jPanel1.setPreferredSize(new java.awt.Dimension(338, 257));\n\n        advancedButton.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.advancedButton.text\")); // NOI18N\n        advancedButton.setActionCommand(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.advancedButton.actionCommand\")); // NOI18N\n        advancedButton.setEnabled(false);\n        advancedButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                advancedButtonActionPerformed(evt);\n            }\n        });\n\n        descriptionLabel.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.descriptionLabel.text\")); // NOI18N\n\n        jScrollPane1.setBorder(null);\n        jScrollPane1.setPreferredSize(new java.awt.Dimension(250, 180));\n\n        simplePanel.setLayout(new javax.swing.BoxLayout(simplePanel, javax.swing.BoxLayout.PAGE_AXIS));\n        jScrollPane1.setViewportView(simplePanel);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)\n                        .addComponent(advancedButton)))\n                .addContainerGap())\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(advancedButton))\n                .addContainerGap())\n        );\n\n        processUnallocPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));\n\n        processUnallocCheckbox.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.processUnallocCheckbox.text\")); // NOI18N\n        processUnallocCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.processUnallocCheckbox.toolTipText\")); // NOI18N\n        processUnallocCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                processUnallocCheckboxActionPerformed(evt);\n            }\n        });\n\n        jButtonSelectAll.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.jButtonSelectAll.text\")); // NOI18N\n        jButtonSelectAll.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButtonSelectAllActionPerformed(evt);\n            }\n        });\n\n        jButtonDeselectAll.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.jButtonDeselectAll.text\")); // NOI18N\n        jButtonDeselectAll.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButtonDeselectAllActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout processUnallocPanelLayout = new javax.swing.GroupLayout(processUnallocPanel);\n        processUnallocPanel.setLayout(processUnallocPanelLayout);\n        processUnallocPanelLayout.setHorizontalGroup(\n            processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(processUnallocPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(processUnallocCheckbox)\n                    .addGroup(processUnallocPanelLayout.createSequentialGroup()\n                        .addComponent(jButtonSelectAll, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jButtonDeselectAll)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        processUnallocPanelLayout.setVerticalGroup(\n            processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, processUnallocPanelLayout.createSequentialGroup()\n                .addGroup(processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n                    .addComponent(jButtonSelectAll)\n                    .addComponent(jButtonDeselectAll))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                .addComponent(processUnallocCheckbox))\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(processUnallocPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGap(26, 26, 26))\n                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()\n                        .addComponent(modulesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))\n                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addGap(39, 39, 39))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(modulesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addComponent(processUnallocPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap(7, Short.MAX_VALUE))\n        );\n    }","id":20980,"modified_method":"/**\n     * This method is called from within the constructor to initialize the form.\n     * WARNING: Do NOT modify this code. The content of this method is always\n     * regenerated by the Form Editor.\n     */\n    @SuppressWarnings(\"unchecked\")\n    // <editor-fold defaultstate=\"collapsed\" desc=\"Generated Code\">//GEN-BEGIN:initComponents\n    private void initComponents() {\n\n        timeGroup = new javax.swing.ButtonGroup();\n        modulesScrollPane = new javax.swing.JScrollPane();\n        modulesTable = new javax.swing.JTable();\n        jPanel1 = new javax.swing.JPanel();\n        advancedButton = new javax.swing.JButton();\n        jSeparator2 = new javax.swing.JSeparator();\n        descriptionLabel = new javax.swing.JLabel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        simplePanel = new javax.swing.JPanel();\n        processUnallocPanel = new javax.swing.JPanel();\n        processUnallocCheckbox = new javax.swing.JCheckBox();\n        jButtonSelectAll = new javax.swing.JButton();\n        jButtonDeselectAll = new javax.swing.JButton();\n\n        setMaximumSize(new java.awt.Dimension(5750, 3000));\n        setMinimumSize(new java.awt.Dimension(522, 257));\n        setPreferredSize(new java.awt.Dimension(575, 300));\n\n        modulesScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));\n        modulesScrollPane.setPreferredSize(new java.awt.Dimension(160, 160));\n\n        modulesTable.setBackground(new java.awt.Color(240, 240, 240));\n        modulesTable.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n\n            },\n            new String [] {\n\n            }\n        ));\n        modulesTable.setShowHorizontalLines(false);\n        modulesTable.setShowVerticalLines(false);\n        modulesScrollPane.setViewportView(modulesTable);\n\n        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));\n        jPanel1.setPreferredSize(new java.awt.Dimension(338, 257));\n\n        advancedButton.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.advancedButton.text\")); // NOI18N\n        advancedButton.setActionCommand(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.advancedButton.actionCommand\")); // NOI18N\n        advancedButton.setEnabled(false);\n        advancedButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                advancedButtonActionPerformed(evt);\n            }\n        });\n\n        descriptionLabel.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.descriptionLabel.text\")); // NOI18N\n\n        jScrollPane1.setBorder(null);\n        jScrollPane1.setPreferredSize(new java.awt.Dimension(250, 180));\n\n        simplePanel.setLayout(new javax.swing.BoxLayout(simplePanel, javax.swing.BoxLayout.PAGE_AXIS));\n        jScrollPane1.setViewportView(simplePanel);\n\n        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n        jPanel1.setLayout(jPanel1Layout);\n        jPanel1Layout.setHorizontalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addGroup(jPanel1Layout.createSequentialGroup()\n                        .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)\n                        .addComponent(advancedButton)))\n                .addContainerGap())\n        );\n        jPanel1Layout.setVerticalGroup(\n            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n                .addContainerGap()\n                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(descriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)\n                    .addComponent(advancedButton))\n                .addContainerGap())\n        );\n\n        processUnallocPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));\n\n        processUnallocCheckbox.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.processUnallocCheckbox.text\")); // NOI18N\n        processUnallocCheckbox.setToolTipText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.processUnallocCheckbox.toolTipText\")); // NOI18N\n        processUnallocCheckbox.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                processUnallocCheckboxActionPerformed(evt);\n            }\n        });\n\n        jButtonSelectAll.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.jButtonSelectAll.text\")); // NOI18N\n        jButtonSelectAll.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButtonSelectAllActionPerformed(evt);\n            }\n        });\n\n        jButtonDeselectAll.setText(org.openide.util.NbBundle.getMessage(IngestJobSettingsPanel.class, \"IngestJobSettingsPanel.jButtonDeselectAll.text\")); // NOI18N\n        jButtonDeselectAll.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                jButtonDeselectAllActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout processUnallocPanelLayout = new javax.swing.GroupLayout(processUnallocPanel);\n        processUnallocPanel.setLayout(processUnallocPanelLayout);\n        processUnallocPanelLayout.setHorizontalGroup(\n            processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(processUnallocPanelLayout.createSequentialGroup()\n                .addGap(18, 18, 18)\n                .addGroup(processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(processUnallocCheckbox)\n                    .addGroup(processUnallocPanelLayout.createSequentialGroup()\n                        .addComponent(jButtonSelectAll, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(jButtonDeselectAll)))\n                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n        );\n        processUnallocPanelLayout.setVerticalGroup(\n            processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, processUnallocPanelLayout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(processUnallocPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jButtonDeselectAll)\n                    .addComponent(jButtonSelectAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                .addComponent(processUnallocCheckbox, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))\n        );\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);\n        this.setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(modulesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)\n                    .addComponent(processUnallocPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addGap(10, 10, 10)\n                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)\n                .addContainerGap())\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(modulesScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                        .addGap(7, 7, 7)\n                        .addComponent(processUnallocPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addContainerGap())\n        );\n    }","commit_id":"f8d2c93c3be7516b13579b9400b88e92716a2360","url":"https://github.com/sleuthkit/autopsy"},{"original_method":"public void testAddImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Image']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\t\tselenium.type(\"_31_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\test_image.jpg\"));\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"Test Image\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Image\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Liferay logo!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Image\"));\n\t}","id":20981,"modified_method":"public void testAddImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Add Image']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Use the classic uploader.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"link=Use the classic uploader.\");\n\t\tselenium.type(\"_31_file\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\test_image.jpg\"));\n\t\tselenium.typeKeys(\"_31_name\", RuntimeVariables.replace(\"Test Image\"));\n\t\tselenium.type(\"_31_name\", RuntimeVariables.replace(\"Test Image\"));\n\t\tselenium.type(\"_31_description\",\n\t\t\tRuntimeVariables.replace(\"This is the Liferay logo!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tThread.sleep(5000);\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Image\"));\n\t\tassertTrue(selenium.isTextPresent(\"Showing 1 result.\"));\n\t}","commit_id":"3429a49ddcb4686b464df46f7ec6ef6c6051e675","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testAssertImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a second test folder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//div[1]/span[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a second test subfolder.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","id":20982,"modified_method":"public void testAssertImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test folder!\"));\n\t\tassertTrue(selenium.isTextPresent(\"This is a test3 folder3.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test subfolder!\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//div[1]/span[1]/a\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"//tr[4]/td[1]/a[1]/b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\"This is a test3 subfolder3.\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//b\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","commit_id":"3429a49ddcb4686b464df46f7ec6ef6c6051e675","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddSubfolderTest.class);\n\t\ttestSuite.addTestSuite(AddImageTest.class);\n\t\ttestSuite.addTestSuite(ViewSlideshowTest.class);\n\t\ttestSuite.addTestSuite(BrowseImageTabsTest.class);\n\t\ttestSuite.addTestSuite(SearchPortletTest.class);\n\t\ttestSuite.addTestSuite(AddSecondTestFoldersTest.class);\n\t\ttestSuite.addTestSuite(MoveImageTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitleFolderTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidTitleFolderTest.class);\n\t\ttestSuite.addTestSuite(AddDuplicateTitleFolderTest.class);\n\t\ttestSuite.addTestSuite(AddImageNameFolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullImageTest.class);\n\t\ttestSuite.addTestSuite(AddDuplicateImageNameTest.class);\n\t\ttestSuite.addTestSuite(AddIncorrectNameImageTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidImageTest.class);\n\t\ttestSuite.addTestSuite(DeleteFoldersTest.class);\n\t\ttestSuite.addTestSuite(ImportLARTest.class);\n\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(ImageEdittingTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\n\t\treturn testSuite;\n\t}","id":20983,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(AddPageTest.class);\n\t\ttestSuite.addTestSuite(AddPortletTest.class);\n\t\ttestSuite.addTestSuite(AddFolderTest.class);\n\t\ttestSuite.addTestSuite(AddSubfolderTest.class);\n\t\ttestSuite.addTestSuite(AddImageTest.class);\n\t\ttestSuite.addTestSuite(AddSecondFolderTest.class);\n\t\ttestSuite.addTestSuite(AddSecondSubfolderTest.class);\n\t\ttestSuite.addTestSuite(AddSecondImageTest.class);\n\t\ttestSuite.addTestSuite(EditSecondImageTest.class);\n\t\ttestSuite.addTestSuite(DeleteSecondImageTest.class);\n\t\ttestSuite.addTestSuite(EditSecondSubfolderTest.class);\n\t\ttestSuite.addTestSuite(DeleteSecondSubfolderTest.class);\n\t\ttestSuite.addTestSuite(EditSecondFolderTest.class);\n\t\ttestSuite.addTestSuite(DeleteSecondFolderTest.class);\n\t\ttestSuite.addTestSuite(ViewSlideshowTest.class);\n\t\ttestSuite.addTestSuite(BrowseImageTabsTest.class);\n\t\ttestSuite.addTestSuite(SearchPortletTest.class);\n\t\ttestSuite.addTestSuite(AddMoveFoldersTest.class);\n\t\ttestSuite.addTestSuite(MoveImageTest.class);\n\t\ttestSuite.addTestSuite(MoveFolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullTitleFolderTest.class);\n\t\ttestSuite.addTestSuite(AddInvalidTitleFolderTest.class);\n\t\ttestSuite.addTestSuite(AddDuplicateTitleFolderTest.class);\n\t\ttestSuite.addTestSuite(AddImageNameTitleFolderTest.class);\n\t\ttestSuite.addTestSuite(AddNullImageTest.class);\n\t\ttestSuite.addTestSuite(AddDuplicateTitleImageTest.class);\n\t\ttestSuite.addTestSuite(AddIncorrectNameImageTest.class);\n\t\ttestSuite.addTestSuite(DeleteFoldersTest.class);\n\t\ttestSuite.addTestSuite(ImportLARTest.class);\n\t\ttestSuite.addTestSuite(AssertImportLARTest.class);\n\t\ttestSuite.addTestSuite(ImageEdittingTest.class);\n\t\ttestSuite.addTestSuite(TearDownTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"3429a49ddcb4686b464df46f7ec6ef6c6051e675","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\Image_Gallery-Selenium.portlet.lar\"));\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","id":20984,"modified_method":"public void testImportLAR() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//strong/span\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Export / Import\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Export / Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Import\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_86_importFileName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(\"_86_DELETE_PORTLET_DATA\");\n\t\tselenium.type(\"_86_importFileName\",\n\t\t\tRuntimeVariables.replace(\n\t\t\t\t\"L:\\\\portal\\\\build\\\\portal-web\\\\test\\\\com\\\\liferay\\\\portalweb\\\\portlet\\\\imagegallery\\\\Image_Gallery-Selenium.portlet.lar\"));\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Import']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t}","commit_id":"3429a49ddcb4686b464df46f7ec6ef6c6051e675","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMoveImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Folder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_31_folderName\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='This is the Liferay logo!']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","id":20985,"modified_method":"public void testMoveImage() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test Subfolder\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//img[@alt='Image']\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Edit\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Select']\");\n\t\tselenium.waitForPopUp(\"folder\", RuntimeVariables.replace(\"30000\"));\n\t\tselenium.selectWindow(\"folder\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Folders\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Folders\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test3 Folder3\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(\"//input[@value='Choose']\");\n\t\tselenium.selectWindow(\"null\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Test3 Subfolder3\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"//input[@value='Save']\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"Your request processed successfully.\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//img[@alt='This is the Liferay logo!']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Image Gallery Test Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.click(RuntimeVariables.replace(\"link=Image Gallery Test Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.click(RuntimeVariables.replace(\"link=Test3 Subfolder3\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.isElementPresent(\"//img[@alt='Image']\"));\n\t}","commit_id":"3429a49ddcb4686b464df46f7ec6ef6c6051e675","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGeneralAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddCAAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGuestAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(CA_LoginTest.class);\n\t\ttestSuite.addTestSuite(CA_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(CA_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(CA_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Member_LoginTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Member_DismissAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(Member_LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(SA_TearDownTest.class);\n\t\ttestSuite.addTestSuite(SA_LogoutTest.class);\n\n\t\treturn testSuite;\n\t}","id":20986,"modified_method":"public static Test suite() {\n\t\tTestSuite testSuite = new TestSuite();\n\n\t\ttestSuite.addTestSuite(SA_AddSiteTest.class);\n\t\ttestSuite.addTestSuite(SA_AddAATest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberTest.class);\n\t\ttestSuite.addTestSuite(SA_AddAARoleTest.class);\n\t\ttestSuite.addTestSuite(SA_DefineAARoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_DefineMemberRoleTest.class);\n\t\ttestSuite.addTestSuite(SA_AssignUserRolesTest.class);\n\t\ttestSuite.addTestSuite(SA_AddSiteMembersTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPageTest.class);\n\t\ttestSuite.addTestSuite(SA_AddPortletTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGeneralAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddAAAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddMemberAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(SA_AddGuestAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(LoginUsersTest.class);\n\t\ttestSuite.addTestSuite(AA_LoginTest.class);\n\t\ttestSuite.addTestSuite(AA_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(AA_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Member_LoginTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Member_DismissAnnouncementTest.class);\n\t\ttestSuite.addTestSuite(Member_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(LogoutTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertViewTest.class);\n\t\ttestSuite.addTestSuite(Guest_AssertActionsTest.class);\n\t\ttestSuite.addTestSuite(SA_LoginTest.class);\n\t\ttestSuite.addTestSuite(TearDownPageTest.class);\n\n\t\treturn testSuite;\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Manage Entries\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Mark as Read\"));\n\t}","id":20987,"modified_method":"public void testGuest_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Manage Entries\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Mark as Read\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Category']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Edit']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Permissions']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Subscribe\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Banned Users\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Edit']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Permissions']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Subscribe\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.clickAt(\"link=Test Thread 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test Thread Message 1\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Thread Message Reply 1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sign in to vote.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Split Thread\"));\n\t}","id":20988,"modified_method":"public void testGuest_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Category']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Edit']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Permissions']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Subscribe\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Banned Users\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Add Subcategory']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Edit']\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Permissions']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Subscribe\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Thread Body Reply\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sign in to vote.\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Split Thread\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_AssertView() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test General Announcement\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a test General Announcement.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test CA Announcement\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test Member Announcement\"));\n\t}","id":20989,"modified_method":"public void testGuest_AssertView() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test General Announcement\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a test General Announcement.\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test CA Announcement\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test Member Announcement\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testGuest_View() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"_58_login\"));\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Sign In']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Sign In\"));\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions Test 1\"));\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Thread 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test Thread Message 1\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Thread Message Reply 1\"));\n\t}","id":20990,"modified_method":"public void testGuest_View() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"//input[@id='_58_login']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\"//input[@id='_58_login']\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Sign In']\"));\n\t\tassertTrue(selenium.isVisible(\"//a[@id='sign-in']\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertTrue(selenium.isTextPresent(\"Thread Body Reply\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Subscribe\"));\n\t\tassertFalse(selenium.isElementPresent(\"//input[@value='Add Category']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Banned Users\"));\n\t\tassertFalse(selenium.isElementPresent(\"//img[@alt='Permissions']\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions Test 1\"));\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Test Thread 1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Move\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isElementPresent(\n\t\t\t\t\"//input[@value='Post New Thread']\"));\n\t\tselenium.clickAt(\"link=Test Thread 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Reply\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Reply with Quote\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Permissions\"));\n\t}","id":20991,"modified_method":"public void testMember_AssertActions() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"//input[@value='Search']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"RSS\"),\n\t\t\tselenium.getText(\"//div[2]/div/span/a/span[1]\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Subscribe\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[2]/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Move Thread\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Add Category\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Banned Users\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Move\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isVisible(\"//input[@value='Post New Thread']\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Reply with Quote\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[3]/span/a\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Permissions\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_AssertView() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test General Announcement\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a test General Announcement.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Mark as Read\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test CA Announcement\"));\n\t}","id":20992,"modified_method":"public void testMember_AssertView() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test General Announcement\"));\n\t\tassertTrue(selenium.isTextPresent(\n\t\t\t\t\"This is a test General Announcement.\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Mark as Read\"));\n\t\tassertFalse(selenium.isTextPresent(\"Test AA Announcement\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_DeleteMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions Test 1\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isPartialText(\"//td[1]/a\", \"Test Thread 2\"));\n\t\tselenium.clickAt(\"//td[1]/a\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tselenium.click(RuntimeVariables.replace(\"link=Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isTextPresent(\n\t\t\t\t\t\t\t\"Your request completed successfully.\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Thread 2\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Test Thread 2 Edited\"));\n\t}","id":20993,"modified_method":"public void testMember_DeleteMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//span[@title='Actions']/ul/li/strong/a\",\n\t\t\tRuntimeVariables.replace(\"Actions\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\"));\n\t\tselenium.clickAt(\"//div[@class='lfr-component lfr-menu-list']/ul/li[5]/a\",\n\t\t\tRuntimeVariables.replace(\"Delete\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tassertTrue(selenium.getConfirmation()\n\t\t\t\t\t\t   .matches(\"^Are you sure you want to delete this[\\\\s\\\\S]$\"));\n\t\tselenium.saveScreenShotAndSource();\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\n\t\t\t\t\t\t\t\"//div[@class='portlet-msg-success']\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertFalse(selenium.isTextPresent(\"Thread Subject 2 Edited\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_DismissAnnouncement() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Mark as Read\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Show\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Show\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Hide\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Hide\", RuntimeVariables.replace(\"\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Show\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":20994,"modified_method":"public void testMember_DismissAnnouncement() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Announcements Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Announcements Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Announcements Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Mark as Read\",\n\t\t\tRuntimeVariables.replace(\"Mark as Read\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Show\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Show\", RuntimeVariables.replace(\"Show\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Hide\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Hide\", RuntimeVariables.replace(\"Hide\"));\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Show\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_EditThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions Test 1\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Thread 2\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tselenium.clickAt(\"link=Edit\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_subject\",\n\t\t\tRuntimeVariables.replace(\"Test Thread 2 Edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Test Thread 2 Edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test Thread 2 Edited\"));\n\t}","id":20995,"modified_method":"public void testMember_EditThread() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isVisible(\n\t\t\t\t\"//td[@class='thread-bottom']/ul/li[2]/span/a\"));\n\t\tselenium.clickAt(\"//td[@class='thread-bottom']/ul/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Edit\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_19_subject']\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject 2 Edited\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Thread Body 2 Edited\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\n\t\t\t\t\"Your request completed successfully.\"),\n\t\t\tselenium.getText(\"//div[@class='portlet-msg-success']\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//h1[@class='header-title']/span\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject 2 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='subject']/a/strong\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body 2 Edited\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_Login() throws Exception {\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.typeKeys(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"member@lifera.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":20996,"modified_method":"public void testMember_Login() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_Login() throws Exception {\n\t\tselenium.setTimeout(\"180000\");\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"_58_login\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_login\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_58_password\", RuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"_58_rememberMeCheckbox\", RuntimeVariables.replace(\"\"));\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","id":20997,"modified_method":"public void testMember_Login() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isElementPresent(\"link=Welcome\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Welcome\", RuntimeVariables.replace(\"Welcome\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_login']\",\n\t\t\tRuntimeVariables.replace(\"member@liferay.com\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"//input[@id='_58_password']\",\n\t\t\tRuntimeVariables.replace(\"test\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Sign In']\",\n\t\t\tRuntimeVariables.replace(\"Sign In\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_ReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Thread 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Reply\"));\n\t\tselenium.clickAt(\"link=Reply\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.type(\"_19_textArea\",\n\t\t\tRuntimeVariables.replace(\"Test Thread Message Reply 1\"));\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Permissions\"));\n\t\tassertTrue(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertTrue(selenium.isTextPresent(\"Test Thread Message Reply 1\"));\n\t}","id":20998,"modified_method":"public void testMember_ReplyMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Reply\"),\n\t\t\tselenium.getText(\n\t\t\t\t\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\"));\n\t\tselenium.clickAt(\"//ul[@class='edit-controls lfr-component']/li[2]/span/a\",\n\t\t\tRuntimeVariables.replace(\"Reply\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tThread.sleep(5000);\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\n\t\t\t\t\t\t\t\"//td[@id='cke_contents__19_editor']/iframe\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.selectFrame(\"//td[@id='cke_contents__19_editor']/iframe\");\n\t\tselenium.type(\"//body\", RuntimeVariables.replace(\"Thread Body Reply\"));\n\t\tselenium.selectFrame(\"relative=top\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"//input[@value='Publish']\",\n\t\t\tRuntimeVariables.replace(\"Publish\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Edit\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[2]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Permissions\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[3]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Delete\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr[2]/td/ul/li[4]/span/a\"));\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body Reply\"),\n\t\t\tselenium.getText(\"//div[5]/table/tbody/tr/td[2]/div[2]\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"},{"original_method":"public void testMember_ViewMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Permissions Test 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Test Thread 1\", RuntimeVariables.replace(\"\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertTrue(selenium.isTextPresent(\"Test Thread Message 1\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Permissions\"));\n\t}","id":20999,"modified_method":"public void testMember_ViewMessage() throws Exception {\n\t\tselenium.open(\"/web/guest/home/\");\n\n\t\tfor (int second = 0;; second++) {\n\t\t\tif (second >= 60) {\n\t\t\t\tfail(\"timeout\");\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (selenium.isVisible(\"link=Message Boards Permissions Page\")) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t}\n\n\t\t\tThread.sleep(1000);\n\t\t}\n\n\t\tselenium.saveScreenShotAndSource();\n\t\tselenium.clickAt(\"link=Message Boards Permissions Page\",\n\t\t\tRuntimeVariables.replace(\"Message Boards Permissions Page\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Category Name\"),\n\t\t\tselenium.getText(\"//a/strong\"));\n\t\tselenium.clickAt(\"//a/strong\", RuntimeVariables.replace(\"Category Name\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Subject\"),\n\t\t\tselenium.getText(\"//tr[3]/td/a\"));\n\t\tselenium.clickAt(\"//tr[3]/td/a\",\n\t\t\tRuntimeVariables.replace(\"Thread Subject\"));\n\t\tselenium.waitForPageToLoad(\"30000\");\n\t\tselenium.saveScreenShotAndSource();\n\t\tassertEquals(RuntimeVariables.replace(\"Thread Body\"),\n\t\t\tselenium.getText(\"//div[@class='thread-body']\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Edit\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Delete\"));\n\t\tassertFalse(selenium.isElementPresent(\"link=Permissions\"));\n\t}","commit_id":"59056ce21ca1e543a59e5b1afa68a00aa262fb65","url":"https://github.com/liferay/liferay-portal"}]